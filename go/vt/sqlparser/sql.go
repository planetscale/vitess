// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPORARY = 57544
const TEMPTABLE = 57545
const INVOKER = 57546
const SECURITY = 57547
const FIRST = 57548
const AFTER = 57549
const LAST = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const RELEASE = 57557
const WORK = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const TIME = 57572
const TIMESTAMP = 57573
const DATETIME = 57574
const YEAR = 57575
const CHAR = 57576
const VARCHAR = 57577
const BOOL = 57578
const CHARACTER = 57579
const VARBINARY = 57580
const NCHAR = 57581
const TEXT = 57582
const TINYTEXT = 57583
const MEDIUMTEXT = 57584
const LONGTEXT = 57585
const BLOB = 57586
const TINYBLOB = 57587
const MEDIUMBLOB = 57588
const LONGBLOB = 57589
const JSON = 57590
const ENUM = 57591
const GEOMETRY = 57592
const POINT = 57593
const LINESTRING = 57594
const POLYGON = 57595
const GEOMETRYCOLLECTION = 57596
const MULTIPOINT = 57597
const MULTILINESTRING = 57598
const MULTIPOLYGON = 57599
const NULLX = 57600
const AUTO_INCREMENT = 57601
const APPROXNUM = 57602
const SIGNED = 57603
const UNSIGNED = 57604
const ZEROFILL = 57605
const COLLATION = 57606
const DATABASES = 57607
const SCHEMAS = 57608
const TABLES = 57609
const VITESS_METADATA = 57610
const VSCHEMA = 57611
const FULL = 57612
const PROCESSLIST = 57613
const COLUMNS = 57614
const FIELDS = 57615
const ENGINES = 57616
const PLUGINS = 57617
const EXTENDED = 57618
const KEYSPACES = 57619
const VITESS_KEYSPACES = 57620
const VITESS_SHARDS = 57621
const VITESS_TABLETS = 57622
const CODE = 57623
const PRIVILEGES = 57624
const FUNCTION = 57625
const NAMES = 57626
const CHARSET = 57627
const GLOBAL = 57628
const SESSION = 57629
const ISOLATION = 57630
const LEVEL = 57631
const READ = 57632
const WRITE = 57633
const ONLY = 57634
const REPEATABLE = 57635
const COMMITTED = 57636
const UNCOMMITTED = 57637
const SERIALIZABLE = 57638
const CURRENT_TIMESTAMP = 57639
const DATABASE = 57640
const CURRENT_DATE = 57641
const CURRENT_TIME = 57642
const LOCALTIME = 57643
const LOCALTIMESTAMP = 57644
const CURRENT_USER = 57645
const UTC_DATE = 57646
const UTC_TIME = 57647
const UTC_TIMESTAMP = 57648
const REPLACE = 57649
const CONVERT = 57650
const CAST = 57651
const SUBSTR = 57652
const SUBSTRING = 57653
const GROUP_CONCAT = 57654
const SEPARATOR = 57655
const TIMESTAMPADD = 57656
const TIMESTAMPDIFF = 57657
const MATCH = 57658
const AGAINST = 57659
const BOOLEAN = 57660
const LANGUAGE = 57661
const WITH = 57662
const QUERY = 57663
const EXPANSION = 57664
const WITHOUT = 57665
const VALIDATION = 57666
const UNUSED = 57667
const ARRAY = 57668
const CUME_DIST = 57669
const DESCRIPTION = 57670
const DENSE_RANK = 57671
const EMPTY = 57672
const EXCEPT = 57673
const FIRST_VALUE = 57674
const GROUPING = 57675
const GROUPS = 57676
const JSON_TABLE = 57677
const LAG = 57678
const LAST_VALUE = 57679
const LATERAL = 57680
const LEAD = 57681
const MEMBER = 57682
const NTH_VALUE = 57683
const NTILE = 57684
const OF = 57685
const OVER = 57686
const PERCENT_RANK = 57687
const RANK = 57688
const RECURSIVE = 57689
const ROW_NUMBER = 57690
const SYSTEM = 57691
const WINDOW = 57692
const ACTIVE = 57693
const ADMIN = 57694
const BUCKETS = 57695
const CLONE = 57696
const COMPONENT = 57697
const DEFINITION = 57698
const ENFORCED = 57699
const EXCLUDE = 57700
const FOLLOWING = 57701
const GEOMCOLLECTION = 57702
const GET_MASTER_PUBLIC_KEY = 57703
const HISTOGRAM = 57704
const HISTORY = 57705
const INACTIVE = 57706
const INVISIBLE = 57707
const LOCKED = 57708
const MASTER_COMPRESSION_ALGORITHMS = 57709
const MASTER_PUBLIC_KEY_PATH = 57710
const MASTER_TLS_CIPHERSUITES = 57711
const MASTER_ZSTD_COMPRESSION_LEVEL = 57712
const NESTED = 57713
const NETWORK_NAMESPACE = 57714
const NOWAIT = 57715
const NULLS = 57716
const OJ = 57717
const OLD = 57718
const OPTIONAL = 57719
const ORDINALITY = 57720
const ORGANIZATION = 57721
const OTHERS = 57722
const PATH = 57723
const PERSIST = 57724
const PERSIST_ONLY = 57725
const PRECEDING = 57726
const PRIVILEGE_CHECKS_USER = 57727
const PROCESS = 57728
const RANDOM = 57729
const REFERENCE = 57730
const REQUIRE_ROW_FORMAT = 57731
const RESOURCE = 57732
const RESPECT = 57733
const RESTART = 57734
const RETAIN = 57735
const REUSE = 57736
const ROLE = 57737
const SECONDARY = 57738
const SECONDARY_ENGINE = 57739
const SECONDARY_LOAD = 57740
const SECONDARY_UNLOAD = 57741
const SKIP = 57742
const SRID = 57743
const THREAD_PRIORITY = 57744
const TIES = 57745
const UNBOUNDED = 57746
const VCPU = 57747
const VISIBLE = 57748
const FORMAT = 57749
const TREE = 57750
const VITESS = 57751
const TRADITIONAL = 57752
const LOCAL = 57753
const LOW_PRIORITY = 57754
const NO_WRITE_TO_BINLOG = 57755
const LOGS = 57756
const ERROR = 57757
const GENERAL = 57758
const HOSTS = 57759
const OPTIMIZER_COSTS = 57760
const USER_RESOURCES = 57761
const SLOW = 57762
const CHANNEL = 57763
const RELAY = 57764
const EXPORT = 57765
const AVG_ROW_LENGTH = 57766
const CONNECTION = 57767
const CHECKSUM = 57768
const DELAY_KEY_WRITE = 57769
const ENCRYPTION = 57770
const ENGINE = 57771
const INSERT_METHOD = 57772
const MAX_ROWS = 57773
const MIN_ROWS = 57774
const PACK_KEYS = 57775
const PASSWORD = 57776
const FIXED = 57777
const DYNAMIC = 57778
const COMPRESSED = 57779
const REDUNDANT = 57780
const COMPACT = 57781
const ROW_FORMAT = 57782
const STATS_AUTO_RECALC = 57783
const STATS_PERSISTENT = 57784
const STATS_SAMPLE_PAGES = 57785
const STORAGE = 57786
const MEMORY = 57787
const DISK = 57788

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	163, 926,
	-2, 90,
	-1, 44,
	1, 111,
	464, 111,
	-2, 117,
	-1, 45,
	143, 117,
	254, 117,
	302, 117,
	-2, 329,
	-1, 52,
	34, 468,
	164, 468,
	176, 468,
	209, 482,
	210, 482,
	-2, 470,
	-1, 57,
	166, 492,
	-2, 490,
	-1, 82,
	56, 559,
	-2, 567,
	-1, 107,
	1, 112,
	464, 112,
	-2, 117,
	-1, 117,
	169, 234,
	170, 234,
	-2, 323,
	-1, 136,
	143, 117,
	254, 117,
	302, 117,
	-2, 338,
	-1, 564,
	150, 947,
	-2, 943,
	-1, 565,
	150, 948,
	-2, 944,
	-1, 583,
	56, 560,
	-2, 572,
	-1, 584,
	56, 561,
	-2, 573,
	-1, 604,
	118, 1284,
	-2, 83,
	-1, 605,
	118, 1168,
	-2, 84,
	-1, 611,
	118, 1218,
	-2, 920,
	-1, 748,
	118, 1107,
	-2, 917,
	-1, 783,
	175, 37,
	180, 37,
	-2, 245,
	-1, 862,
	1, 376,
	464, 376,
	-2, 117,
	-1, 1094,
	1, 272,
	464, 272,
	-2, 117,
	-1, 1172,
	169, 234,
	170, 234,
	-2, 323,
	-1, 1181,
	175, 38,
	180, 38,
	-2, 246,
	-1, 1385,
	150, 950,
	-2, 946,
	-1, 1477,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1498,
	1, 273,
	464, 273,
	-2, 117,
	-1, 1901,
	5, 814,
	18, 814,
	20, 814,
	32, 814,
	83, 814,
	-2, 598,
	-1, 2117,
	46, 888,
	-2, 886,
}

const yyPrivate = 57344

const yyLast = 27324

var yyAct = [...]int{
	564, 2203, 1950, 2190, 2117, 1815, 2167, 2130, 1881, 1784,
	916, 2063, 1711, 2041, 537, 81, 3, 1563, 1678, 523,
	1495, 1422, 1882, 1947, 1712, 1878, 1698, 997, 1042, 1788,
	1156, 874, 506, 1530, 1535, 1769, 508, 576, 1049, 1770,
	1474, 1893, 1840, 1638, 1768, 145, 1303, 1290, 176, 1379,
	1561, 188, 131, 471, 188, 1537, 1371, 609, 1179, 487,
	778, 188, 1762, 1086, 1079, 1463, 752, 1070, 585, 188,
	1072, 79, 1456, 1047, 1052, 1035, 1424, 510, 1405, 570,
	32, 1348, 933, 1610, 791, 1197, 1186, 784, 759, 1526,
	487, 1155, 499, 487, 188, 487, 1069, 1382, 764, 1076,
	606, 756, 1269, 781, 760, 1439, 779, 780, 1516, 1085,
	1479, 1059, 1083, 77, 114, 115, 1306, 768, 1010, 914,
	108, 494, 148, 109, 175, 8, 7, 1011, 6, 76,
	1515, 1592, 1171, 1807, 1806, 1256, 2065, 1828, 1829, 1337,
	177, 178, 179, 1336, 855, 1419, 1420, 1335, 1334, 813,
	1333, 82, 1332, 753, 497, 1676, 498, 2159, 571, 591,
	595, 449, 1325, 2114, 1924, 2020, 2092, 110, 2091, 2036,
	817, 188, 2037, 2209, 816, 2164, 1628, 2202, 116, 2141,
	2193, 188, 818, 868, 495, 1951, 188, 84, 85, 86,
	87, 88, 89, 1580, 2163, 78, 2140, 1857, 610, 1982,
	770, 1599, 603, 795, 1157, 1598, 1490, 1491, 934, 549,
	1677, 555, 556, 553, 554, 1907, 552, 551, 550, 773,
	1908, 1909, 794, 1151, 934, 1540, 557, 558, 772, 826,
	110, 771, 1087, 1742, 1088, 1827, 1741, 1626, 1480, 1743,
	1489, 819, 820, 821, 475, 34, 893, 894, 70, 38,
	39, 884, 882, 912, 169, 832, 568, 831, 105, 181,
	182, 183, 567, 177, 178, 179, 1509, 1421, 1753, 2013,
	895, 174, 1973, 944, 896, 893, 894, 1817, 1971, 111,
	2143, 133, 485, 815, 1324, 1246, 774, 483, 489, 944,
	153, 1789, 474, 1562, 1595, 1811, 829, 830, 110, 833,
	834, 835, 836, 1812, 1539, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	69, 143, 1326, 1327, 1328, 1270, 132, 1247, 2192, 1248,
	910, 856, 911, 888, 889, 169, 177, 178, 179, 863,
	885, 883, 890, 1278, 150, 1279, 151, 1280, 932, 1818,
	1607, 120, 121, 142, 141, 168, 105, 170, 886, 887,
	111, 1820, 1275, 940, 102, 838, 475, 837, 1819, 1272,
	2088, 153, 2031, 2160, 802, 1564, 800, 1274, 1457, 940,
	811, 2104, 959, 958, 968, 969, 961, 962, 963, 964,
	965, 966, 967, 960, 810, 809, 970, 475, 808, 807,
	793, 806, 805, 137, 118, 144, 125, 117, 804, 138,
	139, 104, 1746, 154, 474, 903, 1276, 905, 1273, 105,
	799, 97, 775, 159, 126, 150, 100, 151, 1923, 99,
	98, 1165, 812, 475, 107, 503, 168, 1597, 129, 127,
	122, 123, 124, 128, 1614, 474, 866, 2032, 119, 188,
	2210, 757, 1480, 2179, 902, 904, 787, 130, 757, 757,
	786, 2139, 755, 897, 901, 908, 803, 1541, 801, 1185,
	1184, 769, 487, 487, 487, 2080, 103, 1679, 1681, 867,
	173, 474, 877, 878, 879, 880, 881, 898, 597, 2144,
	487, 487, 1821, 1627, 154, 939, 936, 937, 938, 943,
	945, 942, 913, 941, 159, 1586, 793, 926, 793, 104,
	935, 939, 936, 937, 938, 943, 945, 942, 1283, 941,
	920, 1841, 828, 822, 1778, 146, 935, 2131, 793, 1594,
	1866, 793, 1865, 1864, 1582, 792, 767, 766, 765, 1799,
	1612, 763, 786, 789, 790, 1611, 757, 448, 1612, 180,
	783, 787, 900, 1611, 2121, 860, 1496, 1258, 1257, 1259,
	1260, 1261, 1606, 71, 1843, 1605, 2002, 899, 188, 782,
	793, 1906, 104, 1680, 140, 982, 983, 1703, 1657, 1646,
	1572, 970, 1485, 980, 1654, 1063, 134, 995, 1040, 135,
	2105, 2207, 917, 918, 487, 907, 1738, 188, 891, 188,
	188, 872, 487, 948, 949, 947, 146, 909, 487, 1039,
	862, 960, 606, 1435, 970, 2081, 2079, 929, 927, 998,
	928, 950, 1845, 1321, 1849, 950, 1844, 2096, 1842, 876,
	869, 870, 814, 1847, 1891, 857, 1271, 858, 1036, 1068,
	859, 792, 1846, 792, 92, 1089, 1355, 796, 786, 796,
	786, 177, 178, 179, 1053, 1848, 1850, 797, 1581, 797,
	1353, 1354, 1352, 792, 930, 827, 792, 1304, 1652, 1013,
	1015, 1017, 1019, 1021, 1023, 1024, 1651, 798, 1014, 1016,
	1051, 1020, 1022, 861, 1025, 1859, 1162, 1307, 1033, 93,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 948, 949, 947, 1406, 792, 164, 165, 166, 167,
	610, 1758, 786, 789, 790, 1579, 757, 982, 983, 950,
	783, 787, 1751, 982, 983, 1041, 959, 958, 968, 969,
	961, 962, 963, 964, 965, 966, 967, 960, 2205, 947,
	970, 2206, 875, 2204, 961, 962, 963, 964, 965, 966,
	967, 960, 188, 1577, 970, 950, 1147, 963, 964, 965,
	966, 967, 960, 1440, 1441, 970, 1158, 1159, 1160, 1161,
	802, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 487, 1305, 1181, 1639, 800, 164, 165, 166,
	167, 1406, 1190, 1664, 1506, 1574, 1194, 949, 947, 487,
	487, 593, 487, 1308, 487, 487, 1507, 487, 487, 487,
	487, 487, 487, 2124, 950, 2194, 177, 178, 179, 1578,
	1373, 172, 487, 2184, 1056, 1574, 188, 1230, 2019, 2018,
	1170, 1191, 968, 969, 961, 962, 963, 964, 965, 966,
	967, 960, 1243, 2195, 970, 948, 949, 947, 1177, 1576,
	1189, 2185, 1437, 487, 1929, 1084, 1225, 1226, 1631, 1632,
	1633, 188, 1766, 950, 2211, 1765, 500, 188, 1544, 1266,
	188, 1289, 1251, 188, 1187, 1187, 1374, 1188, 1265, 1263,
	1146, 1154, 1250, 1249, 188, 1199, 188, 1200, 1227, 1202,
	1204, 1168, 1166, 1208, 1210, 1212, 1214, 1216, 487, 487,
	487, 188, 487, 487, 188, 487, 487, 1153, 1180, 1167,
	1343, 1345, 1346, 69, 1295, 1436, 1297, 762, 1299, 1300,
	1301, 1302, 1344, 1163, 1164, 1351, 948, 949, 947, 1241,
	1292, 1228, 2212, 188, 1861, 1767, 1868, 1264, 1262, 1309,
	948, 949, 947, 1235, 950, 601, 1232, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 1231, 950, 948,
	949, 947, 1206, 177, 178, 179, 1284, 1745, 1349, 2197,
	1653, 1372, 177, 178, 179, 1253, 1556, 950, 2196, 2186,
	1375, 1233, 1234, 772, 1869, 110, 771, 1239, 1240, 177,
	178, 179, 2175, 1554, 487, 958, 968, 969, 961, 962,
	963, 964, 965, 966, 967, 960, 1383, 2153, 970, 177,
	178, 179, 2054, 1244, 2016, 1376, 1377, 1310, 1311, 1312,
	1990, 1314, 1315, 1319, 1317, 1318, 1870, 487, 487, 596,
	1775, 1350, 1331, 2129, 1252, 1814, 1763, 1389, 188, 1622,
	1394, 1397, 1590, 1384, 1589, 1293, 1407, 177, 178, 179,
	1254, 487, 1242, 1385, 948, 949, 947, 1238, 188, 1237,
	1236, 487, 998, 1936, 2178, 188, 1429, 188, 1936, 2137,
	1936, 2122, 950, 565, 1383, 188, 188, 1430, 580, 1413,
	1414, 2086, 487, 1936, 580, 487, 2085, 1442, 1936, 2094,
	1475, 78, 606, 2034, 580, 606, 487, 1390, 1391, 1949,
	1890, 1396, 1399, 1400, 526, 525, 528, 529, 530, 531,
	1386, 1454, 1791, 527, 1481, 532, 1481, 598, 599, 1574,
	580, 1385, 1450, 1777, 189, 1732, 1412, 189, 1504, 1415,
	1416, 1699, 488, 1480, 189, 2000, 580, 1936, 1941, 1997,
	1499, 946, 189, 1921, 1920, 1917, 1918, 1917, 1916, 1448,
	580, 487, 1480, 1808, 1699, 188, 1503, 2095, 487, 580,
	1150, 1793, 1500, 488, 1553, 1555, 488, 189, 488, 580,
	1786, 1787, 1452, 1460, 580, 1478, 1482, 487, 1482, 1532,
	1538, 946, 580, 487, 1484, 1459, 1480, 1190, 1483, 1190,
	610, 34, 1487, 610, 1486, 1150, 1149, 1573, 1095, 1094,
	1460, 1936, 1502, 1501, 1919, 959, 958, 968, 969, 961,
	962, 963, 964, 965, 966, 967, 960, 1879, 1449, 970,
	80, 1460, 1488, 1890, 1669, 1575, 1890, 487, 1668, 1372,
	1448, 1574, 1528, 1529, 1372, 1372, 1460, 1557, 1438, 2070,
	1517, 1518, 1519, 1560, 189, 1570, 2021, 1571, 1533, 1221,
	1549, 1550, 1551, 1417, 189, 1542, 1545, 1543, 34, 189,
	795, 1985, 573, 1329, 1282, 1081, 69, 69, 1565, 188,
	1187, 1566, 1569, 188, 188, 188, 188, 188, 1584, 794,
	1574, 777, 1533, 188, 188, 1585, 1448, 188, 1448, 776,
	1587, 1588, 2043, 1583, 2022, 2023, 2024, 1222, 1223, 1224,
	34, 1948, 1772, 1984, 951, 188, 188, 188, 959, 958,
	968, 969, 961, 962, 963, 964, 965, 966, 967, 960,
	188, 2008, 970, 188, 487, 1706, 1510, 1152, 1511, 1512,
	1513, 1514, 1531, 69, 1813, 1616, 1567, 69, 1527, 1521,
	500, 1620, 1520, 1268, 1522, 1523, 1524, 1525, 1707, 1008,
	959, 958, 968, 969, 961, 962, 963, 964, 965, 966,
	967, 960, 1182, 1178, 970, 1148, 94, 1349, 1593, 174,
	1816, 1615, 1894, 1895, 2044, 69, 2025, 1157, 2199, 1045,
	1048, 2191, 1912, 1771, 1897, 1879, 1218, 1782, 1347, 1781,
	1780, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1547, 1322, 1286, 1050,
	1900, 1899, 1625, 1465, 1468, 1469, 1470, 1466, 188, 1467,
	1471, 2026, 2027, 1894, 1895, 1720, 188, 1648, 1772, 1719,
	1350, 1219, 1220, 2181, 1634, 1465, 1468, 1469, 1470, 1466,
	536, 1467, 1471, 2162, 1723, 1871, 1721, 2001, 1409, 1724,
	188, 1722, 1725, 1688, 1469, 1470, 1939, 1697, 1696, 1685,
	2149, 188, 188, 188, 188, 188, 1647, 571, 2146, 2183,
	2166, 1692, 1708, 188, 2168, 2174, 2173, 188, 1643, 1644,
	188, 188, 1704, 1663, 188, 188, 188, 1686, 1036, 2118,
	1701, 187, 1730, 1675, 482, 1687, 1713, 1744, 2116, 1661,
	1281, 187, 1683, 566, 1776, 824, 1402, 823, 1960, 187,
	1771, 1826, 1691, 919, 2126, 1043, 586, 1757, 1801, 1702,
	1733, 1403, 189, 1700, 1735, 594, 594, 1044, 1800, 1715,
	1716, 587, 1718, 1750, 187, 111, 1756, 1726, 1759, 1760,
	1761, 2125, 2068, 1292, 1747, 488, 488, 488, 188, 1736,
	1731, 586, 1739, 101, 1054, 1055, 589, 1714, 588, 487,
	1717, 1748, 1568, 488, 488, 487, 587, 1538, 487, 1196,
	1190, 1195, 1183, 1995, 1433, 487, 1552, 1794, 1440, 1441,
	1285, 2087, 1408, 1796, 1764, 2038, 1473, 1805, 1630, 583,
	584, 589, 1773, 588, 1695, 188, 574, 575, 577, 1790,
	171, 2188, 1694, 184, 2187, 2171, 1804, 2150, 1994, 1935,
	1170, 187, 1558, 578, 1803, 188, 80, 1993, 1874, 1699,
	1384, 187, 2201, 2200, 2201, 1658, 187, 1655, 1795, 1064,
	1385, 1057, 2119, 2014, 1802, 1434, 573, 78, 83, 75,
	1, 189, 1754, 1755, 458, 1418, 1034, 487, 470, 2189,
	1255, 1245, 1952, 1372, 2040, 1942, 1536, 1837, 1822, 785,
	136, 1497, 1498, 2133, 579, 91, 1824, 488, 1825, 750,
	189, 90, 189, 189, 788, 488, 906, 1839, 1294, 1830,
	1559, 488, 2078, 487, 2035, 1752, 1838, 1508, 2012, 1774,
	1911, 1749, 2123, 1101, 188, 1836, 1852, 1099, 1100, 1098,
	1858, 1103, 1102, 1097, 487, 1323, 484, 1472, 1090, 1851,
	487, 487, 1058, 825, 1837, 96, 1922, 1505, 1320, 1880,
	1591, 465, 1883, 892, 461, 978, 1693, 1740, 607, 600,
	1885, 2172, 2147, 188, 2145, 2115, 2064, 2148, 1889, 2113,
	2182, 2165, 1877, 1713, 1432, 1046, 1992, 1873, 1338, 1339,
	1340, 1341, 1662, 1007, 1404, 1073, 509, 1428, 1902, 1898,
	1904, 1342, 1905, 524, 521, 522, 1443, 1705, 1867, 952,
	507, 501, 1065, 1903, 1464, 1914, 1915, 1930, 1462, 188,
	1461, 188, 188, 188, 1287, 1077, 1896, 487, 1892, 1635,
	1636, 1637, 1910, 1071, 1447, 1596, 1888, 1810, 931, 582,
	188, 496, 95, 1392, 1393, 1401, 1926, 2103, 1629, 1925,
	1981, 581, 60, 37, 491, 2158, 1943, 1953, 487, 487,
	487, 922, 188, 590, 1538, 189, 1938, 31, 1940, 30,
	1961, 29, 1946, 28, 1945, 23, 22, 21, 20, 19,
	500, 25, 18, 17, 16, 106, 47, 44, 42, 113,
	112, 45, 41, 1937, 864, 488, 1958, 1959, 27, 26,
	959, 958, 968, 969, 961, 962, 963, 964, 965, 966,
	967, 960, 488, 488, 970, 488, 1964, 488, 488, 1969,
	488, 488, 488, 488, 488, 488, 15, 14, 13, 187,
	12, 1494, 11, 10, 9, 488, 5, 4, 925, 189,
	24, 996, 2, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 1927, 1928, 0, 0, 0, 488, 1713, 2004, 0,
	2011, 0, 0, 0, 189, 0, 487, 487, 0, 0,
	189, 2010, 0, 189, 0, 2029, 189, 0, 0, 487,
	1534, 0, 487, 0, 0, 2028, 0, 189, 2039, 189,
	0, 0, 2042, 0, 0, 0, 0, 0, 2047, 0,
	0, 488, 488, 488, 189, 488, 488, 189, 488, 488,
	0, 0, 0, 0, 0, 0, 0, 487, 487, 487,
	188, 0, 0, 2045, 0, 0, 2057, 2059, 2060, 0,
	1991, 487, 0, 487, 0, 0, 189, 0, 187, 487,
	2073, 2061, 1883, 0, 0, 2071, 1883, 0, 2076, 2053,
	2069, 0, 2067, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 2082, 0, 2083, 187, 2084, 187,
	1080, 0, 2075, 0, 487, 188, 0, 2015, 2077, 2017,
	0, 0, 2090, 2097, 2093, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 1966, 1967, 488, 1968, 0,
	0, 1970, 0, 1972, 0, 1832, 1833, 0, 0, 2120,
	2112, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	1853, 1854, 0, 1855, 1856, 0, 487, 487, 2046, 0,
	488, 488, 0, 2127, 1862, 1863, 2042, 2134, 0, 2132,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 487, 0, 488, 2142, 0, 0, 535, 0,
	487, 189, 2151, 0, 488, 2154, 0, 0, 189, 2157,
	189, 0, 0, 2161, 0, 0, 0, 0, 189, 189,
	2170, 2169, 0, 0, 0, 488, 1713, 0, 488, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 488,
	959, 958, 968, 969, 961, 962, 963, 964, 965, 966,
	967, 960, 0, 0, 970, 0, 1913, 486, 0, 0,
	0, 0, 187, 2198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2208, 0, 0, 0, 0, 1665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	1978, 754, 0, 761, 488, 0, 0, 0, 189, 0,
	0, 488, 0, 0, 0, 1193, 0, 0, 1689, 1690,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 1977, 0, 0, 0, 488, 0, 0, 0,
	1193, 1193, 954, 0, 957, 0, 187, 1962, 0, 0,
	971, 972, 973, 974, 975, 976, 977, 0, 955, 956,
	953, 959, 958, 968, 969, 961, 962, 963, 964, 965,
	966, 967, 960, 0, 0, 970, 0, 0, 0, 0,
	488, 187, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 0, 1291, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 187, 0, 0, 959,
	958, 968, 969, 961, 962, 963, 964, 965, 966, 967,
	960, 187, 189, 970, 187, 0, 189, 189, 189, 189,
	189, 0, 0, 0, 0, 0, 189, 189, 0, 0,
	189, 959, 958, 968, 969, 961, 962, 963, 964, 965,
	966, 967, 960, 187, 0, 970, 0, 0, 189, 189,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 189, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2050, 2051, 2052, 0, 0, 0,
	2055, 2056, 0, 959, 958, 968, 969, 961, 962, 963,
	964, 965, 966, 967, 960, 594, 1291, 970, 0, 0,
	594, 594, 0, 0, 594, 594, 594, 0, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 594,
	594, 594, 594, 594, 0, 0, 0, 0, 1426, 959,
	958, 968, 969, 961, 962, 963, 964, 965, 966, 967,
	960, 189, 0, 970, 0, 0, 0, 0, 187, 189,
	0, 1875, 0, 0, 1291, 187, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 189, 189, 189, 189, 0,
	0, 0, 0, 0, 0, 0, 189, 1640, 0, 0,
	189, 0, 0, 189, 189, 0, 0, 189, 189, 189,
	0, 0, 0, 0, 2155, 0, 0, 959, 958, 968,
	969, 961, 962, 963, 964, 965, 966, 967, 960, 1387,
	1388, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	608, 608, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 921, 923,
	0, 189, 0, 1431, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 488, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1983, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 189, 0,
	0, 0, 0, 2006, 0, 0, 2007, 1037, 0, 2009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 187, 187, 187, 187, 187, 0, 0,
	488, 0, 1061, 187, 187, 0, 0, 187, 0, 0,
	608, 0, 0, 0, 0, 0, 1091, 0, 0, 0,
	0, 0, 0, 0, 0, 1617, 1618, 187, 186, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 490, 0,
	187, 0, 0, 187, 0, 0, 569, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 488, 488, 0, 0, 0, 0, 0,
	0, 758, 0, 0, 0, 2066, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 538, 33, 0, 0,
	0, 594, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 594, 0, 0, 0, 0, 0, 0, 0,
	33, 0, 189, 0, 189, 189, 189, 0, 187, 0,
	488, 0, 0, 0, 0, 0, 1426, 0, 854, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 865, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 0, 594,
	187, 488, 488, 488, 572, 189, 0, 0, 0, 0,
	1193, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	754, 0, 0, 1727, 0, 0, 0, 187, 0, 0,
	187, 187, 0, 1192, 187, 1737, 1291, 1198, 1198, 0,
	1198, 0, 1198, 1198, 0, 1207, 1198, 1198, 1198, 1198,
	1198, 0, 0, 0, 0, 0, 0, 0, 1192, 1192,
	754, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 1650, 0, 0, 0, 0, 1656,
	0, 1267, 1659, 1660, 0, 0, 0, 0, 187, 0,
	1666, 0, 1667, 0, 0, 1670, 1671, 1672, 1673, 1674,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 488,
	488, 1684, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 488, 608, 608, 608, 0,
	608, 608, 0, 608, 608, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 1728, 1729, 0,
	488, 488, 488, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 488, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 488, 189, 0,
	0, 0, 1378, 0, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 873, 1193, 0, 0,
	0, 0, 0, 0, 0, 1410, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 488,
	488, 0, 0, 187, 0, 0, 0, 0, 0, 1444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1061,
	0, 0, 608, 111, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 488, 153, 0, 0, 0, 0, 0,
	608, 0, 0, 608, 0, 0, 0, 0, 0, 187,
	0, 187, 187, 187, 754, 0, 1834, 1835, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	151, 0, 187, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 1548, 0, 915, 915,
	915, 0, 1886, 0, 1067, 0, 0, 1078, 0, 0,
	0, 0, 0, 0, 0, 754, 0, 0, 33, 0,
	0, 761, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 979, 981, 0, 0, 0, 0, 154, 0, 0,
	0, 1193, 0, 177, 178, 179, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 754, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 0, 1009, 1012, 1012, 1012, 1018,
	1012, 1012, 1018, 1012, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 0, 0, 0, 0, 0, 1038, 0, 0, 33,
	0, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 0, 0, 1074, 0, 0, 0, 1963,
	0, 169, 0, 1965, 0, 0, 0, 0, 0, 0,
	1426, 0, 1783, 0, 1974, 1975, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 111, 0, 133, 1096,
	1989, 457, 1624, 0, 0, 0, 0, 153, 0, 0,
	469, 0, 0, 0, 0, 0, 0, 1998, 1999, 0,
	0, 2003, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 143, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 475, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 151, 0, 0, 0, 0, 1173, 1174,
	142, 141, 168, 1229, 0, 2033, 0, 0, 0, 0,
	450, 451, 452, 0, 467, 468, 478, 0, 0, 0,
	464, 466, 479, 453, 454, 481, 480, 0, 456, 455,
	0, 474, 459, 476, 0, 0, 0, 0, 1277, 0,
	1193, 0, 0, 0, 1078, 0, 0, 1288, 0, 2058,
	137, 1175, 144, 0, 1172, 0, 138, 139, 0, 0,
	154, 1296, 0, 1298, 0, 0, 1118, 0, 1192, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 1313, 0,
	0, 1316, 0, 0, 147, 152, 149, 155, 156, 157,
	158, 160, 161, 162, 163, 0, 0, 0, 0, 0,
	164, 165, 166, 167, 0, 0, 0, 0, 0, 0,
	1078, 2099, 2100, 2101, 2102, 0, 2106, 0, 2107, 2108,
	2109, 0, 2110, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 2138, 1785, 0, 0,
	0, 1192, 146, 1792, 0, 472, 1785, 0, 0, 1106,
	0, 608, 0, 1797, 0, 0, 0, 0, 0, 0,
	473, 0, 0, 0, 915, 915, 915, 0, 915, 915,
	0, 915, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2176, 2177,
	0, 140, 1119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 1451, 135, 0, 0, 0,
	0, 0, 1455, 0, 1458, 0, 0, 0, 0, 0,
	0, 0, 0, 1477, 0, 608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1132,
	1135, 1136, 1137, 1138, 1139, 1140, 0, 1141, 1142, 1143,
	1144, 1145, 1120, 1121, 1122, 1123, 1104, 1105, 1133, 0,
	1107, 1198, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	0, 0, 608, 0, 0, 1192, 0, 0, 1887, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 0, 0,
	0, 0, 0, 164, 165, 166, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 1476, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 754, 0, 0, 1192, 0,
	0, 0, 111, 0, 133, 34, 35, 36, 70, 38,
	39, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 1954, 1955, 1956, 0,
	40, 66, 67, 0, 64, 68, 0, 0, 0, 0,
	0, 65, 0, 0, 143, 0, 1078, 0, 0, 132,
	1600, 1601, 1602, 1603, 1604, 0, 0, 0, 0, 0,
	1608, 1609, 0, 0, 1613, 0, 0, 150, 0, 151,
	53, 0, 0, 0, 1173, 1174, 142, 141, 168, 0,
	69, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 1192,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 1175, 144, 0,
	1172, 0, 138, 139, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 1785, 2030, 159, 0, 0, 0,
	0, 0, 43, 46, 49, 48, 51, 1785, 63, 0,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 73, 72, 0, 0, 61, 62,
	50, 0, 0, 0, 0, 1785, 1785, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2072,
	0, 2074, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 54, 55, 0, 56, 57,
	58, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 608, 608, 0, 0, 0, 134,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 71, 0, 1779, 0, 0, 1192, 0,
	2152, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 1074, 0, 0, 0,
	0, 0, 0, 1709, 1710, 0, 0, 1074, 1074, 1074,
	1074, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1476, 0, 0, 1074, 0, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 152, 149, 155, 156, 157, 158,
	160, 161, 162, 163, 0, 0, 0, 0, 0, 164,
	165, 166, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1931, 0, 1932, 1933,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 1884, 0, 33, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 1986, 1987, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 33, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 719, 33, 2128, 668, 735, 639, 657,
	744, 659, 662, 702, 619, 681, 330, 654, 0, 643,
	615, 650, 616, 641, 670, 241, 674, 638, 721, 684,
	734, 288, 0, 621, 644, 343, 704, 380, 227, 297,
	295, 408, 251, 244, 240, 226, 272, 303, 341, 398,
	335, 741, 292, 691, 0, 389, 315, 0, 0, 0,
	672, 724, 679, 715, 667, 703, 628, 690, 736, 655,
	699, 737, 278, 225, 195, 327, 390, 254, 0, 0,
	0, 177, 178, 179, 0, 2135, 2136, 0, 0, 0,
	0, 0, 217, 0, 223, 696, 731, 652, 698, 237,
	276, 243, 236, 405, 701, 747, 614, 693, 0, 617,
	620, 743, 727, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 671, 680, 712, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 0, 689, 0, 0, 0,
	624, 618, 0, 0, 0, 0, 669, 0, 0, 0,
	627, 0, 646, 713, 0, 612, 262, 622, 316, 717,
	726, 666, 434, 730, 664, 663, 733, 708, 625, 723,
	658, 287, 623, 284, 191, 205, 0, 656, 326, 364,
	370, 722, 642, 651, 228, 649, 368, 339, 421, 213,
	252, 361, 344, 366, 688, 706, 367, 293, 410, 356,
	420, 435, 436, 235, 320, 427, 402, 432, 444, 206,
	232, 333, 395, 424, 386, 313, 406, 407, 283, 385,
	260, 194, 291, 198, 397, 418, 218, 378, 0, 0,
	0, 200, 416, 394, 310, 280, 281, 199, 0, 360,
	239, 258, 230, 329, 413, 414, 229, 446, 208, 431,
	202, 209, 430, 322, 409, 417, 311, 302, 201, 415,
	309, 301, 286, 249, 268, 354, 296, 355, 269, 318,
	317, 319, 0, 196, 0, 391, 425, 447, 215, 637,
	718, 404, 440, 443, 0, 357, 216, 259, 248, 353,
	257, 289, 439, 441, 442, 214, 351, 265, 321, 210,
	271, 387, 285, 294, 710, 746, 338, 369, 219, 423,
	388, 632, 636, 630, 631, 682, 683, 633, 738, 739,
	740, 714, 626, 0, 634, 635, 0, 720, 728, 729,
	687, 190, 203, 290, 742, 358, 255, 445, 429, 426,
	613, 629, 234, 640, 0, 0, 653, 660, 661, 673,
	675, 676, 677, 678, 686, 694, 695, 697, 705, 707,
	709, 711, 716, 725, 745, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 411, 412, 422, 433,
	437, 264, 419, 438, 0, 298, 685, 692, 300, 250,
	266, 275, 700, 428, 393, 207, 365, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 342, 345, 261,
	242, 222, 362, 220, 379, 399, 400, 401, 403, 312,
	238, 732, 719, 0, 0, 668, 735, 639, 657, 744,
	659, 662, 702, 619, 681, 330, 654, 0, 643, 615,
	650, 616, 641, 670, 241, 674, 638, 721, 684, 734,
	288, 0, 621, 644, 343, 704, 380, 227, 297, 295,
	408, 251, 244, 240, 226, 272, 303, 341, 398, 335,
	741, 292, 691, 0, 389, 315, 0, 0, 0, 672,
	724, 679, 715, 667, 703, 628, 690, 736, 655, 699,
	737, 278, 225, 195, 327, 390, 254, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 696, 731, 652, 698, 237, 276,
	243, 236, 405, 701, 747, 614, 693, 0, 617, 620,
	743, 727, 647, 648, 0, 0, 0, 0, 0, 0,
	0, 671, 680, 712, 665, 0, 0, 0, 0, 0,
	0, 1876, 0, 645, 0, 689, 0, 0, 0, 624,
	618, 0, 0, 0, 0, 669, 0, 0, 0, 627,
	0, 646, 713, 0, 612, 262, 622, 316, 717, 726,
	666, 434, 730, 664, 663, 733, 708, 625, 723, 658,
	287, 623, 284, 191, 205, 0, 656, 326, 364, 370,
	722, 642, 651, 228, 649, 368, 339, 421, 213, 252,
	361, 344, 366, 688, 706, 367, 293, 410, 356, 420,
	435, 436, 235, 320, 427, 402, 432, 444, 206, 232,
	333, 395, 424, 386, 313, 406, 407, 283, 385, 260,
	194, 291, 198, 397, 418, 218, 378, 0, 0, 0,
	200, 416, 394, 310, 280, 281, 199, 0, 360, 239,
	258, 230, 329, 413, 414, 229, 446, 208, 431, 202,
	209, 430, 322, 409, 417, 311, 302, 201, 415, 309,
	301, 286, 249, 268, 354, 296, 355, 269, 318, 317,
	319, 0, 196, 0, 391, 425, 447, 215, 637, 718,
	404, 440, 443, 0, 357, 216, 259, 248, 353, 257,
	289, 439, 441, 442, 214, 351, 265, 321, 210, 271,
	387, 285, 294, 710, 746, 338, 369, 219, 423, 388,
	632, 636, 630, 631, 682, 683, 633, 738, 739, 740,
	714, 626, 0, 634, 635, 0, 720, 728, 729, 687,
	190, 203, 290, 742, 358, 255, 445, 429, 426, 613,
	629, 234, 640, 0, 0, 653, 660, 661, 673, 675,
	676, 677, 678, 686, 694, 695, 697, 705, 707, 709,
	711, 716, 725, 745, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 411, 412, 422, 433, 437,
	264, 419, 438, 0, 298, 685, 692, 300, 250, 266,
	275, 700, 428, 393, 207, 365, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 342, 345, 261, 242,
	222, 362, 220, 379, 399, 400, 401, 403, 312, 238,
	732, 719, 0, 0, 668, 735, 639, 657, 744, 659,
	662, 702, 619, 681, 330, 654, 0, 643, 615, 650,
	616, 641, 670, 241, 674, 638, 721, 684, 734, 288,
	0, 621, 644, 343, 704, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 741,
	292, 691, 0, 389, 315, 0, 0, 0, 672, 724,
	679, 715, 667, 703, 628, 690, 736, 655, 699, 737,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 696, 731, 652, 698, 237, 276, 243,
	236, 405, 701, 747, 614, 693, 0, 617, 620, 743,
	727, 647, 648, 0, 0, 0, 0, 0, 0, 0,
	671, 680, 712, 665, 0, 0, 0, 0, 0, 0,
	1738, 0, 645, 0, 689, 0, 0, 0, 624, 618,
	0, 0, 0, 0, 669, 0, 0, 0, 627, 0,
	646, 713, 0, 612, 262, 622, 316, 717, 726, 666,
	434, 730, 664, 663, 733, 708, 625, 723, 658, 287,
	623, 284, 191, 205, 0, 656, 326, 364, 370, 722,
	642, 651, 228, 649, 368, 339, 421, 213, 252, 361,
	344, 366, 688, 706, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 637, 718, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 710, 746, 338, 369, 219, 423, 388, 632,
	636, 630, 631, 682, 683, 633, 738, 739, 740, 714,
	626, 0, 634, 635, 0, 720, 728, 729, 687, 190,
	203, 290, 742, 358, 255, 445, 429, 426, 613, 629,
	234, 640, 0, 0, 653, 660, 661, 673, 675, 676,
	677, 678, 686, 694, 695, 697, 705, 707, 709, 711,
	716, 725, 745, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 685, 692, 300, 250, 266, 275,
	700, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 732,
	719, 0, 0, 668, 735, 639, 657, 744, 659, 662,
	702, 619, 681, 330, 654, 0, 643, 615, 650, 616,
	641, 670, 241, 674, 638, 721, 684, 734, 288, 0,
	621, 644, 343, 704, 380, 227, 297, 295, 408, 251,
	244, 240, 226, 272, 303, 341, 398, 335, 741, 292,
	691, 0, 389, 315, 0, 0, 0, 672, 724, 679,
	715, 667, 703, 628, 690, 736, 655, 699, 737, 278,
	225, 195, 327, 390, 254, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 696, 731, 652, 698, 237, 276, 243, 236,
	405, 701, 747, 614, 693, 0, 617, 620, 743, 727,
	647, 648, 0, 0, 0, 0, 0, 0, 0, 671,
	680, 712, 665, 0, 0, 0, 0, 0, 0, 1453,
	0, 645, 0, 689, 0, 0, 0, 624, 618, 0,
	0, 0, 0, 669, 0, 0, 0, 627, 0, 646,
	713, 0, 612, 262, 622, 316, 717, 726, 666, 434,
	730, 664, 663, 733, 708, 625, 723, 658, 287, 623,
	284, 191, 205, 0, 656, 326, 364, 370, 722, 642,
	651, 228, 649, 368, 339, 421, 213, 252, 361, 344,
	366, 688, 706, 367, 293, 410, 356, 420, 435, 436,
	235, 320, 427, 402, 432, 444, 206, 232, 333, 395,
	424, 386, 313, 406, 407, 283, 385, 260, 194, 291,
	198, 397, 418, 218, 378, 0, 0, 0, 200, 416,
	394, 310, 280, 281, 199, 0, 360, 239, 258, 230,
	329, 413, 414, 229, 446, 208, 431, 202, 209, 430,
	322, 409, 417, 311, 302, 201, 415, 309, 301, 286,
	249, 268, 354, 296, 355, 269, 318, 317, 319, 0,
	196, 0, 391, 425, 447, 215, 637, 718, 404, 440,
	443, 0, 357, 216, 259, 248, 353, 257, 289, 439,
	441, 442, 214, 351, 265, 321, 210, 271, 387, 285,
	294, 710, 746, 338, 369, 219, 423, 388, 632, 636,
	630, 631, 682, 683, 633, 738, 739, 740, 714, 626,
	0, 634, 635, 0, 720, 728, 729, 687, 190, 203,
	290, 742, 358, 255, 445, 429, 426, 613, 629, 234,
	640, 0, 0, 653, 660, 661, 673, 675, 676, 677,
	678, 686, 694, 695, 697, 705, 707, 709, 711, 716,
	725, 745, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 411, 412, 422, 433, 437, 264, 419,
	438, 0, 298, 685, 692, 300, 250, 266, 275, 700,
	428, 393, 207, 365, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 342, 345, 261, 242, 222, 362,
	220, 379, 399, 400, 401, 403, 312, 238, 732, 719,
	0, 0, 668, 735, 639, 657, 744, 659, 662, 702,
	619, 681, 330, 654, 0, 643, 615, 650, 616, 641,
	670, 241, 674, 638, 721, 684, 734, 288, 0, 621,
	644, 343, 704, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 741, 292, 691,
	0, 389, 315, 0, 0, 0, 672, 724, 679, 715,
	667, 703, 628, 690, 736, 655, 699, 737, 278, 225,
	195, 327, 390, 254, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 696, 731, 652, 698, 237, 276, 243, 236, 405,
	701, 747, 614, 693, 0, 617, 620, 743, 727, 647,
	648, 0, 0, 0, 0, 0, 0, 0, 671, 680,
	712, 665, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 0, 689, 0, 0, 0, 624, 618, 0, 0,
	0, 0, 669, 0, 0, 0, 627, 0, 646, 713,
	0, 612, 262, 622, 316, 717, 726, 666, 434, 730,
	664, 663, 733, 708, 625, 723, 658, 287, 623, 284,
	191, 205, 0, 656, 326, 364, 370, 722, 642, 651,
	228, 649, 368, 339, 421, 213, 252, 361, 344, 366,
	688, 706, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 637, 718, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	710, 746, 338, 369, 219, 423, 388, 632, 636, 630,
	631, 682, 683, 633, 738, 739, 740, 714, 626, 0,
	634, 635, 0, 720, 728, 729, 687, 190, 203, 290,
	742, 358, 255, 445, 429, 426, 613, 629, 234, 640,
	0, 0, 653, 660, 661, 673, 675, 676, 677, 678,
	686, 694, 695, 697, 705, 707, 709, 711, 716, 725,
	745, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 685, 692, 300, 250, 266, 275, 700, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 732, 719, 0,
	0, 668, 735, 639, 657, 744, 659, 662, 702, 619,
	681, 330, 654, 0, 643, 615, 650, 616, 641, 670,
	241, 674, 638, 721, 684, 734, 288, 0, 621, 644,
	343, 704, 380, 227, 297, 295, 408, 251, 244, 240,
	226, 272, 303, 341, 398, 335, 741, 292, 691, 0,
	389, 315, 0, 0, 0, 672, 724, 679, 715, 667,
	703, 628, 690, 736, 655, 699, 737, 278, 225, 195,
	327, 390, 254, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	696, 731, 652, 698, 237, 276, 243, 236, 405, 701,
	747, 614, 693, 0, 617, 620, 743, 727, 647, 648,
	0, 0, 0, 0, 0, 0, 0, 671, 680, 712,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 689, 0, 0, 0, 624, 618, 0, 0, 0,
	0, 669, 0, 0, 0, 627, 0, 646, 713, 0,
	612, 262, 622, 316, 717, 726, 666, 434, 730, 664,
	663, 733, 708, 625, 723, 658, 287, 623, 284, 191,
	205, 0, 656, 326, 364, 370, 722, 642, 651, 228,
	649, 368, 339, 421, 213, 252, 361, 344, 366, 688,
	706, 367, 293, 410, 356, 420, 435, 436, 235, 320,
	427, 402, 432, 444, 206, 232, 333, 395, 424, 386,
	313, 406, 407, 283, 385, 260, 194, 291, 198, 397,
	418, 218, 378, 0, 0, 0, 200, 416, 394, 310,
	280, 281, 199, 0, 360, 239, 258, 230, 329, 413,
	414, 229, 446, 208, 431, 202, 209, 430, 322, 409,
	417, 311, 302, 201, 415, 309, 301, 286, 249, 268,
	354, 296, 355, 269, 318, 317, 319, 0, 196, 0,
	391, 425, 447, 215, 637, 718, 404, 440, 443, 0,
	357, 216, 259, 248, 353, 257, 289, 439, 441, 442,
	214, 351, 265, 321, 210, 271, 387, 285, 294, 710,
	746, 338, 369, 219, 423, 388, 632, 636, 630, 631,
	682, 683, 633, 738, 739, 740, 714, 626, 0, 634,
	635, 0, 720, 728, 729, 687, 190, 203, 290, 742,
	358, 255, 445, 429, 426, 613, 629, 234, 640, 0,
	0, 653, 660, 661, 673, 675, 676, 677, 678, 686,
	694, 695, 697, 705, 707, 709, 711, 716, 725, 745,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 411, 412, 422, 433, 437, 264, 419, 438, 0,
	298, 685, 692, 300, 250, 266, 275, 700, 428, 393,
	207, 365, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 342, 345, 261, 242, 222, 362, 220, 379,
	399, 400, 401, 403, 312, 238, 732, 719, 0, 0,
	668, 735, 639, 657, 744, 659, 662, 702, 619, 681,
	330, 654, 0, 643, 615, 650, 616, 641, 670, 241,
	674, 638, 721, 684, 734, 288, 0, 621, 644, 343,
	704, 380, 227, 297, 295, 408, 251, 244, 240, 226,
	272, 303, 341, 398, 335, 741, 292, 691, 0, 389,
	315, 0, 0, 0, 672, 724, 679, 715, 667, 703,
	628, 690, 736, 655, 699, 737, 278, 225, 195, 327,
	390, 254, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 696,
	731, 652, 698, 237, 276, 243, 236, 405, 701, 747,
	614, 693, 0, 617, 620, 743, 727, 647, 648, 0,
	0, 0, 0, 0, 0, 0, 671, 680, 712, 665,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	689, 0, 0, 0, 624, 618, 0, 0, 0, 0,
	669, 0, 0, 0, 627, 0, 646, 713, 0, 612,
	262, 622, 316, 717, 726, 666, 434, 730, 664, 663,
	733, 708, 625, 723, 658, 287, 623, 284, 191, 205,
	0, 656, 326, 364, 370, 722, 642, 651, 228, 649,
	368, 339, 421, 213, 252, 361, 344, 366, 688, 706,
	367, 293, 410, 356, 420, 435, 436, 235, 320, 427,
	402, 432, 444, 206, 232, 333, 395, 424, 386, 313,
	406, 407, 283, 385, 260, 194, 291, 198, 397, 418,
	218, 378, 0, 0, 0, 200, 416, 394, 310, 280,
	281, 199, 0, 360, 239, 258, 230, 329, 413, 414,
	229, 446, 208, 431, 202, 749, 430, 322, 409, 417,
	311, 302, 201, 415, 309, 301, 286, 249, 268, 354,
	296, 355, 269, 318, 317, 319, 0, 196, 0, 391,
	425, 447, 215, 637, 718, 404, 440, 443, 0, 357,
	216, 259, 248, 353, 257, 289, 439, 441, 442, 214,
	351, 265, 611, 748, 605, 604, 285, 294, 710, 746,
	338, 369, 219, 423, 388, 632, 636, 630, 631, 682,
	683, 633, 738, 739, 740, 714, 626, 0, 634, 635,
	0, 720, 728, 729, 687, 190, 203, 290, 742, 358,
	255, 445, 429, 426, 613, 629, 234, 640, 0, 0,
	653, 660, 661, 673, 675, 676, 677, 678, 686, 694,
	695, 697, 705, 707, 709, 711, 716, 725, 745, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	411, 412, 422, 433, 437, 264, 419, 438, 0, 298,
	685, 692, 300, 250, 266, 275, 700, 428, 393, 207,
	365, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 342, 345, 261, 242, 222, 362, 220, 379, 399,
	400, 401, 403, 312, 238, 732, 719, 0, 0, 668,
	735, 639, 657, 744, 659, 662, 702, 619, 681, 330,
	654, 0, 643, 615, 650, 616, 641, 670, 241, 674,
	638, 721, 684, 734, 288, 0, 621, 644, 343, 704,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 741, 292, 691, 0, 389, 315,
	0, 0, 0, 672, 724, 679, 715, 667, 703, 628,
	690, 736, 655, 699, 737, 278, 225, 195, 327, 390,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 696, 731,
	652, 698, 237, 276, 243, 236, 405, 701, 747, 614,
	693, 0, 617, 620, 743, 727, 647, 648, 0, 0,
	0, 0, 0, 0, 0, 671, 680, 712, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 689,
	0, 0, 0, 624, 618, 0, 0, 0, 0, 669,
	0, 0, 0, 627, 0, 646, 713, 0, 612, 262,
	622, 316, 717, 726, 666, 434, 730, 664, 663, 733,
	708, 625, 723, 658, 287, 623, 284, 191, 205, 0,
	656, 326, 364, 370, 722, 642, 651, 228, 649, 368,
	339, 421, 213, 252, 361, 344, 366, 688, 706, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 1082, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 749, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 637, 718, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 611, 748, 605, 604, 285, 294, 710, 746, 338,
	369, 219, 423, 388, 632, 636, 630, 631, 682, 683,
	633, 738, 739, 740, 714, 626, 0, 634, 635, 0,
	720, 728, 729, 687, 190, 203, 290, 742, 358, 255,
	445, 429, 426, 613, 629, 234, 640, 0, 0, 653,
	660, 661, 673, 675, 676, 677, 678, 686, 694, 695,
	697, 705, 707, 709, 711, 716, 725, 745, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 264, 419, 438, 0, 298, 685,
	692, 300, 250, 266, 275, 700, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238, 732, 719, 0, 0, 668, 735,
	639, 657, 744, 659, 662, 702, 619, 681, 330, 654,
	0, 643, 615, 650, 616, 641, 670, 241, 674, 638,
	721, 684, 734, 288, 0, 621, 644, 343, 704, 380,
	227, 297, 295, 408, 251, 244, 240, 226, 272, 303,
	341, 398, 335, 741, 292, 691, 0, 389, 315, 0,
	0, 0, 672, 724, 679, 715, 667, 703, 628, 690,
	736, 655, 699, 737, 278, 225, 195, 327, 390, 254,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 696, 731, 652,
	698, 237, 276, 243, 236, 405, 701, 747, 614, 693,
	0, 617, 620, 743, 727, 647, 648, 0, 0, 0,
	0, 0, 0, 0, 671, 680, 712, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 689, 0,
	0, 0, 624, 618, 0, 0, 0, 0, 669, 0,
	0, 0, 627, 0, 646, 713, 0, 612, 262, 622,
	316, 717, 726, 666, 434, 730, 664, 663, 733, 708,
	625, 723, 658, 287, 623, 284, 191, 205, 0, 656,
	326, 364, 370, 722, 642, 651, 228, 649, 368, 339,
	421, 213, 252, 361, 344, 366, 688, 706, 367, 293,
	410, 356, 420, 435, 436, 235, 320, 427, 402, 432,
	444, 206, 232, 333, 395, 424, 386, 313, 406, 407,
	283, 385, 260, 194, 291, 198, 397, 602, 218, 378,
	0, 0, 0, 200, 416, 394, 310, 280, 281, 199,
	0, 360, 239, 258, 230, 329, 413, 414, 229, 446,
	208, 431, 202, 749, 430, 322, 409, 417, 311, 302,
	201, 415, 309, 301, 286, 249, 268, 354, 296, 355,
	269, 318, 317, 319, 0, 196, 0, 391, 425, 447,
	215, 637, 718, 404, 440, 443, 0, 357, 216, 259,
	248, 353, 257, 289, 439, 441, 442, 214, 351, 265,
	611, 748, 605, 604, 285, 294, 710, 746, 338, 369,
	219, 423, 388, 632, 636, 630, 631, 682, 683, 633,
	738, 739, 740, 714, 626, 0, 634, 635, 0, 720,
	728, 729, 687, 190, 203, 290, 742, 358, 255, 445,
	429, 426, 613, 629, 234, 640, 0, 0, 653, 660,
	661, 673, 675, 676, 677, 678, 686, 694, 695, 697,
	705, 707, 709, 711, 716, 725, 745, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 411, 412,
	422, 433, 437, 264, 419, 438, 0, 298, 685, 692,
	300, 250, 266, 275, 700, 428, 393, 207, 365, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 342,
	345, 261, 242, 222, 362, 220, 379, 399, 400, 401,
	403, 312, 238, 330, 0, 0, 1380, 0, 505, 0,
	0, 0, 241, 0, 504, 0, 0, 0, 288, 0,
	0, 1381, 343, 0, 380, 227, 297, 295, 408, 251,
	244, 240, 226, 272, 303, 341, 398, 335, 548, 292,
	0, 0, 389, 315, 0, 0, 0, 0, 0, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 390, 254, 69, 0, 0, 177, 178,
	179, 526, 525, 528, 529, 530, 531, 0, 0, 217,
	527, 223, 532, 533, 534, 0, 237, 276, 243, 236,
	405, 0, 0, 0, 502, 519, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 592,
	0, 0, 0, 562, 0, 518, 0, 0, 511, 512,
	514, 513, 515, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 561, 0, 0, 434,
	0, 0, 559, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 364, 370, 0, 0,
	0, 228, 0, 368, 339, 421, 213, 252, 361, 344,
	366, 0, 0, 367, 293, 410, 356, 420, 435, 436,
	235, 320, 427, 402, 432, 444, 206, 232, 333, 395,
	424, 386, 313, 406, 407, 283, 385, 260, 194, 291,
	198, 397, 418, 218, 378, 0, 0, 0, 200, 416,
	394, 310, 280, 281, 199, 0, 360, 239, 258, 230,
	329, 413, 414, 229, 446, 208, 431, 202, 209, 430,
	322, 409, 417, 311, 302, 201, 415, 309, 301, 286,
	249, 268, 354, 296, 355, 269, 318, 317, 319, 0,
	196, 0, 391, 425, 447, 215, 0, 0, 404, 440,
	443, 0, 357, 216, 259, 248, 353, 257, 289, 439,
	441, 442, 214, 351, 265, 321, 210, 271, 387, 285,
	294, 0, 0, 338, 369, 219, 423, 388, 549, 560,
	555, 556, 553, 554, 0, 552, 551, 550, 563, 541,
	542, 543, 544, 546, 0, 557, 558, 545, 190, 203,
	290, 0, 358, 255, 445, 429, 426, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 411, 412, 422, 433, 437, 264, 419,
	438, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	428, 393, 207, 365, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 342, 345, 261, 242, 222, 362,
	220, 379, 399, 400, 401, 403, 312, 238, 330, 0,
	0, 0, 0, 505, 0, 0, 0, 241, 0, 504,
	0, 0, 0, 288, 0, 0, 0, 343, 0, 380,
	227, 297, 295, 408, 251, 244, 240, 226, 272, 303,
	341, 398, 335, 548, 292, 0, 0, 389, 315, 0,
	0, 0, 0, 0, 539, 540, 0, 0, 0, 0,
	0, 0, 1492, 0, 278, 225, 195, 327, 390, 254,
	69, 0, 0, 177, 178, 179, 526, 525, 528, 529,
	530, 531, 0, 0, 217, 527, 223, 532, 533, 534,
	1493, 237, 276, 243, 236, 405, 0, 0, 0, 502,
	519, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 0, 0, 0, 0, 562, 0,
	518, 0, 0, 511, 512, 514, 513, 515, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 561, 0, 0, 434, 0, 0, 559, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 364, 370, 0, 0, 0, 228, 0, 368, 339,
	421, 213, 252, 361, 344, 366, 0, 0, 367, 293,
	410, 356, 420, 435, 436, 235, 320, 427, 402, 432,
	444, 206, 232, 333, 395, 424, 386, 313, 406, 407,
	283, 385, 260, 194, 291, 198, 397, 418, 218, 378,
	0, 0, 0, 200, 416, 394, 310, 280, 281, 199,
	0, 360, 239, 258, 230, 329, 413, 414, 229, 446,
	208, 431, 202, 209, 430, 322, 409, 417, 311, 302,
	201, 415, 309, 301, 286, 249, 268, 354, 296, 355,
	269, 318, 317, 319, 0, 196, 0, 391, 425, 447,
	215, 0, 0, 404, 440, 443, 0, 357, 216, 259,
	248, 353, 257, 289, 439, 441, 442, 214, 351, 265,
	321, 210, 271, 387, 285, 294, 0, 0, 338, 369,
	219, 423, 388, 549, 560, 555, 556, 553, 554, 0,
	552, 551, 550, 563, 541, 542, 543, 544, 546, 0,
	557, 558, 545, 190, 203, 290, 0, 358, 255, 445,
	429, 426, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 411, 412,
	422, 433, 437, 264, 419, 438, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 428, 393, 207, 365, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 342,
	345, 261, 242, 222, 362, 220, 379, 399, 400, 401,
	403, 312, 238, 330, 0, 0, 0, 0, 505, 0,
	0, 0, 241, 0, 504, 0, 0, 0, 288, 0,
	0, 0, 343, 0, 380, 227, 297, 295, 408, 251,
	244, 240, 226, 272, 303, 341, 398, 335, 548, 292,
	0, 0, 389, 315, 0, 0, 0, 0, 0, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 390, 254, 69, 0, 580, 177, 178,
	179, 526, 525, 528, 529, 530, 531, 0, 0, 217,
	527, 223, 532, 533, 534, 0, 237, 276, 243, 236,
	405, 0, 0, 0, 502, 519, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 0,
	0, 0, 0, 562, 0, 518, 0, 0, 511, 512,
	514, 513, 515, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 561, 0, 0, 434,
	0, 0, 559, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 364, 370, 0, 0,
	0, 228, 0, 368, 339, 421, 213, 252, 361, 344,
	366, 0, 0, 367, 293, 410, 356, 420, 435, 436,
	235, 320, 427, 402, 432, 444, 206, 232, 333, 395,
	424, 386, 313, 406, 407, 283, 385, 260, 194, 291,
	198, 397, 418, 218, 378, 0, 0, 0, 200, 416,
	394, 310, 280, 281, 199, 0, 360, 239, 258, 230,
	329, 413, 414, 229, 446, 208, 431, 202, 209, 430,
	322, 409, 417, 311, 302, 201, 415, 309, 301, 286,
	249, 268, 354, 296, 355, 269, 318, 317, 319, 0,
	196, 0, 391, 425, 447, 215, 0, 0, 404, 440,
	443, 0, 357, 216, 259, 248, 353, 257, 289, 439,
	441, 442, 214, 351, 265, 321, 210, 271, 387, 285,
	294, 0, 0, 338, 369, 219, 423, 388, 549, 560,
	555, 556, 553, 554, 0, 552, 551, 550, 563, 541,
	542, 543, 544, 546, 0, 557, 558, 545, 190, 203,
	290, 0, 358, 255, 445, 429, 426, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 411, 412, 422, 433, 437, 264, 419,
	438, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	428, 393, 207, 365, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 342, 345, 261, 242, 222, 362,
	220, 379, 399, 400, 401, 403, 312, 238, 330, 0,
	0, 0, 0, 505, 0, 0, 0, 241, 0, 504,
	0, 0, 0, 288, 0, 0, 0, 343, 0, 380,
	227, 297, 295, 408, 251, 244, 240, 226, 272, 303,
	341, 398, 335, 548, 292, 0, 0, 389, 315, 0,
	0, 0, 0, 0, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 390, 254,
	69, 0, 0, 177, 178, 179, 526, 525, 528, 529,
	530, 531, 0, 0, 217, 527, 223, 532, 533, 534,
	0, 237, 276, 243, 236, 405, 0, 0, 0, 502,
	519, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 592, 0, 0, 0, 562, 0,
	518, 0, 0, 511, 512, 514, 513, 515, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 561, 0, 0, 434, 0, 0, 559, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 364, 370, 0, 0, 0, 228, 0, 368, 339,
	421, 213, 252, 361, 344, 366, 0, 0, 367, 293,
	410, 356, 420, 435, 436, 235, 320, 427, 402, 432,
	444, 206, 232, 333, 395, 424, 386, 313, 406, 407,
	283, 385, 260, 194, 291, 198, 397, 418, 218, 378,
	0, 0, 0, 200, 416, 394, 310, 280, 281, 199,
	0, 360, 239, 258, 230, 329, 413, 414, 229, 446,
	208, 431, 202, 209, 430, 322, 409, 417, 311, 302,
	201, 415, 309, 301, 286, 249, 268, 354, 296, 355,
	269, 318, 317, 319, 0, 196, 0, 391, 425, 447,
	215, 0, 0, 404, 440, 443, 0, 357, 216, 259,
	248, 353, 257, 289, 439, 441, 442, 214, 351, 265,
	321, 210, 271, 387, 285, 294, 0, 0, 338, 369,
	219, 423, 388, 549, 560, 555, 556, 553, 554, 0,
	552, 551, 550, 563, 541, 542, 543, 544, 546, 0,
	557, 558, 545, 190, 203, 290, 0, 358, 255, 445,
	429, 426, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 411, 412,
	422, 433, 437, 264, 419, 438, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 428, 393, 207, 365, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 342,
	345, 261, 242, 222, 362, 220, 379, 399, 400, 401,
	403, 312, 238, 330, 0, 0, 0, 0, 505, 0,
	0, 0, 241, 0, 504, 0, 0, 0, 288, 0,
	0, 0, 343, 0, 380, 227, 297, 295, 408, 251,
	244, 240, 226, 272, 303, 341, 398, 335, 548, 292,
	0, 0, 389, 315, 0, 0, 0, 0, 0, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 390, 254, 69, 0, 0, 177, 178,
	179, 526, 1398, 528, 529, 530, 531, 0, 0, 217,
	527, 223, 532, 533, 534, 0, 237, 276, 243, 236,
	405, 0, 0, 0, 502, 519, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 517, 592,
	0, 0, 0, 562, 0, 518, 0, 0, 511, 512,
	514, 513, 515, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 561, 0, 0, 434,
	0, 0, 559, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 364, 370, 0, 0,
	0, 228, 0, 368, 339, 421, 213, 252, 361, 344,
	366, 0, 0, 367, 293, 410, 356, 420, 435, 436,
	235, 320, 427, 402, 432, 444, 206, 232, 333, 395,
	424, 386, 313, 406, 407, 283, 385, 260, 194, 291,
	198, 397, 418, 218, 378, 0, 0, 0, 200, 416,
	394, 310, 280, 281, 199, 0, 360, 239, 258, 230,
	329, 413, 414, 229, 446, 208, 431, 202, 209, 430,
	322, 409, 417, 311, 302, 201, 415, 309, 301, 286,
	249, 268, 354, 296, 355, 269, 318, 317, 319, 0,
	196, 0, 391, 425, 447, 215, 0, 0, 404, 440,
	443, 0, 357, 216, 259, 248, 353, 257, 289, 439,
	441, 442, 214, 351, 265, 321, 210, 271, 387, 285,
	294, 0, 0, 338, 369, 219, 423, 388, 549, 560,
	555, 556, 553, 554, 0, 552, 551, 550, 563, 541,
	542, 543, 544, 546, 0, 557, 558, 545, 190, 203,
	290, 0, 358, 255, 445, 429, 426, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 411, 412, 422, 433, 437, 264, 419,
	438, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	428, 393, 207, 365, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 342, 345, 261, 242, 222, 362,
	220, 379, 399, 400, 401, 403, 312, 238, 330, 0,
	0, 0, 0, 505, 0, 0, 0, 241, 0, 504,
	0, 0, 0, 288, 0, 0, 0, 343, 0, 380,
	227, 297, 295, 408, 251, 244, 240, 226, 272, 303,
	341, 398, 335, 548, 292, 0, 0, 389, 315, 0,
	0, 0, 0, 0, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 390, 254,
	69, 0, 0, 177, 178, 179, 526, 1395, 528, 529,
	530, 531, 0, 0, 217, 527, 223, 532, 533, 534,
	0, 237, 276, 243, 236, 405, 0, 0, 0, 502,
	519, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 517, 592, 0, 0, 0, 562, 0,
	518, 0, 0, 511, 512, 514, 513, 515, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 561, 0, 0, 434, 0, 0, 559, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 364, 370, 0, 0, 0, 228, 0, 368, 339,
	421, 213, 252, 361, 344, 366, 0, 0, 367, 293,
	410, 356, 420, 435, 436, 235, 320, 427, 402, 432,
	444, 206, 232, 333, 395, 424, 386, 313, 406, 407,
	283, 385, 260, 194, 291, 198, 397, 418, 218, 378,
	0, 0, 0, 200, 416, 394, 310, 280, 281, 199,
	0, 360, 239, 258, 230, 329, 413, 414, 229, 446,
	208, 431, 202, 209, 430, 322, 409, 417, 311, 302,
	201, 415, 309, 301, 286, 249, 268, 354, 296, 355,
	269, 318, 317, 319, 0, 196, 0, 391, 425, 447,
	215, 0, 0, 404, 440, 443, 0, 357, 216, 259,
	248, 353, 257, 289, 439, 441, 442, 214, 351, 265,
	321, 210, 271, 387, 285, 294, 0, 0, 338, 369,
	219, 423, 388, 549, 560, 555, 556, 553, 554, 0,
	552, 551, 550, 563, 541, 542, 543, 544, 546, 0,
	557, 558, 545, 190, 203, 290, 0, 358, 255, 445,
	429, 426, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 411, 412,
	422, 433, 437, 264, 419, 438, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 428, 393, 207, 365, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 342,
	345, 261, 242, 222, 362, 220, 379, 399, 400, 401,
	403, 312, 238, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 505, 0, 0, 0, 241, 0, 504, 0, 0,
	0, 288, 0, 0, 0, 343, 0, 380, 227, 297,
	295, 408, 251, 244, 240, 226, 272, 303, 341, 398,
	335, 548, 292, 0, 0, 389, 315, 0, 0, 0,
	0, 0, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 390, 254, 69, 0,
	0, 177, 178, 179, 526, 525, 528, 529, 530, 531,
	0, 0, 217, 527, 223, 532, 533, 534, 0, 237,
	276, 243, 236, 405, 0, 0, 0, 502, 519, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 0, 0, 0, 0, 562, 0, 518, 0,
	0, 511, 512, 514, 513, 515, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 561,
	0, 0, 434, 0, 0, 559, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 364,
	370, 0, 0, 0, 228, 0, 368, 339, 421, 213,
	252, 361, 344, 366, 0, 0, 367, 293, 410, 356,
	420, 435, 436, 235, 320, 427, 402, 432, 444, 206,
	232, 333, 395, 424, 386, 313, 406, 407, 283, 385,
	260, 194, 291, 198, 397, 418, 218, 378, 0, 0,
	0, 200, 416, 394, 310, 280, 281, 199, 0, 360,
	239, 258, 230, 329, 413, 414, 229, 446, 208, 431,
	202, 209, 430, 322, 409, 417, 311, 302, 201, 415,
	309, 301, 286, 249, 268, 354, 296, 355, 269, 318,
	317, 319, 0, 196, 0, 391, 425, 447, 215, 0,
	0, 404, 440, 443, 0, 357, 216, 259, 248, 353,
	257, 289, 439, 441, 442, 214, 351, 265, 321, 210,
	271, 387, 285, 294, 0, 0, 338, 369, 219, 423,
	388, 549, 560, 555, 556, 553, 554, 0, 552, 551,
	550, 563, 541, 542, 543, 544, 546, 0, 557, 558,
	545, 190, 203, 290, 0, 358, 255, 445, 429, 426,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 411, 412, 422, 433,
	437, 264, 419, 438, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 428, 393, 207, 365, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 342, 345, 261,
	242, 222, 362, 220, 379, 399, 400, 401, 403, 312,
	238, 330, 0, 0, 0, 0, 505, 0, 0, 0,
	241, 0, 504, 0, 0, 0, 288, 0, 0, 0,
	343, 0, 380, 227, 297, 295, 408, 251, 244, 240,
	226, 272, 303, 341, 398, 335, 548, 292, 0, 0,
	389, 315, 0, 0, 0, 0, 0, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 390, 254, 69, 0, 0, 177, 178, 179, 526,
	525, 528, 529, 530, 531, 0, 0, 217, 527, 223,
	532, 533, 534, 0, 237, 276, 243, 236, 405, 0,
	0, 0, 502, 519, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 0, 0, 0,
	0, 562, 0, 518, 0, 0, 511, 512, 514, 513,
	515, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 561, 0, 0, 434, 0, 0,
	559, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 364, 370, 0, 0, 0, 228,
	0, 368, 339, 421, 213, 252, 361, 344, 366, 0,
	0, 367, 293, 410, 356, 420, 435, 436, 235, 320,
	427, 402, 432, 444, 206, 232, 333, 395, 424, 386,
	313, 406, 407, 283, 385, 260, 194, 291, 198, 397,
	418, 218, 378, 0, 0, 0, 200, 416, 394, 310,
	280, 281, 199, 0, 360, 239, 258, 230, 329, 413,
	414, 229, 446, 208, 431, 202, 209, 430, 322, 409,
	417, 311, 302, 201, 415, 309, 301, 286, 249, 268,
	354, 296, 355, 269, 318, 317, 319, 0, 196, 0,
	391, 425, 447, 215, 0, 0, 404, 440, 443, 0,
	357, 216, 259, 248, 353, 257, 289, 439, 441, 442,
	214, 351, 265, 321, 210, 271, 387, 285, 294, 0,
	0, 338, 369, 219, 423, 388, 549, 560, 555, 556,
	553, 554, 0, 552, 551, 550, 563, 541, 542, 543,
	544, 546, 0, 557, 558, 545, 190, 203, 290, 0,
	358, 255, 445, 429, 426, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 411, 412, 422, 433, 437, 264, 419, 438, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 428, 393,
	207, 365, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 342, 345, 261, 242, 222, 362, 220, 379,
	399, 400, 401, 403, 312, 238, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 343, 0, 380, 227, 297,
	295, 408, 251, 244, 240, 226, 272, 303, 341, 398,
	335, 548, 292, 0, 0, 389, 315, 0, 0, 0,
	0, 0, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 390, 254, 69, 0,
	0, 177, 178, 179, 526, 525, 528, 529, 530, 531,
	0, 0, 217, 527, 223, 532, 533, 534, 0, 237,
	276, 243, 236, 405, 0, 0, 0, 0, 519, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 0, 0, 0, 0, 562, 0, 518, 0,
	0, 511, 512, 514, 513, 515, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 561,
	0, 0, 434, 0, 0, 559, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 364,
	370, 0, 0, 0, 228, 0, 368, 339, 421, 213,
	252, 361, 344, 366, 2156, 0, 367, 293, 410, 356,
	420, 435, 436, 235, 320, 427, 402, 432, 444, 206,
	232, 333, 395, 424, 386, 313, 406, 407, 283, 385,
	260, 194, 291, 198, 397, 418, 218, 378, 0, 0,
	0, 200, 416, 394, 310, 280, 281, 199, 0, 360,
	239, 258, 230, 329, 413, 414, 229, 446, 208, 431,
	202, 209, 430, 322, 409, 417, 311, 302, 201, 415,
	309, 301, 286, 249, 268, 354, 296, 355, 269, 318,
	317, 319, 0, 196, 0, 391, 425, 447, 215, 0,
	0, 404, 440, 443, 0, 357, 216, 259, 248, 353,
	257, 289, 439, 441, 442, 214, 351, 265, 321, 210,
	271, 387, 285, 294, 0, 0, 338, 369, 219, 423,
	388, 549, 560, 555, 556, 553, 554, 0, 552, 551,
	550, 563, 541, 542, 543, 544, 546, 0, 557, 558,
	545, 190, 203, 290, 0, 358, 255, 445, 429, 426,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 411, 412, 422, 433,
	437, 264, 419, 438, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 428, 393, 207, 365, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 342, 345, 261,
	242, 222, 362, 220, 379, 399, 400, 401, 403, 312,
	238, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	343, 0, 380, 227, 297, 295, 408, 251, 244, 240,
	226, 272, 303, 341, 398, 335, 548, 292, 0, 0,
	389, 315, 0, 0, 0, 0, 0, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 390, 254, 69, 0, 580, 177, 178, 179, 526,
	525, 528, 529, 530, 531, 0, 0, 217, 527, 223,
	532, 533, 534, 0, 237, 276, 243, 236, 405, 0,
	0, 0, 0, 519, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 517, 0, 0, 0,
	0, 562, 0, 518, 0, 0, 511, 512, 514, 513,
	515, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 561, 0, 0, 434, 0, 0,
	559, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 364, 370, 0, 0, 0, 228,
	0, 368, 339, 421, 213, 252, 361, 344, 366, 0,
	0, 367, 293, 410, 356, 420, 435, 436, 235, 320,
	427, 402, 432, 444, 206, 232, 333, 395, 424, 386,
	313, 406, 407, 283, 385, 260, 194, 291, 198, 397,
	418, 218, 378, 0, 0, 0, 200, 416, 394, 310,
	280, 281, 199, 0, 360, 239, 258, 230, 329, 413,
	414, 229, 446, 208, 431, 202, 209, 430, 322, 409,
	417, 311, 302, 201, 415, 309, 301, 286, 249, 268,
	354, 296, 355, 269, 318, 317, 319, 0, 196, 0,
	391, 425, 447, 215, 0, 0, 404, 440, 443, 0,
	357, 216, 259, 248, 353, 257, 289, 439, 441, 442,
	214, 351, 265, 321, 210, 271, 387, 285, 294, 0,
	0, 338, 369, 219, 423, 388, 549, 560, 555, 556,
	553, 554, 0, 552, 551, 550, 563, 541, 542, 543,
	544, 546, 0, 557, 558, 545, 190, 203, 290, 0,
	358, 255, 445, 429, 426, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 411, 412, 422, 433, 437, 264, 419, 438, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 428, 393,
	207, 365, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 342, 345, 261, 242, 222, 362, 220, 379,
	399, 400, 401, 403, 312, 238, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 343, 0, 380, 227, 297,
	295, 408, 251, 244, 240, 226, 272, 303, 341, 398,
	335, 548, 292, 0, 0, 389, 315, 0, 0, 0,
	0, 0, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 390, 254, 69, 0,
	0, 177, 178, 179, 526, 525, 528, 529, 530, 531,
	0, 0, 217, 527, 223, 532, 533, 534, 0, 237,
	276, 243, 236, 405, 0, 0, 0, 0, 519, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 517, 0, 0, 0, 0, 562, 0, 518, 0,
	0, 511, 512, 514, 513, 515, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 561,
	0, 0, 434, 0, 0, 559, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 364,
	370, 0, 0, 0, 228, 0, 368, 339, 421, 213,
	252, 361, 344, 366, 0, 0, 367, 293, 410, 356,
	420, 435, 436, 235, 320, 427, 402, 432, 444, 206,
	232, 333, 395, 424, 386, 313, 406, 407, 283, 385,
	260, 194, 291, 198, 397, 418, 218, 378, 0, 0,
	0, 200, 416, 394, 310, 280, 281, 199, 0, 360,
	239, 258, 230, 329, 413, 414, 229, 446, 208, 431,
	202, 209, 430, 322, 409, 417, 311, 302, 201, 415,
	309, 301, 286, 249, 268, 354, 296, 355, 269, 318,
	317, 319, 0, 196, 0, 391, 425, 447, 215, 0,
	0, 404, 440, 443, 0, 357, 216, 259, 248, 353,
	257, 289, 439, 441, 442, 214, 351, 265, 321, 210,
	271, 387, 285, 294, 0, 0, 338, 369, 219, 423,
	388, 549, 560, 555, 556, 553, 554, 0, 552, 551,
	550, 563, 541, 542, 543, 544, 546, 0, 557, 558,
	545, 190, 203, 290, 0, 358, 255, 445, 429, 426,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 411, 412, 422, 433,
	437, 264, 419, 438, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 428, 393, 207, 365, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 342, 345, 261,
	242, 222, 362, 220, 379, 399, 400, 401, 403, 312,
	238, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	343, 0, 380, 227, 297, 295, 408, 251, 244, 240,
	226, 272, 303, 341, 398, 335, 0, 292, 0, 0,
	389, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 390, 254, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 959, 958, 968, 969, 961, 962, 963, 964, 965,
	966, 967, 960, 0, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 364, 370, 0, 0, 0, 228,
	0, 368, 339, 421, 213, 252, 361, 344, 366, 0,
	0, 367, 293, 410, 356, 420, 435, 436, 235, 320,
	427, 402, 432, 444, 206, 232, 333, 395, 424, 386,
	313, 406, 407, 283, 385, 260, 194, 291, 198, 397,
	418, 218, 378, 0, 0, 0, 200, 416, 394, 310,
	280, 281, 199, 0, 360, 239, 258, 230, 329, 413,
	414, 229, 446, 208, 431, 202, 209, 430, 322, 409,
	417, 311, 302, 201, 415, 309, 301, 286, 249, 268,
	354, 296, 355, 269, 318, 317, 319, 0, 196, 0,
	391, 425, 447, 215, 0, 0, 404, 440, 443, 0,
	357, 216, 259, 248, 353, 257, 289, 439, 441, 442,
	214, 351, 265, 321, 210, 271, 387, 285, 294, 0,
	0, 338, 369, 219, 423, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 290, 0,
	358, 255, 445, 429, 426, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 411, 412, 422, 433, 437, 264, 419, 438, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 428, 393,
	207, 365, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 342, 345, 261, 242, 222, 362, 220, 379,
	399, 400, 401, 403, 312, 238, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 793, 0, 0, 0,
	0, 288, 0, 0, 0, 343, 0, 380, 227, 297,
	295, 408, 251, 244, 240, 226, 272, 303, 341, 398,
	335, 0, 292, 0, 0, 389, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 390, 254, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	276, 243, 236, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 0,
	0, 792, 434, 0, 0, 0, 0, 0, 0, 789,
	790, 287, 757, 284, 191, 205, 783, 787, 326, 364,
	370, 0, 0, 0, 228, 0, 368, 339, 421, 213,
	252, 361, 344, 366, 0, 0, 367, 293, 410, 356,
	420, 435, 436, 235, 320, 427, 402, 432, 444, 206,
	232, 333, 395, 424, 386, 313, 406, 407, 283, 385,
	260, 194, 291, 198, 397, 418, 218, 378, 0, 0,
	0, 200, 416, 394, 310, 280, 281, 199, 0, 360,
	239, 258, 230, 329, 413, 414, 229, 446, 208, 431,
	202, 209, 430, 322, 409, 417, 311, 302, 201, 415,
	309, 301, 286, 249, 268, 354, 296, 355, 269, 318,
	317, 319, 0, 196, 0, 391, 425, 447, 215, 0,
	0, 404, 440, 443, 0, 357, 216, 259, 248, 353,
	257, 289, 439, 441, 442, 214, 351, 265, 321, 210,
	271, 387, 285, 294, 0, 0, 338, 369, 219, 423,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 290, 0, 358, 255, 445, 429, 426,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 411, 412, 422, 433,
	437, 264, 419, 438, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 428, 393, 207, 365, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 342, 345, 261,
	242, 222, 362, 220, 379, 399, 400, 401, 403, 312,
	238, 330, 0, 0, 0, 1060, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	343, 0, 380, 227, 297, 295, 408, 251, 244, 240,
	226, 272, 303, 341, 398, 335, 0, 292, 0, 0,
	389, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 390, 254, 0, 0, 0, 177, 178, 179, 0,
	1062, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 405, 948,
	949, 947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 364, 370, 0, 0, 0, 228,
	0, 368, 339, 421, 213, 252, 361, 344, 366, 0,
	0, 367, 293, 410, 356, 420, 435, 436, 235, 320,
	427, 402, 432, 444, 206, 232, 333, 395, 424, 386,
	313, 406, 407, 283, 385, 260, 194, 291, 198, 397,
	418, 218, 378, 0, 0, 0, 200, 416, 394, 310,
	280, 281, 199, 0, 360, 239, 258, 230, 329, 413,
	414, 229, 446, 208, 431, 202, 209, 430, 322, 409,
	417, 311, 302, 201, 415, 309, 301, 286, 249, 268,
	354, 296, 355, 269, 318, 317, 319, 0, 196, 0,
	391, 425, 447, 215, 0, 0, 404, 440, 443, 0,
	357, 216, 259, 248, 353, 257, 289, 439, 441, 442,
	214, 351, 265, 321, 210, 271, 387, 285, 294, 0,
	0, 338, 369, 219, 423, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 290, 0,
	358, 255, 445, 429, 426, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 411, 412, 422, 433, 437, 264, 419, 438, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 428, 393,
	207, 365, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 342, 345, 261, 242, 222, 362, 220, 379,
	399, 400, 401, 403, 312, 238, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 343, 0,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 0, 292, 0, 0, 389, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 390,
	254, 69, 0, 580, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 364, 370, 0, 0, 0, 228, 0, 368,
	339, 421, 213, 252, 361, 344, 366, 0, 0, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 418, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 209, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 0, 0, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 321, 210, 271, 387, 285, 294, 0, 0, 338,
	369, 219, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 358, 255,
	445, 429, 426, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 264, 419, 438, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238, 330, 0, 0, 0, 1425, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 343, 0, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 0,
	292, 0, 0, 389, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 1427, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 364, 370, 0,
	0, 0, 228, 0, 368, 339, 421, 213, 252, 361,
	344, 366, 0, 1423, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 0, 0, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 0, 0, 338, 369, 219, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 358, 255, 445, 429, 426, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 343, 0,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 0, 292, 0, 0, 389, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 390,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 757, 284, 191, 205, 755,
	0, 326, 364, 370, 0, 0, 0, 228, 0, 368,
	339, 421, 213, 252, 361, 344, 366, 0, 0, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 418, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 209, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 0, 0, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 321, 210, 271, 387, 285, 294, 0, 0, 338,
	369, 219, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 358, 255,
	445, 429, 426, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 264, 419, 438, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238, 330, 0, 0, 0, 1425, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 343, 0, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 0,
	292, 0, 0, 389, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 1427, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 364, 370, 0,
	0, 0, 228, 0, 368, 339, 421, 213, 252, 361,
	344, 366, 0, 0, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 0, 0, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 0, 0, 338, 369, 219, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 358, 255, 445, 429, 426, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 1445, 0, 0,
	1446, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 1093, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 1092, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 580, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 1427, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 1062, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 1330, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 1217, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 1215,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 1213, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 1211,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 1209, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 1205,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 1203, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 330, 0, 1201,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 343, 0, 380, 227,
	297, 295, 408, 251, 244, 240, 226, 272, 303, 341,
	398, 335, 0, 292, 0, 0, 389, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 390, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	364, 370, 0, 0, 0, 228, 0, 368, 339, 421,
	213, 252, 361, 344, 366, 0, 0, 367, 293, 410,
	356, 420, 435, 436, 235, 320, 427, 402, 432, 444,
	206, 232, 333, 395, 424, 386, 313, 406, 407, 283,
	385, 260, 194, 291, 198, 397, 418, 218, 378, 0,
	0, 0, 200, 416, 394, 310, 280, 281, 199, 0,
	360, 239, 258, 230, 329, 413, 414, 229, 446, 208,
	431, 202, 209, 430, 322, 409, 417, 311, 302, 201,
	415, 309, 301, 286, 249, 268, 354, 296, 355, 269,
	318, 317, 319, 0, 196, 0, 391, 425, 447, 215,
	0, 0, 404, 440, 443, 0, 357, 216, 259, 248,
	353, 257, 289, 439, 441, 442, 214, 351, 265, 321,
	210, 271, 387, 285, 294, 0, 0, 338, 369, 219,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 358, 255, 445, 429,
	426, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 411, 412, 422,
	433, 437, 264, 419, 438, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 428, 393, 207, 365, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 342, 345,
	261, 242, 222, 362, 220, 379, 399, 400, 401, 403,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 343, 0, 380, 227, 297, 295, 408, 251, 244,
	240, 226, 272, 303, 341, 398, 335, 0, 292, 0,
	0, 389, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 390, 254, 1176, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 364, 370, 0, 0, 0,
	228, 0, 368, 339, 421, 213, 252, 361, 344, 366,
	0, 0, 367, 293, 410, 356, 420, 435, 436, 235,
	320, 427, 402, 432, 444, 206, 232, 333, 395, 424,
	386, 313, 406, 407, 283, 385, 260, 194, 291, 198,
	397, 418, 218, 378, 0, 0, 0, 200, 416, 394,
	310, 280, 281, 199, 0, 360, 239, 258, 230, 329,
	413, 414, 229, 446, 208, 431, 202, 209, 430, 322,
	409, 417, 311, 302, 201, 415, 309, 301, 286, 249,
	268, 354, 296, 355, 269, 318, 317, 319, 0, 196,
	0, 391, 425, 447, 215, 0, 0, 404, 440, 443,
	0, 357, 216, 259, 248, 353, 257, 289, 439, 441,
	442, 214, 351, 265, 321, 210, 271, 387, 285, 294,
	0, 0, 338, 369, 219, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 358, 255, 445, 429, 426, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 411, 412, 422, 433, 437, 264, 419, 438,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 428,
	393, 207, 365, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 342, 345, 261, 242, 222, 362, 220,
	379, 399, 400, 401, 403, 312, 238, 1075, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 343, 0, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 0,
	292, 0, 0, 389, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 364, 370, 0,
	0, 0, 228, 0, 368, 339, 421, 213, 252, 361,
	344, 366, 0, 0, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 0, 0, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 0, 0, 338, 369, 219, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 358, 255, 445, 429, 426, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 1066, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 343, 0,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 0, 292, 0, 0, 389, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 390,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 364, 370, 0, 0, 0, 228, 0, 368,
	339, 421, 213, 252, 361, 344, 366, 0, 0, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 418, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 209, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 0, 0, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 321, 210, 271, 387, 285, 294, 0, 0, 338,
	369, 219, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 358, 255,
	445, 429, 426, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 264, 419, 438, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 343, 0, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 0,
	292, 0, 0, 389, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 924, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 364, 370, 0,
	0, 0, 228, 0, 368, 339, 421, 213, 252, 361,
	344, 366, 0, 0, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 0, 0, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 0, 0, 338, 369, 219, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 358, 255, 445, 429, 426, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 343, 0,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 0, 292, 0, 0, 389, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 390,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 262,
	0, 316, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 364, 370, 0, 0, 0, 228, 0, 368,
	339, 421, 213, 252, 361, 344, 366, 0, 0, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 418, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 209, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 0, 0, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 321, 210, 271, 387, 285, 294, 0, 0, 338,
	369, 219, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 358, 255,
	445, 429, 426, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 492, 419, 438, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 343, 0, 380, 227, 297, 295, 408,
	251, 244, 240, 226, 272, 303, 341, 398, 335, 0,
	292, 0, 0, 389, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 390, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 185, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 364, 370, 0,
	0, 0, 228, 0, 368, 339, 421, 213, 252, 361,
	344, 366, 0, 0, 367, 293, 410, 356, 420, 435,
	436, 235, 320, 427, 402, 432, 444, 206, 232, 333,
	395, 424, 386, 313, 406, 407, 283, 385, 260, 194,
	291, 198, 397, 418, 218, 378, 0, 0, 0, 200,
	416, 394, 310, 280, 281, 199, 0, 360, 239, 258,
	230, 329, 413, 414, 229, 446, 208, 431, 202, 209,
	430, 322, 409, 417, 311, 302, 201, 415, 309, 301,
	286, 249, 268, 354, 296, 355, 269, 318, 317, 319,
	0, 196, 0, 391, 425, 447, 215, 0, 0, 404,
	440, 443, 0, 357, 216, 259, 248, 353, 257, 289,
	439, 441, 442, 214, 351, 265, 321, 210, 271, 387,
	285, 294, 0, 0, 338, 369, 219, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 358, 255, 445, 429, 426, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 411, 412, 422, 433, 437, 264,
	419, 438, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 428, 393, 207, 365, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 342, 345, 261, 242, 222,
	362, 220, 379, 399, 400, 401, 403, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 343, 0,
	380, 227, 297, 295, 408, 251, 244, 240, 226, 272,
	303, 341, 398, 335, 0, 292, 0, 0, 389, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 390,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 364, 370, 0, 0, 0, 228, 0, 368,
	339, 421, 213, 252, 361, 344, 366, 0, 0, 367,
	293, 410, 356, 420, 435, 436, 235, 320, 427, 402,
	432, 444, 206, 232, 333, 395, 424, 386, 313, 406,
	407, 283, 385, 260, 194, 291, 198, 397, 418, 218,
	378, 0, 0, 0, 200, 416, 394, 310, 280, 281,
	199, 0, 360, 239, 258, 230, 329, 413, 414, 229,
	446, 208, 431, 202, 209, 430, 322, 409, 417, 311,
	302, 201, 415, 309, 301, 286, 249, 268, 354, 296,
	355, 269, 318, 317, 319, 0, 196, 0, 391, 425,
	447, 215, 0, 0, 404, 440, 443, 0, 357, 216,
	259, 248, 353, 257, 289, 439, 441, 442, 214, 351,
	265, 321, 210, 271, 387, 285, 294, 0, 0, 338,
	369, 219, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 358, 255,
	445, 429, 426, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 411,
	412, 422, 433, 437, 264, 419, 438, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 428, 393, 207, 365,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	342, 345, 261, 242, 222, 362, 220, 379, 399, 400,
	401, 403, 312, 238,
}

var yyPact = [...]int{
	3919, -1000, -335, 1632, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1600, 1252, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 563, 1285, 257, 1505, 249, 194, 963, 386, 96,
	26415, 384, 3249, 26860, -1000, 59, -1000, 49, 26860, 57,
	25970, -1000, -1000, -274, 12142, 1462, -22, -28, 26860, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1256, 1575, 1580,
	1596, 1086, 1529, -1000, 10349, 10349, 321, 321, 321, 8569,
	-1000, -1000, 16160, 26860, 26860, 1292, 378, 963, 374, 373,
	372, 303, -124, -1000, -1000, -1000, -1000, 1505, -1000, -1000,
	143, -1000, 226, 1207, -1000, 1199, -1000, 371, 479, 222,
	270, 268, 210, 204, 203, 201, 200, 197, 196, 182,
	237, -1000, 514, 514, -167, -171, 3163, 289, 289, 289,
	357, 1473, 1471, -1000, 499, -1000, 514, 514, 112, 514,
	514, 514, 514, 161, 159, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	26860, -1000, 118, 482, 565, 1505, 131, -1000, -1000, -1000,
	26860, 311, 963, 311, 311, 26860, -1000, 451, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26860, 616,
	616, 616, 616, 616, 616, 43, -1000, 42, 149, 124,
	133, -14, 56, 252, -1000, 431, -1000, 120, 48, -1000,
	616, 6733, 6733, 6733, -1000, 1482, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 354, -1000, -1000, -1000, -1000, 26860,
	25525, 239, 546, -1000, -1000, -1000, 64, -1000, -1000, 1059,
	496, -1000, 12142, 2152, 1186, 1186, -1000, -1000, 424, -1000,
	-1000, 13477, 13477, 13477, 13477, 13477, 13477, 13477, 13477, 13477,
	13477, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1186, 437, -1000, 11697, 1186,
	1186, 1186, 1186, 1186, 1186, 1186, 1186, 12142, 1186, 1186,
	1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
	1186, 1186, 1186, 1186, -1000, -1000, -1000, 26860, -1000, 1186,
	1600, -1000, 1252, -1000, -1000, -1000, 1495, 12142, 12142, 1600,
	-1000, 1353, 10349, -1000, -1000, 1494, -1000, -1000, -1000, -1000,
	730, 1619, -1000, 14812, 435, 1617, 25080, -1000, 18843, 24635,
	1183, 8110, -73, -1000, -1000, -1000, 527, 17953, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1482,
	1116, 26860, -1000, -1000, 3555, 963, -1000, 1284, -1000, 1113,
	-1000, 1246, 118, 303, 1303, 963, 963, 963, 963, 576,
	-1000, -1000, -1000, 514, 514, 236, 249, 3892, -1000, -1000,
	-1000, 24183, 1282, 963, -1000, 1281, -1000, 1543, 300, 502,
	502, 963, -1000, -1000, 26860, 963, 1542, 1540, 26860, 26860,
	-1000, 23738, -1000, 23293, 22848, 873, 26860, 22403, 21958, 21513,
	21068, 20623, -1000, 1356, -1000, 1219, -1000, -1000, -1000, 26860,
	26860, 26860, -10, -1000, -1000, 26860, 963, -1000, -1000, 868,
	857, 514, 514, 854, 972, 971, 969, 514, 514, 840,
	964, 925, 104, 794, 793, 783, 945, 962, 105, 849,
	848, 780, 26860, 1262, -1000, 110, 518, 165, 214, 199,
	26860, 127, 1505, 1459, 1182, 352, 26860, 1556, 1335, 26860,
	963, -1000, 7192, -1000, -1000, 957, 12142, -1000, -1000, -1000,
	-1000, -1000, 616, 26860, 616, 26860, 616, 616, 616, 616,
	655, 675, 655, -1000, -1000, -1000, -1000, 6733, 6733, 6733,
	26860, 6733, 6733, 26860, 6733, 6733, 675, -1000, -1000, -1000,
	497, -1000, 1334, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	53, -1000, -1000, -1000, -1000, -1000, 1632, -1000, -1000, -1000,
	-103, 1181, 20178, -1000, -279, -281, -283, -284, -1000, -1000,
	-1000, -288, -292, -1000, -1000, -1000, 12142, 12142, 12142, 12142,
	812, 500, 13477, 832, 534, 13477, 13477, 13477, 13477, 13477,
	13477, 13477, 13477, 13477, 13477, 13477, 13477, 13477, 13477, 13477,
	732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 963,
	-1000, 1630, 1017, 1017, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 13922, 9014, 7192, 1086, 1099, 1600, 10349,
	10349, 12142, 12142, 11239, 10794, 10349, 1484, 590, 496, 26860,
	-1000, -1000, 13032, -1000, -1000, -1000, -1000, -1000, 995, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26860, 26860, 10349, 10349,
	10349, 10349, 10349, -1000, 1171, -1000, -162, 15715, 12142, 1580,
	1086, 1494, 1547, 1625, 485, 833, 1156, -1000, 738, 1580,
	17508, 1206, -1000, 1494, -1000, -1000, -1000, 26860, -1000, -1000,
	19733, -1000, -1000, 6274, 26860, 180, 26860, -1000, 1154, 1372,
	-1000, -1000, -1000, 1563, 17063, 26860, 1104, 1102, -1000, -1000,
	432, 7651, -73, -1000, 7651, 1140, -1000, -66, -102, 9459,
	413, -1000, -1000, -1000, 3163, 14367, 1045, 696, -13, -1000,
	-1000, -1000, 1246, -1000, 1246, 1246, 1246, 1246, -10, -10,
	-10, -10, -1000, -1000, -1000, -1000, -1000, 1261, 1258, -1000,
	1246, 1246, 1246, 1246, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1257, 1257, 1257, 1251, 1251, 284, -1000, 12142, 130,
	26860, 1553, 779, 110, 26860, 1333, -1000, 26860, 1303, 1303,
	1303, -1000, 1552, 905, 888, -1000, 1155, -1000, -1000, 1595,
	-1000, -1000, 541, 680, 664, 477, 26860, 70, 177, -1000,
	276, -1000, 26860, 1255, 1533, 502, 963, -1000, 963, -1000,
	-1000, -1000, -1000, 430, -1000, -1000, 963, 1149, -1000, 1198,
	743, 647, 713, 609, 1149, -1000, -1000, -144, 1149, -1000,
	1149, -1000, 1149, -1000, 1149, -1000, 1149, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 503, 26860, 70, 732, -1000,
	339, -1000, -1000, 732, 732, -1000, -1000, -1000, -1000, 956,
	954, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -330, 26860, 364,
	72, 117, 26860, 26860, 26860, 26860, 26860, 407, -1000, -1000,
	-1000, 144, 26860, 26860, 370, -1000, 26860, 362, -1000, -1000,
	-1000, -1000, -1000, -1000, 496, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 616, 26860, 26860, 26860, -1000, -1000, 616,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26860,
	-1000, 951, 26860, 26860, -1000, -1000, -1000, -1000, -1000, 80,
	-70, 156, -1000, -1000, -1000, -1000, 1568, -1000, 496, 500,
	689, 630, -1000, -1000, 760, -1000, -1000, 1731, -1000, -1000,
	-1000, -1000, 832, 13477, 13477, 13477, 597, 1731, 2438, 701,
	865, 438, 622, 622, 471, 471, 471, 471, 471, 611,
	611, -1000, -1000, -1000, -1000, 995, -1000, -1000, -1000, 995,
	10349, 10349, 1148, 1186, 429, -1000, 1256, -1000, -1000, 1580,
	1067, 1067, 594, 947, 572, 1615, 1067, 566, 1613, 1067,
	1067, 10349, -1000, -1000, 677, -1000, 12142, 995, -1000, 1076,
	1146, 1142, 1067, 995, 995, 1067, 1067, 26860, -1000, -273,
	-1000, -98, 406, 1186, -1000, 19288, -1000, -1000, 995, 1059,
	1495, -1000, -1000, 1448, -1000, 1395, 12142, 12142, 12142, -1000,
	-1000, -1000, 1495, 1582, -1000, 1404, 1403, 1606, 10349, 18843,
	1494, -1000, -1000, -1000, 427, 1606, 1294, 1186, -1000, 26860,
	18843, 18843, 18843, 18843, 18843, -1000, 1366, 1362, -1000, 1383,
	1381, 1389, 26860, -1000, 1091, 1086, 17063, 180, 1051, 18843,
	26860, -1000, -1000, 18843, 26860, 5815, -1000, 1140, -73, -74,
	-1000, -1000, -1000, -1000, 496, -1000, 879, -1000, 330, -1000,
	283, -1000, -1000, -1000, -1000, 1503, -1000, 624, -12, -1000,
	-1000, -10, -10, -1000, -1000, 413, 567, 413, 413, 413,
	948, 948, -1000, -1000, -1000, -1000, -1000, 776, -1000, -1000,
	-1000, 773, -1000, -1000, 852, 1351, 130, -1000, -1000, 514,
	942, 1466, -1000, -1000, 1040, 359, -1000, 26860, -1000, 1317,
	1316, 1314, -1000, -1000, -1000, -1000, -1000, 3416, 26860, 1088,
	-1000, 67, 26860, 1029, 26860, -1000, 1078, 26860, -1000, 963,
	-1000, -1000, 7192, -1000, 26860, 1186, -1000, -1000, -1000, -1000,
	376, 1498, 1488, 70, 67, 413, 963, -1000, -1000, -1000,
	-1000, -1000, -329, 1070, 26860, 82, -1000, 1253, 950, -1000,
	1296, -1000, -1000, -1000, -1000, 73, 164, 154, 326, -1000,
	-1000, -1000, -1000, 1351, 26860, -1000, -1000, -1000, -1000, 655,
	-1000, 655, -1000, -1000, -1000, -1000, 1479, -72, -303, -1000,
	-300, -1000, -1000, -1000, -1000, 597, 1731, 2350, -1000, 13477,
	13477, -1000, -1000, 1067, 1067, 10349, 7192, 1600, 1495, -1000,
	-1000, 377, 732, 377, 13477, 13477, -1000, 13477, 13477, -1000,
	-137, 1204, 568, -1000, 12142, 819, -1000, -1000, 13477, 13477,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 369,
	368, 366, 26860, -1000, -1000, -1000, 896, 938, 1386, 496,
	496, -1000, -1000, 26860, -1000, -1000, -1000, -1000, 1604, 12142,
	-1000, 1139, -1000, 5356, 1580, 1312, 26860, 1186, 1632, 15270,
	26860, 1141, -1000, 516, 1372, 1299, 1311, 1350, -1000, -1000,
	-1000, -1000, 1348, -1000, 1347, -1000, -1000, -1000, -1000, -1000,
	1086, 1606, 18843, 1118, -1000, 1118, -1000, 421, -1000, -1000,
	-1000, -92, -91, -1000, -1000, -1000, 3163, -1000, -1000, 1309,
	13477, -1000, -1000, -1000, 413, 413, -1000, -1000, -1000, -1000,
	-1000, -1000, 1065, -1000, 1063, 1122, 1061, 54, -1000, 1225,
	1478, 514, 514, -1000, 765, -1000, 963, -1000, 26860, -1000,
	26860, 26860, 26860, 1592, 1119, -1000, 26860, -1000, -1000, 26860,
	-1000, -1000, 1402, 130, 1055, -1000, -1000, -1000, 177, 26860,
	-1000, 1017, 67, -1000, -1000, -1000, -1000, -1000, -1000, 1220,
	-1000, -1000, -1000, 1016, -1000, -152, 963, 26860, 26860, 26860,
	-1000, 26860, -1000, -1000, 616, 616, -1000, 1476, -1000, 963,
	-1000, 13477, 1731, 1731, -1000, -1000, 995, -1000, 1580, -1000,
	995, 1246, 1246, -1000, 1246, 1251, -1000, 1246, 39, 1246,
	33, 995, 995, 2294, 2232, 2200, 2041, 1186, -131, -1000,
	496, 12142, 1221, 1179, 1186, 1186, 1186, 1037, 932, -10,
	-1000, -1000, -1000, 1602, 1591, 496, -1000, -1000, -1000, 1545,
	1144, 1057, -1000, -1000, 9904, 1053, 1393, 416, 1037, 1600,
	26860, 12142, -1000, -1000, 12142, 1240, -1000, 12142, -1000, -1000,
	-1000, 1600, 1600, 1118, -1000, -1000, 461, -1000, -1000, -1000,
	-1000, -7, 1623, 1731, -1000, -1000, -10, 926, -10, 740,
	-1000, 739, -1000, -1000, -209, -1000, -1000, 1216, 1346, -1000,
	-1000, 1220, -1000, -1000, -1000, 26860, 26860, -1000, -1000, 172,
	-1000, 265, 1011, -1000, -168, -1000, -1000, 1562, 26860, -1000,
	-1000, 7192, -1000, -1000, 1211, 1300, -1000, -1000, -1000, -1000,
	-1000, -1000, 1731, -1000, 1495, -1000, -1000, 179, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13477, 13477, 13477, 13477,
	13477, 1580, 924, 496, 13477, 13477, 18398, 26860, 26860, 16605,
	-10, -43, -1000, 12142, 12142, 1513, -1000, 1186, -1000, 1185,
	26860, 1186, 26860, -1000, 1580, -1000, 496, 496, 26860, 496,
	1580, -1000, 446, -1000, -105, 413, -1000, 413, 1003, 998,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1558, 1119,
	-1000, 169, 26860, -1000, 177, -1000, -173, -175, 1252, 1006,
	1075, -1000, 509, 26860, 26860, -1000, -1000, -1000, 1076, 1076,
	1076, 1076, 253, 995, -1000, 1076, 1076, 1001, -1000, 1001,
	1001, 406, -261, -1000, 1455, 1445, 496, 1059, 1622, -1000,
	1186, 1632, 404, 1057, -1000, -1000, 988, -1000, 718, 1512,
	-1000, 1485, -1000, -1000, -1000, -1000, -1000, 1252, 1186, 952,
	-1000, -1000, -1000, 190, -1000, 7192, 4897, 986, -1000, -1000,
	-1000, -1000, -1000, 995, 126, -159, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -43, 232, -1000, 1416, 1407, 1590, 26860,
	1057, 26860, -1000, -1000, 919, -1000, -1000, 190, 12587, 26860,
	-1000, -55, -1000, -1000, -1000, -1000, -1000, 1296, -1000, 1384,
	-142, -164, 1420, 1425, 1425, 1445, 1588, 1431, 1429, -1000,
	904, 1018, -1000, -1000, -1000, 1076, 995, 981, 278, -1000,
	-1000, -152, -1000, 1374, -1000, 1418, 750, -1000, -1000, -1000,
	-1000, 891, -1000, 1587, 1584, -1000, -1000, -1000, 1308, 114,
	-1000, -157, -1000, 742, -1000, -1000, -1000, 890, 881, 1305,
	-1000, 1612, -1000, -161, -1000, -1000, -1000, -1000, -1000, 1614,
	560, 560, -166, -1000, -1000, -1000, 273, 834, -1000, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1902, 1901, 15, 80, 79, 1900, 1898, 1897, 1896,
	128, 126, 125, 1894, 1893, 1892, 1890, 1888, 1887, 1886,
	1859, 1858, 1854, 1852, 1851, 52, 132, 35, 39, 115,
	1850, 1849, 44, 1848, 1847, 1846, 123, 120, 434, 1845,
	122, 1844, 1843, 1842, 1841, 1839, 1838, 1837, 1836, 1835,
	1833, 1831, 1829, 1827, 151, 1823, 1821, 7, 1815, 83,
	1814, 1813, 1812, 1811, 1810, 82, 1808, 1807, 1805, 113,
	1802, 1801, 43, 97, 49, 74, 1799, 1798, 68, 821,
	1797, 102, 144, 1795, 801, 1794, 40, 96, 67, 1793,
	41, 1788, 1786, 99, 1785, 1784, 1780, 65, 1778, 1774,
	2697, 1772, 64, 70, 18, 26, 1771, 1770, 1769, 1767,
	32, 435, 1766, 1765, 19, 1764, 1763, 127, 1761, 81,
	27, 1757, 8, 14, 22, 1756, 77, 1755, 36, 50,
	29, 1754, 78, 1753, 1752, 1747, 1746, 38, 1745, 73,
	105, 37, 1744, 6, 11, 1741, 1740, 1739, 1737, 1736,
	1735, 4, 1734, 1732, 1731, 28, 1730, 9, 23, 72,
	85, 25, 12, 1729, 108, 1728, 24, 112, 63, 109,
	1727, 1726, 1725, 1029, 1724, 46, 1723, 136, 1721, 1720,
	31, 1718, 446, 117, 1717, 1716, 1715, 1713, 57, 1073,
	2128, 10, 111, 1712, 1708, 1440, 47, 76, 21, 1707,
	1706, 1705, 121, 119, 56, 855, 42, 1703, 1702, 1701,
	1699, 1698, 1697, 1693, 223, 1692, 1691, 1690, 130, 20,
	89, 33, 1688, 1687, 1685, 1684, 1682, 62, 66, 1680,
	107, 106, 60, 84, 1676, 116, 86, 58, 1674, 149,
	1671, 1669, 1665, 1663, 45, 1662, 1661, 1660, 1659, 104,
	88, 55, 30, 1656, 34, 91, 87, 101, 1655, 17,
	114, 13, 1654, 2, 0, 1652, 5, 124, 1553, 103,
	1651, 1650, 1, 1649, 3, 1648, 1646, 75, 1645, 1644,
	1640, 1639, 2816, 1582, 110, 1638, 118,
}

var yyR1 = [...]int{
	0, 280, 281, 281, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 264, 264, 264, 267, 267, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 284, 284, 95, 95, 93, 93, 94, 94, 159,
	159, 13, 14, 14, 169, 169, 168, 168, 168, 170,
	170, 170, 170, 205, 205, 15, 15, 15, 15, 15,
	70, 70, 266, 266, 265, 263, 263, 262, 262, 261,
	23, 24, 33, 33, 33, 33, 34, 35, 268, 268,
	240, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 242, 242, 229, 229, 241, 241, 241,
	241, 241, 241, 241, 228, 207, 207, 207, 207, 210,
	210, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	209, 209, 209, 209, 209, 211, 211, 211, 211, 211,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 213, 213, 213, 213, 213,
	213, 213, 213, 227, 227, 214, 214, 220, 220, 221,
	221, 221, 223, 223, 224, 224, 184, 184, 184, 216,
	216, 217, 217, 222, 222, 218, 218, 218, 219, 219,
	219, 226, 226, 226, 226, 226, 215, 215, 230, 254,
	254, 253, 253, 251, 251, 251, 251, 239, 239, 248,
	248, 248, 248, 248, 238, 238, 234, 234, 234, 235,
	235, 236, 236, 233, 233, 237, 237, 250, 250, 249,
	231, 231, 232, 232, 256, 256, 256, 256, 257, 273,
	274, 272, 272, 272, 272, 272, 59, 59, 59, 185,
	185, 185, 246, 246, 245, 245, 245, 247, 247, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 179, 179,
	179, 271, 271, 271, 271, 271, 271, 270, 270, 270,
	243, 243, 243, 269, 269, 129, 129, 130, 130, 30,
	30, 30, 30, 30, 30, 29, 29, 29, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	31, 31, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 225, 225,
	225, 258, 258, 259, 259, 17, 22, 22, 18, 18,
	18, 18, 19, 19, 41, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 176, 176, 275, 275, 178, 178,
	174, 174, 177, 177, 175, 175, 175, 180, 180, 180,
	181, 181, 279, 279, 279, 43, 43, 45, 45, 46,
	47, 47, 200, 200, 201, 201, 48, 49, 60, 60,
	60, 60, 60, 60, 62, 62, 62, 7, 7, 7,
	7, 56, 56, 56, 6, 6, 44, 44, 51, 276,
	276, 277, 278, 278, 278, 278, 52, 20, 20, 20,
	20, 20, 20, 77, 77, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 71, 71, 71,
	66, 66, 285, 54, 55, 55, 69, 69, 69, 63,
	63, 63, 68, 68, 68, 74, 74, 76, 76, 76,
	76, 76, 78, 78, 78, 78, 78, 78, 73, 73,
	75, 75, 75, 75, 193, 193, 193, 192, 192, 85,
	85, 86, 86, 87, 87, 88, 88, 88, 127, 103,
	103, 158, 158, 157, 157, 160, 160, 89, 89, 89,
	89, 90, 90, 91, 91, 92, 92, 199, 199, 198,
	198, 198, 197, 197, 96, 96, 96, 98, 97, 97,
	97, 97, 99, 99, 101, 101, 100, 100, 102, 104,
	104, 104, 104, 104, 105, 105, 84, 84, 84, 84,
	84, 84, 84, 84, 172, 172, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 118, 118,
	118, 118, 118, 118, 108, 108, 108, 108, 108, 108,
	108, 72, 72, 119, 119, 119, 126, 120, 120, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 115, 115, 115, 115, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 286, 286, 117, 116,
	116, 116, 116, 116, 116, 116, 67, 67, 67, 67,
	67, 204, 204, 204, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 133, 133, 64,
	64, 131, 131, 132, 134, 134, 128, 128, 128, 110,
	110, 110, 110, 110, 110, 110, 110, 112, 112, 112,
	135, 135, 136, 136, 137, 137, 138, 138, 139, 140,
	140, 140, 141, 141, 141, 141, 32, 32, 32, 32,
	32, 27, 27, 27, 27, 28, 28, 28, 79, 79,
	79, 79, 81, 81, 80, 80, 57, 57, 58, 58,
	58, 82, 82, 83, 83, 83, 83, 155, 155, 155,
	142, 142, 142, 142, 147, 147, 147, 143, 143, 145,
	145, 145, 146, 146, 146, 144, 150, 150, 152, 152,
	151, 151, 149, 149, 154, 154, 153, 153, 148, 148,
	109, 109, 109, 109, 109, 156, 156, 156, 156, 161,
	161, 122, 122, 124, 124, 123, 125, 162, 162, 166,
	163, 163, 167, 167, 167, 167, 167, 164, 164, 165,
	165, 194, 194, 194, 171, 171, 186, 186, 182, 182,
	183, 183, 173, 173, 187, 187, 187, 53, 121, 121,
	255, 255, 252, 190, 190, 191, 191, 195, 195, 196,
	196, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 282, 283, 202, 203, 203,
	203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	5, 3, 6, 7, 7, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	4, 4, 2, 2, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 0, 1, 2, 0,
	2, 0, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 1, 2, 1, 0, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 3,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 10, 11, 11, 12, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 10, 3, 6, 7, 5,
	5, 5, 12, 7, 5, 9, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 5, 6,
	5, 4, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 4, 2, 4, 4, 4, 4, 4, 5, 7,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 7, 2, 4, 5, 4, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 0, 2, 4,
	0, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 4, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -280, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -282, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 226, 227, 229, 230, 231, 232,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 324, 186, 185, 26, -281, 464, -69, 5, -137,
	16, -3, -54, -285, -54, -54, -54, -54, -54, -54,
	-240, -242, 81, 126, 81, -70, -186, 164, 173, 172,
	169, -268, 107, 219, 315, 162, -39, -38, -37, -36,
	-40, 30, -30, -31, -260, -29, -26, 158, 155, 199,
	102, 103, 191, 192, 193, 157, 175, 190, 194, 189,
	208, -25, 77, 32, 337, 340, -247, 154, 160, 161,
	325, 105, 104, 72, 156, -244, 276, 441, -40, 443,
	95, 97, 442, 41, 164, 444, 445, 446, 447, 174,
	448, 449, 450, 451, 457, 458, 459, 460, 106, 5,
	163, -268, -79, 286, 77, -267, -264, 84, 85, 86,
	163, 163, 164, 165, -268, 163, -100, -195, -264, -189,
	334, 177, 368, 369, 224, 77, 276, 441, 226, 240,
	234, 261, 253, 335, 370, 178, 212, 438, 251, 254,
	302, 443, 371, 192, 298, 281, 289, 95, 229, 311,
	456, 372, 454, 97, 442, 76, 48, 41, 187, 249,
	245, 444, 213, 373, 345, 206, 105, 102, 463, 243,
	47, 28, 453, 104, 46, 445, 374, 446, 291, 266,
	432, 45, 193, 375, 80, 339, 440, 293, 244, 290,
	223, 452, 159, 376, 424, 300, 433, 377, 267, 271,
	378, 303, 49, 379, 380, 434, 103, 381, 75, 447,
	238, 239, 382, 221, 176, 305, 265, 174, 34, 294,
	336, 225, 55, 200, 306, 43, 269, 42, 428, 383,
	431, 264, 260, 50, 384, 385, 386, 387, 448, 263,
	237, 259, 462, 218, 449, 59, 161, 273, 272, 274,
	207, 301, 256, 388, 389, 390, 181, 78, 391, 246,
	19, 392, 393, 214, 394, 53, 395, 396, 309, 190,
	397, 51, 450, 38, 195, 451, 398, 399, 400, 401,
	402, 299, 403, 292, 268, 270, 202, 288, 338, 404,
	242, 194, 455, 405, 182, 439, 196, 199, 189, 310,
	183, 406, 407, 408, 409, 410, 411, 412, 230, 457,
	40, 413, 414, 415, 416, 222, 217, 304, 313, 58,
	79, 278, 417, 437, 236, 215, 418, 227, 52, 458,
	459, 460, 209, 461, 284, 106, 219, 220, 44, 257,
	201, 419, 420, 247, 248, 262, 235, 258, 228, 425,
	203, 191, 421, 312, 216, 279, 342, 208, 436, 341,
	255, 252, 210, 422, 165, 204, 205, 423, 426, 295,
	285, 296, 297, 286, 211, 340, 250, 280, 163, -164,
	281, 282, 283, 294, 295, 300, 299, 202, -279, 303,
	163, -174, 144, 153, 291, -178, 292, 285, 286, 211,
	-275, -264, 446, 461, 302, 254, 304, 428, 287, 293,
	297, 296, -195, 228, -200, 233, -190, -264, -189, 231,
	-100, -60, 424, 157, -202, -202, -71, 428, 430, -120,
	-84, -106, 110, -111, 30, 24, -110, -107, -128, -125,
	-126, 144, 145, 147, 146, 148, 133, 134, 141, 111,
	149, -115, -113, -114, -116, 88, 87, 96, 89, 90,
	91, 92, 98, 99, 100, -190, -195, -123, -282, 65,
	66, 325, 326, 327, 328, 333, 329, 113, 54, 314,
	323, 322, 321, 318, 319, 316, 317, 331, 332, 168,
	315, 162, 139, 324, -264, -189, 41, 284, 284, -100,
	-5, -4, -282, 6, 21, 22, -141, 18, 17, -283,
	83, -63, -76, 60, 61, -78, 22, 37, 64, 62,
	-55, -75, 135, -84, -195, -75, -173, 167, -173, -173,
	-163, -205, 228, -167, 304, 303, -191, -165, -190, -188,
	-164, 301, 158, 343, 109, 23, 25, 112, 144, 17,
	113, 36, 160, 175, 143, 171, 325, 153, 69, 344,
	316, 317, 314, 320, 327, 328, 315, 282, 30, 11,
	346, 26, 185, 22, 37, 137, 155, 116, 117, 188,
	24, 186, 100, 349, 20, 72, 180, 12, 173, 14,
	350, 351, 15, 168, 167, 128, 164, 67, 9, 149,
	27, 125, 63, 352, 29, 353, 354, 355, 356, 65,
	126, 18, 318, 319, 32, 429, 357, 333, 197, 139,
	70, 56, 430, 110, 358, 359, 98, 360, 101, 73,
	435, 107, 16, 68, 39, 361, 198, 362, 170, 363,
	307, 364, 127, 156, 324, 66, 365, 162, 283, 6,
	330, 31, 184, 172, 64, 366, 163, 115, 331, 332,
	166, 99, 5, 169, 33, 10, 71, 74, 321, 322,
	323, 54, 337, 114, 13, 367, 308, 108, 302, 254,
	-241, 126, -228, -232, -190, 179, -257, 175, -100, -250,
	-249, -190, -79, 163, -264, 164, 164, 164, -183, 168,
	324, -36, -37, -164, 143, 196, 82, 82, -232, -231,
	-230, -269, 198, 179, -256, -248, 171, 180, -238, 172,
	173, -233, 164, 29, -269, -233, 170, 180, 198, 198,
	106, 198, 106, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 195, -239, 118, -239, 341, 341, -244, -269,
	-269, -269, 166, 34, 34, -187, -233, 166, 23, -239,
	-239, -164, 143, -239, -239, -239, -239, 206, 206, -239,
	-239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
	-239, -239, -239, -239, -100, -82, 213, 153, 155, 158,
	73, 118, -38, 208, -22, -100, -182, 168, -264, -182,
	-182, -100, 150, -100, -180, 126, 13, -180, -180, -180,
	-180, -180, 209, 298, 209, 298, 209, 210, 209, 210,
	209, -177, -176, 289, 290, 284, 288, -264, 431, 315,
	300, -264, 202, 163, 203, 165, -234, 164, 34, 176,
	210, 284, 205, -180, -203, -282, -191, -203, -203, 31,
	166, -190, -56, -190, 88, -7, -3, -11, -10, -12,
	118, -77, 284, -65, 144, 446, 432, 433, 434, 431,
	299, 439, 437, 435, 209, 436, 82, 109, 107, 108,
	125, -84, -108, 128, 110, 126, 127, 112, 130, 129,
	140, 133, 134, 135, 136, 137, 138, 139, 131, 132,
	143, 118, 119, 120, 121, 122, 123, 124, -172, -282,
	-126, -282, 151, 152, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -282, 150, -2, -120, -4, -282,
	-282, -282, -282, -282, -282, -282, -282, -133, -84, -282,
	-286, -117, -282, -286, -117, -286, -117, -286, -282, -286,
	-117, -286, -117, -286, -286, -117, -282, -282, -282, -282,
	-282, -282, -282, -202, -276, -277, -103, -100, -282, -137,
	-3, -54, -155, 20, 32, -84, -138, -139, -84, -137,
	56, -73, -75, -78, 60, 61, 94, 12, -193, -192,
	23, -190, 88, 150, 12, -101, 27, -100, -86, -87,
	-88, -89, -103, -127, -282, 12, -93, -94, -100, -102,
	-195, 82, 228, -167, -205, -169, -168, 305, 307, 118,
	-194, -190, 88, 30, 83, 82, -100, -207, -210, -212,
	-211, -213, -208, -209, 251, 252, 144, 255, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 31, 187,
	247, 248, 249, 250, 267, 268, 269, 270, 271, 272,
	273, 274, 234, 253, 335, 235, 236, 237, 238, 239,
	240, 242, 243, 244, 245, 246, -267, -264, 81, 83,
	82, -214, 81, -82, -183, -255, -252, 74, -264, -264,
	-264, -264, 110, -239, -239, 195, -29, -26, -260, 16,
	-25, -26, 158, 102, 103, 155, 81, -228, 81, -237,
	-267, -264, 81, 29, 170, 169, -236, -233, -236, -237,
	-264, -128, -190, -195, -264, 29, 29, -160, -190, -160,
	-160, 21, -160, 21, -160, 21, 89, -190, -160, 21,
	-160, 21, -160, 21, -160, 21, -160, 21, 30, 75,
	76, 30, 78, 79, 80, -128, -128, -228, -164, -100,
	-264, 89, 89, -239, -239, 89, 88, 88, 88, -239,
	-239, 89, 88, -264, 88, -270, 181, 223, 225, 89,
	89, 89, 89, 30, 88, -271, 30, 453, 452, 454,
	455, 456, 89, 30, 89, 30, 89, -190, 81, -81,
	215, 118, 204, 204, 163, 163, 217, -100, 216, 218,
	220, 41, 82, 166, -93, 24, 73, -95, -100, -264,
	-196, -195, -188, 88, -84, -180, -100, -180, -100, -180,
	-180, -180, -180, -175, 12, 128, -235, 12, 128, -175,
	-203, -203, -203, -100, -203, -203, -100, -203, -203, -235,
	-181, 126, 73, -201, 231, 265, 425, 426, 427, 82,
	337, -93, 431, 431, 431, 431, 431, 431, -84, -84,
	-84, -84, -118, 98, 110, 99, 100, -111, -119, -123,
	-126, 93, 128, 126, 127, 112, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -204, -264, 88, 144, -264, -110, -110, -190, -74,
	22, 37, -73, -191, -196, -188, -69, -283, -283, -137,
	-73, -73, -84, -84, -128, 88, -73, -128, 88, -73,
	-73, -68, 22, 37, -131, -132, 114, -128, -283, -111,
	-190, -190, -73, -74, -74, -73, -73, 82, -278, 307,
	308, 429, -198, 198, -197, 23, -195, 88, -121, -120,
	-141, -283, -142, 27, 10, 128, 82, 19, 82, -140,
	25, 26, -141, -112, -190, 89, 92, -85, 82, 12,
	-78, -100, -192, 135, -196, -100, -159, 198, -100, 31,
	82, -96, -98, -97, -99, 63, 67, 69, 64, 65,
	66, 70, -199, 23, -86, -3, -282, -100, -93, -284,
	82, 12, 74, -284, 82, 150, -167, -169, 82, 306,
	308, 309, 73, 101, -84, -219, 143, -246, -245, -244,
	-228, -230, -231, -232, 83, -184, 98, 110, -223, 279,
	-214, -214, -214, -214, -214, -218, -164, -218, -218, -218,
	81, 81, -214, -214, -214, -214, -220, 81, -220, -220,
	-221, 81, -221, -257, -84, -254, -253, -251, -252, 174,
	95, 337, -249, -140, 89, -81, -100, 73, -190, -255,
	-255, -255, 24, -264, 88, -264, 88, 82, 17, -229,
	-228, -129, 223, -259, 198, -256, -250, 81, 29, -236,
	-237, -237, 150, -264, 82, 27, 106, 106, 106, 106,
	337, 155, 31, -228, -129, -204, 166, -204, -204, 88,
	88, -179, 461, -93, 165, 222, -83, 320, 88, 84,
	-100, -100, -100, -100, -100, 158, 155, 206, -100, -100,
	-59, 183, 178, -100, 82, -59, -180, -195, -195, -100,
	-180, -100, 88, -100, -190, -65, 307, 337, 20, -66,
	20, 98, 99, 100, -119, -111, -111, -111, -72, 188,
	109, -283, -283, -73, -73, -282, 150, -5, -141, -283,
	-283, 82, 74, 23, 12, 12, -283, 12, 12, -283,
	-283, -73, -134, -132, 116, -84, -283, -283, 82, 82,
	-283, -283, -283, -283, -283, -277, 428, 308, -104, 71,
	167, 72, -282, -197, -283, -155, 39, 47, 58, -84,
	-84, -139, -155, -171, 20, 12, 54, 54, -105, 13,
	-75, -86, -78, 150, -105, -109, 31, 54, -3, -282,
	-282, -162, -166, -128, -87, -88, -88, -87, -88, 63,
	63, 63, 68, 63, 68, 63, -97, -195, -283, -283,
	-3, -159, 74, -86, -100, -86, -102, -195, 135, -168,
	-170, 310, 307, 313, -264, 88, 82, -244, -232, -216,
	30, 98, -224, 280, -218, -218, -219, -264, 144, -219,
	-219, -219, -227, 88, -227, 89, 89, 83, -32, -27,
	-28, 32, 77, -251, -239, 88, 38, 83, 165, -100,
	73, 73, 73, 16, -157, -190, 82, 83, -130, 224,
	-128, 83, -190, 83, -157, -237, -191, -190, -282, 163,
	30, 30, -129, -130, -219, -264, 463, 462, 83, -100,
	-80, 213, 221, 81, 85, -266, 74, 204, 276, 204,
	207, 166, -32, -100, -175, -175, 32, 307, 440, 438,
	-72, 109, -111, -111, -283, -283, -74, -191, -137, -155,
	-206, 144, 251, 187, 249, 245, 265, 256, 278, 247,
	279, -204, -206, -111, -111, -111, -111, 334, -137, 117,
	-84, 115, -111, -111, 164, 164, 164, -160, 40, 88,
	88, 59, -100, -135, 14, -84, 135, -141, -161, 73,
	-162, -122, -124, -123, -282, -156, -283, -190, -160, -105,
	82, 118, -91, -90, 73, 74, -92, 73, -90, 63,
	63, -283, -105, -86, -105, -105, 150, 307, 311, 312,
	-244, -217, 73, -111, -219, -219, 83, 82, 83, 82,
	83, 82, -185, 374, 110, -28, -27, -239, -239, 89,
	-264, -100, -100, -100, -100, 17, 82, -228, -128, 54,
	-254, 83, -258, -259, -100, -110, -130, -158, 81, 83,
	-263, 337, -265, -264, -190, -190, -190, -100, -180, -180,
	32, -264, -111, -283, -141, -283, -214, -214, -214, -221,
	-214, 239, -214, 239, -283, -283, 20, 20, 20, 20,
	-282, -64, 330, -84, 82, 82, -282, -282, -282, -283,
	88, -218, -136, 15, 17, 28, -161, 82, -283, -283,
	82, 54, 150, -283, -137, -166, -84, -84, 81, -84,
	-137, -105, -222, 276, 10, -218, 88, -218, 89, 89,
	374, 30, 78, 79, 80, 30, 75, 76, -158, -157,
	-190, 200, 182, -283, 82, -225, 337, 340, 23, -157,
	-262, -261, -191, 81, 74, -155, -218, -264, -111, -111,
	-111, -111, -111, -141, 88, -111, -111, -157, -283, -157,
	-157, -198, -218, -144, -149, -177, -84, -120, 29, -124,
	54, -3, -190, -122, -190, -141, -157, -141, -226, 170,
	29, 169, -114, -219, -219, 83, 83, 23, 201, -100,
	-259, 341, 341, -3, 83, 82, 118, -157, -100, -283,
	-283, -283, -283, -67, 128, 337, -283, -283, -283, -283,
	-283, -283, -104, -147, 424, -150, 43, -151, 44, 10,
	-122, 150, 83, -215, 95, 29, 29, -3, -282, 81,
	-57, 337, -261, -243, -191, 88, 89, 83, -283, 335,
	70, 338, -144, 48, 257, -152, 52, -153, -148, 53,
	17, -162, -190, 88, -57, -111, 197, -157, -58, 212,
	428, -266, 59, 336, 339, -145, 50, -143, 49, -143,
	-151, 17, -154, 45, 46, 88, -283, -283, 83, 175,
	-263, 59, -146, 51, 73, 101, 88, 17, 17, -273,
	-274, 73, 214, 337, 73, 101, 88, 88, -274, 73,
	11, 10, 338, -272, 183, 178, 181, 31, -272, 339,
	177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 814, 0, 552, 552, 552, 552, 552, 552,
	552, 0, 0, -2, -2, -2, 838, 37, 0, 0,
	0, 0, -2, 486, 487, 0, 489, -2, 0, 0,
	498, 1347, 1347, 547, 0, 0, 0, 0, 0, 1345,
	54, 55, 504, 505, 506, 1, 3, 0, 556, 822,
	0, 0, -2, 554, 0, 0, 932, 932, 932, 0,
	85, 86, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 930, 0, 927, 108, 109, 89, -2, 113, 114,
	0, 118, 371, 332, 374, 330, 360, -2, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 227, 227, 0, 0, -2, 323, 323, 323,
	0, 0, 0, 357, 934, 277, 227, 227, 0, 227,
	227, 227, 227, 0, 0, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	0, 107, 851, 0, 0, 117, 38, 34, 35, 36,
	0, 928, 0, 928, 928, 0, 423, 636, 947, 948,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 0, 477,
	477, 477, 477, 477, 477, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 449, 0, 452, 0, 0, 459,
	477, 1348, 1348, 1348, 917, 0, 483, 484, 471, 469,
	466, 467, 485, 488, 0, 493, 496, 943, 944, 0,
	511, 0, 1161, 503, 516, 517, 0, 548, 549, 39,
	687, 646, 0, 652, 654, 0, 689, 690, 691, 692,
	693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 720, 721, 722, 799, 800, 801, 802, 803,
	804, 805, 806, 656, 657, 796, 0, 906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 787, 0, 756,
	756, 756, 756, 756, 756, 756, 756, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 1347, 0, 526, 0,
	814, 50, 0, 552, 557, 558, 857, 0, 0, 814,
	1346, 0, 0, -2, -2, 568, 574, 575, 576, 577,
	553, 0, 580, 584, 0, 0, 0, 933, 0, 0,
	71, 0, 1315, 910, -2, -2, 0, 0, 945, 946,
	919, -2, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, -2, 1106,
	0, 0, 127, 128, 0, 37, 253, 0, 123, 0,
	247, 185, 851, 930, 940, 0, 0, 0, 0, 0,
	91, 115, 116, 227, 227, 0, 117, 117, 339, 340,
	341, 0, 0, -2, 251, 0, 324, 0, 0, 241,
	241, 245, 243, 244, 0, 0, 0, 0, 0, 0,
	351, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 228, 0, 369, 370, 278, 0,
	0, 0, 0, 349, 350, 0, 0, 935, 936, 0,
	0, 227, 227, 0, 0, 0, 0, 227, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 842, 0, 0, 0, 0,
	0, 0, -2, 0, 415, 0, 0, 0, 0, 0,
	0, 422, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 477, 0, 477, 0, 477, 477, 477, 477,
	474, 0, 474, 472, 473, 464, 465, 1348, 1348, 1348,
	0, 1348, 1348, 0, 1348, 1348, 0, 236, 237, 238,
	480, 456, 457, 460, 461, 1349, 1350, 462, 463, 918,
	494, 497, 514, 512, 513, 515, 507, 508, 509, 510,
	0, 527, 528, 533, 0, 0, 0, 0, 539, 540,
	541, 0, 0, 544, 545, 546, 0, 0, 0, 0,
	0, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 675, 676, 677, 678, 679, 680, 653, 0,
	667, 0, 0, 0, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 0, 565, 0, 0, 0, 814, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 788, 0,
	740, 748, 0, 741, 749, 742, 750, 743, 0, 744,
	751, 745, 752, 746, 747, 753, 0, 0, 0, 565,
	565, 0, 0, 40, 518, 519, 0, 619, 938, 822,
	0, 567, 860, 0, 0, 823, 815, 816, 819, 822,
	0, 589, 578, 569, 572, 573, 555, 0, 581, 585,
	0, 587, 588, 0, 0, 69, 0, 635, 0, 591,
	593, 594, 595, 617, 0, 0, 0, 0, 65, 67,
	636, 0, 1315, 916, 0, 73, 74, 0, 0, 0,
	208, 921, 922, 923, -2, 234, 0, 196, 192, 136,
	137, 138, 185, 140, 185, 185, 185, 185, 205, 205,
	205, 205, 168, 169, 170, 171, 172, 0, 0, 155,
	185, 185, 185, 185, 175, 176, 177, 178, 179, 180,
	181, 182, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 187, 187, 187, 189, 189, 0, 38, 0, 219,
	0, 819, 0, 842, 0, 0, 941, 0, 940, 940,
	940, 106, 0, 0, 0, 372, 333, 361, 373, 0,
	336, 337, -2, 0, 0, 323, 0, 325, 0, 235,
	0, -2, 0, 0, 0, 241, 245, 242, 245, 233,
	246, 353, 796, 0, 354, 355, 0, 387, 605, 0,
	0, 0, 0, 0, 393, 394, 395, 0, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 362, 363,
	364, 365, 366, 367, 368, 0, 0, 325, 0, 358,
	0, 279, 280, 0, 0, 283, 284, 285, 286, 0,
	0, 289, 290, 291, 292, 293, 317, 318, 319, 294,
	295, 296, 297, 298, 299, 300, 311, 312, 313, 314,
	315, 316, 301, 302, 303, 304, 305, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 840,
	841, 0, 0, 0, 266, 929, 0, 266, 63, 421,
	637, 949, 950, 478, 479, 431, 450, 433, 453, 434,
	436, 435, 437, 477, 0, 0, 0, 239, 240, 477,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	455, 0, 0, 0, 495, 499, 500, 501, 502, 0,
	0, 530, 535, 536, 537, 538, 550, 543, 688, 647,
	648, 649, 651, 668, 0, 670, 672, 658, 659, 683,
	684, 685, 0, 0, 0, 0, 681, 663, 0, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 708, 771, 772, 773, 0, 706, 707, 718, 0,
	0, 0, 566, 797, 0, -2, 0, 686, 905, 822,
	0, 0, 0, 0, 691, 799, 0, 691, 799, 0,
	0, 0, 563, 564, 794, 791, 0, 0, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 522,
	524, 0, 639, 0, 620, 0, 622, 623, 0, 939,
	857, 51, 41, 0, 858, 0, 0, 0, 0, 818,
	820, 821, 857, 0, 807, 0, 0, 644, 0, 0,
	570, 47, 586, 582, 0, 644, 0, 0, 634, 0,
	0, 0, 0, 0, 0, 624, 0, 0, 627, 0,
	0, 0, 0, 618, 0, 0, 0, -2, 0, 0,
	0, 61, 62, 0, 0, 0, 911, 72, 0, 0,
	77, 78, 912, 913, 914, 915, 0, 110, -2, 274,
	129, 131, 132, 133, 124, 199, 197, 0, 194, 193,
	139, 205, 205, 162, 163, 208, 0, 208, 208, 208,
	0, 0, 156, 157, 158, 159, 150, 0, 151, 152,
	153, 0, 154, 252, 0, 826, 220, 221, 223, 227,
	0, 0, 248, 249, 0, 0, 100, 0, 942, 0,
	0, 0, 931, 119, 120, 121, 122, 117, 0, 0,
	125, 327, 0, 0, 0, 250, 0, 0, 229, 245,
	230, 231, 0, 356, 0, 0, 389, 390, 391, 392,
	0, 0, 0, 325, 327, 208, 0, 281, 282, 287,
	288, 306, 0, 0, 0, 0, 852, 853, 0, 856,
	92, 379, 381, 380, 384, 0, 0, 0, 0, 416,
	418, 267, 268, 826, 0, 420, 438, 475, 476, 474,
	454, 474, 481, 458, 491, 534, 0, 0, 0, 542,
	0, 669, 671, 673, 660, 681, 664, 0, 661, 0,
	0, 655, 723, 0, 0, 565, 0, 814, 857, 727,
	728, 0, 0, 0, 0, 0, 764, 0, 0, 765,
	0, 814, 0, 792, 0, 0, 739, 758, 0, 0,
	759, 760, 761, 762, 763, 520, 523, 525, 599, 0,
	0, 0, 0, 621, 937, 43, 0, 0, 0, 824,
	825, 817, 42, 0, 924, 925, 808, 809, 810, 0,
	579, 590, 571, 0, 822, 899, 0, 0, 891, 0,
	0, 644, 907, 0, 592, 613, 615, 0, 610, 625,
	626, 628, 0, 630, 0, 632, 633, 596, 597, 598,
	0, 644, 0, 644, 66, 644, 68, 0, 638, 75,
	76, 0, 0, 82, 209, 210, 117, 276, 130, 201,
	0, 198, 135, 195, 208, 208, 164, 206, 207, 165,
	166, 167, 0, 183, 0, 0, 0, 269, 87, 830,
	829, 227, 227, 222, 0, 225, 0, 186, 0, 102,
	0, 0, 0, 0, 331, 603, 0, 342, 343, 0,
	326, 386, 0, 219, 0, 232, 797, 606, 0, 0,
	344, 0, 327, 347, 348, 359, 309, 310, 307, 601,
	843, 844, 845, 0, 855, 95, 0, 0, 0, 0,
	377, 0, 419, 64, 477, 477, 529, 0, 532, 0,
	662, 0, 682, 665, 724, 725, 0, 798, 822, 45,
	0, 185, 185, 777, 185, 189, 780, 185, 782, 185,
	785, 0, 0, 0, 0, 0, 0, 0, 789, 738,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	862, 859, 44, 812, 0, 645, 583, 48, 52, 0,
	899, 890, 901, 903, 0, 0, 0, 895, 0, 814,
	0, 0, 607, 614, 0, 0, 608, 0, 609, 629,
	631, -2, 814, 644, 59, 60, 0, 79, 80, 81,
	275, 203, 0, 200, 160, 161, 205, 0, 205, 0,
	190, 0, 258, 270, 0, 827, 828, 0, 0, 224,
	226, 601, 103, 104, 105, 0, 0, 126, 328, 0,
	218, 0, 0, 411, 408, 345, 346, 0, 0, 854,
	378, 0, 93, 94, 0, 0, 383, 417, 439, 451,
	531, 551, 666, 726, 857, 729, 774, 205, 778, 779,
	781, 783, 784, 786, 731, 730, 0, 0, 0, 0,
	0, 822, 0, 793, 0, 0, 0, 0, 0, 619,
	205, 882, 49, 0, 0, 0, 53, 0, 904, 0,
	0, 0, 0, 70, 822, 908, 909, 611, 0, 616,
	822, 58, 211, 204, 0, 208, 184, 208, 0, 0,
	271, 831, 832, 833, 834, 835, 836, 837, 0, 334,
	604, 0, 0, 388, 0, 396, 0, 0, 0, 0,
	96, 97, 0, 0, 0, 46, 775, 776, 0, 0,
	0, 0, 766, 0, 790, 0, 0, 0, 641, 0,
	0, 639, 864, 863, 876, 880, 813, 811, 0, 902,
	0, 894, 897, 893, 896, 56, 0, 57, 216, 0,
	213, 215, 202, 173, 174, 188, 191, 0, 0, 0,
	412, 409, 410, 846, 602, 0, 0, 0, 385, 732,
	734, 733, 735, 0, 0, 0, 737, 754, 755, 640,
	642, 643, 600, 882, 0, 875, 878, -2, 0, 0,
	892, 0, 612, 134, 0, 212, 214, 846, 0, 0,
	375, 848, 98, 99, 320, 321, 322, 92, 736, 0,
	0, 0, 869, 867, 867, 880, 0, 884, 0, 889,
	0, 900, 898, 217, 88, 0, 0, 0, 0, 849,
	850, 95, 767, 0, 770, 872, 0, 865, 868, 866,
	877, 0, 883, 0, 0, 881, 413, 414, 254, 0,
	382, 768, 861, 0, 870, 871, 879, 0, 0, 255,
	256, 0, 847, 0, 873, 874, 885, 887, 257, 0,
	0, 0, 0, 259, 261, 262, 0, 0, 260, 769,
	263, 264, 265,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 464,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:409
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Load{}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:546
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:589
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = InsertAct
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:672
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadWrite
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = ReadOnly
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = SessionScope
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.scope = GlobalScope
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:759
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = false
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.boolean = true
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:831
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = false
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = true
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1002
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1224
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.literal = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1273
		{
			yyVAL.boolean = false
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.boolean = true
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1282
		{
			yyVAL.boolean = false
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.boolean = true
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1292
		{
			yyVAL.boolean = false
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1305
		{
			yyVAL.optVal = nil
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1314
		{
			yyVAL.optVal = nil
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1323
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1332
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.colKeyOpt = colKey
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.literal = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOptions = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = ""
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1455
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = yyDollar[2].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = "key"
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1537
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 254:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1563
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 255:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1567
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 256:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1571
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 257:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1575
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1581
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1633
		{
			yyVAL.boolean = true
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.boolean = true
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1641
		{
			yyVAL.boolean = false
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOptions = nil
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1688
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1692
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1712
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1716
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1724
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1788
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1792
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = ""
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.bytes = []byte("")
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1843
		{
			yyVAL.colName = nil
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.colName = nil
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.alterOptions = nil
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1869
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1881
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1929
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1933
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.alterOption = &Force{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2045
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2052
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 375:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2076
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 382:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2113
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 385:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2161
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2169
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2173
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2177
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2193
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.boolean = false
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.boolean = true
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2267
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2271
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2293
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2297
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.statement = &OtherRead{}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2363
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2383
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2403
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2408
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2412
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2436
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2445
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2449
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2459
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2499
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2503
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = "extended "
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = "full "
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.showFilter = nil
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2587
		{
			yyVAL.showFilter = nil
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.statement = &Begin{}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.statement = &Begin{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.statement = &Commit{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &Rollback{}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2641
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.empty = struct{}{}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.explainType = EmptyType
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.explainType = JSONType
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.explainType = TreeType
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2681
		{
			yyVAL.explainType = VitessType
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2685
		{
			yyVAL.explainType = TraditionalType
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.explainType = AnalyzeType
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.lockType = Read
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.lockType = ReadLocal
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.lockType = Write
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2814
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2818
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2822
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2826
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2836
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.boolean = false
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.boolean = true
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.boolean = true
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			setAllowComments(yylex, true)
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2923
		{
			yyVAL.bytes2 = nil
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.boolean = true
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.boolean = false
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.boolean = true
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = SQLCacheStr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2959
		{
			yyVAL.boolean = false
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.boolean = true
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.boolean = true
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2972
		{
			yyVAL.selectExprs = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2981
		{
			yyVAL.strs = nil
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2997
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.str = SQLCacheStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = DistinctStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = DistinctStr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = StraightJoinHint
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3051
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3056
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3064
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3076
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3124
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3129
		{
			yyVAL.columns = nil
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3170
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3178
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3184
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3186
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3190
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3196
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3201
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3206
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3214
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.joinType = NormalJoinType
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3231
		{
			yyVAL.joinType = NormalJoinType
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.joinType = NormalJoinType
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.joinType = StraightJoinType
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3247
		{
			yyVAL.joinType = LeftJoinType
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3251
		{
			yyVAL.joinType = LeftJoinType
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.joinType = RightJoinType
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3259
		{
			yyVAL.joinType = RightJoinType
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3304
		{
			yyVAL.indexHints = nil
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3308
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3312
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3316
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3320
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = nil
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.str = ""
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 666:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.expr = nil
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 736:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3820
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 755:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.matchExprOption = NoOption
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3886
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3926
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3930
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.expr = nil
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = string("")
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3994
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.expr = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4017
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = &NullVal{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4075
		{
			yyVAL.exprs = nil
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4084
		{
			yyVAL.expr = nil
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4088
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.orderBy = nil
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4107
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4118
		{
			yyVAL.orderDirection = AscOrder
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.orderDirection = AscOrder
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.orderDirection = DescOrder
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.limit = nil
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.alterOptions = nil
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4156
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4171
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = ""
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = yyDollar[3].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = yyDollar[2].str
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = "cascaded"
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = yyDollar[3].str
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.lock = NoLock
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.lock = ForUpdateLock
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4295
		{
			yyVAL.lock = ShareModeLock
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			yyVAL.selectInto = nil
		}
	case 861:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4304
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4312
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = " header"
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = " manifest on"
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = " manifest off"
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = " overwrite on"
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " overwrite off"
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = " optionally"
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4450
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4454
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4458
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.updateExprs = nil
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4485
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4547
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4577
		{
			yyVAL.bytes = []byte("charset")
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &Default{}
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4604
		{
			yyVAL.boolean = false
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.boolean = true
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4609
		{
			yyVAL.boolean = false
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.boolean = true
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4614
		{
			yyVAL.boolean = false
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.boolean = true
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4619
		{
			yyVAL.ignore = false
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.ignore = true
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4624
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4632
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.exprs = nil
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4646
		{
			yyVAL.indexOptions = nil
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4652
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			decNesting(yylex)
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5119
		{
			skipToEnd(yylex)
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			skipToEnd(yylex)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			skipToEnd(yylex)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
