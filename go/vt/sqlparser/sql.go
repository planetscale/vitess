// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const EXPRESSION_PREC_SETTER = 57457
const OR = 57458
const XOR = 57459
const AND = 57460
const NOT = 57461
const BETWEEN = 57462
const CASE = 57463
const WHEN = 57464
const THEN = 57465
const ELSE = 57466
const END = 57467
const LE = 57468
const GE = 57469
const NE = 57470
const NULL_SAFE_EQUAL = 57471
const IS = 57472
const LIKE = 57473
const REGEXP = 57474
const IN = 57475
const SHIFT_LEFT = 57476
const SHIFT_RIGHT = 57477
const DIV = 57478
const MOD = 57479
const UNARY = 57480
const COLLATE = 57481
const BINARY = 57482
const UNDERSCORE_BINARY = 57483
const UNDERSCORE_UTF8MB4 = 57484
const UNDERSCORE_UTF8 = 57485
const UNDERSCORE_LATIN1 = 57486
const INTERVAL = 57487
const JSON_EXTRACT_OP = 57488
const JSON_UNQUOTE_EXTRACT_OP = 57489
const CREATE = 57490
const ALTER = 57491
const DROP = 57492
const RENAME = 57493
const ANALYZE = 57494
const ADD = 57495
const FLUSH = 57496
const CHANGE = 57497
const MODIFY = 57498
const REVERT = 57499
const SCHEMA = 57500
const TABLE = 57501
const INDEX = 57502
const VIEW = 57503
const TO = 57504
const IGNORE = 57505
const IF = 57506
const PRIMARY = 57507
const COLUMN = 57508
const SPATIAL = 57509
const FULLTEXT = 57510
const KEY_BLOCK_SIZE = 57511
const CHECK = 57512
const INDEXES = 57513
const ACTION = 57514
const CASCADE = 57515
const CONSTRAINT = 57516
const FOREIGN = 57517
const NO = 57518
const REFERENCES = 57519
const RESTRICT = 57520
const SHOW = 57521
const DESCRIBE = 57522
const EXPLAIN = 57523
const DATE = 57524
const ESCAPE = 57525
const REPAIR = 57526
const OPTIMIZE = 57527
const TRUNCATE = 57528
const COALESCE = 57529
const EXCHANGE = 57530
const REBUILD = 57531
const PARTITIONING = 57532
const REMOVE = 57533
const MAXVALUE = 57534
const PARTITION = 57535
const REORGANIZE = 57536
const LESS = 57537
const THAN = 57538
const PROCEDURE = 57539
const TRIGGER = 57540
const VINDEX = 57541
const VINDEXES = 57542
const DIRECTORY = 57543
const NAME = 57544
const UPGRADE = 57545
const STATUS = 57546
const VARIABLES = 57547
const WARNINGS = 57548
const CASCADED = 57549
const DEFINER = 57550
const OPTION = 57551
const SQL = 57552
const UNDEFINED = 57553
const SEQUENCE = 57554
const MERGE = 57555
const TEMPORARY = 57556
const TEMPTABLE = 57557
const INVOKER = 57558
const SECURITY = 57559
const FIRST = 57560
const AFTER = 57561
const LAST = 57562
const VITESS_MIGRATION = 57563
const CANCEL = 57564
const RETRY = 57565
const COMPLETE = 57566
const BEGIN = 57567
const START = 57568
const TRANSACTION = 57569
const COMMIT = 57570
const ROLLBACK = 57571
const SAVEPOINT = 57572
const RELEASE = 57573
const WORK = 57574
const BIT = 57575
const TINYINT = 57576
const SMALLINT = 57577
const MEDIUMINT = 57578
const INT = 57579
const INTEGER = 57580
const BIGINT = 57581
const INTNUM = 57582
const REAL = 57583
const DOUBLE = 57584
const FLOAT_TYPE = 57585
const DECIMAL = 57586
const NUMERIC = 57587
const TIME = 57588
const TIMESTAMP = 57589
const DATETIME = 57590
const YEAR = 57591
const CHAR = 57592
const VARCHAR = 57593
const BOOL = 57594
const CHARACTER = 57595
const VARBINARY = 57596
const NCHAR = 57597
const TEXT = 57598
const TINYTEXT = 57599
const MEDIUMTEXT = 57600
const LONGTEXT = 57601
const BLOB = 57602
const TINYBLOB = 57603
const MEDIUMBLOB = 57604
const LONGBLOB = 57605
const JSON = 57606
const ENUM = 57607
const GEOMETRY = 57608
const POINT = 57609
const LINESTRING = 57610
const POLYGON = 57611
const GEOMETRYCOLLECTION = 57612
const MULTIPOINT = 57613
const MULTILINESTRING = 57614
const MULTIPOLYGON = 57615
const NULLX = 57616
const AUTO_INCREMENT = 57617
const APPROXNUM = 57618
const SIGNED = 57619
const UNSIGNED = 57620
const ZEROFILL = 57621
const CODE = 57622
const COLLATION = 57623
const COLUMNS = 57624
const DATABASES = 57625
const ENGINES = 57626
const EVENT = 57627
const EXTENDED = 57628
const FIELDS = 57629
const FULL = 57630
const FUNCTION = 57631
const GTID_EXECUTED = 57632
const KEYSPACES = 57633
const OPEN = 57634
const PLUGINS = 57635
const PRIVILEGES = 57636
const PROCESSLIST = 57637
const SCHEMAS = 57638
const TABLES = 57639
const TRIGGERS = 57640
const USER = 57641
const VGTID_EXECUTED = 57642
const VITESS_KEYSPACES = 57643
const VITESS_METADATA = 57644
const VITESS_MIGRATIONS = 57645
const VITESS_REPLICATION_STATUS = 57646
const VITESS_SHARDS = 57647
const VITESS_TABLETS = 57648
const VSCHEMA = 57649
const NAMES = 57650
const GLOBAL = 57651
const SESSION = 57652
const ISOLATION = 57653
const LEVEL = 57654
const READ = 57655
const WRITE = 57656
const ONLY = 57657
const REPEATABLE = 57658
const COMMITTED = 57659
const UNCOMMITTED = 57660
const SERIALIZABLE = 57661
const CURRENT_TIMESTAMP = 57662
const DATABASE = 57663
const CURRENT_DATE = 57664
const CURRENT_TIME = 57665
const LOCALTIME = 57666
const LOCALTIMESTAMP = 57667
const CURRENT_USER = 57668
const UTC_DATE = 57669
const UTC_TIME = 57670
const UTC_TIMESTAMP = 57671
const DAY = 57672
const DAY_HOUR = 57673
const DAY_MICROSECOND = 57674
const DAY_MINUTE = 57675
const DAY_SECOND = 57676
const HOUR = 57677
const HOUR_MICROSECOND = 57678
const HOUR_MINUTE = 57679
const HOUR_SECOND = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MINUTE_MICROSECOND = 57683
const MINUTE_SECOND = 57684
const MONTH = 57685
const QUARTER = 57686
const SECOND = 57687
const SECOND_MICROSECOND = 57688
const YEAR_MONTH = 57689
const WEEK = 57690
const REPLACE = 57691
const CONVERT = 57692
const CAST = 57693
const SUBSTR = 57694
const SUBSTRING = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const MATCH = 57700
const AGAINST = 57701
const BOOLEAN = 57702
const LANGUAGE = 57703
const WITH = 57704
const QUERY = 57705
const EXPANSION = 57706
const WITHOUT = 57707
const VALIDATION = 57708
const UNUSED = 57709
const ARRAY = 57710
const CUME_DIST = 57711
const DESCRIPTION = 57712
const DENSE_RANK = 57713
const EMPTY = 57714
const EXCEPT = 57715
const FIRST_VALUE = 57716
const GROUPING = 57717
const GROUPS = 57718
const JSON_TABLE = 57719
const LAG = 57720
const LAST_VALUE = 57721
const LATERAL = 57722
const LEAD = 57723
const MEMBER = 57724
const NTH_VALUE = 57725
const NTILE = 57726
const OF = 57727
const OVER = 57728
const PERCENT_RANK = 57729
const RANK = 57730
const RECURSIVE = 57731
const ROW_NUMBER = 57732
const SYSTEM = 57733
const WINDOW = 57734
const ACTIVE = 57735
const ADMIN = 57736
const BUCKETS = 57737
const CLONE = 57738
const COMPONENT = 57739
const DEFINITION = 57740
const ENFORCED = 57741
const EXCLUDE = 57742
const FOLLOWING = 57743
const GEOMCOLLECTION = 57744
const GET_MASTER_PUBLIC_KEY = 57745
const HISTOGRAM = 57746
const HISTORY = 57747
const INACTIVE = 57748
const INVISIBLE = 57749
const LOCKED = 57750
const MASTER_COMPRESSION_ALGORITHMS = 57751
const MASTER_PUBLIC_KEY_PATH = 57752
const MASTER_TLS_CIPHERSUITES = 57753
const MASTER_ZSTD_COMPRESSION_LEVEL = 57754
const NESTED = 57755
const NETWORK_NAMESPACE = 57756
const NOWAIT = 57757
const NULLS = 57758
const OJ = 57759
const OLD = 57760
const OPTIONAL = 57761
const ORDINALITY = 57762
const ORGANIZATION = 57763
const OTHERS = 57764
const PATH = 57765
const PERSIST = 57766
const PERSIST_ONLY = 57767
const PRECEDING = 57768
const PRIVILEGE_CHECKS_USER = 57769
const PROCESS = 57770
const RANDOM = 57771
const REFERENCE = 57772
const REQUIRE_ROW_FORMAT = 57773
const RESOURCE = 57774
const RESPECT = 57775
const RESTART = 57776
const RETAIN = 57777
const REUSE = 57778
const ROLE = 57779
const SECONDARY = 57780
const SECONDARY_ENGINE = 57781
const SECONDARY_LOAD = 57782
const SECONDARY_UNLOAD = 57783
const SKIP = 57784
const SRID = 57785
const THREAD_PRIORITY = 57786
const TIES = 57787
const UNBOUNDED = 57788
const VCPU = 57789
const VISIBLE = 57790
const FORMAT = 57791
const TREE = 57792
const VITESS = 57793
const TRADITIONAL = 57794
const LOCAL = 57795
const LOW_PRIORITY = 57796
const NO_WRITE_TO_BINLOG = 57797
const LOGS = 57798
const ERROR = 57799
const GENERAL = 57800
const HOSTS = 57801
const OPTIMIZER_COSTS = 57802
const USER_RESOURCES = 57803
const SLOW = 57804
const CHANNEL = 57805
const RELAY = 57806
const EXPORT = 57807
const AVG_ROW_LENGTH = 57808
const CONNECTION = 57809
const CHECKSUM = 57810
const DELAY_KEY_WRITE = 57811
const ENCRYPTION = 57812
const ENGINE = 57813
const INSERT_METHOD = 57814
const MAX_ROWS = 57815
const MIN_ROWS = 57816
const PACK_KEYS = 57817
const PASSWORD = 57818
const FIXED = 57819
const DYNAMIC = 57820
const COMPRESSED = 57821
const REDUNDANT = 57822
const COMPACT = 57823
const ROW_FORMAT = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const MEMORY = 57829
const DISK = 57830

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	506, 137,
	-2, 143,
	-1, 45,
	115, 143,
	155, 143,
	270, 143,
	-2, 404,
	-1, 52,
	33, 555,
	177, 555,
	188, 555,
	221, 569,
	222, 569,
	-2, 557,
	-1, 57,
	179, 579,
	-2, 577,
	-1, 108,
	176, 1024,
	-2, 116,
	-1, 110,
	1, 138,
	506, 138,
	-2, 143,
	-1, 120,
	116, 307,
	182, 307,
	-2, 398,
	-1, 139,
	115, 143,
	155, 143,
	270, 143,
	-2, 413,
	-1, 592,
	162, 1045,
	-2, 1041,
	-1, 593,
	162, 1046,
	-2, 1042,
	-1, 626,
	57, 647,
	-2, 655,
	-1, 663,
	131, 1397,
	-2, 109,
	-1, 664,
	131, 1277,
	-2, 110,
	-1, 670,
	131, 1329,
	-2, 1018,
	-1, 810,
	131, 1211,
	-2, 1015,
	-1, 846,
	187, 38,
	192, 38,
	-2, 318,
	-1, 923,
	1, 452,
	506, 452,
	-2, 143,
	-1, 1119,
	57, 648,
	-2, 660,
	-1, 1120,
	57, 649,
	-2, 661,
	-1, 1172,
	1, 348,
	506, 348,
	-2, 143,
	-1, 1175,
	23, 162,
	-2, 164,
	-1, 1248,
	116, 307,
	182, 307,
	-2, 398,
	-1, 1257,
	187, 39,
	192, 39,
	-2, 319,
	-1, 1507,
	162, 1050,
	-2, 1044,
	-1, 1582,
	1, 349,
	506, 349,
	-2, 143,
	-1, 1817,
	75, 91,
	84, 91,
	-2, 713,
	-1, 1982,
	47, 986,
	-2, 980,
	-1, 2169,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 688,
}

const yyPrivate = 57344

const yyLast = 31010

var yyAct = [...]int{
	592, 2369, 2209, 2090, 2344, 2331, 3, 1993, 1835, 986,
	1842, 2276, 1996, 90, 587, 1101, 619, 586, 34, 2233,
	1649, 1762, 2140, 1844, 1997, 641, 1134, 1994, 2238, 1521,
	1555, 2134, 544, 2160, 1991, 595, 1542, 1983, 548, 1782,
	542, 1922, 1813, 1614, 540, 1861, 1884, 1634, 176, 1538,
	584, 176, 2225, 508, 176, 585, 1862, 934, 2037, 524,
	1619, 176, 1863, 570, 1568, 813, 668, 1802, 1559, 176,
	148, 1774, 35, 1560, 1121, 33, 1938, 1579, 1452, 134,
	536, 176, 1647, 1501, 621, 1255, 1459, 1679, 1633, 623,
	1621, 627, 642, 876, 841, 1411, 1855, 1164, 1819, 1143,
	1104, 1523, 1562, 524, 1471, 1429, 524, 176, 524, 644,
	1004, 820, 665, 85, 1359, 817, 847, 1362, 821, 1547,
	553, 1631, 1345, 1262, 842, 843, 1163, 89, 1161, 1147,
	1367, 1610, 979, 1224, 151, 919, 984, 1543, 1790, 633,
	631, 1247, 541, 117, 118, 844, 629, 655, 92, 628,
	70, 531, 91, 1074, 854, 1514, 1070, 111, 79, 963,
	8, 112, 630, 71, 7, 6, 1902, 1901, 1677, 83,
	1784, 1930, 1931, 829, 824, 178, 179, 180, 1418, 113,
	1518, 1519, 1417, 649, 1416, 654, 1415, 119, 1414, 84,
	481, 1413, 1400, 534, 1405, 535, 1760, 1979, 635, 2186,
	814, 2365, 2059, 2272, 2271, 178, 179, 180, 2204, 1504,
	881, 2205, 2383, 72, 532, 1331, 74, 880, 879, 1626,
	2354, 1271, 622, 620, 576, 2382, 72, 2321, 72, 2353,
	878, 662, 1005, 2377, 511, 2210, 2345, 1665, 1937, 2122,
	669, 636, 1624, 892, 893, 113, 896, 897, 898, 899,
	643, 836, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 857, 835, 1229,
	1716, 2320, 834, 96, 1238, 498, 858, 2251, 1761, 1909,
	2030, 2031, 2029, 1908, 497, 1929, 882, 883, 884, 894,
	81, 1574, 1575, 1713, 1573, 495, 833, 1015, 928, 929,
	72, 982, 889, 81, 1165, 81, 1166, 172, 953, 113,
	922, 98, 99, 1828, 102, 616, 1827, 108, 615, 1829,
	173, 1520, 941, 476, 1793, 958, 959, 942, 954, 947,
	1623, 114, 2114, 492, 1714, 941, 1852, 1036, 1594, 1593,
	942, 2112, 506, 618, 156, 2137, 626, 918, 940, 1794,
	939, 522, 831, 511, 520, 2092, 1404, 503, 2281, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1045, 1044, 1046, 1047,
	1351, 526, 1108, 1885, 657, 658, 511, 81, 511, 1905,
	1406, 1407, 1408, 1648, 1680, 2381, 1832, 1011, 1346, 512,
	1003, 1321, 1005, 895, 178, 179, 180, 1685, 981, 976,
	153, 2086, 154, 962, 955, 948, 1917, 833, 917, 2087,
	924, 960, 171, 1690, 1688, 1689, 837, 482, 1684, 484,
	499, 961, 514, 511, 513, 488, 1695, 486, 490, 500,
	491, 2093, 485, 1322, 496, 1323, 901, 487, 501, 502,
	504, 518, 517, 505, 900, 494, 515, 2366, 956, 957,
	1686, 2094, 2199, 828, 2268, 1682, 830, 1015, 1683, 832,
	588, 865, 571, 573, 589, 590, 863, 569, 572, 591,
	921, 1692, 1650, 1693, 1556, 1694, 176, 874, 176, 157,
	873, 176, 872, 871, 870, 869, 868, 970, 162, 972,
	1241, 867, 862, 838, 651, 2058, 574, 575, 875, 974,
	1848, 818, 818, 1048, 2375, 816, 2373, 850, 512, 524,
	524, 524, 833, 1048, 825, 2378, 818, 1714, 1261, 1352,
	1360, 827, 826, 1625, 1921, 969, 971, 524, 524, 849,
	951, 512, 891, 512, 1632, 997, 1907, 1838, 2066, 656,
	937, 1918, 943, 944, 945, 946, 34, 1011, 1933, 1010,
	1007, 1008, 1009, 1014, 1016, 1013, 920, 1012, 1727, 537,
	1671, 866, 975, 1356, 1006, 983, 864, 991, 831, 2138,
	832, 885, 1127, 75, 1904, 1966, 1894, 2319, 512, 2305,
	1965, 856, 1839, 1964, 1260, 1236, 80, 1235, 645, 516,
	1051, 1052, 1053, 1054, 149, 1234, 2282, 1357, 1232, 80,
	1059, 80, 1062, 480, 475, 110, 1841, 509, 1350, 2174,
	1836, 2156, 856, 967, 1763, 1765, 176, 968, 1049, 1050,
	1824, 1099, 510, 1924, 1846, 1847, 856, 973, 1923, 1715,
	1924, 1837, 856, 176, 1667, 1923, 621, 1114, 1111, 1112,
	1094, 855, 1115, 1789, 1752, 1109, 988, 989, 623, 966,
	930, 927, 524, 1513, 938, 1916, 176, 1047, 1915, 1048,
	1151, 524, 977, 1843, 1081, 1500, 2371, 524, 932, 2372,
	665, 2370, 855, 80, 950, 832, 1055, 859, 849, 1100,
	1333, 1332, 1334, 1335, 1336, 952, 855, 860, 890, 1000,
	1845, 71, 855, 998, 999, 1580, 2028, 859, 849, 1347,
	1100, 1348, 1848, 638, 1349, 861, 980, 860, 1036, 1010,
	1007, 1008, 1009, 1014, 1016, 1013, 1113, 1012, 1105, 1954,
	89, 2315, 1764, 2150, 1006, 877, 1072, 1076, 1073, 1681,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1044, 1046,
	1047, 92, 1087, 1088, 1089, 1090, 1492, 1481, 1482, 1483,
	1484, 1494, 1485, 1486, 1487, 1499, 1495, 1488, 1489, 1496,
	1497, 1498, 1490, 1491, 1493, 856, 1102, 936, 178, 179,
	180, 1666, 1454, 1133, 964, 620, 1353, 1368, 1167, 1110,
	923, 622, 1001, 1472, 1130, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 2119, 1472, 669, 1741,
	1840, 167, 168, 169, 170, 1157, 1158, 178, 179, 180,
	105, 1786, 1020, 176, 1434, 1874, 1018, 1225, 1019, 1020,
	1019, 1020, 2247, 2337, 2048, 855, 1233, 2335, 1435, 1436,
	1433, 849, 852, 853, 856, 818, 2339, 2340, 1455, 846,
	850, 1846, 1847, 2047, 1664, 524, 1654, 1257, 2336, 1042,
	1043, 1045, 1044, 1046, 1047, 1266, 1270, 1269, 845, 1268,
	1259, 1128, 524, 524, 2185, 524, 106, 524, 524, 2359,
	524, 524, 524, 524, 524, 524, 1662, 1787, 865, 1018,
	863, 1019, 1020, 1737, 2379, 524, 2033, 1152, 1956, 176,
	1304, 2184, 2324, 935, 855, 1018, 1267, 1019, 1020, 1116,
	849, 852, 853, 965, 818, 176, 1369, 1845, 846, 850,
	1253, 1424, 1426, 1427, 81, 1939, 524, 1128, 176, 1848,
	1246, 1299, 1300, 2325, 1162, 2117, 1128, 1432, 1340, 1358,
	1239, 1240, 1425, 176, 2064, 1719, 1720, 1721, 606, 607,
	1265, 1040, 1041, 1042, 1043, 1045, 1044, 1046, 1047, 176,
	1301, 1018, 1659, 1019, 1020, 1736, 176, 2380, 1941, 1231,
	1018, 1730, 1019, 1020, 1141, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 524, 524, 524, 1264, 1663, 2298,
	1256, 1243, 1859, 1244, 1242, 1659, 1858, 1629, 1307, 1308,
	1018, 1339, 1019, 1020, 1313, 1314, 178, 179, 180, 1364,
	2045, 1341, 1128, 1326, 176, 1372, 1317, 1263, 1263, 1476,
	2299, 1661, 1376, 2125, 1378, 1379, 1380, 1381, 1325, 1324,
	1943, 1385, 1947, 1302, 1942, 1732, 1940, 660, 1315, 1140,
	2089, 1945, 1309, 1021, 1731, 1399, 1306, 2360, 1548, 1549,
	1944, 1338, 1128, 1328, 1305, 1361, 1430, 1280, 1018, 1453,
	1019, 1020, 1137, 1946, 1948, 2302, 2301, 1018, 113, 1019,
	1020, 1068, 1462, 524, 1018, 2300, 1019, 1020, 1428, 1018,
	2246, 1019, 1020, 2244, 2222, 1438, 2182, 2044, 524, 524,
	1374, 835, 2264, 2266, 1273, 834, 1274, 2265, 1276, 1278,
	1868, 1505, 1282, 1284, 1286, 1288, 1290, 1856, 537, 1370,
	1371, 1138, 2208, 1237, 1337, 1675, 1327, 176, 1473, 1398,
	1395, 1396, 1397, 1375, 1674, 1541, 1018, 1527, 1019, 1020,
	1382, 1383, 1384, 1526, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1022, 1018, 176, 1019, 1020, 524, 1457, 1528, 1456,
	1529, 1144, 1401, 178, 179, 180, 176, 1831, 1507, 524,
	1365, 1329, 1431, 1316, 176, 1312, 176, 1860, 176, 176,
	524, 1505, 1791, 524, 178, 179, 180, 1509, 1510, 665,
	1311, 1310, 665, 1139, 524, 2124, 1437, 978, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1018, 89, 1019, 1020, 1886, 1534, 1780, 2351, 1506,
	1558, 1129, 1131, 178, 179, 180, 88, 1642, 89, 95,
	1018, 1871, 1019, 1020, 2149, 178, 179, 180, 1507, 1640,
	94, 86, 93, 1600, 1601, 1602, 1603, 1588, 88, 524,
	2151, 88, 87, 1799, 95, 1635, 1636, 1637, 1017, 1584,
	1639, 1641, 1992, 1583, 635, 94, 86, 93, 1780, 2328,
	1780, 2309, 2149, 524, 1566, 2288, 1128, 87, 2314, 524,
	1266, 2202, 1128, 1266, 1128, 1266, 1458, 1616, 1587, 1553,
	1791, 1658, 1536, 1464, 1465, 1622, 1780, 2200, 1551, 1659,
	1128, 2154, 1128, 2056, 2055, 81, 1128, 1571, 1570, 1128,
	2052, 2053, 1508, 2052, 2051, 1511, 1512, 669, 1586, 1585,
	669, 524, 1820, 1453, 1799, 1128, 1728, 1128, 1453, 1453,
	1776, 1128, 1714, 1903, 1128, 1228, 1888, 1798, 1646, 1882,
	1883, 1780, 1779, 1017, 1128, 88, 1228, 1227, 1533, 593,
	1038, 1039, 1040, 1041, 1042, 1043, 1045, 1044, 1046, 1047,
	1617, 2149, 1820, 94, 176, 1653, 2023, 1627, 1656, 1628,
	1657, 176, 1612, 1613, 1630, 1714, 176, 176, 1660, 1638,
	176, 1780, 176, 1173, 1172, 1821, 1668, 1799, 176, 2054,
	1652, 1799, 1617, 1651, 1823, 176, 1572, 177, 1728, 1746,
	177, 1670, 1728, 177, 1669, 1655, 1672, 1673, 525, 1745,
	177, 1659, 1643, 2187, 1546, 1132, 1516, 857, 177, 1409,
	1355, 1159, 840, 176, 524, 1821, 858, 1295, 839, 625,
	177, 1728, 2278, 1865, 1714, 1659, 1263, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1045, 1044, 1046, 1047, 1705, 1706,
	1135, 1366, 525, 1708, 2258, 525, 177, 525, 922, 1678,
	2179, 1230, 1709, 2188, 2189, 2190, 1615, 2091, 1430, 2088,
	1595, 2050, 1596, 1597, 1598, 1599, 1889, 1296, 1297, 1298,
	1611, 2191, 1605, 1604, 1343, 1258, 1254, 1226, 1606, 1607,
	1608, 1609, 1698, 81, 107, 1036, 1724, 1932, 2356, 597,
	604, 605, 606, 607, 598, 600, 81, 1864, 2279, 599,
	1292, 1626, 602, 608, 609, 2161, 2162, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1045, 1044, 1046, 1047, 2192, 2193,
	2332, 2164, 1419, 1420, 1421, 1422, 2071, 176, 2167, 2070,
	1712, 2069, 1992, 1758, 1875, 176, 1699, 1402, 2166, 2011,
	1126, 1122, 2010, 524, 1865, 2041, 2042, 1293, 1294, 1722,
	2016, 2014, 1808, 1809, 1785, 1123, 2015, 610, 612, 611,
	613, 2012, 1460, 1461, 1431, 2368, 2013, 2352, 1540, 1136,
	1466, 1532, 1795, 2155, 1036, 176, 176, 1032, 2075, 1033,
	1530, 1531, 1125, 34, 1124, 1740, 1972, 1723, 1781, 1725,
	1507, 1830, 1815, 1034, 1035, 1031, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1045, 1044, 1046, 1047, 1804, 1807, 1808,
	1809, 1805, 537, 1806, 1810, 1984, 1986, 2161, 2162, 1777,
	1971, 2297, 2142, 2237, 1987, 2239, 2145, 1759, 1981, 1105,
	2141, 639, 1354, 1126, 1122, 614, 1767, 524, 1850, 640,
	1591, 1506, 176, 1853, 1854, 1544, 1545, 1869, 1123, 176,
	1814, 887, 886, 1468, 1474, 524, 1788, 1773, 1475, 2101,
	1864, 524, 990, 1833, 1927, 1266, 1266, 1469, 1778, 1896,
	524, 1818, 1578, 1119, 1120, 1125, 1822, 1124, 1622, 86,
	1825, 86, 1900, 1129, 1515, 1895, 88, 1738, 2147, 1834,
	87, 114, 87, 176, 176, 176, 176, 176, 88, 1804,
	1807, 1808, 1809, 1805, 1881, 1806, 1810, 95, 2067, 176,
	176, 1702, 1857, 1535, 1548, 1549, 2311, 2274, 94, 1849,
	93, 1866, 1749, 1750, 1812, 176, 1898, 1867, 1872, 88,
	1537, 1618, 1970, 1246, 1876, 1877, 1878, 588, 647, 648,
	1969, 589, 590, 1453, 1691, 1718, 591, 93, 2245, 2243,
	1890, 1891, 2242, 95, 2235, 2146, 2144, 2072, 1899, 1644,
	95, 1897, 621, 524, 94, 1953, 93, 646, 94, 2234,
	2135, 94, 1963, 1791, 2358, 2357, 2358, 524, 1935, 1776,
	1747, 1934, 1153, 1145, 100, 101, 2303, 176, 2043, 637,
	97, 524, 82, 1, 601, 2334, 493, 1517, 1103, 507,
	524, 2330, 1330, 1320, 1919, 2211, 2275, 524, 524, 1963,
	176, 176, 176, 176, 176, 177, 2004, 177, 1949, 1998,
	177, 1950, 176, 2078, 627, 1936, 1989, 176, 176, 1975,
	176, 1620, 848, 176, 176, 176, 139, 1581, 1582, 2347,
	104, 811, 1995, 103, 1115, 1962, 851, 1995, 525, 525,
	525, 949, 1645, 2203, 2046, 1973, 1851, 2022, 1592, 176,
	1179, 1177, 1976, 1178, 1176, 1181, 525, 525, 1180, 1175,
	1403, 521, 2024, 1811, 1925, 2025, 174, 1926, 2005, 629,
	2065, 2008, 628, 1168, 2006, 2007, 176, 2009, 2017, 1146,
	888, 483, 2057, 524, 1676, 489, 1060, 1968, 2026, 2040,
	524, 1364, 2021, 1826, 2039, 176, 666, 659, 2000, 2139,
	1980, 1982, 2036, 2032, 1783, 176, 1985, 1978, 89, 2296,
	2236, 2310, 1589, 1974, 2079, 1142, 1739, 1067, 1470, 176,
	2061, 1563, 176, 1525, 2074, 2060, 1423, 546, 545, 543,
	1769, 1792, 2102, 1023, 596, 1154, 1622, 1803, 1801, 2077,
	1800, 1700, 1567, 2163, 2083, 177, 2159, 2040, 2073, 2076,
	1561, 1775, 2039, 578, 554, 2081, 547, 539, 2062, 2063,
	594, 2096, 177, 2035, 2038, 1590, 2097, 1742, 1906, 176,
	2085, 1002, 1118, 533, 2104, 823, 1467, 2103, 2280, 1717,
	2121, 525, 1117, 2099, 2100, 177, 1479, 2110, 1967, 1480,
	525, 60, 38, 528, 2364, 993, 525, 653, 32, 31,
	30, 175, 29, 28, 479, 23, 22, 519, 21, 20,
	19, 25, 18, 17, 479, 16, 109, 47, 2136, 2003,
	2143, 44, 479, 42, 176, 116, 115, 45, 2148, 41,
	925, 1729, 39, 27, 634, 1733, 26, 1734, 1735, 15,
	14, 1144, 2165, 13, 12, 2168, 1743, 11, 10, 1744,
	652, 9, 652, 2170, 5, 4, 996, 24, 2, 0,
	479, 0, 0, 0, 0, 0, 2171, 176, 0, 0,
	176, 176, 176, 524, 1748, 0, 2178, 2176, 2177, 0,
	0, 1753, 1754, 1755, 1756, 1757, 0, 1535, 2181, 0,
	2183, 0, 2212, 524, 524, 524, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2218,
	0, 2207, 2133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 0, 0, 0, 0, 0, 0, 524,
	524, 524, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 2158, 0, 2217, 0, 2221, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 524, 0, 0,
	2252, 2231, 2241, 2172, 2173, 2232, 1998, 2240, 2254, 0,
	1998, 34, 621, 0, 525, 2256, 2250, 2248, 0, 0,
	524, 0, 2229, 2230, 0, 0, 0, 0, 1995, 0,
	0, 525, 525, 0, 525, 0, 525, 525, 0, 525,
	525, 525, 525, 525, 525, 0, 0, 0, 0, 2107,
	2108, 524, 2109, 0, 525, 2111, 0, 2113, 177, 0,
	2277, 2267, 0, 2270, 2269, 0, 0, 0, 0, 2263,
	0, 1951, 1952, 0, 177, 0, 1955, 0, 0, 0,
	1957, 1958, 1959, 0, 0, 525, 0, 177, 2216, 0,
	0, 2295, 2293, 2292, 0, 0, 0, 0, 0, 524,
	0, 0, 177, 0, 2304, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 2308, 177, 524,
	176, 2313, 2306, 0, 0, 177, 1990, 0, 0, 524,
	0, 0, 34, 0, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 525, 525, 525, 524, 0, 2307, 2260,
	2261, 2326, 0, 0, 0, 524, 524, 0, 2341, 2333,
	0, 2338, 1960, 1961, 2277, 2348, 2346, 0, 2316, 34,
	0, 0, 0, 177, 2329, 0, 2355, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 2361, 0, 0, 1036,
	0, 1726, 0, 0, 0, 2367, 0, 0, 0, 0,
	2374, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	2376, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1044,
	1046, 1047, 0, 0, 0, 0, 2019, 2020, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 0, 525, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 479, 0, 0, 479, 0, 177, 0, 81, 0,
	0, 0, 0, 0, 597, 604, 605, 606, 607, 598,
	600, 2123, 0, 0, 599, 0, 172, 602, 608, 609,
	523, 0, 177, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 525, 0,
	114, 0, 0, 177, 0, 177, 0, 177, 177, 525,
	0, 0, 525, 156, 537, 0, 0, 0, 0, 0,
	2041, 2042, 0, 525, 667, 0, 0, 815, 0, 822,
	0, 2106, 610, 612, 611, 613, 0, 0, 0, 0,
	1106, 0, 2115, 2116, 2118, 2120, 0, 0, 0, 2175,
	0, 0, 2126, 0, 0, 2127, 0, 0, 0, 0,
	2131, 0, 0, 0, 0, 2180, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 1098, 0, 0, 525, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 478, 2152, 2153, 0, 0, 2157, 2206, 0, 0,
	0, 527, 525, 0, 0, 0, 634, 0, 525, 617,
	0, 0, 0, 0, 2169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 2219, 0, 2220, 0, 0, 0, 0, 2223,
	2224, 0, 0, 0, 0, 0, 0, 819, 157, 0,
	525, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 2249, 0, 0, 0, 0,
	0, 2201, 0, 0, 0, 0, 2257, 0, 0, 2259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 177, 177, 0, 0, 177,
	0, 177, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 2226, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	537, 0, 177, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 2262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2283, 2284, 2285, 0, 2286, 2287, 2289, 0,
	0, 0, 2290, 2291, 0, 0, 0, 2342, 0, 0,
	0, 1098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 1098, 0, 0,
	0, 0, 479, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 2318, 177, 0, 0, 0, 1318, 0,
	0, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 177, 177, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 0, 0, 479,
	667, 667, 667, 0, 0, 2362, 2363, 0, 1386, 1387,
	479, 479, 479, 479, 479, 479, 479, 0, 992, 994,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 525, 479, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 926, 0, 931, 0,
	0, 933, 0, 1097, 0, 0, 0, 0, 0, 0,
	652, 0, 177, 177, 177, 177, 177, 652, 652, 0,
	0, 0, 0, 1098, 0, 0, 0, 0, 177, 177,
	0, 0, 0, 0, 652, 1363, 652, 652, 652, 652,
	652, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 0, 0, 0, 0,
	1318, 0, 667, 0, 0, 0, 0, 0, 1169, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 479,
	0, 0, 0, 0, 0, 1363, 177, 479, 0, 479,
	525, 479, 1569, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 525, 525, 0, 177,
	177, 177, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 177, 177, 0, 177,
	0, 0, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 177, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 1272, 1272, 0, 1272, 0, 1272, 1272,
	0, 1281, 1272, 1272, 1272, 1272, 1272, 0, 0, 0,
	0, 0, 0, 0, 1097, 1097, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 177, 0,
	0, 0, 0, 0, 479, 0, 0, 0, 0, 479,
	479, 0, 0, 479, 0, 1703, 0, 1342, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 1174, 0, 0, 0, 72, 36, 37,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 479, 78, 0, 0,
	0, 40, 66, 67, 0, 64, 68, 0, 0, 0,
	0, 0, 0, 0, 65, 667, 667, 667, 0, 0,
	603, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 177,
	177, 177, 525, 53, 0, 0, 0, 0, 0, 1303,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 652, 525, 525, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 624, 0, 73, 0, 652, 652, 525, 525,
	525, 177, 0, 0, 1463, 0, 0, 1363, 0, 1373,
	479, 1097, 624, 0, 0, 0, 1377, 0, 1318, 1477,
	1478, 0, 0, 667, 525, 0, 525, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 0, 0, 43, 46, 49, 48,
	51, 0, 63, 0, 0, 69, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 479,
	0, 0, 0, 0, 1412, 0, 0, 52, 77, 76,
	0, 0, 61, 62, 50, 0, 0, 1539, 0, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 667, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 55, 815, 56, 57, 58, 59,
	0, 0, 0, 0, 0, 479, 0, 0, 525, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 525, 479, 479, 479, 479,
	479, 0, 0, 0, 525, 525, 0, 0, 0, 0,
	0, 0, 479, 479, 815, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 1550, 0, 479, 0,
	0, 0, 0, 0, 1554, 0, 1557, 0, 0, 1412,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 815, 0, 0, 652, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 1098, 479, 479, 479, 479, 479, 0, 0,
	0, 0, 0, 0, 0, 2018, 0, 0, 0, 0,
	479, 1318, 0, 479, 0, 0, 479, 2027, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 1711, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 1687, 479, 0, 0, 479, 1696, 1697, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 1704, 985,
	985, 985, 0, 0, 0, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 479, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 624, 1056, 1057, 1058,
	0, 1061, 0, 1063, 1064, 1065, 1066, 0, 1069, 1071,
	1071, 0, 1071, 1075, 1075, 1077, 1078, 1079, 1080, 0,
	1082, 1083, 1084, 1085, 1086, 172, 0, 0, 0, 1075,
	1075, 1075, 1075, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 136, 0, 0, 0, 0, 0, 0, 1107, 0,
	0, 624, 156, 0, 0, 624, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 479, 479, 479, 0, 0, 1870, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 1539, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 153, 0,
	154, 1892, 0, 0, 0, 0, 123, 124, 145, 144,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1318, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 121, 147, 128,
	120, 0, 141, 142, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 129, 0, 0,
	0, 0, 1873, 0, 667, 0, 0, 0, 0, 0,
	0, 132, 130, 125, 126, 127, 131, 0, 1272, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 1977, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 0, 0, 0, 1097, 0, 0, 2002, 1272,
	1097, 0, 0, 1910, 1911, 1912, 1913, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1412,
	1920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 1928, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 1880, 0, 0, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 815, 0, 0, 1097, 0, 0,
	0, 1539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 0, 137,
	0, 0, 138, 1249, 1250, 145, 144, 171, 0, 0,
	0, 0, 0, 0, 985, 985, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 140, 1251, 147, 0, 1248, 0, 141,
	142, 0, 0, 0, 157, 2080, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2095,
	0, 0, 2098, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 1539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 2213, 2214, 2215, 114, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	2227, 2227, 2227, 0, 0, 0, 0, 0, 1564, 0,
	0, 146, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 2253, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 154, 0,
	0, 0, 0, 0, 1249, 1250, 145, 144, 171, 0,
	0, 1539, 0, 0, 0, 0, 0, 2194, 0, 0,
	2195, 2196, 2197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 0, 137, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 1251, 147, 0, 1248, 0,
	141, 142, 0, 0, 0, 157, 1184, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	2322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 2327, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 667, 0, 0,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 0, 167, 168, 169, 170,
	1210, 1213, 1214, 1215, 1216, 1217, 1218, 0, 1219, 1220,
	1221, 1222, 1223, 1198, 1199, 1200, 1201, 1182, 1183, 1211,
	149, 1185, 0, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 73, 0, 0,
	1564, 1564, 1564, 1564, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	1564, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2128, 2129, 2130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 73, 0, 1999, 0, 0, 0,
	793, 779, 405, 0, 729, 796, 699, 717, 806, 720,
	723, 762, 678, 742, 329, 714, 0, 703, 674, 709,
	675, 701, 731, 235, 698, 781, 745, 795, 286, 232,
	680, 704, 343, 719, 187, 764, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	802, 290, 751, 0, 390, 314, 0, 0, 0, 733,
	785, 740, 775, 728, 763, 688, 750, 797, 715, 759,
	798, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 2349, 0, 2350, 0, 0,
	0, 0, 1999, 209, 0, 216, 711, 756, 792, 712,
	758, 230, 274, 237, 229, 407, 803, 784, 0, 2312,
	202, 794, 735, 0, 761, 73, 809, 673, 753, 0,
	676, 679, 805, 788, 707, 240, 0, 0, 0, 0,
	0, 0, 0, 732, 741, 772, 726, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 749, 0, 0, 0,
	684, 677, 73, 0, 0, 0, 730, 0, 0, 0,
	687, 0, 706, 773, 0, 671, 258, 681, 315, 0,
	777, 787, 727, 439, 791, 725, 724, 768, 685, 783,
	718, 285, 683, 282, 182, 198, 0, 716, 325, 364,
	370, 782, 702, 710, 221, 708, 368, 339, 424, 205,
	248, 361, 344, 366, 748, 766, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 987, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 697, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 778, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 770, 808, 338, 369, 211,
	426, 389, 692, 696, 690, 691, 743, 744, 693, 799,
	800, 801, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 774, 686, 0, 694, 695, 0, 780, 789, 790,
	747, 181, 195, 288, 804, 358, 251, 453, 433, 429,
	672, 689, 227, 700, 0, 0, 713, 721, 722, 734,
	736, 737, 738, 739, 311, 754, 755, 757, 765, 767,
	769, 771, 776, 786, 807, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 746, 752, 298, 245,
	263, 273, 760, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 793, 779, 405, 0, 729, 796, 699, 717, 806,
	720, 723, 762, 678, 742, 329, 714, 0, 703, 674,
	709, 675, 701, 731, 235, 698, 781, 745, 795, 286,
	232, 680, 704, 343, 719, 187, 764, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 802, 290, 751, 0, 390, 314, 0, 0, 0,
	733, 785, 740, 775, 728, 763, 688, 750, 797, 715,
	759, 798, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 711, 756, 792,
	712, 758, 230, 274, 237, 229, 407, 803, 784, 0,
	0, 202, 794, 735, 0, 761, 0, 809, 673, 753,
	0, 676, 679, 805, 788, 707, 240, 0, 0, 0,
	0, 0, 0, 0, 732, 741, 772, 726, 0, 0,
	0, 0, 0, 2028, 0, 705, 0, 749, 0, 0,
	0, 684, 677, 0, 0, 0, 0, 730, 0, 0,
	0, 687, 0, 706, 773, 0, 671, 258, 681, 315,
	0, 777, 787, 727, 439, 791, 725, 724, 768, 685,
	783, 718, 285, 683, 282, 182, 198, 0, 716, 325,
	364, 370, 782, 702, 710, 221, 708, 368, 339, 424,
	205, 248, 361, 344, 366, 748, 766, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 987, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 697, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 778,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 770, 808, 338, 369,
	211, 426, 389, 692, 696, 690, 691, 743, 744, 693,
	799, 800, 801, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 774, 686, 0, 694, 695, 0, 780, 789,
	790, 747, 181, 195, 288, 804, 358, 251, 453, 433,
	429, 672, 689, 227, 700, 0, 0, 713, 721, 722,
	734, 736, 737, 738, 739, 311, 754, 755, 757, 765,
	767, 769, 771, 776, 786, 807, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 746, 752, 298,
	245, 263, 273, 760, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 793, 779, 405, 0, 729, 796, 699, 717,
	806, 720, 723, 762, 678, 742, 329, 714, 0, 703,
	674, 709, 675, 701, 731, 235, 698, 781, 745, 795,
	286, 232, 680, 704, 343, 719, 187, 764, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 802, 290, 751, 0, 390, 314, 0, 0,
	0, 733, 785, 740, 775, 728, 763, 688, 750, 797,
	715, 759, 798, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 711, 756,
	792, 712, 758, 230, 274, 237, 229, 407, 803, 784,
	0, 0, 202, 794, 735, 0, 761, 0, 809, 673,
	753, 0, 676, 679, 805, 788, 707, 240, 0, 0,
	0, 0, 0, 0, 0, 732, 741, 772, 726, 0,
	0, 0, 0, 0, 1988, 0, 705, 0, 749, 0,
	0, 0, 684, 677, 0, 0, 0, 0, 730, 0,
	0, 0, 687, 0, 706, 773, 0, 671, 258, 681,
	315, 0, 777, 787, 727, 439, 791, 725, 724, 768,
	685, 783, 718, 285, 683, 282, 182, 198, 0, 716,
	325, 364, 370, 782, 702, 710, 221, 708, 368, 339,
	424, 205, 248, 361, 344, 366, 748, 766, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 987, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 697, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	778, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 770, 808, 338,
	369, 211, 426, 389, 692, 696, 690, 691, 743, 744,
	693, 799, 800, 801, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 774, 686, 0, 694, 695, 0, 780,
	789, 790, 747, 181, 195, 288, 804, 358, 251, 453,
	433, 429, 672, 689, 227, 700, 0, 0, 713, 721,
	722, 734, 736, 737, 738, 739, 311, 754, 755, 757,
	765, 767, 769, 771, 776, 786, 807, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 746, 752,
	298, 245, 263, 273, 760, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 793, 779, 405, 0, 729, 796, 699,
	717, 806, 720, 723, 762, 678, 742, 329, 714, 0,
	703, 674, 709, 675, 701, 731, 235, 698, 781, 745,
	795, 286, 232, 680, 704, 343, 719, 187, 764, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 802, 290, 751, 0, 390, 314, 0,
	0, 0, 733, 785, 740, 775, 728, 763, 688, 750,
	797, 715, 759, 798, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 711,
	756, 792, 712, 758, 230, 274, 237, 229, 407, 803,
	784, 0, 0, 202, 794, 735, 0, 761, 0, 809,
	673, 753, 0, 676, 679, 805, 788, 707, 240, 0,
	0, 0, 0, 0, 0, 0, 732, 741, 772, 726,
	0, 0, 0, 0, 0, 1552, 0, 705, 0, 749,
	0, 0, 0, 684, 677, 0, 0, 0, 0, 730,
	0, 0, 0, 687, 0, 706, 773, 0, 671, 258,
	681, 315, 0, 777, 787, 727, 439, 791, 725, 724,
	768, 685, 783, 718, 285, 683, 282, 182, 198, 0,
	716, 325, 364, 370, 782, 702, 710, 221, 708, 368,
	339, 424, 205, 248, 361, 344, 366, 748, 766, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 987, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 697, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 778, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 770, 808,
	338, 369, 211, 426, 389, 692, 696, 690, 691, 743,
	744, 693, 799, 800, 801, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 774, 686, 0, 694, 695, 0,
	780, 789, 790, 747, 181, 195, 288, 804, 358, 251,
	453, 433, 429, 672, 689, 227, 700, 0, 0, 713,
	721, 722, 734, 736, 737, 738, 739, 311, 754, 755,
	757, 765, 767, 769, 771, 776, 786, 807, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 746,
	752, 298, 245, 263, 273, 760, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 793, 779, 405, 0, 729, 796,
	699, 717, 806, 720, 723, 762, 678, 742, 329, 714,
	0, 703, 674, 709, 675, 701, 731, 235, 698, 781,
	745, 795, 286, 232, 680, 704, 343, 719, 187, 764,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 802, 290, 751, 0, 390, 314,
	0, 0, 0, 733, 785, 740, 775, 728, 763, 688,
	750, 797, 715, 759, 798, 276, 218, 186, 326, 391,
	250, 0, 81, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	711, 756, 792, 712, 758, 230, 274, 237, 229, 407,
	803, 784, 0, 0, 202, 794, 735, 0, 761, 0,
	809, 673, 753, 0, 676, 679, 805, 788, 707, 240,
	0, 0, 0, 0, 0, 0, 0, 732, 741, 772,
	726, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	749, 0, 0, 0, 684, 677, 0, 0, 0, 0,
	730, 0, 0, 0, 687, 0, 706, 773, 0, 671,
	258, 681, 315, 0, 777, 787, 727, 439, 791, 725,
	724, 768, 685, 783, 718, 285, 683, 282, 182, 198,
	0, 716, 325, 364, 370, 782, 702, 710, 221, 708,
	368, 339, 424, 205, 248, 361, 344, 366, 748, 766,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 987,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 697,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 778, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 770,
	808, 338, 369, 211, 426, 389, 692, 696, 690, 691,
	743, 744, 693, 799, 800, 801, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 774, 686, 0, 694, 695,
	0, 780, 789, 790, 747, 181, 195, 288, 804, 358,
	251, 453, 433, 429, 672, 689, 227, 700, 0, 0,
	713, 721, 722, 734, 736, 737, 738, 739, 311, 754,
	755, 757, 765, 767, 769, 771, 776, 786, 807, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	746, 752, 298, 245, 263, 273, 760, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 793, 779, 405, 0, 729,
	796, 699, 717, 806, 720, 723, 762, 678, 742, 329,
	714, 0, 703, 674, 709, 675, 701, 731, 235, 698,
	781, 745, 795, 286, 232, 680, 704, 343, 719, 187,
	764, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 802, 290, 751, 0, 390,
	314, 0, 0, 0, 733, 785, 740, 775, 728, 763,
	688, 750, 797, 715, 759, 798, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 711, 756, 792, 712, 758, 230, 274, 237, 229,
	407, 803, 784, 0, 0, 202, 794, 735, 0, 761,
	0, 809, 673, 753, 0, 676, 679, 805, 788, 707,
	240, 0, 0, 0, 0, 0, 0, 0, 732, 741,
	772, 726, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 749, 0, 0, 0, 684, 677, 0, 0, 0,
	0, 730, 0, 0, 0, 687, 0, 706, 773, 0,
	671, 258, 681, 315, 0, 777, 787, 727, 439, 791,
	725, 724, 768, 685, 783, 718, 285, 683, 282, 182,
	198, 0, 716, 325, 364, 370, 782, 702, 710, 221,
	708, 368, 339, 424, 205, 248, 361, 344, 366, 748,
	766, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	987, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	697, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 778, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	770, 808, 338, 369, 211, 426, 389, 692, 696, 690,
	691, 743, 744, 693, 799, 800, 801, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 774, 686, 0, 694,
	695, 0, 780, 789, 790, 747, 181, 195, 288, 804,
	358, 251, 453, 433, 429, 672, 689, 227, 700, 0,
	0, 713, 721, 722, 734, 736, 737, 738, 739, 311,
	754, 755, 757, 765, 767, 769, 771, 776, 786, 807,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 746, 752, 298, 245, 263, 273, 760, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 793, 779, 405, 0,
	729, 796, 699, 717, 806, 720, 723, 762, 678, 742,
	329, 714, 0, 703, 674, 709, 675, 701, 731, 235,
	698, 781, 745, 795, 286, 232, 680, 704, 343, 719,
	187, 764, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 802, 290, 751, 0,
	390, 314, 0, 0, 0, 733, 785, 740, 775, 728,
	763, 688, 750, 797, 715, 759, 798, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 711, 756, 792, 712, 758, 230, 274, 237,
	229, 407, 803, 784, 0, 0, 810, 794, 735, 0,
	761, 0, 809, 673, 753, 0, 676, 679, 805, 788,
	707, 240, 0, 0, 0, 0, 0, 0, 0, 732,
	741, 772, 726, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 749, 0, 0, 0, 684, 677, 0, 0,
	0, 0, 730, 0, 0, 0, 687, 0, 706, 773,
	0, 671, 258, 681, 315, 0, 777, 787, 727, 439,
	791, 725, 724, 768, 685, 783, 718, 285, 683, 282,
	182, 198, 0, 716, 325, 364, 370, 782, 702, 710,
	221, 708, 368, 339, 424, 205, 248, 361, 344, 366,
	748, 766, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 682, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 697, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 778, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 670, 664, 663, 283,
	292, 770, 808, 338, 369, 211, 426, 389, 692, 696,
	690, 691, 743, 744, 693, 799, 800, 801, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 774, 686, 0,
	694, 695, 0, 780, 789, 790, 747, 181, 195, 288,
	804, 358, 251, 453, 433, 429, 672, 689, 227, 700,
	0, 0, 713, 721, 722, 734, 736, 737, 738, 739,
	311, 754, 755, 757, 765, 767, 769, 771, 776, 786,
	807, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 746, 752, 298, 245, 263, 273, 760, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 793, 779, 405,
	0, 729, 796, 699, 717, 806, 720, 723, 762, 678,
	742, 329, 714, 0, 703, 674, 709, 675, 701, 731,
	235, 698, 781, 745, 795, 286, 232, 680, 704, 343,
	719, 187, 764, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 802, 290, 751,
	0, 390, 314, 0, 0, 0, 733, 785, 740, 775,
	728, 763, 688, 750, 797, 715, 759, 798, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 711, 756, 792, 712, 758, 230, 274,
	237, 229, 407, 803, 784, 0, 0, 810, 794, 735,
	0, 761, 0, 809, 673, 753, 0, 676, 679, 805,
	788, 707, 240, 0, 0, 0, 0, 0, 0, 0,
	732, 741, 772, 726, 0, 0, 0, 0, 0, 0,
	0, 705, 0, 749, 0, 0, 0, 684, 677, 0,
	0, 0, 0, 730, 0, 0, 0, 687, 0, 706,
	773, 0, 671, 258, 681, 315, 0, 777, 787, 727,
	439, 791, 725, 724, 768, 685, 783, 718, 285, 683,
	282, 182, 198, 0, 716, 325, 364, 370, 782, 702,
	710, 221, 708, 368, 339, 424, 205, 248, 361, 344,
	366, 748, 766, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 1160, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 682, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 697, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 778, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 670, 664, 663,
	283, 292, 770, 808, 338, 369, 211, 426, 389, 692,
	696, 690, 691, 743, 744, 693, 799, 800, 801, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 774, 686,
	0, 694, 695, 0, 780, 789, 790, 747, 181, 195,
	288, 804, 358, 251, 453, 433, 429, 672, 689, 227,
	700, 0, 0, 713, 721, 722, 734, 736, 737, 738,
	739, 311, 754, 755, 757, 765, 767, 769, 771, 776,
	786, 807, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 746, 752, 298, 245, 263, 273, 760,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 793, 779,
	405, 0, 729, 796, 699, 717, 806, 720, 723, 762,
	678, 742, 329, 714, 0, 703, 674, 709, 675, 701,
	731, 235, 698, 781, 745, 795, 286, 232, 680, 704,
	343, 719, 187, 764, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 802, 290,
	751, 0, 390, 314, 0, 0, 0, 733, 785, 740,
	775, 728, 763, 688, 750, 797, 715, 759, 798, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 711, 756, 792, 712, 758, 230,
	274, 237, 229, 407, 803, 784, 0, 0, 810, 794,
	735, 0, 761, 0, 809, 673, 753, 0, 676, 679,
	805, 788, 707, 240, 0, 0, 0, 0, 0, 0,
	0, 732, 741, 772, 726, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 749, 0, 0, 0, 684, 677,
	0, 0, 0, 0, 730, 0, 0, 0, 687, 0,
	706, 773, 0, 671, 258, 681, 315, 0, 777, 787,
	727, 439, 791, 725, 724, 768, 685, 783, 718, 285,
	683, 282, 182, 198, 0, 716, 325, 364, 370, 782,
	702, 710, 221, 708, 368, 339, 424, 205, 248, 361,
	344, 366, 748, 766, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 661, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 682, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 697, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 778, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 670, 664,
	663, 283, 292, 770, 808, 338, 369, 211, 426, 389,
	692, 696, 690, 691, 743, 744, 693, 799, 800, 801,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 774,
	686, 0, 694, 695, 0, 780, 789, 790, 747, 181,
	195, 288, 804, 358, 251, 453, 433, 429, 672, 689,
	227, 700, 0, 0, 713, 721, 722, 734, 736, 737,
	738, 739, 311, 754, 755, 757, 765, 767, 769, 771,
	776, 786, 807, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 746, 752, 298, 245, 263, 273,
	760, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 1502, 0, 555, 0, 0, 0,
	235, 560, 0, 0, 0, 286, 232, 0, 1503, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 567, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 81, 0, 0, 178, 179,
	180, 597, 604, 605, 606, 607, 598, 600, 0, 0,
	209, 599, 216, 576, 602, 608, 609, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 538, 552, 0, 566, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 550, 650,
	0, 0, 0, 582, 0, 551, 0, 0, 559, 610,
	612, 611, 613, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 581, 0, 0,
	439, 0, 0, 579, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 588,
	580, 571, 573, 589, 590, 568, 569, 572, 591, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 583, 558,
	557, 0, 564, 565, 0, 574, 575, 556, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 555, 0, 0, 0, 235,
	560, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 567, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 0, 0, 1576, 0, 276, 218, 186,
	326, 391, 250, 0, 81, 0, 0, 178, 179, 180,
	597, 604, 605, 606, 607, 598, 600, 0, 0, 209,
	599, 216, 576, 602, 608, 609, 1577, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 538, 552, 0, 566, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 582, 0, 551, 0, 0, 559, 610, 612,
	611, 613, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 581, 0, 0, 439,
	0, 0, 579, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 588, 580,
	571, 573, 589, 590, 568, 569, 572, 591, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 583, 558, 557,
	0, 564, 565, 0, 574, 575, 556, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 72, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 555, 0, 0, 0, 235,
	560, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 567, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 81, 0, 0, 178, 179, 180,
	597, 604, 605, 606, 607, 598, 600, 0, 0, 209,
	599, 216, 576, 602, 608, 609, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 538, 552, 0, 566, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 582, 0, 551, 0, 0, 559, 610, 612,
	611, 613, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 581, 0, 0, 439,
	0, 0, 579, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 588, 580,
	571, 573, 589, 590, 568, 569, 572, 591, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 583, 558, 557,
	0, 564, 565, 0, 574, 575, 556, 181, 195, 288,
	80, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 555, 0, 0, 0, 235, 560,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 567, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 81, 0, 0, 178, 179, 180, 597,
	604, 605, 606, 607, 598, 600, 0, 0, 209, 599,
	216, 576, 602, 608, 609, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 538, 552, 0, 566, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 550, 0, 0, 0,
	0, 582, 0, 551, 0, 0, 559, 610, 612, 611,
	613, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 581, 0, 0, 439, 0,
	0, 579, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 2343,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 588, 580, 571,
	573, 589, 590, 568, 569, 572, 591, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 583, 558, 557, 0,
	564, 565, 0, 574, 575, 556, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 555, 0, 0, 0, 235, 560, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 567, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 562, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 81, 0, 1128, 178, 179, 180, 597, 604,
	605, 606, 607, 598, 600, 0, 0, 209, 599, 216,
	576, 602, 608, 609, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 538, 552, 0, 566, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 550, 0, 0, 0, 0,
	582, 0, 551, 0, 0, 559, 610, 612, 611, 613,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 581, 0, 0, 439, 0, 0,
	579, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 588, 580, 571, 573,
	589, 590, 568, 569, 572, 591, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 583, 558, 557, 0, 564,
	565, 0, 574, 575, 556, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 555, 0, 0, 0, 235, 560, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 567, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 81, 0, 0, 178, 179, 180, 597, 604, 605,
	606, 607, 598, 600, 0, 0, 209, 599, 216, 576,
	602, 608, 609, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 538, 552, 0, 566, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 550, 650, 0, 0, 0, 582,
	0, 551, 0, 0, 559, 610, 612, 611, 613, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 581, 0, 0, 439, 0, 0, 579,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 588, 580, 571, 573, 589,
	590, 568, 569, 572, 591, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 583, 558, 557, 0, 564, 565,
	0, 574, 575, 556, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 555, 0, 0, 0, 235, 560, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 567, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	81, 0, 0, 178, 179, 180, 597, 604, 605, 606,
	607, 598, 600, 0, 0, 209, 599, 216, 576, 602,
	608, 609, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	538, 552, 0, 566, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 550, 0, 0, 0, 0, 582, 0,
	551, 0, 0, 559, 610, 612, 611, 613, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 581, 0, 0, 439, 0, 0, 579, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 588, 580, 571, 573, 589, 590,
	568, 569, 572, 591, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 583, 558, 557, 0, 564, 565, 0,
	574, 575, 556, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	555, 0, 0, 0, 235, 560, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 567, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 81,
	0, 0, 178, 179, 180, 597, 604, 605, 606, 607,
	598, 600, 0, 0, 209, 599, 216, 576, 602, 608,
	609, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 566, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 550, 0, 0, 0, 0, 582, 0, 551,
	0, 0, 559, 610, 612, 611, 613, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 581, 0, 0, 439, 0, 0, 579, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 588, 580, 571, 573, 589, 590, 568,
	569, 572, 591, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 583, 558, 557, 0, 564, 565, 0, 574,
	575, 556, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 855, 439, 0, 0, 0, 0, 0, 852,
	853, 285, 818, 282, 182, 198, 846, 850, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 1148, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 1150, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 1018, 0, 1019, 1020, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 1093, 1096, 0, 0, 0, 1092, 1095, 0,
	0, 209, 1091, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 72,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 81, 0, 1128, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 80, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 72,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 80, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1524, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1319, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 1522, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 818, 282,
	182, 198, 816, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 1524, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	1319, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 1128, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 2228, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	1771, 0, 0, 1772, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 1171, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1170, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 2323, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 2228, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1319, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 1565, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1150, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 1410, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 1291,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 1289, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 1287, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 1285, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 1283, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 1279, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 1277, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 1275, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 1252, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 1155, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 995, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 529, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 477, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
}

var yyPact = [...]int{
	3331, -1000, -337, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1649, 1692, -1000, -1000, -1000, -1000, 1764,
	-1000, 727, 1391, -1000, 1652, 3960, -1000, 30504, 428, -1000,
	30005, 427, 119, 30504, -1000, 110, -1000, 102, 30504, 124,
	29506, -1000, -1000, -277, 13037, 1583, 4, 1, 30504, -1000,
	1745, 1403, -1000, 220, -1000, -1000, -1000, -1000, -1000, -1000,
	29007, -1000, -1000, -1000, 1661, 1651, 1769, 562, 1581, -1000,
	1719, 1403, -1000, 13037, 1740, 1707, 12538, -1000, 12538, 359,
	-1000, -1000, 9543, -1000, -1000, 17031, 30504, 30504, 337, -1000,
	1652, -1000, -1000, 261, -1000, 285, 1324, -1000, 1318, -1000,
	648, 495, 282, 356, 351, 281, 276, 275, 274, 273,
	272, 270, 267, 291, -1000, 594, 594, -165, -166, 2451,
	346, 346, 346, 392, 1609, 1608, -1000, 509, -1000, 594,
	594, 238, 594, 594, 594, 594, 226, 218, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 232, 1652, 190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30504, 121, 30504, -1000, 506,
	30504, 754, 754, 36, 754, 754, 754, 754, 108, 497,
	-6, -1000, 107, 227, 104, 182, 762, 311, 89, -1000,
	-1000, 177, 762, 1087, 567, 84, -1000, 754, 7539, 7539,
	7539, -1000, 1622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 388, -1000, -1000, -1000, -1000, 30504, 28508, 207, 651,
	-1000, -1000, -1000, 76, -1000, -1000, 1154, 697, 13037, 993,
	-1000, 1444, 504, -1000, -1000, -1000, -1000, -1000, 455, 13536,
	13536, 13536, 13536, -1000, -1000, 1202, 1202, 1202, 1202, 13536,
	1202, 13536, 1202, 1202, 1202, 1202, 13037, 1202, 1202, 1202,
	-1000, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 502, 1202,
	1202, 1202, 1202, 1202, -1000, -1000, -1000, -1000, 1202, 1202,
	1202, 1202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15033, -1000, 11041, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30504, -1000, 1202, 134, 1719,
	1403, -1000, 1745, 1738, 220, -1000, 1602, 1204, 1201, 957,
	1403, 1311, 30504, -1000, 1347, -1000, -1000, -1000, 1500, 1011,
	1083, -1000, -1000, -1000, -1000, 945, 13037, -1000, -1000, 1761,
	-1000, 14534, 498, 790, 1760, 28009, -1000, 359, 359, 1317,
	9042, -24, -1000, -1000, -1000, 647, 19027, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1279, 30504, -1000, -1000, 4490, 1078, -1000, 1384, -1000,
	1242, -1000, 1358, 1360, 422, 1078, 418, 410, 408, -1000,
	-92, -1000, -1000, -1000, -1000, -1000, 594, 594, 283, 3960,
	4468, -1000, -1000, -1000, 27510, 1383, 1078, -1000, 1382, -1000,
	743, 402, 464, 464, 1078, -1000, -1000, 30504, 1078, 740,
	739, 30504, 30504, -1000, 27011, -1000, 26512, 26013, 955, 30504,
	25514, 25015, 24516, 24017, 23518, -1000, 1461, -1000, 1378, -1000,
	-1000, -1000, 30504, 30504, 30504, 263, -1000, -1000, 30504, 1078,
	-1000, -1000, 952, 944, 594, 594, 940, 1081, 1080, 1065,
	594, 594, 936, 1063, 21023, 198, 927, 926, 911, 1014,
	1061, 186, 1012, 899, 909, 30504, 1381, 30504, -1000, 163,
	534, 280, 645, 1652, 1580, 1316, 384, 421, 1078, 339,
	339, -1000, 8040, -1000, -1000, 1060, 13037, -1000, 765, 762,
	762, -1000, -1000, -1000, -1000, -1000, -1000, 754, 30504, 765,
	-1000, -1000, -1000, 762, 754, 30504, 754, 754, 754, 754,
	762, 762, 762, 754, 30504, 30504, 30504, 30504, 30504, 30504,
	30504, 30504, 30504, 7539, 7539, 7539, 567, 754, -281, -1000,
	1052, -1000, 1453, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -87, 1315, 23019, -1000, -282, -285, -287, -289, -1000,
	-1000, -1000, -291, -295, -1000, -1000, -1000, 13037, 13037, 13037,
	13037, -1000, 809, 13536, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 831, 689, 13536, 13536, 13536, 13536, 13536, 13536, 13536,
	13536, 13536, 13536, 13536, 13536, 13536, 13536, 13536, 682, 1049,
	1047, 504, 504, 504, 504, -1000, 12538, 13037, 13037, 504,
	-1000, 1078, 22520, 12538, 12538, 13037, 1621, 656, 697, 30504,
	-1000, 957, -1000, -1000, -1000, 917, -1000, 30504, 30504, 399,
	10042, 8040, 12538, 12538, 12538, 12538, 12538, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 491, 1229,
	1226, 1239, -1000, 1312, -1000, -150, 16532, 13037, 1027, -1000,
	-1000, -1000, 1719, -1000, 1719, 1229, 1509, 1504, 12538, -1000,
	-1000, 1509, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1179, -1000, 30504, 1311, 1697, 30504, 1498, 1025, 263, -1000,
	13037, 13037, 1310, -1000, 1013, 30504, -1000, -1000, 22021, -1000,
	-1000, 7038, -1000, 30504, 264, 30504, -1000, 20524, 21522, 8541,
	-24, -1000, 8541, 1292, -1000, -35, -40, 10541, 540, -1000,
	-1000, -1000, 2451, 14035, 1142, 1592, 44, -1000, -1000, -1000,
	1358, -1000, 1358, 1358, 1358, 1358, 263, 263, 263, 263,
	-1000, -1000, -1000, -1000, -1000, 1380, 1379, -1000, 1358, 1358,
	1358, 1358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1377,
	1377, 1377, 1363, 1363, 329, -1000, 13037, 144, 30504, 1679,
	895, 163, 353, 1416, 1078, 1078, 1078, 353, -1000, 1129,
	1117, -1000, 1308, -1000, -1000, 1732, -1000, -1000, 717, 770,
	768, 515, 30504, 148, 262, -1000, 315, -1000, 30504, 1078,
	729, 464, 1078, -1000, 1078, -1000, -1000, -1000, -1000, -1000,
	1078, 1307, -1000, 1331, 901, 766, 868, 734, 1307, -1000,
	-1000, -142, 1307, -1000, 1307, -1000, 1307, -1000, 1307, -1000,
	1307, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 604,
	30504, 148, 682, -1000, 381, -1000, -1000, 682, 682, -1000,
	-1000, -1000, -1000, 1024, 1015, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -335, 30504, -1000, 157, 598, 239, 242, 221,
	30504, 174, 1713, 243, 208, 30504, 30504, 339, 1452, 30504,
	1677, 30504, -1000, -1000, -1000, -1000, 697, 30504, -1000, -1000,
	754, 754, -1000, -1000, 30504, 754, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 754, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 30504, 30504, -1000, -1000, -1000, -1000, -1000, 236,
	-37, 250, -1000, -1000, -1000, -1000, -1000, 1715, -1000, 697,
	699, 690, -1000, -1000, -1000, 833, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 831, 13536, 13536, 13536, 2229, 358, 588,
	1275, 1187, 796, 796, 702, 702, 505, 505, 505, 505,
	505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1222, -1000,
	938, 950, 957, -1000, 1222, 1222, 871, 12538, -1000, -1000,
	670, -1000, 13037, 957, -1000, -1000, 957, 1305, 1295, 1758,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 957, 12538, 12538, 1294, 1202, 482, -1000, 1222, 957,
	957, 1222, 1222, 8040, 957, -1000, 30504, -1000, -274, -1000,
	-53, 542, 1202, -1000, 21023, 957, 1154, -1000, -1000, -1000,
	-1000, -1000, 18528, 1298, 1509, -1000, -1000, 1202, 1237, -1000,
	-1000, 263, 23, 721, 697, 697, 13037, -1000, -1000, -1000,
	-1000, -1000, -1000, 481, 1750, 294, 1202, -1000, 1287, 1625,
	-1000, -1000, -1000, 1691, 16033, 30504, 1330, 1290, -1000, 458,
	-1000, 1292, -24, -17, -1000, -1000, -1000, -1000, 697, -1000,
	1057, -1000, 302, -1000, 314, -1000, -1000, -1000, -1000, 508,
	1686, 1589, 40, -1000, -1000, -1000, 263, 263, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, 1007, -1000, -1000, -1000, -1000,
	-1000, 894, -1000, -1000, -1000, 890, -1000, -1000, 1072, 1456,
	144, -1000, -1000, 594, 1000, 1600, 30504, -1000, -1000, 1126,
	157, 30504, 692, 1450, -1000, 1416, 1416, 1416, 30504, -1000,
	-1000, -1000, -1000, 4237, 30504, 1235, -1000, 137, -1000, 1110,
	30504, -1000, 1231, 1373, 1078, 1078, -1000, -1000, -1000, 30504,
	1202, -1000, -1000, -1000, -1000, 400, 1646, 1630, 148, 137,
	540, 1078, -1000, -1000, -1000, -1000, -1000, -338, 1228, 396,
	145, 193, 30504, 30504, 30504, 30504, 30504, 488, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 187, 362, -1000, 30504, 30504,
	440, -1000, -1000, -1000, 762, -1000, -1000, 762, -1000, -1000,
	-1000, -1000, -1000, 1623, 30504, -45, -311, -1000, -308, -1000,
	-1000, -1000, -1000, 1355, 348, 588, 13536, 13536, 12538, -138,
	759, 759, 682, -1000, -1000, -1000, 13037, 13037, 1327, 589,
	-1000, 13037, 760, -1000, -1000, 13037, 13037, 13037, -1000, 1222,
	1222, 12538, 8040, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 406, 403, 398, 30504, -1000, -1000, 1710,
	-1000, 1555, 1521, 1757, 1750, -1000, 20524, 1509, -1000, -1000,
	30504, -269, -1000, 1574, 1560, -1000, -1000, -1000, -1000, 6537,
	1719, 13037, 1448, 30504, 1202, -1000, 15533, 30504, 30504, 20524,
	20524, 20524, 20524, 20524, -1000, 1468, 1465, -1000, 1487, 1477,
	1476, 30504, -1000, 1220, 957, 1738, 16033, 17530, 1271, 20524,
	-1000, -1000, 20524, 30504, 6036, -1000, -1000, -48, -54, -1000,
	-1000, -1000, 2451, -1000, -1000, -1000, -1000, 784, 1390, 1768,
	-1000, 987, -1000, 910, -1000, 726, 707, -1000, 30504, 1368,
	-1000, -1000, -1000, -1000, -1000, 1209, -1000, 1206, 1285, 1199,
	79, -1000, 1335, 1619, 594, 594, -1000, 842, -1000, 1078,
	-1000, -1000, 360, -1000, 1674, 30504, 1447, 1445, 1442, -1000,
	1730, 1277, 30504, -1000, -1000, 30504, -1000, 1513, 144, 30504,
	-1000, -1000, -1000, 262, 30504, -1000, 2355, 137, -1000, -1000,
	-1000, -1000, -1000, -1000, 30504, 176, -1000, 1366, 943, -1000,
	1372, -1000, -1000, -1000, -1000, 139, 235, -1000, 30504, 433,
	1456, 30504, -1000, -1000, -1000, 754, 754, -1000, -1000, 1618,
	-1000, 1078, 13536, 13536, -1000, 504, -1000, 1202, 957, 1358,
	1358, -1000, 1358, 1363, -1000, 1358, 86, 1358, 77, 957,
	957, 841, 776, -133, -1000, 697, 13037, 1091, 929, 832,
	-1000, -1000, 957, -1000, 1202, 1202, 1202, 1195, 30504, -1000,
	-1000, -1000, -1000, 1750, 1746, 1283, -1000, -1000, 23, 296,
	-1000, 1567, 1560, -1000, 1729, 1569, 1728, -1000, -1000, -1000,
	697, -1000, 1650, 1168, -1000, 592, 1146, -1000, -1000, 12039,
	1197, 1508, 449, 1195, 1257, 1625, 1421, 1437, 1533, -1000,
	-1000, -1000, -1000, 1464, -1000, 1454, -1000, -1000, 1347, -1000,
	-1000, 1226, 264, 20524, 1149, 1149, -1000, 447, -1000, -1000,
	-1000, -1000, -1000, -1000, 13037, -1000, -1000, -1000, -1000, -1000,
	-1000, 846, 846, 123, -1000, -1000, -1000, -1000, -1000, 1357,
	13037, 263, 986, 263, 799, -1000, 772, -1000, -1000, -217,
	-1000, -1000, 1364, 1432, -1000, -1000, 30504, -1000, -1000, 30504,
	30504, 30504, 30504, -1000, -1000, 240, -1000, 1192, 1177, -1000,
	-171, -1000, 13037, -1000, 1347, -1000, -1000, -1000, 1017, -1000,
	-144, 1078, 30504, 30504, 30504, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 504, 13536, -1000, -1000, 308, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13037, -1000, 13037,
	-1000, 1719, 984, 697, 13037, 13037, -1000, -1000, 18029, 20025,
	20025, 17530, -1000, 1746, 1744, 1727, 1562, 1565, 1565, 1567,
	-1000, 1725, 1722, -1000, 983, 1721, 980, 705, -1000, 30504,
	13037, 1202, -1000, 222, 30504, 1202, 30504, -1000, 1742, -1000,
	-1000, 13037, 1351, -1000, 13037, -1000, -1000, -1000, -1000, -1000,
	1750, 1149, -1000, -1000, 549, 832, -1000, -1000, -1000, 30504,
	997, -1000, -1000, -1000, 1002, 998, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1347, -1000, -1000, -1000, 1277, 241,
	306, -1000, 262, -1000, -179, -180, 832, 1684, -1000, -1000,
	8040, -1000, -1000, 1329, 1413, -1000, 217, -1000, -1000, 832,
	832, 957, -1000, 832, 832, 1171, -1000, -1000, -1000, 1171,
	1171, 542, 1744, -1000, 13037, 13037, 1559, 905, -1000, -1000,
	-1000, -1000, 975, 966, -1000, 965, -1000, 1766, -1000, 697,
	-1000, 1202, -1000, 417, 1146, -1000, 1719, 697, 30504, 697,
	1742, -1000, -1000, 1166, -1000, -1000, -1000, 1683, 1202, -1000,
	-1000, -1000, -1000, -1000, 220, 1174, -1000, 590, 30504, 30504,
	957, 200, -153, -1000, -1000, -1000, -1000, -1000, 19526, -1000,
	-1000, -1000, -1000, -1000, 697, 1154, -1000, 818, -1000, -1000,
	-1000, -1000, -1000, 30504, 1146, 30504, -1000, 1164, 1719, 1436,
	725, 220, 11540, -143, 8040, 5535, 1113, -1000, -1000, 1497,
	-149, -161, -1000, -1000, -1000, -1000, 1130, -1000, -1000, -1000,
	1404, -1000, 1754, -1000, -1000, -1000, 767, 947, -1000, -1000,
	-1000, -143, 832, 957, -1000, -23, -1000, -1000, -1000, -1000,
	-1000, 1372, -1000, 1495, -1000, -1000, 1756, 476, 476, -1000,
	-1000, -1000, -1000, -1000, 317, -1000, -1000, -144, -146, -1000,
	-1000, -1000, 326, 855, -1000, 159, -1000, -155, -1000, -1000,
	-1000, -1000, -169, -1000,
}

var yyPgo = [...]int{
	0, 2058, 17, 75, 150, 6, 158, 72, 2057, 2056,
	2055, 2054, 165, 164, 160, 2051, 2048, 2047, 2044, 2043,
	2040, 2039, 2036, 2033, 2032, 162, 139, 140, 2030, 2029,
	2027, 79, 141, 56, 62, 144, 2026, 2025, 45, 2023,
	2021, 2017, 161, 157, 605, 2016, 134, 82, 2015, 2013,
	2012, 2011, 2010, 2009, 2008, 2006, 2005, 2003, 2002, 2000,
	1999, 1998, 273, 1997, 1995, 4, 1994, 41, 1993, 1992,
	1991, 1989, 1986, 1982, 1980, 110, 1979, 1978, 1976, 152,
	1975, 1973, 209, 83, 86, 1972, 1971, 74, 135, 1970,
	87, 122, 1968, 1965, 494, 1964, 58, 55, 1963, 142,
	40, 50, 35, 1960, 1957, 1956, 63, 44, 1954, 71,
	42, 1951, 68, 73, 1950, 33, 1946, 1943, 95, 1942,
	1941, 1940, 67, 1938, 1937, 2520, 1935, 64, 102, 21,
	138, 1934, 1933, 1931, 1930, 1929, 32, 1928, 1927, 1926,
	105, 15, 1923, 12, 14, 24, 120, 1921, 38, 46,
	1918, 104, 1917, 1916, 31, 19, 16, 1915, 13, 99,
	119, 25, 92, 113, 1912, 1911, 28, 39, 1910, 1909,
	1907, 1906, 1904, 1901, 37, 1900, 22, 1899, 155, 1898,
	49, 26, 52, 30, 221, 34, 7, 1897, 137, 1896,
	27, 128, 97, 126, 1893, 1887, 1886, 147, 170, 1885,
	1884, 57, 132, 114, 121, 1882, 174, 1881, 1880, 66,
	1329, 2401, 9, 129, 1879, 1873, 1953, 117, 101, 29,
	1866, 159, 1863, 1861, 1860, 151, 136, 78, 924, 76,
	1859, 1858, 1855, 1854, 1853, 1851, 1850, 269, 153, 36,
	77, 131, 43, 1848, 1846, 1843, 96, 65, 1842, 125,
	124, 94, 154, 1841, 130, 123, 85, 1836, 93, 1833,
	1831, 1830, 1829, 70, 1828, 1827, 1826, 1822, 118, 111,
	90, 47, 1821, 60, 88, 116, 115, 1813, 20, 143,
	11, 1796, 2, 0, 1795, 3, 133, 173, 145, 1793,
	1792, 1, 1791, 5, 1789, 1788, 100, 1787, 1786, 1785,
	10, 23, 8, 1784, 1783, 1782, 3380, 572, 98, 1780,
	156,
}

//line sql.y:5685
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) unaryExprOperatorUnion() UnaryExprOperator {
	v, _ := st.union.(UnaryExprOperator)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 304, 305, 305, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 283, 283, 283, 286, 286,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 308, 308, 120,
	120, 118, 118, 119, 119, 183, 183, 15, 16, 16,
	193, 193, 192, 192, 192, 194, 194, 194, 194, 228,
	228, 17, 17, 17, 17, 17, 80, 80, 285, 285,
	284, 282, 282, 281, 281, 280, 29, 30, 39, 39,
	39, 39, 40, 41, 287, 287, 259, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 261,
	261, 248, 248, 260, 260, 260, 260, 260, 260, 260,
	247, 247, 93, 93, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 299, 299, 165, 165, 165,
	165, 165, 165, 98, 98, 106, 106, 106, 106, 96,
	96, 97, 95, 95, 95, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 303, 303, 303,
	303, 105, 105, 102, 102, 103, 103, 103, 300, 300,
	300, 300, 230, 230, 230, 230, 233, 233, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 232, 232, 232,
	232, 232, 234, 234, 234, 234, 234, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 236, 236, 236, 236, 236, 236, 236, 236,
	246, 246, 237, 237, 241, 241, 242, 242, 242, 243,
	243, 243, 244, 244, 239, 239, 239, 239, 240, 240,
	240, 249, 273, 273, 272, 272, 270, 270, 270, 270,
	258, 258, 267, 267, 267, 267, 267, 257, 257, 253,
	253, 253, 254, 254, 255, 255, 252, 252, 256, 256,
	269, 269, 268, 250, 250, 251, 251, 275, 301, 301,
	301, 301, 302, 302, 276, 292, 293, 291, 291, 291,
	291, 291, 67, 67, 67, 205, 205, 205, 265, 265,
	264, 264, 264, 266, 266, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 200, 200, 200, 290, 290, 290, 290,
	290, 290, 289, 289, 289, 262, 262, 262, 288, 288,
	47, 47, 149, 149, 36, 36, 36, 36, 36, 36,
	35, 35, 35, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 37, 37, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 245, 245,
	245, 277, 277, 278, 278, 19, 28, 28, 20, 20,
	20, 20, 21, 21, 48, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 294, 294, 199, 199, 207, 207, 198,
	198, 221, 221, 221, 201, 201, 201, 202, 202, 298,
	298, 298, 50, 50, 52, 52, 53, 54, 54, 223,
	223, 224, 224, 55, 56, 68, 68, 68, 68, 68,
	68, 70, 70, 70, 9, 9, 9, 9, 64, 64,
	64, 8, 8, 51, 51, 58, 295, 295, 296, 297,
	297, 297, 297, 59, 61, 22, 22, 22, 22, 22,
	22, 86, 86, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 81, 81, 81, 76, 76,
	309, 62, 63, 63, 79, 79, 79, 73, 73, 73,
	78, 78, 78, 83, 83, 85, 85, 85, 85, 85,
	87, 87, 87, 87, 87, 87, 87, 82, 82, 84,
	84, 84, 84, 214, 214, 214, 213, 213, 109, 109,
	111, 110, 110, 112, 112, 113, 113, 113, 147, 128,
	128, 181, 181, 180, 180, 182, 182, 182, 182, 184,
	184, 114, 114, 114, 114, 115, 115, 116, 116, 117,
	117, 222, 222, 219, 219, 219, 218, 218, 121, 121,
	121, 123, 122, 122, 122, 122, 124, 124, 126, 126,
	125, 125, 127, 129, 129, 129, 129, 129, 130, 130,
	94, 94, 94, 94, 94, 94, 104, 104, 104, 104,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 196, 196, 131,
	131, 139, 139, 139, 139, 132, 132, 132, 132, 132,
	132, 132, 140, 140, 140, 146, 141, 141, 137, 137,
	137, 137, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 136, 136, 136, 136, 136, 136,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 310, 310, 238, 238, 238, 138, 138, 138, 138,
	138, 77, 77, 77, 77, 77, 227, 227, 227, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 152, 152, 74, 74, 150, 150, 151, 153,
	153, 148, 148, 148, 134, 134, 134, 154, 154, 155,
	155, 156, 156, 158, 157, 157, 159, 160, 160, 160,
	161, 161, 162, 162, 162, 38, 38, 38, 38, 38,
	33, 33, 33, 33, 34, 34, 34, 88, 88, 88,
	88, 90, 90, 89, 89, 65, 65, 66, 66, 66,
	91, 91, 92, 92, 92, 92, 178, 178, 163, 163,
	163, 170, 170, 170, 166, 166, 168, 168, 168, 169,
	169, 169, 167, 175, 175, 177, 177, 176, 176, 172,
	172, 173, 173, 174, 174, 174, 171, 171, 133, 133,
	133, 133, 133, 179, 179, 179, 179, 185, 185, 143,
	143, 145, 145, 144, 108, 186, 186, 190, 187, 187,
	191, 191, 191, 191, 191, 188, 188, 189, 189, 215,
	215, 215, 195, 195, 206, 206, 203, 203, 204, 204,
	197, 197, 208, 208, 208, 60, 142, 142, 274, 274,
	271, 211, 211, 212, 212, 216, 216, 220, 220, 217,
	217, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 306, 307, 225, 226, 226, 226,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 2, 2, 2, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	3, 3, 3, 2, 3, 1, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -304, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 165, -40, -30, 166, -41, 168, 167,
	203, 169, 196, 72, 242, 243, 245, 246, 247, 248,
	-70, 201, 202, 171, 34, 43, 31, 32, 35, 174,
	-4, -25, 6, -306, 9, 366, 198, 197, 26, -6,
	379, 83, -305, 506, -178, -163, 20, 31, 27, -162,
	-158, -79, -163, 18, 16, 5, -62, -309, -62, -62,
	10, 11, -62, -259, -261, 83, 139, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -279, -35, -32,
	170, 167, 211, 106, 107, 203, 204, 205, 169, 187,
	202, 206, 201, 220, -31, 78, 31, 379, 382, -266,
	166, 172, 173, 367, 109, 108, 73, 168, -263, 292,
	483, -46, 485, 98, 100, 484, 42, 177, 486, 487,
	488, 489, 186, 490, 491, 492, 493, 499, 500, 501,
	502, 110, 5, -62, -220, -216, -283, -210, 86, 87,
	88, 376, 189, 410, 411, 236, 78, 39, 292, 483,
	242, 256, 250, 277, 269, 377, 412, 239, 190, 224,
	480, 267, 115, 485, 413, 204, 297, 298, 299, 98,
	245, 334, 498, 241, 414, 496, 100, 484, 77, 49,
	42, 199, 265, 261, 486, 225, 415, 387, 218, 109,
	106, 505, 34, 259, 48, 28, 495, 108, 47, 487,
	130, 416, 488, 301, 282, 474, 46, 302, 205, 417,
	81, 381, 482, 303, 260, 304, 235, 494, 171, 418,
	466, 305, 306, 475, 419, 283, 287, 420, 326, 307,
	50, 421, 422, 476, 107, 423, 76, 489, 254, 255,
	424, 233, 188, 328, 281, 186, 33, 308, 378, 237,
	56, 212, 329, 44, 285, 43, 470, 425, 473, 280,
	276, 51, 426, 427, 428, 429, 490, 279, 253, 275,
	504, 399, 230, 491, 60, 173, 289, 288, 290, 219,
	325, 272, 430, 431, 432, 193, 79, 433, 262, 19,
	434, 435, 309, 226, 436, 54, 437, 438, 332, 202,
	439, 52, 492, 37, 207, 493, 440, 441, 442, 443,
	444, 311, 445, 310, 284, 286, 214, 312, 380, 446,
	258, 206, 497, 447, 194, 481, 208, 211, 201, 333,
	195, 448, 449, 450, 451, 452, 240, 453, 454, 246,
	499, 41, 455, 456, 457, 458, 234, 229, 327, 336,
	59, 80, 294, 459, 479, 252, 227, 460, 243, 53,
	500, 501, 502, 221, 503, 7, 314, 110, 231, 232,
	45, 273, 213, 461, 462, 263, 264, 278, 251, 274,
	244, 467, 215, 315, 203, 463, 335, 228, 295, 384,
	220, 316, 478, 383, 271, 268, 222, 464, 317, 178,
	216, 217, 465, 468, 318, 319, 238, 320, 321, 322,
	323, 324, 223, 382, 249, 266, 296, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 176, -62, 176, -125, -216,
	176, -188, 298, -207, 300, 313, 308, 318, 306, -199,
	309, 311, 214, -298, 326, 176, 315, 165, 156, 301,
	310, 319, 320, 238, 321, 324, 223, -294, -283, 488,
	503, 115, 270, 305, 303, 327, 470, 323, 322, -216,
	244, -223, 249, -211, -283, -210, 247, -125, -68, 466,
	169, -225, -225, -81, 470, 472, -141, -94, 123, -104,
	-107, -99, -100, -135, -136, -137, -138, -105, -148, 145,
	146, 153, 124, -146, -108, 24, 375, 368, 367, 156,
	29, 161, 66, 67, 370, 371, 126, 55, 343, 344,
	-106, 339, 345, 340, 373, 374, 101, -211, -216, 181,
	338, 175, 151, 366, -101, -97, -2, -144, 337, 341,
	342, 346, -283, -210, -103, -102, -131, 89, 94, 99,
	95, -303, 102, -306, 90, 91, 92, 93, 103, 104,
	157, 159, 158, 160, 42, 314, 314, -125, -62, -156,
	-79, -158, -4, -2, -306, 6, -62, -2, -3, -7,
	-25, -27, 406, -26, -216, -163, -178, 10, 141, 40,
	48, -161, -162, -6, -2, -94, 17, 21, 22, -84,
	147, -94, -216, -63, -84, -197, 180, -62, -62, -187,
	-228, 244, -191, 327, 326, -212, -189, -211, -209, -188,
	325, 170, 385, 122, 23, 25, 125, 156, 17, 126,
	35, 172, 270, 187, 155, 183, 367, 165, 70, 386,
	339, 340, 337, 343, 369, 370, 338, 300, 29, 11,
	388, 26, 197, 22, 36, 149, 167, 129, 200, 24,
	198, 101, 104, 391, 20, 73, 192, 12, 185, 38,
	14, 392, 393, 15, 181, 180, 141, 177, 68, 9,
	161, 27, 138, 64, 394, 117, 395, 396, 397, 398,
	66, 139, 18, 341, 342, 31, 471, 375, 209, 151,
	71, 57, 472, 123, 400, 401, 102, 402, 105, 74,
	477, 119, 16, 69, 40, 403, 210, 404, 182, 405,
	330, 406, 140, 168, 366, 67, 407, 175, 313, 6,
	372, 30, 196, 184, 112, 65, 408, 176, 128, 373,
	374, 179, 103, 5, 116, 32, 10, 72, 75, 344,
	345, 346, 55, 111, 379, 127, 13, 409, 331, 121,
	115, -260, 139, -247, -251, -211, 191, -276, 187, -125,
	-269, -268, -211, -80, -206, 177, 185, 184, 116, -287,
	119, 231, 338, 175, -42, -43, -188, 155, 208, 84,
	84, -251, -250, -249, -288, 210, 191, -275, -267, 183,
	192, -257, 184, 185, -252, 177, 117, -288, -252, 182,
	192, 210, 210, 110, 210, 110, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 207, -258, 131, -258, 383,
	383, -263, -288, -288, -288, 179, 33, 33, -208, -252,
	179, 23, -258, -258, -188, 155, -258, -258, -258, -258,
	218, 218, -258, -258, -258, -258, -258, -258, -258, -258,
	-258, -258, -258, -258, -258, -258, -258, 176, -287, -88,
	324, 238, 78, -44, 220, -28, -125, -206, 177, 178,
	-287, -125, 162, -125, -201, 139, 13, -201, -198, 314,
	312, 299, 304, -201, -201, -201, -201, 221, 297, -253,
	177, 33, 188, 314, 221, 297, 221, 222, 221, 222,
	307, 317, 221, -221, 12, 141, 338, 302, 306, 214,
	176, 215, 178, 316, -283, 473, 222, -221, 90, -202,
	139, 314, 217, -201, -226, -306, -212, 270, -226, -226,
	30, 179, -211, -64, -211, 90, -9, -5, -13, -12,
	-14, 131, -86, 314, -75, 156, 488, 474, 475, 476,
	473, 311, 481, 479, 477, 221, 478, 84, 119, 121,
	122, -94, 138, -132, 131, 132, 133, 134, 135, 136,
	137, 141, 123, 125, 139, 140, 120, 142, 143, 144,
	145, 146, 147, 148, 150, 149, 151, 152, 155, 163,
	164, -100, -100, -100, -100, -146, -306, -306, -306, -100,
	-196, -306, -100, -306, -306, -306, -306, -152, -94, -306,
	-310, -306, -310, -310, -238, -306, -238, -306, -306, -306,
	-306, 162, -306, -306, -306, -306, -306, -238, -238, -238,
	-238, 99, 94, 89, -148, 95, 90, -211, -216, -2,
	-3, -141, -225, -295, -296, -128, -125, -306, 238, -161,
	-6, -2, -156, -162, -158, -2, -62, -73, -85, 61,
	62, -87, 22, 36, 65, 63, 21, -307, 85, -307,
	-178, -307, 84, -27, -181, 83, 59, 41, 90, 90,
	84, 19, -157, -159, -94, 12, -214, -213, 23, -211,
	90, 162, 97, 12, -126, 27, -125, -197, -197, 84,
	244, -191, -228, -193, -192, 328, 330, 131, -215, -211,
	90, 29, 85, 84, -125, -230, -233, -235, -234, -236,
	-231, -232, 267, 268, 156, 271, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 30, 199, 263, 264,
	265, 266, 283, 284, 285, 286, 287, 288, 289, 290,
	250, 269, 377, 251, 252, 253, 254, 255, 256, 258,
	259, 260, 261, 262, -286, -283, 83, 85, 84, -237,
	83, -88, 176, -283, 177, 177, 177, -62, 366, -258,
	-258, 207, -35, -32, -279, 16, -31, -32, 170, 106,
	107, 167, 83, -247, 83, -256, -286, -283, 83, 117,
	182, 116, -255, -252, -255, -256, -283, -148, -283, 117,
	117, -184, -211, -184, -184, 21, -184, 21, -184, 21,
	92, -211, -184, 21, -184, 21, -184, 21, -184, 21,
	-184, 21, 29, 76, 77, 29, 79, 80, 81, -148,
	-148, -247, -188, -125, -283, 92, 92, -258, -258, 92,
	90, 90, 90, -258, -258, 92, 90, -218, -216, 90,
	-289, 193, 235, 237, 92, 92, 92, 92, 29, 90,
	-290, 29, 495, 494, 496, 497, 498, 92, 29, 92,
	29, 92, -211, 83, -125, -91, 225, 165, 167, 170,
	74, 90, 239, 131, 42, 84, 179, 176, -283, -203,
	181, -203, -217, -216, -209, 90, -94, -254, 12, 141,
	-221, -221, -201, -125, -254, -221, -201, -125, -201, -201,
	-201, -201, -221, -221, -221, -201, -216, -216, -125, -125,
	-125, -125, -125, -125, -125, -226, -226, -226, -202, -201,
	473, 90, 74, -224, 247, 281, 467, 468, 469, 84,
	379, -118, -125, 473, 473, 473, 473, 473, 473, -94,
	-94, -94, -94, -139, 102, 123, 103, 104, -107, -140,
	-144, -146, 96, 141, 125, 139, 140, -99, -100, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -227, -283, 90, 156, 90, 90, -82, -84,
	-94, -94, -283, -211, -82, -82, -94, -78, 22, 36,
	-150, -151, 127, -148, -307, -307, 92, -211, -211, -72,
	-71, 348, 349, 350, 351, 353, 354, 355, 358, 359,
	363, 364, 347, 365, 352, 357, 360, 361, 362, 356,
	266, -83, 22, 36, -82, -212, -217, -209, -82, -83,
	-83, -82, -82, 162, -178, -307, 84, -297, 330, 331,
	471, -219, 210, -218, 23, -142, -141, 90, -161, -161,
	61, 62, 57, -82, -87, -307, -26, 23, -180, -211,
	60, 90, -239, -188, -94, -94, 84, -160, 25, 26,
	-125, -213, 147, -217, -125, -183, 210, -125, -110, -112,
	-113, -114, -128, -147, -306, 12, -118, -119, -127, -216,
	-191, -193, 84, 329, 331, 332, 74, 105, -94, -240,
	155, -265, -264, -263, -247, -249, -250, -251, 85, -164,
	-93, 38, -243, 295, 294, -237, -237, -237, -237, -237,
	-239, -239, -239, -239, 83, 83, -237, -237, -237, -237,
	-241, 83, -241, -241, -242, 83, -242, -276, -94, -273,
	-272, -270, -271, 186, 98, 379, 75, -268, -160, 92,
	-91, -204, 181, -274, -271, -283, -283, -283, -204, -283,
	90, -283, 90, 84, 17, -248, -247, -47, 235, -278,
	210, -275, -269, -256, 117, -255, -256, -256, -283, 84,
	27, 110, 110, 110, 110, 379, 167, 30, -247, -47,
	-227, 179, -227, -227, 90, 90, -200, 503, -118, -90,
	227, 131, 216, 216, 176, 176, 229, -125, 240, 241,
	239, 21, 228, 230, 232, 218, -125, -125, -203, 74,
	-120, -125, 24, -216, -125, -201, -201, -125, -201, -201,
	-125, -211, -75, 330, 84, 379, 20, -76, 20, 102,
	103, 104, -140, -99, -100, -99, 122, 200, 84, -307,
	23, 84, 75, -307, -307, -307, 84, 12, -82, -153,
	-151, 129, -94, -307, -307, 84, 84, 12, -307, -82,
	-82, -306, 162, -307, -307, -307, -307, -307, -212, -296,
	470, 331, -129, 72, 180, 73, -306, -218, -307, -134,
	-211, 92, 95, -163, -109, -111, 12, -87, -146, 85,
	84, -239, -167, -172, -198, -283, 90, 156, -159, 162,
	-130, 13, -133, 30, 55, -5, -306, -306, 30, 84,
	-121, -123, -122, -124, 64, 68, 70, 65, 66, 67,
	71, -222, 23, -110, -3, -2, -306, -125, -118, -308,
	12, 75, -308, 84, 162, -192, -194, 333, 330, 336,
	-283, 90, 84, -263, -251, -302, 102, 123, 29, 74,
	292, 98, -300, 155, -301, 182, 116, 117, 194, 23,
	39, -244, 296, -239, -239, -246, 90, -246, 92, 92,
	85, -38, -33, -34, 31, 78, -270, -258, 90, 37,
	-211, 85, -90, -125, 123, 74, -274, -274, -274, -216,
	16, -180, 84, 85, -149, 236, 85, -211, 85, 83,
	-256, -256, -211, -306, 176, 29, 29, -47, -149, -240,
	-283, 505, 504, 85, 178, 234, -92, 343, 90, 86,
	-125, -125, -125, -125, -125, 170, 167, 219, 179, -118,
	-125, 84, -67, 195, 190, -221, -221, 31, -125, 330,
	482, 480, 122, 200, -107, -100, -84, 376, -229, 156,
	267, 199, 265, 261, 281, 272, 294, 263, 295, -229,
	-227, -94, -94, -156, 130, -94, 128, -94, -94, -94,
	-307, -307, -83, -212, 177, 177, 177, -184, -195, 20,
	12, 55, 55, -109, -130, -110, -87, -211, -170, 466,
	-175, 44, -173, -174, 45, -171, 46, 54, 147, -161,
	-94, -185, 74, -186, -190, -148, -143, -145, -144, -306,
	-179, -307, -211, -184, -186, -112, -113, -113, -112, -113,
	64, 64, 64, 69, 64, 69, 64, -122, -216, -307,
	-307, -3, -219, 75, -110, -110, -127, -216, 147, 330,
	334, 335, -263, 102, -306, -98, -106, -96, -95, -97,
	-101, 145, 146, 10, 90, 90, -283, 117, 117, -125,
	83, 85, 84, 85, 84, 85, 84, -205, 416, 123,
	-34, -33, -258, -258, 92, -283, 178, 24, -125, 74,
	74, 74, 17, -247, -148, 55, -273, -180, -277, -278,
	-125, -96, -306, -149, -125, -89, 225, 233, 83, 87,
	-285, 75, 216, 292, 216, -125, -67, -38, -125, -201,
	-201, 31, -283, -107, -100, -306, -307, -237, -237, -237,
	-242, -237, 255, -237, 255, -307, -307, 84, -307, 20,
	-307, -74, 372, -94, 84, 84, -307, -307, -306, -306,
	-306, -307, -125, -130, -154, 14, -167, 49, 273, -177,
	-176, 53, 45, -174, 17, 47, 17, 28, -185, 84,
	131, 84, -307, -307, 84, 55, 162, -307, -130, -116,
	-115, 74, 75, -117, 74, -115, 64, 64, -181, -307,
	-183, -110, -130, -130, 162, -94, -102, -102, -136, 83,
	-94, -239, 90, -239, 92, 92, 416, 29, 79, 80,
	81, 29, 76, 77, -125, -125, -125, -125, -180, 212,
	85, -307, 84, -245, 379, 382, -94, -181, 85, -282,
	379, -284, -283, -211, -211, -211, -99, -239, -283, -94,
	-94, -161, 90, -94, -94, -182, -307, -211, 182, -182,
	-182, -219, -154, -155, 15, 17, -168, 51, -166, 50,
	-166, -176, 17, 17, 90, 17, 90, 117, -190, -94,
	-145, 55, -5, -211, -143, -211, -156, -94, 83, -94,
	-130, -130, -307, -180, 85, 85, 85, -181, 213, -301,
	-278, 383, 383, -307, 23, -281, -280, -212, 83, 75,
	-77, 141, 379, -307, -307, -307, -307, -307, 84, -307,
	-307, -307, -129, -155, -94, -141, -169, 52, 74, 105,
	90, 90, 90, 10, -143, 162, -161, -180, -156, 85,
	-165, 23, -306, -5, 84, 131, -180, -125, -307, 377,
	71, 380, -211, 182, 74, 105, -186, -211, 85, -161,
	-292, -293, 74, -302, -299, 102, 123, 98, -300, 111,
	112, -5, -94, 209, -65, 379, -280, -262, -212, 90,
	92, 85, 60, 378, 381, -293, 74, 11, 10, 102,
	90, -65, -307, -307, -66, 224, 470, -285, 60, -291,
	195, 190, 193, 30, -291, 187, -282, 379, 189, 29,
	102, 226, 380, 381,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 640, 640, 640, 0,
	640, 0, 0, 640, -2, -2, 640, 1047, 0, 640,
	0, 0, -2, 573, 574, 0, 576, -2, 0, 0,
	585, 1486, 1486, 635, 0, 0, 0, 0, 0, 640,
	911, 45, 640, 0, 80, 81, 591, 592, 593, 60,
	0, 1484, 1, 3, 66, 70, 0, 0, 0, 53,
	920, 0, 73, 0, 0, 644, 0, 642, 0, 1030,
	640, 640, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 447, 407, 450, 405, 436,
	-2, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 300, 300, 0, 0, -2,
	398, 398, 398, 0, 0, 0, 433, 1032, 353, 300,
	300, 0, 300, 300, 300, 300, 0, 0, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 937, 143, 1048, 1045, 1046, 35, 36,
	37, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 0, 1024, 0, 503, 730,
	0, 564, 564, 0, 564, 564, 564, 564, 0, 0,
	0, 515, 0, 0, 0, 0, 561, 0, 0, 534,
	536, 0, 561, 0, 567, 0, 548, 564, 1487, 1487,
	1487, 1015, 0, 558, 556, 570, 571, 553, 554, 572,
	575, 0, 580, 583, 1041, 1042, 0, 598, 44, 1269,
	590, 603, 604, 0, 636, 637, 40, 816, 0, 745,
	749, 760, 773, 774, 775, 776, 777, 779, 780, 0,
	0, 0, 0, 785, 786, 0, 0, 0, 0, 0,
	797, 0, 0, 0, 0, 0, 892, 0, 861, 861,
	833, 861, 863, 863, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 211, 212, 815, 1004, 863, 863,
	863, 863, -2, -2, 195, 196, 197, 198, 199, 200,
	201, 0, 191, 0, 215, 216, 213, 214, 799, 800,
	207, 208, 209, 210, 1486, 0, 613, 0, 0, 920,
	0, 912, 911, 58, 0, 640, -2, 0, 0, 0,
	0, 42, 0, 47, 691, 72, 71, 956, 0, 0,
	0, 54, 921, 62, 64, 922, 0, 645, 646, 0,
	669, 673, 0, 641, 0, 0, 1031, 1030, 1030, 97,
	0, 1429, 1008, -2, -2, 0, 0, 1043, 1044, 1017,
	-2, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	-2, 0, 0, 153, 154, 0, 38, 326, 0, 149,
	0, 320, 272, 937, 0, 0, 0, 0, 0, 640,
	0, 1025, 134, 135, 141, 142, 300, 300, 0, 143,
	143, 414, 415, 416, 0, 0, -2, 324, 0, 399,
	0, 0, 314, 314, 318, 316, 317, 0, 0, 0,
	0, 0, 0, 427, 0, 428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 301, 0, 445,
	446, 354, 0, 0, 0, 0, 425, 426, 0, 0,
	1033, 1034, 0, 0, 300, 300, 0, 0, 0, 0,
	300, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 950,
	0, 0, 0, -2, 0, 495, 0, 0, 0, 1026,
	1026, 502, 0, 504, 505, 0, 0, 506, 0, 561,
	561, 559, 560, 508, 509, 510, 511, 564, 0, 0,
	309, 310, 311, 561, 564, 0, 564, 564, 564, 564,
	561, 561, 561, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1487, 1487, 1487, 567, 564, 0, 544,
	0, 545, 546, 549, 550, 1488, 1489, 1062, 551, 552,
	1016, 581, 584, 601, 599, 600, 602, 594, 595, 596,
	597, 0, 615, 616, 621, 0, 0, 0, 0, 627,
	628, 629, 0, 0, 632, 633, 634, 0, 0, 0,
	0, 743, 0, 0, 805, 806, 807, 808, 809, 810,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 781, 782, 783, 784, 787, 0, 0, 0, 792,
	793, 0, 0, 0, 0, 0, 650, 0, 893, 0,
	831, 0, 832, 834, 835, 0, 836, 0, 0, 0,
	653, 0, 0, 653, 653, 0, 0, 185, 186, 187,
	188, 202, 203, 204, 205, 206, 217, 901, 0, 815,
	0, 0, 41, 605, 606, 0, 713, 1036, 0, 52,
	61, 63, 920, 56, 920, 0, 655, 0, 0, -2,
	-2, 656, 662, 663, 664, 665, 666, 49, 1485, 50,
	0, 69, 0, 43, 0, 0, 0, 0, 284, 959,
	0, 0, 913, 914, 917, 0, 670, 674, 0, 676,
	677, 0, 643, 0, 95, 0, 729, 0, 0, 0,
	1429, 1014, 0, 99, 100, 0, 0, 0, 288, 1019,
	1020, 1021, -2, 307, 0, -2, 279, 223, 224, 225,
	272, 227, 272, 272, 272, 272, 284, 284, 284, 284,
	255, 256, 257, 258, 259, 0, 0, 242, 272, 272,
	272, 272, 262, 263, 264, 265, 266, 267, 268, 269,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 274,
	274, 274, 276, 276, 0, 39, 0, 292, 0, 917,
	0, 950, 1028, 1038, 0, 0, 0, 1028, 117, 0,
	0, 448, 408, 437, 449, 0, 411, 412, -2, 0,
	0, 398, 0, 400, 0, 308, 0, -2, 0, 318,
	0, 314, 318, 315, 318, 306, 319, 429, 430, 431,
	0, 467, 699, 0, 0, 0, 0, 0, 473, 474,
	475, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 438, 439, 440, 441, 442, 443, 444, 0,
	0, 400, 0, 434, 0, 355, 356, 0, 0, 359,
	360, 361, 362, 0, 0, 365, 366, 367, 716, 717,
	368, 392, 393, 394, 369, 370, 371, 372, 373, 374,
	375, 386, 387, 388, 389, 390, 391, 376, 377, 378,
	379, 380, 383, 0, 127, 941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 731, 1049, 1050, 565, 566, 0, 312, 313,
	564, 564, 512, 535, 0, 564, 516, 537, 517, 519,
	518, 520, 539, 540, 564, 523, 562, 563, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 541, 542,
	543, 568, 0, 0, 582, 586, 587, 588, 589, 0,
	0, 618, 91, 623, 624, 625, 626, 638, 631, 817,
	740, 741, 742, 744, 746, 0, 801, 803, 748, 750,
	812, 813, 814, 0, 0, 0, 0, 0, 754, 758,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 778, 876, 877, 878, 795, 796, 0, 667,
	0, 0, 0, 794, 0, 0, 0, 0, 651, 652,
	899, 896, 0, 0, 862, 864, 0, 0, 0, 0,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 0, 0, 0, 654, 902, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1003, 0, 608, 609, 611,
	0, 733, 0, 714, 0, 0, 1037, 614, 55, 57,
	660, 661, 0, 678, 657, 51, 46, 0, 0, 693,
	957, 284, 979, 0, 923, 924, 0, 916, 918, 919,
	74, 675, 671, 0, 738, 0, 0, 728, 0, 681,
	683, 684, 685, 711, 0, 0, 0, 0, 93, 730,
	1009, 98, 0, 0, 103, 104, 1010, 1011, 1012, 1013,
	0, 136, -2, 350, 155, 157, 158, 159, 150, 332,
	0, 0, 282, 280, 281, 226, 284, 284, 249, 250,
	251, 252, 253, 254, 0, 0, 243, 244, 245, 246,
	237, 0, 238, 239, 240, 0, 241, 325, 0, 925,
	293, 294, 296, 300, 0, 0, 0, 321, 322, 0,
	941, 0, 0, 0, 1039, 1038, 1038, 1038, 0, 145,
	146, 147, 148, 143, 0, 0, 151, 402, 401, 0,
	0, 323, 0, 0, 318, 318, 303, 304, 432, 0,
	0, 469, 470, 471, 472, 0, 0, 0, 400, 402,
	288, 0, 357, 358, 363, 364, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 462, 463,
	464, 465, 938, 939, 940, 0, 0, 496, 0, 0,
	342, 89, 1027, 501, 561, 522, 538, 561, 514, 521,
	547, 578, 622, 0, 0, 0, 0, 630, 0, 747,
	802, 804, 751, 0, 755, 759, 0, 0, 0, 0,
	0, 0, 0, 798, 822, 823, 0, 0, 911, 0,
	897, 0, 0, 830, 865, 0, 0, 0, 818, 0,
	0, 653, 0, 866, 867, 868, 869, 870, 902, 607,
	610, 612, 689, 0, 0, 0, 0, 715, 1035, 0,
	904, 0, 0, 678, 738, 679, 0, 658, 48, 692,
	0, 961, 960, 973, 986, 285, 286, 287, 915, 0,
	920, 0, 997, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 721, 0, 0,
	0, 0, 712, 0, 0, 0, 0, -2, 0, 0,
	87, 88, 0, 0, 0, 101, 102, 0, 0, 108,
	289, 290, 143, 352, 156, 160, 165, 0, 0, 0,
	170, 0, 172, 0, 333, 0, 219, 221, 0, 0,
	163, 222, 283, 247, 248, 0, 270, 0, 0, 0,
	345, 113, 929, 928, 300, 300, 295, 0, 298, 0,
	1040, 273, 0, 126, 0, 0, 0, 0, 0, 132,
	0, 406, 0, 417, 418, 0, 466, 0, 292, 0,
	302, 305, 700, 0, 0, 419, 0, 402, 423, 424,
	435, 384, 385, 382, 0, 0, 951, 952, 0, 955,
	118, 455, 457, 456, 460, 0, 0, 453, 0, 342,
	925, 0, 500, 343, 344, 564, 564, 617, 92, 0,
	620, 0, 0, 0, 752, 756, 668, 0, 0, 272,
	272, 882, 272, 276, 885, 272, 887, 272, 890, 0,
	0, 0, 0, 894, 829, 900, 0, 0, 0, 0,
	819, 820, 0, 903, 0, 0, 0, 0, 0, 1022,
	1023, 905, 906, 738, 907, 680, 659, 694, 979, 0,
	972, 0, -2, 981, 0, 0, 0, 987, 672, 75,
	739, 78, 0, 997, 1005, 0, 988, 999, 1001, 0,
	0, 0, 993, 0, 738, 682, 707, 709, 0, 704,
	719, 720, 722, 0, 724, 0, 726, 727, 691, 687,
	688, 0, 95, 0, 738, 738, 94, 0, 732, 105,
	106, 107, 351, 166, 0, 168, 183, 184, 189, 190,
	192, 0, 0, 0, 171, 173, 174, 218, 220, 0,
	0, 284, 0, 284, 0, 277, 0, 334, 346, 0,
	926, 927, 0, 0, 297, 299, 0, 1029, 128, 0,
	0, 0, 0, 152, 403, 0, 291, 0, 0, 491,
	488, 420, 0, 422, 691, 942, 943, 944, 0, 954,
	121, 0, 0, 0, 0, 497, 498, 499, 90, 507,
	513, 619, 639, 753, 757, 0, 789, 879, 284, 883,
	884, 886, 888, 889, 891, 790, 791, 0, 825, 0,
	827, 920, 0, 898, 0, 0, 839, 821, 0, 0,
	0, 713, 59, 907, 909, 0, 966, 964, 964, 974,
	975, 0, 0, 982, 0, 0, 0, 0, 79, 0,
	0, 0, 1002, 0, 0, 0, 0, 96, 911, 701,
	708, 0, 0, 702, 0, 703, 723, 725, 686, -2,
	738, 738, 85, 86, 0, 0, 193, 194, 169, 0,
	0, 260, 271, 261, 0, 0, 347, 930, 931, 932,
	933, 934, 935, 936, 691, 129, 130, 131, 409, 0,
	0, 468, 0, 476, 0, 0, 0, 0, 953, 454,
	0, 119, 120, 0, 0, 459, 871, 880, 881, 0,
	0, 0, 895, 0, 0, 0, 735, 695, 696, 0,
	0, 733, 909, 77, 0, 0, 969, 0, 962, 965,
	963, 976, 0, 0, 983, 0, 985, 0, 1006, 1007,
	1000, 0, 992, 995, 991, 994, 920, 705, 0, 710,
	911, 84, 167, 0, 177, 275, 278, 0, 0, 327,
	492, 489, 490, 421, 0, 122, 123, 0, 0, 0,
	0, 0, 0, 824, 826, 828, 837, 838, 0, 734,
	736, 737, 690, 76, 910, 908, 958, 0, 967, 968,
	977, 978, 984, 0, 990, 0, 82, 0, 920, 328,
	332, 0, 0, 945, 0, 0, 0, 461, 788, 0,
	0, 0, 697, 698, 970, 971, 998, 996, 706, 83,
	329, 330, 0, 161, 178, 179, 0, 0, 182, 175,
	176, 945, 0, 0, 451, 947, 124, 125, 395, 396,
	397, 118, 872, 0, 875, 331, 0, 0, 0, 180,
	181, 114, 493, 494, 0, 948, 949, 121, 873, 335,
	337, 338, 0, 0, 336, 0, 458, 0, 339, 340,
	341, 946, 0, 874,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 124, 3, 3, 3, 150, 142, 3,
	83, 85, 147, 145, 84, 146, 162, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 506,
	132, 131, 133, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 152, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 153,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 125, 126,
	127, 128, 129, 130, 134, 135, 136, 137, 138, 139,
	140, 141, 143, 144, 149, 151, 154, 155, 156, 157,
	158, 159, 160, 161, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:447
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:457
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:490
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:509
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:519
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:525
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:531
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:535
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:544
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:550
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:554
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:560
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:566
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:574
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:597
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:603
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:608
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:614
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:621
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:634
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:719
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:739
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:751
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:763
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:767
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:801
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:811
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:821
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:834
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:856
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:866
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:870
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:874
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:880
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:884
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:888
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:892
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:898
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:902
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:950
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:965
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:970
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:976
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:993
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1000
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1007
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1012
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1017
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1022
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1029
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1036
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1047
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1057
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1063
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1067
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1091
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1095
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1101
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1112
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1116
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1122
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1132
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1137
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1165
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1171
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1179
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1192
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1196
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1202
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1208
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1213
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1218
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1223
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1228
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1233
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1249
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1253
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1262
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1291
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1298
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1302
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1306
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1310
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1321
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1328
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1332
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1346
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1350
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1354
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1358
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1362
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1367
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1375
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1390
		{
			yyLOCAL = UBinaryOp
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1394
		{
			yyLOCAL = Utf8Op
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1398
		{
			yyLOCAL = Utf8mb4Op
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1402
		{
			yyLOCAL = Latin1Op
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1437
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1441
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1445
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1449
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1671
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1680
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1685
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1697
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = ""
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1769
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1778
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1784
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1788
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1794
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1798
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1803
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1807
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1823
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1827
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1831
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1835
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1839
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = yyDollar[2].str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = "key"
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = yyDollar[1].str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1907
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1917
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1923
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1927
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1933
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1937
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1943
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1949
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1953
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1957
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1961
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1970
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1976
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1982
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1988
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1994
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1998
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2002
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2006
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2010
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2036
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2045
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2051
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2065
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2075
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2079
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2083
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2087
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2091
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2095
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2099
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2103
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2107
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2111
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2115
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2119
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2123
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2127
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2131
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2151
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2247
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2256
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2260
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2264
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2272
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2278
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2292
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2296
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2300
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2304
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2308
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2312
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2316
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2320
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2324
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2328
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2332
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2336
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2340
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2344
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2348
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2352
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2356
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2360
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2364
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2368
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2372
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2376
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2380
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2386
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2396
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2400
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2404
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2408
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2412
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2416
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2420
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2424
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2428
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2434
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2440
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2447
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2454
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2460
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2464
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2471
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2478
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2521
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2531
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2535
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2546
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2560
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2567
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2575
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2579
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2583
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2587
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2591
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2595
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2599
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2603
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2607
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2611
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2615
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2619
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2623
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2627
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2631
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2635
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2639
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2643
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2647
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2651
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2655
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2659
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2664
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2679
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 493:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2689
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2693
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2705
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 498:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2728
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2732
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2885
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2889
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2893
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2902
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2923
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2927
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2946
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2950
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2954
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = "extended "
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3008
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3018
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3022
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3032
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3038
		{
			yyVAL.empty = struct{}{}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.empty = struct{}{}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.empty = struct{}{}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3062
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3066
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3087
		{
			yyVAL.empty = struct{}{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.empty = struct{}{}
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3092
		{
			yyVAL.empty = struct{}{}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.empty = struct{}{}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3110
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3114
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3118
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3122
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3126
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3130
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = yyDollar[1].str
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3207
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3217
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3223
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3227
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3231
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3235
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3289
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3293
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3338
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			setAllowComments(yylex, true)
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.strs = nil
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = SQLCacheStr
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3406
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3410
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3423
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3428
		{
			yyVAL.strs = nil
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3444
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = SQLCacheStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = DistinctStr
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.str = DistinctStr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
			yyVAL.str = StraightJoinHint
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3480
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3490
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3494
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3498
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3502
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3507
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3527
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3537
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3543
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3557
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3561
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3565
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3571
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3577
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3581
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3590
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3596
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3600
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3606
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3610
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3624
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3641
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3645
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3649
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3653
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3661
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3671
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3676
		{
			yyVAL.empty = struct{}{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.empty = struct{}{}
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3681
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3702
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3706
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3710
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3716
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3722
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3726
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3730
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3734
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3740
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3744
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3783
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3787
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3791
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3795
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3811
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3815
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3831
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3888
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3892
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3896
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3902
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3910
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3914
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3918
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3922
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3926
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3930
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3938
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3942
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3946
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3950
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3956
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3964
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3968
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3972
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3980
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3984
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3988
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3992
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3996
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4000
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4008
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4065
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4069
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4076
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4080
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4084
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4088
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4094
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4098
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4102
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4106
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4110
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4114
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4118
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4124
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4128
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4132
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4139
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4145
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4149
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4159
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4163
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4167
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4171
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4181
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4201
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4213
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4238
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4242
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4251
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4255
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4259
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4267
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4271
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4275
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4279
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4283
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4287
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4291
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4295
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4299
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4303
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4307
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4313
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4317
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4321
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4325
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4329
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4333
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4337
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4341
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4345
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4363
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4373
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4377
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4385
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4395
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4399
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4403
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4407
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4411
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4431
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4435
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4439
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4457
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4461
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4469
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4473
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4477
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4481
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4490
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = string("")
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4505
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4515
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4524
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4530
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4534
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4538
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4544
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4567
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4576
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4585
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4591
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4597
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4607
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4612
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4616
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4620
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4629
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4635
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4639
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4643
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4652
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4656
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4660
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4664
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4671
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4675
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4679
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4683
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4689
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4693
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4697
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = yyDollar[3].str
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = yyDollar[2].str
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			yyVAL.str = "cascaded"
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4760
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = yyDollar[3].str
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4788
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4792
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4798
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4802
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4806
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = ""
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = ""
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = " header"
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = " manifest on"
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = " manifest off"
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = " overwrite on"
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = " overwrite off"
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = ""
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4869
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = ""
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = yyDollar[1].str
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4918
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = ""
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = " optionally"
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4944
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4948
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4952
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4956
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4960
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4966
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4970
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4978
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4987
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4993
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5003
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5007
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5013
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5028
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5038
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5044
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5054
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5058
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5062
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5066
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5070
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5078
		{
			yyVAL.str = "charset"
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5105
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5107
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5110
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5117
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5120
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5125
		{
			yyVAL.empty = struct{}{}
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.empty = struct{}{}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.empty = struct{}{}
		}
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5133
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5142
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5149
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5153
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5186
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			decNesting(yylex)
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			skipToEnd(yylex)
		}
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5674
		{
			skipToEnd(yylex)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			skipToEnd(yylex)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
