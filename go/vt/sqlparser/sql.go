// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
	columnTypeOptions      *ColumnTypeOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPTABLE = 57544
const INVOKER = 57545
const SECURITY = 57546
const FIRST = 57547
const AFTER = 57548
const LAST = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const RELEASE = 57556
const WORK = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const TIME = 57571
const TIMESTAMP = 57572
const DATETIME = 57573
const YEAR = 57574
const CHAR = 57575
const VARCHAR = 57576
const BOOL = 57577
const CHARACTER = 57578
const VARBINARY = 57579
const NCHAR = 57580
const TEXT = 57581
const TINYTEXT = 57582
const MEDIUMTEXT = 57583
const LONGTEXT = 57584
const BLOB = 57585
const TINYBLOB = 57586
const MEDIUMBLOB = 57587
const LONGBLOB = 57588
const JSON = 57589
const ENUM = 57590
const GEOMETRY = 57591
const POINT = 57592
const LINESTRING = 57593
const POLYGON = 57594
const GEOMETRYCOLLECTION = 57595
const MULTIPOINT = 57596
const MULTILINESTRING = 57597
const MULTIPOLYGON = 57598
const NULLX = 57599
const AUTO_INCREMENT = 57600
const APPROXNUM = 57601
const SIGNED = 57602
const UNSIGNED = 57603
const ZEROFILL = 57604
const COLLATION = 57605
const DATABASES = 57606
const SCHEMAS = 57607
const TABLES = 57608
const VITESS_METADATA = 57609
const VSCHEMA = 57610
const FULL = 57611
const PROCESSLIST = 57612
const COLUMNS = 57613
const FIELDS = 57614
const ENGINES = 57615
const PLUGINS = 57616
const EXTENDED = 57617
const KEYSPACES = 57618
const VITESS_KEYSPACES = 57619
const VITESS_SHARDS = 57620
const VITESS_TABLETS = 57621
const CODE = 57622
const PRIVILEGES = 57623
const FUNCTION = 57624
const NAMES = 57625
const CHARSET = 57626
const GLOBAL = 57627
const SESSION = 57628
const ISOLATION = 57629
const LEVEL = 57630
const READ = 57631
const WRITE = 57632
const ONLY = 57633
const REPEATABLE = 57634
const COMMITTED = 57635
const UNCOMMITTED = 57636
const SERIALIZABLE = 57637
const CURRENT_TIMESTAMP = 57638
const DATABASE = 57639
const CURRENT_DATE = 57640
const CURRENT_TIME = 57641
const LOCALTIME = 57642
const LOCALTIMESTAMP = 57643
const CURRENT_USER = 57644
const UTC_DATE = 57645
const UTC_TIME = 57646
const UTC_TIMESTAMP = 57647
const REPLACE = 57648
const CONVERT = 57649
const CAST = 57650
const SUBSTR = 57651
const SUBSTRING = 57652
const GROUP_CONCAT = 57653
const SEPARATOR = 57654
const TIMESTAMPADD = 57655
const TIMESTAMPDIFF = 57656
const MATCH = 57657
const AGAINST = 57658
const BOOLEAN = 57659
const LANGUAGE = 57660
const WITH = 57661
const QUERY = 57662
const EXPANSION = 57663
const WITHOUT = 57664
const VALIDATION = 57665
const UNUSED = 57666
const ARRAY = 57667
const CUME_DIST = 57668
const DESCRIPTION = 57669
const DENSE_RANK = 57670
const EMPTY = 57671
const EXCEPT = 57672
const FIRST_VALUE = 57673
const GROUPING = 57674
const GROUPS = 57675
const JSON_TABLE = 57676
const LAG = 57677
const LAST_VALUE = 57678
const LATERAL = 57679
const LEAD = 57680
const MEMBER = 57681
const NTH_VALUE = 57682
const NTILE = 57683
const OF = 57684
const OVER = 57685
const PERCENT_RANK = 57686
const RANK = 57687
const RECURSIVE = 57688
const ROW_NUMBER = 57689
const SYSTEM = 57690
const WINDOW = 57691
const ACTIVE = 57692
const ADMIN = 57693
const BUCKETS = 57694
const CLONE = 57695
const COMPONENT = 57696
const DEFINITION = 57697
const ENFORCED = 57698
const EXCLUDE = 57699
const FOLLOWING = 57700
const GEOMCOLLECTION = 57701
const GET_MASTER_PUBLIC_KEY = 57702
const HISTOGRAM = 57703
const HISTORY = 57704
const INACTIVE = 57705
const INVISIBLE = 57706
const LOCKED = 57707
const MASTER_COMPRESSION_ALGORITHMS = 57708
const MASTER_PUBLIC_KEY_PATH = 57709
const MASTER_TLS_CIPHERSUITES = 57710
const MASTER_ZSTD_COMPRESSION_LEVEL = 57711
const NESTED = 57712
const NETWORK_NAMESPACE = 57713
const NOWAIT = 57714
const NULLS = 57715
const OJ = 57716
const OLD = 57717
const OPTIONAL = 57718
const ORDINALITY = 57719
const ORGANIZATION = 57720
const OTHERS = 57721
const PATH = 57722
const PERSIST = 57723
const PERSIST_ONLY = 57724
const PRECEDING = 57725
const PRIVILEGE_CHECKS_USER = 57726
const PROCESS = 57727
const RANDOM = 57728
const REFERENCE = 57729
const REQUIRE_ROW_FORMAT = 57730
const RESOURCE = 57731
const RESPECT = 57732
const RESTART = 57733
const RETAIN = 57734
const REUSE = 57735
const ROLE = 57736
const SECONDARY = 57737
const SECONDARY_ENGINE = 57738
const SECONDARY_LOAD = 57739
const SECONDARY_UNLOAD = 57740
const SKIP = 57741
const SRID = 57742
const THREAD_PRIORITY = 57743
const TIES = 57744
const UNBOUNDED = 57745
const VCPU = 57746
const VISIBLE = 57747
const FORMAT = 57748
const TREE = 57749
const VITESS = 57750
const TRADITIONAL = 57751
const LOCAL = 57752
const LOW_PRIORITY = 57753
const NO_WRITE_TO_BINLOG = 57754
const LOGS = 57755
const ERROR = 57756
const GENERAL = 57757
const HOSTS = 57758
const OPTIMIZER_COSTS = 57759
const USER_RESOURCES = 57760
const SLOW = 57761
const CHANNEL = 57762
const RELAY = 57763
const EXPORT = 57764
const AVG_ROW_LENGTH = 57765
const CONNECTION = 57766
const CHECKSUM = 57767
const DELAY_KEY_WRITE = 57768
const ENCRYPTION = 57769
const ENGINE = 57770
const INSERT_METHOD = 57771
const MAX_ROWS = 57772
const MIN_ROWS = 57773
const PACK_KEYS = 57774
const PASSWORD = 57775
const FIXED = 57776
const DYNAMIC = 57777
const COMPRESSED = 57778
const REDUNDANT = 57779
const COMPACT = 57780
const ROW_FORMAT = 57781
const STATS_AUTO_RECALC = 57782
const STATS_PERSISTENT = 57783
const STATS_SAMPLE_PAGES = 57784
const STORAGE = 57785
const MEMORY = 57786
const DISK = 57787

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 111,
	463, 111,
	-2, 117,
	-1, 45,
	143, 117,
	253, 117,
	301, 117,
	-2, 324,
	-1, 52,
	34, 463,
	164, 463,
	176, 463,
	209, 477,
	210, 477,
	-2, 465,
	-1, 57,
	166, 487,
	-2, 485,
	-1, 82,
	56, 554,
	-2, 562,
	-1, 106,
	1, 112,
	463, 112,
	-2, 117,
	-1, 116,
	169, 229,
	170, 229,
	-2, 318,
	-1, 135,
	143, 117,
	253, 117,
	301, 117,
	-2, 333,
	-1, 562,
	150, 940,
	-2, 936,
	-1, 563,
	150, 941,
	-2, 937,
	-1, 581,
	56, 555,
	-2, 567,
	-1, 582,
	56, 556,
	-2, 568,
	-1, 602,
	118, 1277,
	-2, 83,
	-1, 603,
	118, 1161,
	-2, 84,
	-1, 609,
	118, 1211,
	-2, 915,
	-1, 746,
	118, 1100,
	-2, 912,
	-1, 781,
	175, 37,
	180, 37,
	-2, 240,
	-1, 860,
	1, 371,
	463, 371,
	-2, 117,
	-1, 1092,
	1, 267,
	463, 267,
	-2, 117,
	-1, 1170,
	169, 229,
	170, 229,
	-2, 318,
	-1, 1179,
	175, 38,
	180, 38,
	-2, 241,
	-1, 1383,
	150, 943,
	-2, 939,
	-1, 1475,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1496,
	1, 268,
	463, 268,
	-2, 117,
	-1, 1902,
	5, 809,
	18, 809,
	20, 809,
	32, 809,
	83, 809,
	-2, 593,
	-1, 2114,
	46, 883,
	-2, 881,
}

const yyPrivate = 57344

const yyLast = 27502

var yyAct = [...]int{
	562, 2195, 1954, 2182, 2114, 1816, 2159, 1706, 2123, 914,
	1785, 506, 535, 2043, 2065, 1406, 1882, 1673, 1493, 1951,
	1707, 1420, 1883, 521, 574, 1879, 1526, 995, 1558, 1771,
	144, 1693, 1770, 872, 1789, 1894, 504, 1369, 750, 1040,
	1377, 1047, 811, 1841, 1633, 1531, 81, 3, 175, 1769,
	1155, 187, 1556, 469, 187, 1177, 130, 1472, 1533, 485,
	776, 187, 1301, 1763, 607, 1084, 1288, 1077, 1461, 187,
	1454, 1050, 1045, 583, 79, 1070, 1422, 1033, 1403, 568,
	1068, 32, 508, 1067, 1346, 1195, 1605, 931, 1437, 754,
	485, 1074, 497, 485, 187, 485, 757, 577, 763, 604,
	1184, 782, 779, 1267, 758, 777, 778, 1380, 1522, 1083,
	1477, 1304, 1057, 77, 107, 147, 108, 789, 492, 1008,
	853, 8, 1081, 1512, 76, 1149, 174, 1009, 1154, 7,
	6, 1587, 1169, 1254, 113, 114, 1808, 1807, 1829, 2067,
	1830, 1417, 1418, 912, 176, 177, 178, 1335, 1334, 1333,
	1332, 1331, 1330, 751, 1323, 2151, 589, 593, 1671, 569,
	109, 495, 2111, 496, 1928, 2022, 816, 176, 177, 178,
	187, 2089, 2088, 815, 2038, 813, 447, 2039, 115, 814,
	187, 493, 866, 2201, 2156, 187, 2194, 2134, 827, 828,
	78, 831, 832, 833, 834, 1156, 1623, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 601, 608, 82, 2185, 1536, 932, 1955, 1575,
	792, 770, 109, 769, 1511, 1858, 2155, 460, 2133, 1986,
	768, 1909, 1910, 771, 1594, 793, 461, 1672, 1593, 817,
	818, 819, 102, 1085, 34, 1086, 458, 70, 38, 39,
	84, 85, 86, 87, 88, 89, 168, 173, 1478, 932,
	1908, 824, 1828, 1419, 104, 180, 181, 182, 1488, 1489,
	547, 829, 553, 554, 551, 552, 1621, 550, 549, 548,
	1487, 110, 942, 132, 473, 455, 566, 555, 556, 565,
	109, 1754, 152, 1505, 467, 1535, 1977, 104, 96, 97,
	1737, 1818, 882, 1736, 100, 880, 1738, 99, 98, 830,
	176, 177, 178, 1975, 1324, 1325, 1326, 891, 892, 69,
	772, 893, 910, 142, 942, 894, 891, 892, 131, 2136,
	483, 1322, 472, 481, 487, 1790, 473, 1812, 1557, 1590,
	1268, 2184, 104, 169, 1813, 1273, 149, 854, 150, 908,
	176, 177, 178, 119, 120, 141, 140, 167, 888, 1276,
	1244, 1277, 1278, 448, 449, 450, 1821, 465, 466, 476,
	2152, 938, 1819, 462, 464, 477, 451, 452, 479, 478,
	861, 454, 453, 1272, 472, 457, 474, 886, 887, 901,
	883, 903, 1602, 881, 1751, 1746, 884, 885, 930, 1274,
	909, 1245, 836, 1246, 835, 136, 117, 143, 124, 116,
	1820, 137, 138, 938, 1270, 153, 103, 2085, 2033, 473,
	1559, 800, 798, 1455, 1271, 158, 125, 1927, 900, 902,
	473, 809, 808, 807, 806, 805, 773, 804, 1747, 803,
	128, 126, 121, 122, 123, 127, 802, 187, 797, 103,
	118, 1163, 810, 864, 2034, 2202, 784, 1537, 2171, 129,
	1749, 895, 899, 1744, 755, 172, 595, 472, 1609, 1592,
	485, 485, 485, 755, 1842, 1745, 1478, 753, 472, 865,
	106, 762, 875, 876, 877, 878, 879, 1822, 485, 485,
	896, 1581, 2132, 755, 103, 2199, 1183, 1182, 785, 1281,
	1674, 1676, 911, 937, 934, 935, 936, 941, 943, 940,
	475, 939, 1622, 801, 799, 918, 791, 1844, 933, 473,
	820, 2124, 906, 1779, 1589, 898, 145, 1867, 470, 1800,
	791, 1866, 1865, 766, 1752, 1750, 924, 2137, 765, 764,
	897, 446, 179, 471, 1494, 937, 934, 935, 936, 941,
	943, 940, 2118, 939, 1256, 1255, 1257, 1258, 1259, 1601,
	933, 71, 1600, 1577, 1607, 2006, 187, 472, 1907, 1606,
	1698, 791, 1607, 826, 1846, 139, 1850, 1606, 1845, 791,
	1843, 1652, 980, 981, 1641, 1848, 978, 133, 1567, 1483,
	134, 1061, 485, 993, 1847, 187, 1675, 187, 187, 889,
	485, 791, 1649, 870, 858, 968, 485, 1849, 1851, 604,
	1037, 927, 1733, 958, 915, 916, 968, 1038, 996, 925,
	926, 1302, 791, 2101, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 867, 868, 968, 1433,
	1748, 1034, 2197, 1305, 1319, 2198, 948, 2196, 874, 1153,
	1860, 790, 905, 2093, 1066, 860, 812, 1051, 784, 787,
	788, 1892, 755, 1269, 907, 790, 781, 785, 1011, 1013,
	1015, 1017, 1019, 1021, 1022, 1087, 1012, 1014, 928, 1018,
	1020, 859, 1023, 1031, 855, 780, 856, 1576, 1049, 857,
	1648, 146, 151, 148, 154, 155, 156, 157, 159, 160,
	161, 162, 1404, 92, 1659, 501, 790, 163, 164, 165,
	166, 1404, 794, 784, 790, 761, 825, 176, 177, 178,
	980, 981, 795, 608, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 790, 1303, 968, 1912,
	796, 980, 981, 784, 787, 788, 1574, 755, 93, 1054,
	187, 781, 785, 2203, 1145, 1353, 945, 790, 1572, 1306,
	1435, 873, 187, 794, 784, 1157, 1158, 1159, 1160, 1351,
	1352, 1350, 948, 795, 946, 947, 945, 1759, 947, 945,
	485, 800, 1179, 1634, 798, 2186, 1039, 176, 177, 178,
	1188, 1371, 948, 1647, 1192, 948, 2021, 485, 485, 2020,
	485, 1646, 485, 485, 1189, 485, 485, 485, 485, 485,
	485, 2176, 1869, 2187, 1161, 1162, 171, 767, 1175, 1569,
	485, 2204, 1569, 1434, 187, 1228, 946, 947, 945, 1223,
	1224, 2102, 1168, 961, 962, 963, 964, 965, 958, 2177,
	1241, 968, 1933, 1573, 948, 1187, 1571, 1372, 946, 947,
	945, 485, 1263, 1082, 1438, 1439, 1261, 1767, 1225, 187,
	1870, 2189, 1341, 1343, 1344, 187, 948, 1766, 187, 1287,
	1540, 187, 1231, 1232, 1342, 1626, 1627, 1628, 1237, 1238,
	1144, 1151, 187, 1197, 187, 1198, 1251, 1200, 1202, 1186,
	1264, 1206, 1208, 1210, 1212, 1214, 485, 485, 485, 187,
	485, 485, 187, 485, 485, 1185, 1185, 1165, 1178, 1166,
	1164, 1262, 760, 1249, 1293, 1260, 1295, 1248, 1297, 1298,
	1299, 1300, 959, 960, 961, 962, 963, 964, 965, 958,
	69, 187, 968, 578, 1247, 1290, 946, 947, 945, 946,
	947, 945, 1349, 599, 1226, 1250, 1239, 1862, 946, 947,
	945, 1233, 1230, 1307, 948, 1229, 1282, 948, 176, 177,
	178, 1204, 1740, 2188, 1347, 2178, 948, 2167, 2056, 1370,
	1768, 2018, 1994, 1915, 1871, 770, 109, 769, 1373, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 1776, 485, 968, 946, 947, 945, 524, 523, 526,
	527, 528, 529, 1381, 1764, 1617, 525, 1585, 530, 594,
	1385, 1386, 948, 1392, 1395, 1584, 1317, 1374, 1375, 1405,
	1291, 1252, 1329, 1240, 1236, 485, 485, 563, 176, 177,
	178, 1235, 1551, 1234, 1348, 1815, 187, 578, 1387, 1308,
	1309, 1310, 2083, 1312, 1313, 2082, 1315, 1316, 1880, 485,
	80, 176, 177, 178, 1429, 1549, 187, 1891, 1383, 485,
	1382, 996, 1428, 187, 1427, 187, 1940, 2170, 1411, 1412,
	1953, 1381, 1440, 187, 187, 176, 177, 178, 188, 1242,
	485, 188, 1792, 485, 1940, 2130, 486, 1778, 188, 604,
	78, 1891, 604, 1502, 485, 1694, 188, 596, 597, 176,
	177, 178, 1940, 2119, 1447, 1388, 1389, 2001, 1384, 1394,
	1397, 1398, 1940, 578, 1940, 2091, 1446, 486, 1457, 1473,
	486, 188, 486, 1497, 944, 1448, 1383, 1694, 1452, 2036,
	578, 1479, 1498, 2092, 1410, 1569, 578, 1413, 1414, 966,
	967, 959, 960, 961, 962, 963, 964, 965, 958, 485,
	1940, 968, 2004, 578, 1501, 1940, 1945, 485, 1925, 1924,
	1921, 1922, 1548, 1550, 1458, 1476, 1921, 1920, 578, 1458,
	1528, 1450, 1446, 578, 1446, 485, 1478, 1809, 1148, 1794,
	1923, 485, 1787, 1788, 1458, 1188, 1481, 1188, 1458, 578,
	1485, 944, 578, 1480, 1486, 1568, 1891, 188, 1534, 1500,
	1499, 1482, 1484, 608, 1148, 1147, 608, 188, 1093, 1092,
	1570, 1664, 188, 1555, 34, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 485, 1506, 1370, 1507, 1508,
	1509, 1510, 1370, 1370, 1529, 1727, 1663, 1446, 1539, 1701,
	1565, 1569, 1566, 1478, 1518, 1519, 1520, 1521, 34, 1524,
	1525, 1552, 1436, 1538, 34, 1541, 1415, 1479, 1327, 1989,
	1280, 571, 1702, 1578, 1580, 1569, 591, 187, 1529, 1582,
	1583, 187, 187, 187, 187, 187, 792, 1561, 1579, 1079,
	1560, 187, 187, 775, 1564, 187, 1545, 1546, 1547, 69,
	2023, 793, 774, 2122, 1817, 1988, 2072, 69, 2045, 1952,
	2012, 1185, 1150, 187, 187, 187, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 187, 1480,
	968, 187, 485, 69, 1527, 1814, 2046, 1478, 1773, 69,
	1562, 498, 1513, 1514, 1515, 1611, 69, 1523, 2024, 2025,
	2026, 1615, 957, 956, 966, 967, 959, 960, 961, 962,
	963, 964, 965, 958, 1517, 1516, 968, 952, 1588, 955,
	1266, 1180, 1176, 1347, 1146, 969, 970, 971, 972, 973,
	974, 975, 1610, 953, 954, 951, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 1219, 1636,
	968, 94, 173, 1637, 2027, 1156, 1463, 1466, 1467, 1468,
	1464, 1772, 1465, 1469, 1644, 1645, 1895, 1896, 1216, 2191,
	1651, 2183, 1643, 1654, 1655, 1620, 187, 1895, 1896, 1898,
	1880, 1661, 1783, 1662, 187, 1782, 1665, 1666, 1667, 1668,
	1669, 2173, 1781, 1348, 1543, 1629, 1220, 1221, 1222, 2028,
	2029, 1320, 1679, 1284, 1718, 1716, 1773, 1901, 187, 1719,
	1717, 1900, 1715, 1217, 1218, 1720, 1714, 1467, 1468, 187,
	187, 187, 187, 187, 1642, 2154, 569, 1872, 1680, 1708,
	1683, 187, 1048, 2005, 188, 187, 1943, 1692, 187, 187,
	1687, 1658, 187, 187, 187, 1699, 1638, 1639, 1723, 1724,
	1691, 1034, 2142, 1670, 2139, 1739, 2175, 486, 486, 486,
	1678, 1703, 2158, 2160, 1681, 1696, 101, 1656, 2166, 1686,
	2113, 2165, 1682, 1758, 2115, 486, 486, 1279, 1695, 564,
	1777, 1725, 1697, 822, 821, 1041, 1964, 1742, 1772, 1827,
	1757, 917, 1760, 1761, 1762, 1728, 1400, 1042, 1721, 1730,
	1710, 1711, 1709, 1713, 187, 1712, 1726, 584, 1290, 1802,
	1731, 1401, 1734, 170, 485, 2070, 183, 1801, 110, 1743,
	485, 1917, 585, 485, 584, 1188, 1916, 1563, 1194, 1791,
	485, 1431, 1193, 1795, 1181, 1999, 1542, 1797, 1775, 585,
	1283, 1765, 1806, 1534, 2084, 1052, 1053, 587, 2040, 586,
	187, 1774, 1471, 188, 1463, 1466, 1467, 1468, 1464, 1805,
	1465, 1469, 581, 582, 587, 1690, 586, 1438, 1439, 1168,
	187, 572, 573, 1689, 1804, 1625, 575, 2180, 2179, 486,
	1796, 2163, 188, 2143, 188, 188, 1998, 486, 1939, 1553,
	576, 1803, 1383, 486, 1382, 80, 1997, 1875, 1694, 2193,
	2192, 571, 485, 1653, 1650, 1062, 1055, 2193, 1370, 2116,
	1914, 1838, 1432, 78, 1835, 1836, 1345, 83, 1823, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 75, 1831, 1, 1825, 485, 1826,
	456, 1837, 1416, 1840, 1839, 1852, 1032, 468, 2181, 187,
	1253, 1243, 1853, 1956, 2042, 1946, 1532, 783, 1859, 485,
	135, 1495, 1496, 2126, 91, 485, 485, 748, 1838, 1881,
	90, 786, 904, 1708, 1554, 1884, 1407, 2037, 1753, 1504,
	1887, 1099, 1097, 1098, 1878, 1096, 1101, 1100, 187, 1095,
	1321, 482, 1755, 1756, 1470, 1088, 1056, 823, 1890, 1926,
	1318, 1902, 1586, 463, 890, 459, 976, 1688, 1899, 1735,
	605, 598, 1886, 2164, 2140, 2138, 2112, 2066, 1903, 2141,
	1905, 2110, 1906, 1868, 2174, 2157, 1503, 949, 1430, 1044,
	1996, 1874, 1911, 1657, 1918, 1919, 1005, 188, 1934, 1402,
	187, 1071, 187, 187, 187, 1904, 507, 1426, 485, 188,
	1340, 1889, 522, 519, 520, 1441, 1700, 950, 505, 499,
	1929, 187, 1942, 498, 1930, 1063, 1462, 486, 1460, 1459,
	1285, 1075, 1006, 1897, 1893, 1931, 1932, 1069, 1957, 485,
	485, 485, 1445, 187, 486, 486, 1941, 486, 1947, 486,
	486, 1965, 486, 486, 486, 486, 486, 486, 1950, 1949,
	1944, 1591, 1043, 1046, 1811, 1534, 929, 486, 580, 494,
	95, 188, 1399, 1967, 2100, 1624, 1985, 1969, 579, 1962,
	1963, 60, 37, 489, 1968, 2150, 920, 588, 1978, 1979,
	31, 30, 29, 1973, 28, 23, 22, 21, 486, 20,
	19, 25, 18, 17, 1993, 16, 188, 105, 47, 44,
	42, 112, 188, 111, 45, 188, 41, 862, 188, 27,
	26, 2002, 2003, 1708, 15, 2007, 14, 2000, 13, 188,
	12, 188, 2009, 11, 10, 9, 5, 4, 923, 24,
	994, 2, 0, 486, 486, 486, 188, 486, 486, 188,
	486, 486, 2008, 0, 0, 534, 2015, 0, 2016, 0,
	485, 485, 0, 0, 0, 2014, 0, 0, 0, 0,
	2031, 0, 0, 485, 0, 2030, 485, 0, 188, 0,
	0, 0, 2035, 2041, 0, 2044, 0, 0, 1970, 1971,
	0, 1972, 2049, 0, 1974, 0, 1976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 480,
	0, 485, 485, 485, 187, 0, 186, 0, 0, 0,
	0, 2059, 2061, 2062, 186, 485, 2060, 485, 2047, 0,
	2055, 0, 0, 485, 1884, 2063, 0, 0, 1884, 486,
	592, 592, 2075, 2078, 2071, 0, 2069, 0, 0, 186,
	0, 0, 0, 2077, 0, 187, 2080, 0, 2081, 2079,
	0, 0, 0, 0, 0, 0, 485, 187, 0, 0,
	2073, 0, 486, 486, 0, 0, 2094, 1630, 1631, 1632,
	0, 0, 0, 188, 0, 2087, 2096, 2097, 2098, 2099,
	0, 2103, 0, 2104, 2105, 2106, 486, 2107, 2108, 0,
	0, 2109, 0, 188, 0, 1884, 486, 2090, 0, 2117,
	188, 0, 188, 485, 485, 1995, 0, 0, 0, 0,
	188, 188, 2044, 2127, 0, 186, 2125, 486, 0, 0,
	486, 1983, 0, 0, 0, 186, 2131, 0, 0, 485,
	186, 486, 0, 485, 2144, 2135, 0, 0, 1708, 2146,
	0, 2120, 0, 2149, 0, 0, 2153, 0, 0, 0,
	0, 1292, 0, 2162, 2161, 2017, 0, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 2172, 0, 0, 0,
	1982, 0, 0, 2168, 2169, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 486, 2190, 0, 0, 0, 0,
	0, 1116, 110, 0, 0, 2200, 2048, 0, 0, 0,
	0, 0, 486, 152, 1981, 0, 0, 0, 486, 0,
	0, 1336, 1337, 1338, 1339, 0, 0, 0, 0, 2064,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 149, 0, 150,
	0, 0, 0, 0, 0, 0, 1390, 1391, 167, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 188, 0, 0, 0, 188, 188,
	188, 188, 188, 498, 1104, 0, 0, 0, 188, 188,
	0, 0, 188, 957, 956, 966, 967, 959, 960, 961,
	962, 963, 964, 965, 958, 0, 153, 968, 0, 0,
	188, 188, 188, 0, 0, 0, 158, 0, 0, 0,
	1833, 1834, 0, 0, 1980, 188, 0, 1117, 188, 486,
	484, 0, 0, 0, 1492, 1854, 1855, 0, 1856, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 186, 0, 752, 0, 759, 0, 0, 0,
	0, 0, 0, 1130, 1133, 1134, 1135, 1136, 1137, 1138,
	0, 1139, 1140, 1141, 1142, 1143, 1118, 1119, 1120, 1121,
	1102, 1103, 1131, 1530, 1105, 0, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 188, 1913, 957, 956, 966, 967, 959, 960, 961,
	962, 963, 964, 965, 958, 0, 0, 968, 0, 0,
	0, 168, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 188, 188, 188,
	188, 0, 0, 0, 1132, 0, 110, 1832, 188, 0,
	0, 186, 188, 0, 0, 188, 188, 152, 0, 188,
	188, 188, 0, 0, 0, 0, 592, 957, 956, 966,
	967, 959, 960, 961, 962, 963, 964, 965, 958, 0,
	186, 968, 186, 1078, 0, 0, 0, 0, 1966, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 188, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 0, 486, 0, 0,
	486, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 146, 151, 148, 154, 155, 156, 157, 159,
	160, 161, 162, 0, 0, 0, 0, 188, 163, 164,
	165, 166, 1635, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	158, 0, 957, 956, 966, 967, 959, 960, 961, 962,
	963, 964, 965, 958, 0, 0, 968, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 0, 486,
	968, 1660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 2050, 2051, 2052, 2053,
	2054, 0, 0, 0, 2057, 2058, 0, 186, 0, 0,
	0, 1684, 1685, 1046, 0, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 486, 0, 1191, 0,
	0, 0, 486, 486, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 1191, 1191, 188, 0, 0, 0, 186,
	0, 606, 606, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 919,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	186, 0, 185, 186, 0, 0, 1289, 188, 0, 188,
	188, 188, 488, 0, 0, 486, 0, 186, 0, 186,
	567, 0, 0, 0, 0, 0, 0, 2147, 188, 0,
	0, 0, 0, 0, 186, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 756, 486, 486, 486, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 151, 148, 154,
	155, 156, 157, 159, 160, 161, 162, 0, 0, 0,
	0, 852, 163, 164, 165, 166, 1861, 0, 592, 1289,
	0, 863, 0, 592, 592, 0, 869, 592, 592, 592,
	0, 0, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 592, 592, 592, 592, 592, 486, 486, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 0, 0, 486, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 1289, 186, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 186, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 486,
	486, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 486, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 0, 0, 536, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 486, 188, 0, 0, 0, 0, 0,
	0, 33, 0, 0, 1190, 0, 0, 0, 1196, 1196,
	0, 1196, 0, 1196, 1196, 0, 1205, 1196, 1196, 1196,
	1196, 1196, 0, 0, 0, 0, 0, 0, 0, 1190,
	1190, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 486, 0, 0, 0, 570, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 0, 486, 0, 0, 0,
	486, 0, 498, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 2011, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 606, 606,
	0, 606, 606, 0, 606, 606, 0, 0, 871, 0,
	0, 0, 186, 0, 0, 0, 186, 186, 186, 186,
	186, 0, 0, 0, 0, 0, 186, 186, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1612, 1613,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 2068, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1376, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 592, 1408, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 1065, 0, 0, 1076,
	1059, 186, 0, 606, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 606, 0, 0, 0, 0, 0,
	0, 0, 592, 186, 0, 752, 0, 0, 0, 0,
	0, 0, 0, 1191, 186, 186, 186, 186, 186, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 0, 0,
	186, 0, 0, 186, 186, 0, 0, 186, 1732, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 1544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1152, 0, 0, 752, 913, 913, 913,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	977, 979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 592, 0, 0, 0,
	0, 992, 0, 0, 0, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 0, 1007, 1010, 1010, 1010, 1016, 1010,
	1010, 1016, 1010, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1275, 0, 0, 1619, 0, 1036, 1076, 0, 33, 1286,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 1296, 0, 1191, 0, 0,
	0, 0, 0, 0, 1072, 0, 0, 0, 0, 0,
	1311, 0, 0, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 186, 0, 186, 186, 186,
	0, 0, 110, 0, 132, 0, 1191, 0, 0, 0,
	0, 0, 0, 152, 168, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 110,
	0, 132, 0, 0, 142, 0, 0, 0, 0, 131,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 150,
	0, 0, 0, 0, 1171, 1172, 141, 140, 167, 0,
	0, 142, 0, 0, 0, 0, 131, 1449, 0, 0,
	0, 0, 0, 0, 1453, 0, 1456, 0, 0, 0,
	0, 0, 0, 0, 149, 1475, 150, 1191, 0, 0,
	0, 1171, 1172, 141, 140, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 136, 1173, 143, 1190,
	1170, 1793, 137, 138, 1786, 0, 153, 0, 0, 606,
	0, 1798, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 1173, 143, 0, 1170, 0, 137,
	138, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 913, 913, 913, 0, 913, 913, 0,
	913, 913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 1196,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 1190, 0, 0, 1888, 1196, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 1076, 0,
	0, 0, 1595, 1596, 1597, 1598, 1599, 0, 133, 0,
	0, 134, 1603, 1604, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1191, 139, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 134, 1616,
	0, 0, 1618, 0, 0, 0, 0, 0, 0, 752,
	0, 0, 1190, 0, 0, 0, 0, 0, 34, 35,
	36, 70, 38, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 0,
	1958, 1959, 1960, 40, 66, 67, 0, 64, 68, 0,
	1474, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 146, 151, 148, 154, 155, 156, 157, 159,
	160, 161, 162, 0, 0, 0, 0, 0, 163, 164,
	165, 166, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 146,
	151, 148, 154, 155, 156, 157, 159, 160, 161, 162,
	0, 0, 0, 1190, 0, 163, 164, 165, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 1786, 2032, 0, 0, 43, 46, 49, 48, 51,
	0, 63, 0, 0, 1786, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 73, 72, 0,
	0, 61, 62, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 1786, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1780, 2074, 0, 2076, 0,
	0, 0, 0, 0, 1786, 0, 0, 54, 55, 0,
	56, 57, 58, 59, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 1190, 0,
	2145, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 570, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1072, 0, 0, 0, 0,
	0, 0, 1704, 1705, 0, 0, 1072, 1072, 1072, 1072,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1474, 0, 0, 1072, 0, 0, 0, 1072,
	0, 1935, 0, 1936, 1937, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 1990, 1991, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 33, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 717, 33, 2121, 666, 733, 637, 655, 742, 657,
	660, 700, 617, 679, 329, 652, 0, 641, 613, 648,
	614, 639, 668, 240, 672, 636, 719, 682, 732, 287,
	0, 619, 642, 342, 702, 379, 226, 296, 294, 406,
	250, 243, 239, 225, 271, 302, 340, 397, 334, 739,
	291, 689, 0, 388, 314, 0, 0, 0, 670, 722,
	677, 713, 665, 701, 626, 688, 734, 653, 697, 735,
	277, 224, 194, 326, 389, 253, 0, 0, 0, 176,
	177, 178, 0, 2128, 2129, 0, 0, 0, 0, 0,
	216, 0, 222, 694, 729, 650, 696, 236, 275, 242,
	235, 404, 699, 745, 612, 691, 0, 615, 618, 741,
	725, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	669, 678, 710, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 0, 687, 0, 0, 0, 622, 616,
	0, 0, 0, 0, 667, 0, 0, 0, 625, 0,
	644, 711, 0, 610, 261, 620, 315, 715, 724, 664,
	432, 728, 662, 661, 731, 706, 623, 721, 656, 286,
	621, 283, 190, 204, 0, 654, 325, 363, 369, 720,
	640, 649, 227, 647, 367, 338, 419, 212, 251, 360,
	343, 365, 686, 704, 366, 292, 408, 355, 418, 433,
	434, 234, 319, 425, 401, 430, 442, 205, 231, 332,
	394, 422, 385, 312, 405, 282, 384, 259, 193, 290,
	197, 396, 416, 217, 377, 0, 0, 0, 199, 414,
	393, 309, 279, 280, 198, 0, 359, 238, 257, 229,
	328, 411, 412, 228, 444, 207, 429, 201, 208, 428,
	321, 407, 415, 310, 301, 200, 413, 308, 300, 285,
	248, 267, 353, 295, 354, 268, 317, 316, 318, 0,
	195, 0, 390, 423, 445, 214, 635, 716, 403, 438,
	441, 0, 356, 215, 258, 247, 352, 256, 288, 437,
	439, 440, 213, 350, 264, 320, 209, 270, 386, 284,
	293, 708, 744, 337, 368, 218, 421, 387, 630, 634,
	628, 629, 680, 681, 631, 736, 737, 738, 712, 624,
	0, 632, 633, 0, 718, 726, 727, 685, 189, 202,
	289, 740, 357, 254, 443, 427, 424, 611, 627, 233,
	638, 0, 0, 651, 658, 659, 671, 673, 674, 675,
	676, 684, 692, 693, 695, 703, 705, 707, 709, 714,
	723, 743, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 375, 376, 380, 381, 382,
	383, 391, 395, 409, 410, 420, 431, 435, 263, 417,
	436, 0, 297, 683, 690, 299, 249, 265, 274, 698,
	426, 392, 206, 364, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 341, 344, 260, 241, 221, 361,
	219, 378, 398, 399, 400, 402, 311, 237, 730, 717,
	0, 0, 666, 733, 637, 655, 742, 657, 660, 700,
	617, 679, 329, 652, 0, 641, 613, 648, 614, 639,
	668, 240, 672, 636, 719, 682, 732, 287, 0, 619,
	642, 342, 702, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 739, 291, 689,
	0, 388, 314, 0, 0, 0, 670, 722, 677, 713,
	665, 701, 626, 688, 734, 653, 697, 735, 277, 224,
	194, 326, 389, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 694, 729, 650, 696, 236, 275, 242, 235, 404,
	699, 745, 612, 691, 0, 615, 618, 741, 725, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 669, 678,
	710, 663, 0, 0, 0, 0, 0, 0, 1877, 0,
	643, 0, 687, 0, 0, 0, 622, 616, 0, 0,
	0, 0, 667, 0, 0, 0, 625, 0, 644, 711,
	0, 610, 261, 620, 315, 715, 724, 664, 432, 728,
	662, 661, 731, 706, 623, 721, 656, 286, 621, 283,
	190, 204, 0, 654, 325, 363, 369, 720, 640, 649,
	227, 647, 367, 338, 419, 212, 251, 360, 343, 365,
	686, 704, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 208, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 635, 716, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 320, 209, 270, 386, 284, 293, 708,
	744, 337, 368, 218, 421, 387, 630, 634, 628, 629,
	680, 681, 631, 736, 737, 738, 712, 624, 0, 632,
	633, 0, 718, 726, 727, 685, 189, 202, 289, 740,
	357, 254, 443, 427, 424, 611, 627, 233, 638, 0,
	0, 651, 658, 659, 671, 673, 674, 675, 676, 684,
	692, 693, 695, 703, 705, 707, 709, 714, 723, 743,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 683, 690, 299, 249, 265, 274, 698, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 730, 717, 0, 0,
	666, 733, 637, 655, 742, 657, 660, 700, 617, 679,
	329, 652, 0, 641, 613, 648, 614, 639, 668, 240,
	672, 636, 719, 682, 732, 287, 0, 619, 642, 342,
	702, 379, 226, 296, 294, 406, 250, 243, 239, 225,
	271, 302, 340, 397, 334, 739, 291, 689, 0, 388,
	314, 0, 0, 0, 670, 722, 677, 713, 665, 701,
	626, 688, 734, 653, 697, 735, 277, 224, 194, 326,
	389, 253, 0, 0, 0, 176, 177, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 222, 694,
	729, 650, 696, 236, 275, 242, 235, 404, 699, 745,
	612, 691, 0, 615, 618, 741, 725, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 669, 678, 710, 663,
	0, 0, 0, 0, 0, 0, 1733, 0, 643, 0,
	687, 0, 0, 0, 622, 616, 0, 0, 0, 0,
	667, 0, 0, 0, 625, 0, 644, 711, 0, 610,
	261, 620, 315, 715, 724, 664, 432, 728, 662, 661,
	731, 706, 623, 721, 656, 286, 621, 283, 190, 204,
	0, 654, 325, 363, 369, 720, 640, 649, 227, 647,
	367, 338, 419, 212, 251, 360, 343, 365, 686, 704,
	366, 292, 408, 355, 418, 433, 434, 234, 319, 425,
	401, 430, 442, 205, 231, 332, 394, 422, 385, 312,
	405, 282, 384, 259, 193, 290, 197, 396, 416, 217,
	377, 0, 0, 0, 199, 414, 393, 309, 279, 280,
	198, 0, 359, 238, 257, 229, 328, 411, 412, 228,
	444, 207, 429, 201, 208, 428, 321, 407, 415, 310,
	301, 200, 413, 308, 300, 285, 248, 267, 353, 295,
	354, 268, 317, 316, 318, 0, 195, 0, 390, 423,
	445, 214, 635, 716, 403, 438, 441, 0, 356, 215,
	258, 247, 352, 256, 288, 437, 439, 440, 213, 350,
	264, 320, 209, 270, 386, 284, 293, 708, 744, 337,
	368, 218, 421, 387, 630, 634, 628, 629, 680, 681,
	631, 736, 737, 738, 712, 624, 0, 632, 633, 0,
	718, 726, 727, 685, 189, 202, 289, 740, 357, 254,
	443, 427, 424, 611, 627, 233, 638, 0, 0, 651,
	658, 659, 671, 673, 674, 675, 676, 684, 692, 693,
	695, 703, 705, 707, 709, 714, 723, 743, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 375, 376, 380, 381, 382, 383, 391, 395, 409,
	410, 420, 431, 435, 263, 417, 436, 0, 297, 683,
	690, 299, 249, 265, 274, 698, 426, 392, 206, 364,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	341, 344, 260, 241, 221, 361, 219, 378, 398, 399,
	400, 402, 311, 237, 730, 717, 0, 0, 666, 733,
	637, 655, 742, 657, 660, 700, 617, 679, 329, 652,
	0, 641, 613, 648, 614, 639, 668, 240, 672, 636,
	719, 682, 732, 287, 0, 619, 642, 342, 702, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 739, 291, 689, 0, 388, 314, 0,
	0, 0, 670, 722, 677, 713, 665, 701, 626, 688,
	734, 653, 697, 735, 277, 224, 194, 326, 389, 253,
	0, 0, 0, 176, 177, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 694, 729, 650,
	696, 236, 275, 242, 235, 404, 699, 745, 612, 691,
	0, 615, 618, 741, 725, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 669, 678, 710, 663, 0, 0,
	0, 0, 0, 0, 1451, 0, 643, 0, 687, 0,
	0, 0, 622, 616, 0, 0, 0, 0, 667, 0,
	0, 0, 625, 0, 644, 711, 0, 610, 261, 620,
	315, 715, 724, 664, 432, 728, 662, 661, 731, 706,
	623, 721, 656, 286, 621, 283, 190, 204, 0, 654,
	325, 363, 369, 720, 640, 649, 227, 647, 367, 338,
	419, 212, 251, 360, 343, 365, 686, 704, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 416, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 208, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	635, 716, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 320,
	209, 270, 386, 284, 293, 708, 744, 337, 368, 218,
	421, 387, 630, 634, 628, 629, 680, 681, 631, 736,
	737, 738, 712, 624, 0, 632, 633, 0, 718, 726,
	727, 685, 189, 202, 289, 740, 357, 254, 443, 427,
	424, 611, 627, 233, 638, 0, 0, 651, 658, 659,
	671, 673, 674, 675, 676, 684, 692, 693, 695, 703,
	705, 707, 709, 714, 723, 743, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 683, 690, 299,
	249, 265, 274, 698, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237, 730, 717, 0, 0, 666, 733, 637, 655,
	742, 657, 660, 700, 617, 679, 329, 652, 0, 641,
	613, 648, 614, 639, 668, 240, 672, 636, 719, 682,
	732, 287, 0, 619, 642, 342, 702, 379, 226, 296,
	294, 406, 250, 243, 239, 225, 271, 302, 340, 397,
	334, 739, 291, 689, 0, 388, 314, 0, 0, 0,
	670, 722, 677, 713, 665, 701, 626, 688, 734, 653,
	697, 735, 277, 224, 194, 326, 389, 253, 69, 0,
	0, 176, 177, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 694, 729, 650, 696, 236,
	275, 242, 235, 404, 699, 745, 612, 691, 0, 615,
	618, 741, 725, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 669, 678, 710, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 0, 687, 0, 0, 0,
	622, 616, 0, 0, 0, 0, 667, 0, 0, 0,
	625, 0, 644, 711, 0, 610, 261, 620, 315, 715,
	724, 664, 432, 728, 662, 661, 731, 706, 623, 721,
	656, 286, 621, 283, 190, 204, 0, 654, 325, 363,
	369, 720, 640, 649, 227, 647, 367, 338, 419, 212,
	251, 360, 343, 365, 686, 704, 366, 292, 408, 355,
	418, 433, 434, 234, 319, 425, 401, 430, 442, 205,
	231, 332, 394, 422, 385, 312, 405, 282, 384, 259,
	193, 290, 197, 396, 416, 217, 377, 0, 0, 0,
	199, 414, 393, 309, 279, 280, 198, 0, 359, 238,
	257, 229, 328, 411, 412, 228, 444, 207, 429, 201,
	208, 428, 321, 407, 415, 310, 301, 200, 413, 308,
	300, 285, 248, 267, 353, 295, 354, 268, 317, 316,
	318, 0, 195, 0, 390, 423, 445, 214, 635, 716,
	403, 438, 441, 0, 356, 215, 258, 247, 352, 256,
	288, 437, 439, 440, 213, 350, 264, 320, 209, 270,
	386, 284, 293, 708, 744, 337, 368, 218, 421, 387,
	630, 634, 628, 629, 680, 681, 631, 736, 737, 738,
	712, 624, 0, 632, 633, 0, 718, 726, 727, 685,
	189, 202, 289, 740, 357, 254, 443, 427, 424, 611,
	627, 233, 638, 0, 0, 651, 658, 659, 671, 673,
	674, 675, 676, 684, 692, 693, 695, 703, 705, 707,
	709, 714, 723, 743, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 375, 376, 380,
	381, 382, 383, 391, 395, 409, 410, 420, 431, 435,
	263, 417, 436, 0, 297, 683, 690, 299, 249, 265,
	274, 698, 426, 392, 206, 364, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 341, 344, 260, 241,
	221, 361, 219, 378, 398, 399, 400, 402, 311, 237,
	730, 717, 0, 0, 666, 733, 637, 655, 742, 657,
	660, 700, 617, 679, 329, 652, 0, 641, 613, 648,
	614, 639, 668, 240, 672, 636, 719, 682, 732, 287,
	0, 619, 642, 342, 702, 379, 226, 296, 294, 406,
	250, 243, 239, 225, 271, 302, 340, 397, 334, 739,
	291, 689, 0, 388, 314, 0, 0, 0, 670, 722,
	677, 713, 665, 701, 626, 688, 734, 653, 697, 735,
	277, 224, 194, 326, 389, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 694, 729, 650, 696, 236, 275, 242,
	235, 404, 699, 745, 612, 691, 0, 615, 618, 741,
	725, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	669, 678, 710, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 0, 687, 0, 0, 0, 622, 616,
	0, 0, 0, 0, 667, 0, 0, 0, 625, 0,
	644, 711, 0, 610, 261, 620, 315, 715, 724, 664,
	432, 728, 662, 661, 731, 706, 623, 721, 656, 286,
	621, 283, 190, 204, 0, 654, 325, 363, 369, 720,
	640, 649, 227, 647, 367, 338, 419, 212, 251, 360,
	343, 365, 686, 704, 366, 292, 408, 355, 418, 433,
	434, 234, 319, 425, 401, 430, 442, 205, 231, 332,
	394, 422, 385, 312, 405, 282, 384, 259, 193, 290,
	197, 396, 416, 217, 377, 0, 0, 0, 199, 414,
	393, 309, 279, 280, 198, 0, 359, 238, 257, 229,
	328, 411, 412, 228, 444, 207, 429, 201, 208, 428,
	321, 407, 415, 310, 301, 200, 413, 308, 300, 285,
	248, 267, 353, 295, 354, 268, 317, 316, 318, 0,
	195, 0, 390, 423, 445, 214, 635, 716, 403, 438,
	441, 0, 356, 215, 258, 247, 352, 256, 288, 437,
	439, 440, 213, 350, 264, 320, 209, 270, 386, 284,
	293, 708, 744, 337, 368, 218, 421, 387, 630, 634,
	628, 629, 680, 681, 631, 736, 737, 738, 712, 624,
	0, 632, 633, 0, 718, 726, 727, 685, 189, 202,
	289, 740, 357, 254, 443, 427, 424, 611, 627, 233,
	638, 0, 0, 651, 658, 659, 671, 673, 674, 675,
	676, 684, 692, 693, 695, 703, 705, 707, 709, 714,
	723, 743, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 375, 376, 380, 381, 382,
	383, 391, 395, 409, 410, 420, 431, 435, 263, 417,
	436, 0, 297, 683, 690, 299, 249, 265, 274, 698,
	426, 392, 206, 364, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 341, 344, 260, 241, 221, 361,
	219, 378, 398, 399, 400, 402, 311, 237, 730, 717,
	0, 0, 666, 733, 637, 655, 742, 657, 660, 700,
	617, 679, 329, 652, 0, 641, 613, 648, 614, 639,
	668, 240, 672, 636, 719, 682, 732, 287, 0, 619,
	642, 342, 702, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 739, 291, 689,
	0, 388, 314, 0, 0, 0, 670, 722, 677, 713,
	665, 701, 626, 688, 734, 653, 697, 735, 277, 224,
	194, 326, 389, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 694, 729, 650, 696, 236, 275, 242, 235, 404,
	699, 745, 612, 691, 0, 615, 618, 741, 725, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 669, 678,
	710, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 0, 687, 0, 0, 0, 622, 616, 0, 0,
	0, 0, 667, 0, 0, 0, 625, 0, 644, 711,
	0, 610, 261, 620, 315, 715, 724, 664, 432, 728,
	662, 661, 731, 706, 623, 721, 656, 286, 621, 283,
	190, 204, 0, 654, 325, 363, 369, 720, 640, 649,
	227, 647, 367, 338, 419, 212, 251, 360, 343, 365,
	686, 704, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 747, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 635, 716, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 609, 746, 603, 602, 284, 293, 708,
	744, 337, 368, 218, 421, 387, 630, 634, 628, 629,
	680, 681, 631, 736, 737, 738, 712, 624, 0, 632,
	633, 0, 718, 726, 727, 685, 189, 202, 289, 740,
	357, 254, 443, 427, 424, 611, 627, 233, 638, 0,
	0, 651, 658, 659, 671, 673, 674, 675, 676, 684,
	692, 693, 695, 703, 705, 707, 709, 714, 723, 743,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 683, 690, 299, 249, 265, 274, 698, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 730, 717, 0, 0,
	666, 733, 637, 655, 742, 657, 660, 700, 617, 679,
	329, 652, 0, 641, 613, 648, 614, 639, 668, 240,
	672, 636, 719, 682, 732, 287, 0, 619, 642, 342,
	702, 379, 226, 296, 294, 406, 250, 243, 239, 225,
	271, 302, 340, 397, 334, 739, 291, 689, 0, 388,
	314, 0, 0, 0, 670, 722, 677, 713, 665, 701,
	626, 688, 734, 653, 697, 735, 277, 224, 194, 326,
	389, 253, 0, 0, 0, 176, 177, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 222, 694,
	729, 650, 696, 236, 275, 242, 235, 404, 699, 745,
	612, 691, 0, 615, 618, 741, 725, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 669, 678, 710, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 0,
	687, 0, 0, 0, 622, 616, 0, 0, 0, 0,
	667, 0, 0, 0, 625, 0, 644, 711, 0, 610,
	261, 620, 315, 715, 724, 664, 432, 728, 662, 661,
	731, 706, 623, 721, 656, 286, 621, 283, 190, 204,
	0, 654, 325, 363, 369, 720, 640, 649, 227, 647,
	367, 338, 419, 212, 251, 360, 343, 365, 686, 704,
	366, 292, 408, 355, 418, 433, 434, 234, 319, 425,
	401, 430, 442, 205, 231, 332, 394, 422, 385, 312,
	405, 282, 384, 259, 193, 290, 197, 396, 1080, 217,
	377, 0, 0, 0, 199, 414, 393, 309, 279, 280,
	198, 0, 359, 238, 257, 229, 328, 411, 412, 228,
	444, 207, 429, 201, 747, 428, 321, 407, 415, 310,
	301, 200, 413, 308, 300, 285, 248, 267, 353, 295,
	354, 268, 317, 316, 318, 0, 195, 0, 390, 423,
	445, 214, 635, 716, 403, 438, 441, 0, 356, 215,
	258, 247, 352, 256, 288, 437, 439, 440, 213, 350,
	264, 609, 746, 603, 602, 284, 293, 708, 744, 337,
	368, 218, 421, 387, 630, 634, 628, 629, 680, 681,
	631, 736, 737, 738, 712, 624, 0, 632, 633, 0,
	718, 726, 727, 685, 189, 202, 289, 740, 357, 254,
	443, 427, 424, 611, 627, 233, 638, 0, 0, 651,
	658, 659, 671, 673, 674, 675, 676, 684, 692, 693,
	695, 703, 705, 707, 709, 714, 723, 743, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 375, 376, 380, 381, 382, 383, 391, 395, 409,
	410, 420, 431, 435, 263, 417, 436, 0, 297, 683,
	690, 299, 249, 265, 274, 698, 426, 392, 206, 364,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	341, 344, 260, 241, 221, 361, 219, 378, 398, 399,
	400, 402, 311, 237, 730, 717, 0, 0, 666, 733,
	637, 655, 742, 657, 660, 700, 617, 679, 329, 652,
	0, 641, 613, 648, 614, 639, 668, 240, 672, 636,
	719, 682, 732, 287, 0, 619, 642, 342, 702, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 739, 291, 689, 0, 388, 314, 0,
	0, 0, 670, 722, 677, 713, 665, 701, 626, 688,
	734, 653, 697, 735, 277, 224, 194, 326, 389, 253,
	0, 0, 0, 176, 177, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 694, 729, 650,
	696, 236, 275, 242, 235, 404, 699, 745, 612, 691,
	0, 615, 618, 741, 725, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 669, 678, 710, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 0, 687, 0,
	0, 0, 622, 616, 0, 0, 0, 0, 667, 0,
	0, 0, 625, 0, 644, 711, 0, 610, 261, 620,
	315, 715, 724, 664, 432, 728, 662, 661, 731, 706,
	623, 721, 656, 286, 621, 283, 190, 204, 0, 654,
	325, 363, 369, 720, 640, 649, 227, 647, 367, 338,
	419, 212, 251, 360, 343, 365, 686, 704, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 600, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 747, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	635, 716, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 609,
	746, 603, 602, 284, 293, 708, 744, 337, 368, 218,
	421, 387, 630, 634, 628, 629, 680, 681, 631, 736,
	737, 738, 712, 624, 0, 632, 633, 0, 718, 726,
	727, 685, 189, 202, 289, 740, 357, 254, 443, 427,
	424, 611, 627, 233, 638, 0, 0, 651, 658, 659,
	671, 673, 674, 675, 676, 684, 692, 693, 695, 703,
	705, 707, 709, 714, 723, 743, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 683, 690, 299,
	249, 265, 274, 698, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237, 329, 0, 0, 1378, 0, 503, 0, 0,
	0, 240, 0, 502, 0, 0, 0, 287, 0, 0,
	1379, 342, 0, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 546, 291, 0,
	0, 388, 314, 0, 0, 0, 0, 0, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 389, 253, 69, 0, 0, 176, 177, 178,
	524, 523, 526, 527, 528, 529, 0, 0, 216, 525,
	222, 530, 531, 532, 0, 236, 275, 242, 235, 404,
	0, 0, 0, 500, 517, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 590, 0,
	0, 0, 560, 0, 516, 0, 0, 509, 510, 512,
	511, 513, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 559, 0, 0, 432, 0,
	0, 557, 0, 0, 0, 0, 0, 286, 0, 283,
	190, 204, 0, 0, 325, 363, 369, 0, 0, 0,
	227, 0, 367, 338, 419, 212, 251, 360, 343, 365,
	0, 0, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 208, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 0, 0, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 320, 209, 270, 386, 284, 293, 0,
	0, 337, 368, 218, 421, 387, 547, 558, 553, 554,
	551, 552, 0, 550, 549, 548, 561, 539, 540, 541,
	542, 544, 0, 555, 556, 543, 189, 202, 289, 0,
	357, 254, 443, 427, 424, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 329, 0, 0, 0,
	0, 503, 0, 0, 0, 240, 0, 502, 0, 0,
	0, 287, 0, 0, 0, 342, 0, 379, 226, 296,
	294, 406, 250, 243, 239, 225, 271, 302, 340, 397,
	334, 546, 291, 0, 0, 388, 314, 0, 0, 0,
	0, 0, 537, 538, 0, 0, 0, 0, 0, 0,
	1490, 0, 277, 224, 194, 326, 389, 253, 69, 0,
	0, 176, 177, 178, 524, 523, 526, 527, 528, 529,
	0, 0, 216, 525, 222, 530, 531, 532, 1491, 236,
	275, 242, 235, 404, 0, 0, 0, 500, 517, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 515, 0, 0, 0, 0, 560, 0, 516, 0,
	0, 509, 510, 512, 511, 513, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 559,
	0, 0, 432, 0, 0, 557, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 363,
	369, 0, 0, 0, 227, 0, 367, 338, 419, 212,
	251, 360, 343, 365, 0, 0, 366, 292, 408, 355,
	418, 433, 434, 234, 319, 425, 401, 430, 442, 205,
	231, 332, 394, 422, 385, 312, 405, 282, 384, 259,
	193, 290, 197, 396, 416, 217, 377, 0, 0, 0,
	199, 414, 393, 309, 279, 280, 198, 0, 359, 238,
	257, 229, 328, 411, 412, 228, 444, 207, 429, 201,
	208, 428, 321, 407, 415, 310, 301, 200, 413, 308,
	300, 285, 248, 267, 353, 295, 354, 268, 317, 316,
	318, 0, 195, 0, 390, 423, 445, 214, 0, 0,
	403, 438, 441, 0, 356, 215, 258, 247, 352, 256,
	288, 437, 439, 440, 213, 350, 264, 320, 209, 270,
	386, 284, 293, 0, 0, 337, 368, 218, 421, 387,
	547, 558, 553, 554, 551, 552, 0, 550, 549, 548,
	561, 539, 540, 541, 542, 544, 0, 555, 556, 543,
	189, 202, 289, 0, 357, 254, 443, 427, 424, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 375, 376, 380,
	381, 382, 383, 391, 395, 409, 410, 420, 431, 435,
	263, 417, 436, 0, 297, 0, 0, 299, 249, 265,
	274, 0, 426, 392, 206, 364, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 341, 344, 260, 241,
	221, 361, 219, 378, 398, 399, 400, 402, 311, 237,
	329, 0, 0, 0, 0, 503, 0, 0, 0, 240,
	0, 502, 0, 0, 0, 287, 0, 0, 0, 342,
	0, 379, 226, 296, 294, 406, 250, 243, 239, 225,
	271, 302, 340, 397, 334, 546, 291, 0, 0, 388,
	314, 0, 0, 0, 0, 0, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	389, 253, 69, 0, 578, 176, 177, 178, 524, 523,
	526, 527, 528, 529, 0, 0, 216, 525, 222, 530,
	531, 532, 0, 236, 275, 242, 235, 404, 0, 0,
	0, 500, 517, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 0, 0, 0, 0,
	560, 0, 516, 0, 0, 509, 510, 512, 511, 513,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 315, 559, 0, 0, 432, 0, 0, 557,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 363, 369, 0, 0, 0, 227, 0,
	367, 338, 419, 212, 251, 360, 343, 365, 0, 0,
	366, 292, 408, 355, 418, 433, 434, 234, 319, 425,
	401, 430, 442, 205, 231, 332, 394, 422, 385, 312,
	405, 282, 384, 259, 193, 290, 197, 396, 416, 217,
	377, 0, 0, 0, 199, 414, 393, 309, 279, 280,
	198, 0, 359, 238, 257, 229, 328, 411, 412, 228,
	444, 207, 429, 201, 208, 428, 321, 407, 415, 310,
	301, 200, 413, 308, 300, 285, 248, 267, 353, 295,
	354, 268, 317, 316, 318, 0, 195, 0, 390, 423,
	445, 214, 0, 0, 403, 438, 441, 0, 356, 215,
	258, 247, 352, 256, 288, 437, 439, 440, 213, 350,
	264, 320, 209, 270, 386, 284, 293, 0, 0, 337,
	368, 218, 421, 387, 547, 558, 553, 554, 551, 552,
	0, 550, 549, 548, 561, 539, 540, 541, 542, 544,
	0, 555, 556, 543, 189, 202, 289, 0, 357, 254,
	443, 427, 424, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 375, 376, 380, 381, 382, 383, 391, 395, 409,
	410, 420, 431, 435, 263, 417, 436, 0, 297, 0,
	0, 299, 249, 265, 274, 0, 426, 392, 206, 364,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	341, 344, 260, 241, 221, 361, 219, 378, 398, 399,
	400, 402, 311, 237, 329, 0, 0, 0, 0, 503,
	0, 0, 0, 240, 0, 502, 0, 0, 0, 287,
	0, 0, 0, 342, 0, 379, 226, 296, 294, 406,
	250, 243, 239, 225, 271, 302, 340, 397, 334, 546,
	291, 0, 0, 388, 314, 0, 0, 0, 0, 0,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 224, 194, 326, 389, 253, 69, 0, 0, 176,
	177, 178, 524, 523, 526, 527, 528, 529, 0, 0,
	216, 525, 222, 530, 531, 532, 0, 236, 275, 242,
	235, 404, 0, 0, 0, 500, 517, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	590, 0, 0, 0, 560, 0, 516, 0, 0, 509,
	510, 512, 511, 513, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 315, 559, 0, 0,
	432, 0, 0, 557, 0, 0, 0, 0, 0, 286,
	0, 283, 190, 204, 0, 0, 325, 363, 369, 0,
	0, 0, 227, 0, 367, 338, 419, 212, 251, 360,
	343, 365, 0, 0, 366, 292, 408, 355, 418, 433,
	434, 234, 319, 425, 401, 430, 442, 205, 231, 332,
	394, 422, 385, 312, 405, 282, 384, 259, 193, 290,
	197, 396, 416, 217, 377, 0, 0, 0, 199, 414,
	393, 309, 279, 280, 198, 0, 359, 238, 257, 229,
	328, 411, 412, 228, 444, 207, 429, 201, 208, 428,
	321, 407, 415, 310, 301, 200, 413, 308, 300, 285,
	248, 267, 353, 295, 354, 268, 317, 316, 318, 0,
	195, 0, 390, 423, 445, 214, 0, 0, 403, 438,
	441, 0, 356, 215, 258, 247, 352, 256, 288, 437,
	439, 440, 213, 350, 264, 320, 209, 270, 386, 284,
	293, 0, 0, 337, 368, 218, 421, 387, 547, 558,
	553, 554, 551, 552, 0, 550, 549, 548, 561, 539,
	540, 541, 542, 544, 0, 555, 556, 543, 189, 202,
	289, 0, 357, 254, 443, 427, 424, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 375, 376, 380, 381, 382,
	383, 391, 395, 409, 410, 420, 431, 435, 263, 417,
	436, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	426, 392, 206, 364, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 341, 344, 260, 241, 221, 361,
	219, 378, 398, 399, 400, 402, 311, 237, 329, 0,
	0, 0, 0, 503, 0, 0, 0, 240, 0, 502,
	0, 0, 0, 287, 0, 0, 0, 342, 0, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 546, 291, 0, 0, 388, 314, 0,
	0, 0, 0, 0, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 389, 253,
	69, 0, 0, 176, 177, 178, 524, 1396, 526, 527,
	528, 529, 0, 0, 216, 525, 222, 530, 531, 532,
	0, 236, 275, 242, 235, 404, 0, 0, 0, 500,
	517, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 590, 0, 0, 0, 560, 0,
	516, 0, 0, 509, 510, 512, 511, 513, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 559, 0, 0, 432, 0, 0, 557, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 363, 369, 0, 0, 0, 227, 0, 367, 338,
	419, 212, 251, 360, 343, 365, 0, 0, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 416, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 208, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	0, 0, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 320,
	209, 270, 386, 284, 293, 0, 0, 337, 368, 218,
	421, 387, 547, 558, 553, 554, 551, 552, 0, 550,
	549, 548, 561, 539, 540, 541, 542, 544, 0, 555,
	556, 543, 189, 202, 289, 0, 357, 254, 443, 427,
	424, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237, 329, 0, 0, 0, 0, 503, 0, 0,
	0, 240, 0, 502, 0, 0, 0, 287, 0, 0,
	0, 342, 0, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 546, 291, 0,
	0, 388, 314, 0, 0, 0, 0, 0, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 389, 253, 69, 0, 0, 176, 177, 178,
	524, 1393, 526, 527, 528, 529, 0, 0, 216, 525,
	222, 530, 531, 532, 0, 236, 275, 242, 235, 404,
	0, 0, 0, 500, 517, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 590, 0,
	0, 0, 560, 0, 516, 0, 0, 509, 510, 512,
	511, 513, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 559, 0, 0, 432, 0,
	0, 557, 0, 0, 0, 0, 0, 286, 0, 283,
	190, 204, 0, 0, 325, 363, 369, 0, 0, 0,
	227, 0, 367, 338, 419, 212, 251, 360, 343, 365,
	0, 0, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 208, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 0, 0, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 320, 209, 270, 386, 284, 293, 0,
	0, 337, 368, 218, 421, 387, 547, 558, 553, 554,
	551, 552, 0, 550, 549, 548, 561, 539, 540, 541,
	542, 544, 0, 555, 556, 543, 189, 202, 289, 0,
	357, 254, 443, 427, 424, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 503, 0, 0, 0, 240, 0,
	502, 0, 0, 0, 287, 0, 0, 0, 342, 0,
	379, 226, 296, 294, 406, 250, 243, 239, 225, 271,
	302, 340, 397, 334, 546, 291, 0, 0, 388, 314,
	0, 0, 0, 0, 0, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 389,
	253, 69, 0, 0, 176, 177, 178, 524, 523, 526,
	527, 528, 529, 0, 0, 216, 525, 222, 530, 531,
	532, 0, 236, 275, 242, 235, 404, 0, 0, 0,
	500, 517, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 0, 0, 0, 0, 560,
	0, 516, 0, 0, 509, 510, 512, 511, 513, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 559, 0, 0, 432, 0, 0, 557, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 363, 369, 0, 0, 0, 227, 0, 367,
	338, 419, 212, 251, 360, 343, 365, 0, 0, 366,
	292, 408, 355, 418, 433, 434, 234, 319, 425, 401,
	430, 442, 205, 231, 332, 394, 422, 385, 312, 405,
	282, 384, 259, 193, 290, 197, 396, 416, 217, 377,
	0, 0, 0, 199, 414, 393, 309, 279, 280, 198,
	0, 359, 238, 257, 229, 328, 411, 412, 228, 444,
	207, 429, 201, 208, 428, 321, 407, 415, 310, 301,
	200, 413, 308, 300, 285, 248, 267, 353, 295, 354,
	268, 317, 316, 318, 0, 195, 0, 390, 423, 445,
	214, 0, 0, 403, 438, 441, 0, 356, 215, 258,
	247, 352, 256, 288, 437, 439, 440, 213, 350, 264,
	320, 209, 270, 386, 284, 293, 0, 0, 337, 368,
	218, 421, 387, 547, 558, 553, 554, 551, 552, 0,
	550, 549, 548, 561, 539, 540, 541, 542, 544, 0,
	555, 556, 543, 189, 202, 289, 0, 357, 254, 443,
	427, 424, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	375, 376, 380, 381, 382, 383, 391, 395, 409, 410,
	420, 431, 435, 263, 417, 436, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 426, 392, 206, 364, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 341,
	344, 260, 241, 221, 361, 219, 378, 398, 399, 400,
	402, 311, 237, 329, 0, 0, 0, 0, 503, 0,
	0, 0, 240, 0, 502, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 546, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 537,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 69, 0, 0, 176, 177,
	178, 524, 523, 526, 527, 528, 529, 0, 0, 216,
	525, 222, 530, 531, 532, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 500, 517, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 0,
	0, 0, 0, 560, 0, 516, 0, 0, 509, 510,
	512, 511, 513, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 559, 0, 0, 432,
	0, 0, 557, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 547, 558, 553,
	554, 551, 552, 0, 550, 549, 548, 561, 539, 540,
	541, 542, 544, 0, 555, 556, 543, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 546, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 69,
	0, 0, 176, 177, 178, 524, 523, 526, 527, 528,
	529, 0, 0, 216, 525, 222, 530, 531, 532, 0,
	236, 275, 242, 235, 404, 0, 0, 0, 0, 517,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 560, 0, 516,
	0, 0, 509, 510, 512, 511, 513, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	559, 0, 0, 432, 0, 0, 557, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 2148, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 547, 558, 553, 554, 551, 552, 0, 550, 549,
	548, 561, 539, 540, 541, 542, 544, 0, 555, 556,
	543, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	342, 0, 379, 226, 296, 294, 406, 250, 243, 239,
	225, 271, 302, 340, 397, 334, 546, 291, 0, 0,
	388, 314, 0, 0, 0, 0, 0, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 389, 253, 69, 0, 578, 176, 177, 178, 524,
	523, 526, 527, 528, 529, 0, 0, 216, 525, 222,
	530, 531, 532, 0, 236, 275, 242, 235, 404, 0,
	0, 0, 0, 517, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 0,
	0, 560, 0, 516, 0, 0, 509, 510, 512, 511,
	513, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 559, 0, 0, 432, 0, 0,
	557, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 363, 369, 0, 0, 0, 227,
	0, 367, 338, 419, 212, 251, 360, 343, 365, 0,
	0, 366, 292, 408, 355, 418, 433, 434, 234, 319,
	425, 401, 430, 442, 205, 231, 332, 394, 422, 385,
	312, 405, 282, 384, 259, 193, 290, 197, 396, 416,
	217, 377, 0, 0, 0, 199, 414, 393, 309, 279,
	280, 198, 0, 359, 238, 257, 229, 328, 411, 412,
	228, 444, 207, 429, 201, 208, 428, 321, 407, 415,
	310, 301, 200, 413, 308, 300, 285, 248, 267, 353,
	295, 354, 268, 317, 316, 318, 0, 195, 0, 390,
	423, 445, 214, 0, 0, 403, 438, 441, 0, 356,
	215, 258, 247, 352, 256, 288, 437, 439, 440, 213,
	350, 264, 320, 209, 270, 386, 284, 293, 0, 0,
	337, 368, 218, 421, 387, 547, 558, 553, 554, 551,
	552, 0, 550, 549, 548, 561, 539, 540, 541, 542,
	544, 0, 555, 556, 543, 189, 202, 289, 0, 357,
	254, 443, 427, 424, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 375, 376, 380, 381, 382, 383, 391, 395,
	409, 410, 420, 431, 435, 263, 417, 436, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 426, 392, 206,
	364, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 341, 344, 260, 241, 221, 361, 219, 378, 398,
	399, 400, 402, 311, 237, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 342, 0, 379, 226, 296, 294,
	406, 250, 243, 239, 225, 271, 302, 340, 397, 334,
	546, 291, 0, 0, 388, 314, 0, 0, 0, 0,
	0, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 389, 253, 69, 0, 0,
	176, 177, 178, 524, 523, 526, 527, 528, 529, 0,
	0, 216, 525, 222, 530, 531, 532, 0, 236, 275,
	242, 235, 404, 0, 0, 0, 0, 517, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 0, 0, 0, 0, 560, 0, 516, 0, 0,
	509, 510, 512, 511, 513, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 559, 0,
	0, 432, 0, 0, 557, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 363, 369,
	0, 0, 0, 227, 0, 367, 338, 419, 212, 251,
	360, 343, 365, 0, 0, 366, 292, 408, 355, 418,
	433, 434, 234, 319, 425, 401, 430, 442, 205, 231,
	332, 394, 422, 385, 312, 405, 282, 384, 259, 193,
	290, 197, 396, 416, 217, 377, 0, 0, 0, 199,
	414, 393, 309, 279, 280, 198, 0, 359, 238, 257,
	229, 328, 411, 412, 228, 444, 207, 429, 201, 208,
	428, 321, 407, 415, 310, 301, 200, 413, 308, 300,
	285, 248, 267, 353, 295, 354, 268, 317, 316, 318,
	0, 195, 0, 390, 423, 445, 214, 0, 0, 403,
	438, 441, 0, 356, 215, 258, 247, 352, 256, 288,
	437, 439, 440, 213, 350, 264, 320, 209, 270, 386,
	284, 293, 0, 0, 337, 368, 218, 421, 387, 547,
	558, 553, 554, 551, 552, 0, 550, 549, 548, 561,
	539, 540, 541, 542, 544, 0, 555, 556, 543, 189,
	202, 289, 0, 357, 254, 443, 427, 424, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 375, 376, 380, 381,
	382, 383, 391, 395, 409, 410, 420, 431, 435, 263,
	417, 436, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 426, 392, 206, 364, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 341, 344, 260, 241, 221,
	361, 219, 378, 398, 399, 400, 402, 311, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 342, 0,
	379, 226, 296, 294, 406, 250, 243, 239, 225, 271,
	302, 340, 397, 334, 0, 291, 0, 0, 388, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 389,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 363, 369, 0, 0, 0, 227, 0, 367,
	338, 419, 212, 251, 360, 343, 365, 0, 0, 366,
	292, 408, 355, 418, 433, 434, 234, 319, 425, 401,
	430, 442, 205, 231, 332, 394, 422, 385, 312, 405,
	282, 384, 259, 193, 290, 197, 396, 416, 217, 377,
	0, 0, 0, 199, 414, 393, 309, 279, 280, 198,
	0, 359, 238, 257, 229, 328, 411, 412, 228, 444,
	207, 429, 201, 208, 428, 321, 407, 415, 310, 301,
	200, 413, 308, 300, 285, 248, 267, 353, 295, 354,
	268, 317, 316, 318, 0, 195, 0, 390, 423, 445,
	214, 0, 0, 403, 438, 441, 0, 356, 215, 258,
	247, 352, 256, 288, 437, 439, 440, 213, 350, 264,
	320, 209, 270, 386, 284, 293, 0, 0, 337, 368,
	218, 421, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 357, 254, 443,
	427, 424, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	375, 376, 380, 381, 382, 383, 391, 395, 409, 410,
	420, 431, 435, 263, 417, 436, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 426, 392, 206, 364, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 341,
	344, 260, 241, 221, 361, 219, 378, 398, 399, 400,
	402, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 791, 0, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 0, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 0, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 790, 432,
	0, 0, 0, 0, 0, 0, 787, 788, 286, 755,
	283, 190, 204, 781, 785, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 0,
	0, 1058, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 0, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 0,
	0, 0, 176, 177, 178, 0, 1060, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 404, 946, 947, 945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 0, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 342, 0, 379, 226, 296, 294, 406,
	250, 243, 239, 225, 271, 302, 340, 397, 334, 0,
	291, 0, 0, 388, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 224, 194, 326, 389, 253, 69, 0, 578, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 0, 0, 0, 0, 236, 275, 242,
	235, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 315, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 190, 204, 0, 0, 325, 363, 369, 0,
	0, 0, 227, 0, 367, 338, 419, 212, 251, 360,
	343, 365, 0, 0, 366, 292, 408, 355, 418, 433,
	434, 234, 319, 425, 401, 430, 442, 205, 231, 332,
	394, 422, 385, 312, 405, 282, 384, 259, 193, 290,
	197, 396, 416, 217, 377, 0, 0, 0, 199, 414,
	393, 309, 279, 280, 198, 0, 359, 238, 257, 229,
	328, 411, 412, 228, 444, 207, 429, 201, 208, 428,
	321, 407, 415, 310, 301, 200, 413, 308, 300, 285,
	248, 267, 353, 295, 354, 268, 317, 316, 318, 0,
	195, 0, 390, 423, 445, 214, 0, 0, 403, 438,
	441, 0, 356, 215, 258, 247, 352, 256, 288, 437,
	439, 440, 213, 350, 264, 320, 209, 270, 386, 284,
	293, 0, 0, 337, 368, 218, 421, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 202,
	289, 0, 357, 254, 443, 427, 424, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 375, 376, 380, 381, 382,
	383, 391, 395, 409, 410, 420, 431, 435, 263, 417,
	436, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	426, 392, 206, 364, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 341, 344, 260, 241, 221, 361,
	219, 378, 398, 399, 400, 402, 311, 237, 329, 0,
	0, 0, 1423, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 342, 0, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 0, 291, 0, 0, 388, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 389, 253,
	0, 0, 0, 176, 177, 178, 0, 1425, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 0, 0, 0,
	0, 236, 275, 242, 235, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 363, 369, 0, 0, 0, 227, 0, 367, 338,
	419, 212, 251, 360, 343, 365, 0, 1421, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 416, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 208, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	0, 0, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 320,
	209, 270, 386, 284, 293, 0, 0, 337, 368, 218,
	421, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 357, 254, 443, 427,
	424, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 342, 0, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 0, 291, 0,
	0, 388, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 389, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 0, 0, 0, 0, 236, 275, 242, 235, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 755, 283,
	190, 204, 753, 0, 325, 363, 369, 0, 0, 0,
	227, 0, 367, 338, 419, 212, 251, 360, 343, 365,
	0, 0, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 208, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 0, 0, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 320, 209, 270, 386, 284, 293, 0,
	0, 337, 368, 218, 421, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 202, 289, 0,
	357, 254, 443, 427, 424, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 329, 0, 0, 0,
	1423, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 342, 0, 379, 226, 296,
	294, 406, 250, 243, 239, 225, 271, 302, 340, 397,
	334, 0, 291, 0, 0, 388, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 224, 194, 326, 389, 253, 0, 0,
	0, 176, 177, 178, 0, 1425, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 0, 0, 0, 0, 236,
	275, 242, 235, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 363,
	369, 0, 0, 0, 227, 0, 367, 338, 419, 212,
	251, 360, 343, 365, 0, 0, 366, 292, 408, 355,
	418, 433, 434, 234, 319, 425, 401, 430, 442, 205,
	231, 332, 394, 422, 385, 312, 405, 282, 384, 259,
	193, 290, 197, 396, 416, 217, 377, 0, 0, 0,
	199, 414, 393, 309, 279, 280, 198, 0, 359, 238,
	257, 229, 328, 411, 412, 228, 444, 207, 429, 201,
	208, 428, 321, 407, 415, 310, 301, 200, 413, 308,
	300, 285, 248, 267, 353, 295, 354, 268, 317, 316,
	318, 0, 195, 0, 390, 423, 445, 214, 0, 0,
	403, 438, 441, 0, 356, 215, 258, 247, 352, 256,
	288, 437, 439, 440, 213, 350, 264, 320, 209, 270,
	386, 284, 293, 0, 0, 337, 368, 218, 421, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 202, 289, 0, 357, 254, 443, 427, 424, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 375, 376, 380,
	381, 382, 383, 391, 395, 409, 410, 420, 431, 435,
	263, 417, 436, 0, 297, 0, 0, 299, 249, 265,
	274, 0, 426, 392, 206, 364, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 341, 344, 260, 241,
	221, 361, 219, 378, 398, 399, 400, 402, 311, 237,
	34, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 0, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 69, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 0, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 0,
	0, 0, 176, 177, 178, 0, 0, 1443, 0, 0,
	1444, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 0, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 1091, 0, 0, 0, 287, 0, 0, 0,
	342, 0, 379, 226, 296, 294, 406, 250, 243, 239,
	225, 271, 302, 340, 397, 334, 0, 291, 0, 0,
	388, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 389, 253, 0, 0, 0, 176, 177, 178, 0,
	1090, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 363, 369, 0, 0, 0, 227,
	0, 367, 338, 419, 212, 251, 360, 343, 365, 0,
	0, 366, 292, 408, 355, 418, 433, 434, 234, 319,
	425, 401, 430, 442, 205, 231, 332, 394, 422, 385,
	312, 405, 282, 384, 259, 193, 290, 197, 396, 416,
	217, 377, 0, 0, 0, 199, 414, 393, 309, 279,
	280, 198, 0, 359, 238, 257, 229, 328, 411, 412,
	228, 444, 207, 429, 201, 208, 428, 321, 407, 415,
	310, 301, 200, 413, 308, 300, 285, 248, 267, 353,
	295, 354, 268, 317, 316, 318, 0, 195, 0, 390,
	423, 445, 214, 0, 0, 403, 438, 441, 0, 356,
	215, 258, 247, 352, 256, 288, 437, 439, 440, 213,
	350, 264, 320, 209, 270, 386, 284, 293, 0, 0,
	337, 368, 218, 421, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 0, 357,
	254, 443, 427, 424, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 375, 376, 380, 381, 382, 383, 391, 395,
	409, 410, 420, 431, 435, 263, 417, 436, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 426, 392, 206,
	364, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 341, 344, 260, 241, 221, 361, 219, 378, 398,
	399, 400, 402, 311, 237, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 342, 0, 379, 226, 296, 294,
	406, 250, 243, 239, 225, 271, 302, 340, 397, 334,
	0, 291, 0, 0, 388, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 389, 253, 0, 0, 578,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 363, 369,
	0, 0, 0, 227, 0, 367, 338, 419, 212, 251,
	360, 343, 365, 0, 0, 366, 292, 408, 355, 418,
	433, 434, 234, 319, 425, 401, 430, 442, 205, 231,
	332, 394, 422, 385, 312, 405, 282, 384, 259, 193,
	290, 197, 396, 416, 217, 377, 0, 0, 0, 199,
	414, 393, 309, 279, 280, 198, 0, 359, 238, 257,
	229, 328, 411, 412, 228, 444, 207, 429, 201, 208,
	428, 321, 407, 415, 310, 301, 200, 413, 308, 300,
	285, 248, 267, 353, 295, 354, 268, 317, 316, 318,
	0, 195, 0, 390, 423, 445, 214, 0, 0, 403,
	438, 441, 0, 356, 215, 258, 247, 352, 256, 288,
	437, 439, 440, 213, 350, 264, 320, 209, 270, 386,
	284, 293, 0, 0, 337, 368, 218, 421, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 357, 254, 443, 427, 424, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 375, 376, 380, 381,
	382, 383, 391, 395, 409, 410, 420, 431, 435, 263,
	417, 436, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 426, 392, 206, 364, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 341, 344, 260, 241, 221,
	361, 219, 378, 398, 399, 400, 402, 311, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 342, 0,
	379, 226, 296, 294, 406, 250, 243, 239, 225, 271,
	302, 340, 397, 334, 0, 291, 0, 0, 388, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 389,
	253, 69, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 363, 369, 0, 0, 0, 227, 0, 367,
	338, 419, 212, 251, 360, 343, 365, 0, 0, 366,
	292, 408, 355, 418, 433, 434, 234, 319, 425, 401,
	430, 442, 205, 231, 332, 394, 422, 385, 312, 405,
	282, 384, 259, 193, 290, 197, 396, 416, 217, 377,
	0, 0, 0, 199, 414, 393, 309, 279, 280, 198,
	0, 359, 238, 257, 229, 328, 411, 412, 228, 444,
	207, 429, 201, 208, 428, 321, 407, 415, 310, 301,
	200, 413, 308, 300, 285, 248, 267, 353, 295, 354,
	268, 317, 316, 318, 0, 195, 0, 390, 423, 445,
	214, 0, 0, 403, 438, 441, 0, 356, 215, 258,
	247, 352, 256, 288, 437, 439, 440, 213, 350, 264,
	320, 209, 270, 386, 284, 293, 0, 0, 337, 368,
	218, 421, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 357, 254, 443,
	427, 424, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	375, 376, 380, 381, 382, 383, 391, 395, 409, 410,
	420, 431, 435, 263, 417, 436, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 426, 392, 206, 364, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 341,
	344, 260, 241, 221, 361, 219, 378, 398, 399, 400,
	402, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 0, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 0, 0, 0, 176, 177,
	178, 0, 1425, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 0, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 0,
	0, 0, 176, 177, 178, 0, 1060, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 0, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	342, 0, 379, 226, 296, 294, 406, 250, 243, 239,
	225, 271, 302, 340, 397, 334, 0, 291, 0, 0,
	388, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 389, 253, 0, 0, 0, 176, 177, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 363, 369, 0, 0, 0, 227,
	0, 367, 338, 419, 212, 251, 360, 343, 365, 0,
	0, 366, 292, 408, 355, 418, 433, 434, 234, 319,
	425, 401, 430, 442, 205, 231, 332, 394, 422, 385,
	312, 405, 282, 384, 259, 193, 290, 197, 396, 416,
	217, 377, 0, 0, 0, 199, 414, 393, 309, 279,
	280, 198, 0, 359, 238, 257, 229, 328, 411, 412,
	228, 444, 207, 429, 201, 208, 428, 321, 407, 415,
	310, 301, 200, 413, 308, 300, 285, 248, 267, 353,
	295, 354, 268, 317, 316, 318, 0, 195, 0, 390,
	423, 445, 214, 0, 0, 403, 438, 441, 0, 356,
	215, 258, 247, 352, 256, 288, 437, 439, 440, 213,
	350, 264, 320, 209, 270, 386, 284, 293, 0, 0,
	337, 368, 218, 421, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 1328, 357,
	254, 443, 427, 424, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 375, 376, 380, 381, 382, 383, 391, 395,
	409, 410, 420, 431, 435, 263, 417, 436, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 426, 392, 206,
	364, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 341, 344, 260, 241, 221, 361, 219, 378, 398,
	399, 400, 402, 311, 237, 329, 0, 1215, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 342, 0, 379, 226, 296, 294,
	406, 250, 243, 239, 225, 271, 302, 340, 397, 334,
	0, 291, 0, 0, 388, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 389, 253, 0, 0, 0,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 363, 369,
	0, 0, 0, 227, 0, 367, 338, 419, 212, 251,
	360, 343, 365, 0, 0, 366, 292, 408, 355, 418,
	433, 434, 234, 319, 425, 401, 430, 442, 205, 231,
	332, 394, 422, 385, 312, 405, 282, 384, 259, 193,
	290, 197, 396, 416, 217, 377, 0, 0, 0, 199,
	414, 393, 309, 279, 280, 198, 0, 359, 238, 257,
	229, 328, 411, 412, 228, 444, 207, 429, 201, 208,
	428, 321, 407, 415, 310, 301, 200, 413, 308, 300,
	285, 248, 267, 353, 295, 354, 268, 317, 316, 318,
	0, 195, 0, 390, 423, 445, 214, 0, 0, 403,
	438, 441, 0, 356, 215, 258, 247, 352, 256, 288,
	437, 439, 440, 213, 350, 264, 320, 209, 270, 386,
	284, 293, 0, 0, 337, 368, 218, 421, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 357, 254, 443, 427, 424, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 375, 376, 380, 381,
	382, 383, 391, 395, 409, 410, 420, 431, 435, 263,
	417, 436, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 426, 392, 206, 364, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 341, 344, 260, 241, 221,
	361, 219, 378, 398, 399, 400, 402, 311, 237, 329,
	0, 1213, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 342, 0,
	379, 226, 296, 294, 406, 250, 243, 239, 225, 271,
	302, 340, 397, 334, 0, 291, 0, 0, 388, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 389,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 363, 369, 0, 0, 0, 227, 0, 367,
	338, 419, 212, 251, 360, 343, 365, 0, 0, 366,
	292, 408, 355, 418, 433, 434, 234, 319, 425, 401,
	430, 442, 205, 231, 332, 394, 422, 385, 312, 405,
	282, 384, 259, 193, 290, 197, 396, 416, 217, 377,
	0, 0, 0, 199, 414, 393, 309, 279, 280, 198,
	0, 359, 238, 257, 229, 328, 411, 412, 228, 444,
	207, 429, 201, 208, 428, 321, 407, 415, 310, 301,
	200, 413, 308, 300, 285, 248, 267, 353, 295, 354,
	268, 317, 316, 318, 0, 195, 0, 390, 423, 445,
	214, 0, 0, 403, 438, 441, 0, 356, 215, 258,
	247, 352, 256, 288, 437, 439, 440, 213, 350, 264,
	320, 209, 270, 386, 284, 293, 0, 0, 337, 368,
	218, 421, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 357, 254, 443,
	427, 424, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	375, 376, 380, 381, 382, 383, 391, 395, 409, 410,
	420, 431, 435, 263, 417, 436, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 426, 392, 206, 364, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 341,
	344, 260, 241, 221, 361, 219, 378, 398, 399, 400,
	402, 311, 237, 329, 0, 1211, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 0, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 0, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 1209,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 0, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 0,
	0, 0, 176, 177, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 0, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 329, 0, 1207, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	342, 0, 379, 226, 296, 294, 406, 250, 243, 239,
	225, 271, 302, 340, 397, 334, 0, 291, 0, 0,
	388, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 389, 253, 0, 0, 0, 176, 177, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 363, 369, 0, 0, 0, 227,
	0, 367, 338, 419, 212, 251, 360, 343, 365, 0,
	0, 366, 292, 408, 355, 418, 433, 434, 234, 319,
	425, 401, 430, 442, 205, 231, 332, 394, 422, 385,
	312, 405, 282, 384, 259, 193, 290, 197, 396, 416,
	217, 377, 0, 0, 0, 199, 414, 393, 309, 279,
	280, 198, 0, 359, 238, 257, 229, 328, 411, 412,
	228, 444, 207, 429, 201, 208, 428, 321, 407, 415,
	310, 301, 200, 413, 308, 300, 285, 248, 267, 353,
	295, 354, 268, 317, 316, 318, 0, 195, 0, 390,
	423, 445, 214, 0, 0, 403, 438, 441, 0, 356,
	215, 258, 247, 352, 256, 288, 437, 439, 440, 213,
	350, 264, 320, 209, 270, 386, 284, 293, 0, 0,
	337, 368, 218, 421, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 0, 357,
	254, 443, 427, 424, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 375, 376, 380, 381, 382, 383, 391, 395,
	409, 410, 420, 431, 435, 263, 417, 436, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 426, 392, 206,
	364, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 341, 344, 260, 241, 221, 361, 219, 378, 398,
	399, 400, 402, 311, 237, 329, 0, 1203, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 342, 0, 379, 226, 296, 294,
	406, 250, 243, 239, 225, 271, 302, 340, 397, 334,
	0, 291, 0, 0, 388, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 389, 253, 0, 0, 0,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 363, 369,
	0, 0, 0, 227, 0, 367, 338, 419, 212, 251,
	360, 343, 365, 0, 0, 366, 292, 408, 355, 418,
	433, 434, 234, 319, 425, 401, 430, 442, 205, 231,
	332, 394, 422, 385, 312, 405, 282, 384, 259, 193,
	290, 197, 396, 416, 217, 377, 0, 0, 0, 199,
	414, 393, 309, 279, 280, 198, 0, 359, 238, 257,
	229, 328, 411, 412, 228, 444, 207, 429, 201, 208,
	428, 321, 407, 415, 310, 301, 200, 413, 308, 300,
	285, 248, 267, 353, 295, 354, 268, 317, 316, 318,
	0, 195, 0, 390, 423, 445, 214, 0, 0, 403,
	438, 441, 0, 356, 215, 258, 247, 352, 256, 288,
	437, 439, 440, 213, 350, 264, 320, 209, 270, 386,
	284, 293, 0, 0, 337, 368, 218, 421, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 357, 254, 443, 427, 424, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 375, 376, 380, 381,
	382, 383, 391, 395, 409, 410, 420, 431, 435, 263,
	417, 436, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 426, 392, 206, 364, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 341, 344, 260, 241, 221,
	361, 219, 378, 398, 399, 400, 402, 311, 237, 329,
	0, 1201, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 342, 0,
	379, 226, 296, 294, 406, 250, 243, 239, 225, 271,
	302, 340, 397, 334, 0, 291, 0, 0, 388, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 389,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 363, 369, 0, 0, 0, 227, 0, 367,
	338, 419, 212, 251, 360, 343, 365, 0, 0, 366,
	292, 408, 355, 418, 433, 434, 234, 319, 425, 401,
	430, 442, 205, 231, 332, 394, 422, 385, 312, 405,
	282, 384, 259, 193, 290, 197, 396, 416, 217, 377,
	0, 0, 0, 199, 414, 393, 309, 279, 280, 198,
	0, 359, 238, 257, 229, 328, 411, 412, 228, 444,
	207, 429, 201, 208, 428, 321, 407, 415, 310, 301,
	200, 413, 308, 300, 285, 248, 267, 353, 295, 354,
	268, 317, 316, 318, 0, 195, 0, 390, 423, 445,
	214, 0, 0, 403, 438, 441, 0, 356, 215, 258,
	247, 352, 256, 288, 437, 439, 440, 213, 350, 264,
	320, 209, 270, 386, 284, 293, 0, 0, 337, 368,
	218, 421, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 357, 254, 443,
	427, 424, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	375, 376, 380, 381, 382, 383, 391, 395, 409, 410,
	420, 431, 435, 263, 417, 436, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 426, 392, 206, 364, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 341,
	344, 260, 241, 221, 361, 219, 378, 398, 399, 400,
	402, 311, 237, 329, 0, 1199, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 342, 0, 379, 226, 296, 294, 406, 250,
	243, 239, 225, 271, 302, 340, 397, 334, 0, 291,
	0, 0, 388, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 389, 253, 0, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 363, 369, 0, 0,
	0, 227, 0, 367, 338, 419, 212, 251, 360, 343,
	365, 0, 0, 366, 292, 408, 355, 418, 433, 434,
	234, 319, 425, 401, 430, 442, 205, 231, 332, 394,
	422, 385, 312, 405, 282, 384, 259, 193, 290, 197,
	396, 416, 217, 377, 0, 0, 0, 199, 414, 393,
	309, 279, 280, 198, 0, 359, 238, 257, 229, 328,
	411, 412, 228, 444, 207, 429, 201, 208, 428, 321,
	407, 415, 310, 301, 200, 413, 308, 300, 285, 248,
	267, 353, 295, 354, 268, 317, 316, 318, 0, 195,
	0, 390, 423, 445, 214, 0, 0, 403, 438, 441,
	0, 356, 215, 258, 247, 352, 256, 288, 437, 439,
	440, 213, 350, 264, 320, 209, 270, 386, 284, 293,
	0, 0, 337, 368, 218, 421, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 357, 254, 443, 427, 424, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 375, 376, 380, 381, 382, 383,
	391, 395, 409, 410, 420, 431, 435, 263, 417, 436,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 426,
	392, 206, 364, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 341, 344, 260, 241, 221, 361, 219,
	378, 398, 399, 400, 402, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 342, 0, 379, 226,
	296, 294, 406, 250, 243, 239, 225, 271, 302, 340,
	397, 334, 0, 291, 0, 0, 388, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 389, 253, 1174,
	0, 0, 176, 177, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	363, 369, 0, 0, 0, 227, 0, 367, 338, 419,
	212, 251, 360, 343, 365, 0, 0, 366, 292, 408,
	355, 418, 433, 434, 234, 319, 425, 401, 430, 442,
	205, 231, 332, 394, 422, 385, 312, 405, 282, 384,
	259, 193, 290, 197, 396, 416, 217, 377, 0, 0,
	0, 199, 414, 393, 309, 279, 280, 198, 0, 359,
	238, 257, 229, 328, 411, 412, 228, 444, 207, 429,
	201, 208, 428, 321, 407, 415, 310, 301, 200, 413,
	308, 300, 285, 248, 267, 353, 295, 354, 268, 317,
	316, 318, 0, 195, 0, 390, 423, 445, 214, 0,
	0, 403, 438, 441, 0, 356, 215, 258, 247, 352,
	256, 288, 437, 439, 440, 213, 350, 264, 320, 209,
	270, 386, 284, 293, 0, 0, 337, 368, 218, 421,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 357, 254, 443, 427, 424,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 375, 376,
	380, 381, 382, 383, 391, 395, 409, 410, 420, 431,
	435, 263, 417, 436, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 426, 392, 206, 364, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 341, 344, 260,
	241, 221, 361, 219, 378, 398, 399, 400, 402, 311,
	237, 1073, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 342, 0, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 0, 291, 0, 0, 388, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 389, 253,
	0, 0, 0, 176, 177, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 0, 0, 0,
	0, 236, 275, 242, 235, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 363, 369, 0, 0, 0, 227, 0, 367, 338,
	419, 212, 251, 360, 343, 365, 0, 0, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 416, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 208, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	0, 0, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 320,
	209, 270, 386, 284, 293, 0, 0, 337, 368, 218,
	421, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 357, 254, 443, 427,
	424, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237, 329, 0, 0, 0, 0, 0, 0, 0,
	1064, 240, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 342, 0, 379, 226, 296, 294, 406, 250, 243,
	239, 225, 271, 302, 340, 397, 334, 0, 291, 0,
	0, 388, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 389, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 0, 0, 0, 0, 236, 275, 242, 235, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 283,
	190, 204, 0, 0, 325, 363, 369, 0, 0, 0,
	227, 0, 367, 338, 419, 212, 251, 360, 343, 365,
	0, 0, 366, 292, 408, 355, 418, 433, 434, 234,
	319, 425, 401, 430, 442, 205, 231, 332, 394, 422,
	385, 312, 405, 282, 384, 259, 193, 290, 197, 396,
	416, 217, 377, 0, 0, 0, 199, 414, 393, 309,
	279, 280, 198, 0, 359, 238, 257, 229, 328, 411,
	412, 228, 444, 207, 429, 201, 208, 428, 321, 407,
	415, 310, 301, 200, 413, 308, 300, 285, 248, 267,
	353, 295, 354, 268, 317, 316, 318, 0, 195, 0,
	390, 423, 445, 214, 0, 0, 403, 438, 441, 0,
	356, 215, 258, 247, 352, 256, 288, 437, 439, 440,
	213, 350, 264, 320, 209, 270, 386, 284, 293, 0,
	0, 337, 368, 218, 421, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 202, 289, 0,
	357, 254, 443, 427, 424, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 375, 376, 380, 381, 382, 383, 391,
	395, 409, 410, 420, 431, 435, 263, 417, 436, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 426, 392,
	206, 364, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 341, 344, 260, 241, 221, 361, 219, 378,
	398, 399, 400, 402, 311, 237, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 342, 0, 379, 226, 296,
	294, 406, 250, 243, 239, 225, 271, 302, 340, 397,
	334, 0, 291, 0, 0, 388, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 224, 194, 326, 389, 253, 0, 0,
	0, 176, 177, 178, 0, 922, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 0, 0, 0, 0, 236,
	275, 242, 235, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 363,
	369, 0, 0, 0, 227, 0, 367, 338, 419, 212,
	251, 360, 343, 365, 0, 0, 366, 292, 408, 355,
	418, 433, 434, 234, 319, 425, 401, 430, 442, 205,
	231, 332, 394, 422, 385, 312, 405, 282, 384, 259,
	193, 290, 197, 396, 416, 217, 377, 0, 0, 0,
	199, 414, 393, 309, 279, 280, 198, 0, 359, 238,
	257, 229, 328, 411, 412, 228, 444, 207, 429, 201,
	208, 428, 321, 407, 415, 310, 301, 200, 413, 308,
	300, 285, 248, 267, 353, 295, 354, 268, 317, 316,
	318, 0, 195, 0, 390, 423, 445, 214, 0, 0,
	403, 438, 441, 0, 356, 215, 258, 247, 352, 256,
	288, 437, 439, 440, 213, 350, 264, 320, 209, 270,
	386, 284, 293, 0, 0, 337, 368, 218, 421, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 202, 289, 0, 357, 254, 443, 427, 424, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 375, 376, 380,
	381, 382, 383, 391, 395, 409, 410, 420, 431, 435,
	263, 417, 436, 0, 297, 0, 0, 299, 249, 265,
	274, 0, 426, 392, 206, 364, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 341, 344, 260, 241,
	221, 361, 219, 378, 398, 399, 400, 402, 311, 237,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 342,
	0, 379, 226, 296, 294, 406, 250, 243, 239, 225,
	271, 302, 340, 397, 334, 0, 291, 0, 0, 388,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	389, 253, 0, 0, 0, 176, 177, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 222, 0,
	0, 0, 0, 236, 275, 242, 235, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	261, 0, 315, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 363, 369, 0, 0, 0, 227, 0,
	367, 338, 419, 212, 251, 360, 343, 365, 0, 0,
	366, 292, 408, 355, 418, 433, 434, 234, 319, 425,
	401, 430, 442, 205, 231, 332, 394, 422, 385, 312,
	405, 282, 384, 259, 193, 290, 197, 396, 416, 217,
	377, 0, 0, 0, 199, 414, 393, 309, 279, 280,
	198, 0, 359, 238, 257, 229, 328, 411, 412, 228,
	444, 207, 429, 201, 208, 428, 321, 407, 415, 310,
	301, 200, 413, 308, 300, 285, 248, 267, 353, 295,
	354, 268, 317, 316, 318, 0, 195, 0, 390, 423,
	445, 214, 0, 0, 403, 438, 441, 0, 356, 215,
	258, 247, 352, 256, 288, 437, 439, 440, 213, 350,
	264, 320, 209, 270, 386, 284, 293, 0, 0, 337,
	368, 218, 421, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 202, 289, 0, 357, 254,
	443, 427, 424, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 375, 376, 380, 381, 382, 383, 391, 395, 409,
	410, 420, 431, 435, 490, 417, 436, 0, 297, 0,
	0, 299, 249, 265, 274, 0, 426, 392, 206, 364,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	341, 344, 260, 241, 221, 361, 219, 378, 398, 399,
	400, 402, 311, 237, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 342, 0, 379, 226, 296, 294, 406,
	250, 243, 239, 225, 271, 302, 340, 397, 334, 0,
	291, 0, 0, 388, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 224, 194, 326, 389, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 0, 0, 0, 0, 236, 275, 242,
	235, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 315, 0, 184, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 190, 204, 0, 0, 325, 363, 369, 0,
	0, 0, 227, 0, 367, 338, 419, 212, 251, 360,
	343, 365, 0, 0, 366, 292, 408, 355, 418, 433,
	434, 234, 319, 425, 401, 430, 442, 205, 231, 332,
	394, 422, 385, 312, 405, 282, 384, 259, 193, 290,
	197, 396, 416, 217, 377, 0, 0, 0, 199, 414,
	393, 309, 279, 280, 198, 0, 359, 238, 257, 229,
	328, 411, 412, 228, 444, 207, 429, 201, 208, 428,
	321, 407, 415, 310, 301, 200, 413, 308, 300, 285,
	248, 267, 353, 295, 354, 268, 317, 316, 318, 0,
	195, 0, 390, 423, 445, 214, 0, 0, 403, 438,
	441, 0, 356, 215, 258, 247, 352, 256, 288, 437,
	439, 440, 213, 350, 264, 320, 209, 270, 386, 284,
	293, 0, 0, 337, 368, 218, 421, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 202,
	289, 0, 357, 254, 443, 427, 424, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 375, 376, 380, 381, 382,
	383, 391, 395, 409, 410, 420, 431, 435, 263, 417,
	436, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	426, 392, 206, 364, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 341, 344, 260, 241, 221, 361,
	219, 378, 398, 399, 400, 402, 311, 237, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 342, 0, 379,
	226, 296, 294, 406, 250, 243, 239, 225, 271, 302,
	340, 397, 334, 0, 291, 0, 0, 388, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 389, 253,
	0, 0, 0, 176, 177, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 0, 0, 0,
	0, 236, 275, 242, 235, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 363, 369, 0, 0, 0, 227, 0, 367, 338,
	419, 212, 251, 360, 343, 365, 0, 0, 366, 292,
	408, 355, 418, 433, 434, 234, 319, 425, 401, 430,
	442, 205, 231, 332, 394, 422, 385, 312, 405, 282,
	384, 259, 193, 290, 197, 396, 416, 217, 377, 0,
	0, 0, 199, 414, 393, 309, 279, 280, 198, 0,
	359, 238, 257, 229, 328, 411, 412, 228, 444, 207,
	429, 201, 208, 428, 321, 407, 415, 310, 301, 200,
	413, 308, 300, 285, 248, 267, 353, 295, 354, 268,
	317, 316, 318, 0, 195, 0, 390, 423, 445, 214,
	0, 0, 403, 438, 441, 0, 356, 215, 258, 247,
	352, 256, 288, 437, 439, 440, 213, 350, 264, 320,
	209, 270, 386, 284, 293, 0, 0, 337, 368, 218,
	421, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 357, 254, 443, 427,
	424, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 375,
	376, 380, 381, 382, 383, 391, 395, 409, 410, 420,
	431, 435, 263, 417, 436, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 426, 392, 206, 364, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 341, 344,
	260, 241, 221, 361, 219, 378, 398, 399, 400, 402,
	311, 237,
}

var yyPact = [...]int{
	4082, -1000, -339, 1648, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1619, 1248, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 622, 1310, 135, 1528, 251, 180, 1015, 379, 102,
	26595, 378, 83, 27039, -1000, 106, -1000, 98, 27039, 104,
	26151, -1000, -1000, -266, 12354, 1478, 6, 3, 27039, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1255, 1590, 1598,
	1613, 1085, 1542, -1000, 10565, 10565, 299, 299, 299, 8789,
	-1000, -1000, 16363, 27039, 27039, 1315, 313, 1015, 375, 374,
	369, 313, -93, -1000, -1000, -1000, 1528, -1000, -1000, 177,
	-1000, 240, 1210, -1000, 1201, -1000, 487, 542, 250, 316,
	315, 248, 241, 239, 237, 236, 235, 234, 233, 257,
	-1000, 538, 538, -161, -167, 2466, 285, 285, 285, 354,
	1490, 1489, -1000, 550, -1000, 538, 538, 166, 538, 538,
	538, 538, 198, 196, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 27039,
	-1000, 134, 531, 563, 1528, 172, -1000, -1000, -1000, 27039,
	311, 1015, 311, 311, 27039, -1000, 453, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27039, 635, 635, 635,
	635, 635, 635, 96, -1000, 93, 187, 178, 149, 38,
	60, 226, -1000, 488, -1000, 139, 117, -1000, 635, 6957,
	6957, 6957, -1000, 1500, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 349, -1000, -1000, -1000, -1000, 27039, 25707, 238,
	560, -1000, -1000, -1000, 115, -1000, -1000, 1042, 841, -1000,
	12354, 1247, 1216, 1216, -1000, -1000, 431, -1000, -1000, 13686,
	13686, 13686, 13686, 13686, 13686, 13686, 13686, 13686, 13686, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1216, 443, -1000, 11910, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 12354, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, -1000, -1000, -1000, 27039, -1000, 1216, 1619, -1000,
	1248, -1000, -1000, -1000, 1505, 12354, 12354, 1619, -1000, 1416,
	10565, -1000, -1000, 1525, -1000, -1000, -1000, -1000, 655, 1634,
	-1000, 15018, 441, 1633, 25263, -1000, 19040, 24819, 1197, 8331,
	-61, -1000, -1000, -1000, 557, 18152, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1500, 1126, 27039,
	-1000, -1000, 2160, 1015, -1000, 1283, -1000, 1122, -1000, 1221,
	134, 27039, 539, 1321, 1015, 1015, 1015, 1015, -1000, -1000,
	-1000, 538, 538, 256, 251, 3729, -1000, -1000, -1000, 24368,
	1281, 1015, -1000, 1280, -1000, 1545, 327, 501, 501, 1015,
	-1000, -1000, 27039, 1015, 1543, 1539, 27039, 27039, -1000, 23924,
	-1000, 23480, 23036, 872, 27039, 22592, 22148, 21704, 21260, 20816,
	-1000, 1378, -1000, 1358, -1000, -1000, -1000, 27039, 27039, 27039,
	31, -1000, -1000, 27039, 1015, -1000, -1000, 866, 863, 538,
	538, 862, 945, 943, 936, 538, 538, 857, 935, 991,
	179, 845, 828, 824, 856, 933, 103, 826, 822, 801,
	27039, 1279, -1000, 125, 545, 210, 220, 182, 27039, 143,
	1528, 1476, 1178, 333, 27039, 1556, 1370, 27039, 1015, -1000,
	7415, -1000, -1000, 932, 12354, -1000, -1000, -1000, -1000, -1000,
	635, 27039, 635, 27039, 635, 635, 635, 635, 609, 631,
	609, -1000, -1000, -1000, -1000, 6957, 6957, 6957, 27039, 6957,
	6957, 27039, 6957, 6957, 631, -1000, -1000, -1000, 518, -1000,
	1368, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 101, -1000,
	-1000, -1000, -1000, -1000, 1648, -1000, -1000, -1000, -110, 1176,
	20372, -1000, -278, -279, -280, -281, -1000, -1000, -1000, -282,
	-283, -1000, -1000, -1000, 12354, 12354, 12354, 12354, 764, 521,
	13686, 849, 643, 13686, 13686, 13686, 13686, 13686, 13686, 13686,
	13686, 13686, 13686, 13686, 13686, 13686, 13686, 13686, 703, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1015, -1000, 1635,
	910, 910, 462, 462, 462, 462, 462, 462, 462, 462,
	462, 14130, 9233, 7415, 1085, 1109, 1619, 10565, 10565, 12354,
	12354, 11453, 11009, 10565, 1514, 597, 841, 27039, -1000, -1000,
	13242, -1000, -1000, -1000, -1000, -1000, 954, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27039, 27039, 10565, 10565, 10565, 10565,
	10565, -1000, 1174, -1000, -165, 15919, 12354, 1598, 1085, 1525,
	1544, 1642, 511, 741, 1170, -1000, 829, 1598, 17708, 1092,
	-1000, 1525, -1000, -1000, -1000, 27039, -1000, -1000, 19928, -1000,
	-1000, 6499, 27039, 225, 27039, -1000, 1087, 1531, -1000, -1000,
	-1000, 1569, 17264, 27039, 1245, 1119, -1000, -1000, 439, 7873,
	-61, -1000, 7873, 1112, -1000, -25, -39, 9677, 401, -1000,
	-1000, -1000, 2466, 14574, 1010, -1000, 15, -1000, -1000, -1000,
	1221, -1000, 1221, 1221, 1221, 1221, 31, 31, 31, 31,
	-1000, -1000, -1000, -1000, -1000, 1274, 1273, -1000, 1221, 1221,
	1221, 1221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1256,
	1256, 1256, 1243, 1243, 289, -1000, 12354, 121, 27039, 1582,
	781, 125, -1000, 1552, 1361, -1000, 27039, 1321, 1321, 1321,
	-1000, 967, 944, -1000, 1169, -1000, -1000, 1612, -1000, -1000,
	572, 678, 675, 593, 27039, 116, 222, -1000, 318, -1000,
	27039, 1249, 1538, 501, 1015, -1000, 1015, -1000, -1000, -1000,
	-1000, 438, -1000, -1000, 1015, 1159, -1000, 1183, 740, 652,
	737, 640, 1159, -1000, -1000, -117, 1159, -1000, 1159, -1000,
	1159, -1000, 1159, -1000, 1159, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 532, 27039, 116, 703, -1000, 325, -1000,
	-1000, 703, 703, -1000, -1000, -1000, -1000, 927, 919, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -329, 27039, 359, 118, 150,
	27039, 27039, 27039, 27039, 27039, 404, -1000, -1000, -1000, 186,
	27039, 27039, 394, -1000, 27039, 386, -1000, -1000, -1000, -1000,
	-1000, -1000, 841, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 635, 27039, 27039, 27039, -1000, -1000, 635, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27039, -1000, 917,
	27039, 27039, -1000, -1000, -1000, -1000, -1000, 73, -30, 176,
	-1000, -1000, -1000, -1000, 1595, -1000, 841, 521, 670, 647,
	-1000, -1000, 777, -1000, -1000, 2410, -1000, -1000, -1000, -1000,
	849, 13686, 13686, 13686, 595, 2410, 2513, 1008, 2527, 462,
	698, 698, 473, 473, 473, 473, 473, 789, 789, -1000,
	-1000, -1000, -1000, 954, -1000, -1000, -1000, 954, 10565, 10565,
	1155, 1216, 434, -1000, 1255, -1000, -1000, 1598, 1090, 1090,
	719, 667, 590, 1632, 1090, 569, 1631, 1090, 1090, 10565,
	-1000, -1000, 588, -1000, 12354, 954, -1000, 850, 1154, 1129,
	1090, 954, 954, 1090, 1090, 27039, -1000, -269, -1000, -70,
	429, 1216, -1000, 19484, -1000, -1000, 954, 1042, 1505, -1000,
	-1000, 1465, -1000, 1412, 12354, 12354, 12354, -1000, -1000, -1000,
	1505, 1593, -1000, 1436, 1423, 1625, 10565, 19040, 1525, -1000,
	-1000, -1000, 420, 1625, 1208, 1216, -1000, 27039, 19040, 19040,
	19040, 19040, 19040, -1000, 1393, 1389, -1000, 1382, 1381, 1392,
	27039, -1000, 1106, 1085, 17264, 225, 1161, 19040, 27039, -1000,
	-1000, 19040, 27039, 6041, -1000, 1112, -61, -6, -1000, -1000,
	-1000, -1000, 841, -1000, 874, -1000, 2162, -1000, 298, -1000,
	-1000, -1000, -1000, 365, 12, -1000, -1000, 31, 31, -1000,
	-1000, 401, 633, 401, 401, 401, 916, 916, -1000, -1000,
	-1000, -1000, -1000, 778, -1000, -1000, -1000, 768, -1000, -1000,
	887, 1369, 121, -1000, -1000, 538, 903, 1482, -1000, -1000,
	1004, 358, -1000, 27039, -1000, 1359, 1352, 1349, -1000, -1000,
	-1000, -1000, 3692, 27039, 1100, -1000, 112, 27039, 999, 27039,
	-1000, 1096, 27039, -1000, 1015, -1000, -1000, 7415, -1000, 27039,
	1216, -1000, -1000, -1000, -1000, 366, 1527, 1519, 116, 112,
	401, 1015, -1000, -1000, -1000, -1000, -1000, -325, 1094, 27039,
	124, -1000, 1244, 950, -1000, 1220, -1000, -1000, -1000, -1000,
	97, 206, 159, 321, -1000, -1000, -1000, -1000, 1369, 27039,
	-1000, -1000, -1000, -1000, 609, -1000, 609, -1000, -1000, -1000,
	-1000, 1497, -44, -301, -1000, -297, -1000, -1000, -1000, -1000,
	595, 2410, 2388, -1000, 13686, 13686, -1000, -1000, 1090, 1090,
	10565, 7415, 1619, 1505, -1000, -1000, 330, 703, 330, 13686,
	13686, -1000, 13686, 13686, -1000, -108, 1034, 533, -1000, 12354,
	832, -1000, -1000, 13686, 13686, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 368, 367, 363, 27039, -1000, -1000,
	-1000, 772, 886, 1408, 841, 841, -1000, -1000, 27039, -1000,
	-1000, -1000, -1000, 1623, 12354, -1000, 1102, -1000, 5583, 1598,
	1347, 27039, 1216, 1648, 15475, 27039, 1114, -1000, 543, 1531,
	1344, 1346, 1333, -1000, -1000, -1000, -1000, 1388, -1000, 1384,
	-1000, -1000, -1000, -1000, -1000, 1085, 1625, 19040, 1082, -1000,
	1082, -1000, 418, -1000, -1000, -1000, -46, -79, -1000, -1000,
	-1000, 2466, -1000, -1000, -1000, 641, 13686, 1640, -1000, 885,
	1537, -1000, 1532, -1000, -1000, 401, 401, -1000, -1000, -1000,
	-1000, -1000, -1000, 1084, -1000, 1078, 1098, 1076, 54, -1000,
	1251, 1496, 538, 538, -1000, 753, -1000, 1015, -1000, 27039,
	-1000, 27039, 27039, 27039, 1611, 1068, -1000, 27039, -1000, -1000,
	27039, -1000, -1000, 1422, 121, 1073, -1000, -1000, -1000, 222,
	27039, -1000, 910, 112, -1000, -1000, -1000, -1000, -1000, -1000,
	1218, -1000, -1000, -1000, 987, -1000, -118, 1015, 27039, 27039,
	27039, -1000, 27039, -1000, -1000, 635, 635, -1000, 1494, -1000,
	1015, -1000, 13686, 2410, 2410, -1000, -1000, 954, -1000, 1598,
	-1000, 954, 1221, 1221, -1000, 1221, 1243, -1000, 1221, 75,
	1221, 58, 954, 954, 2324, 2184, 2140, 2091, 1216, -100,
	-1000, 841, 12354, 1213, 1177, 1216, 1216, 1216, 1053, 884,
	31, -1000, -1000, -1000, 1621, 1609, 841, -1000, -1000, -1000,
	1547, 975, 1025, -1000, -1000, 10121, 1070, 1419, 415, 1053,
	1619, 27039, 12354, -1000, -1000, 12354, 1219, -1000, 12354, -1000,
	-1000, -1000, 1619, 1619, 1082, -1000, -1000, 477, -1000, -1000,
	-1000, -1000, -1000, 2410, -43, -1000, -1000, -1000, -1000, -1000,
	31, 883, 31, 710, -1000, 707, -1000, -1000, -208, -1000,
	-1000, 1260, 1364, -1000, -1000, 1218, -1000, -1000, -1000, 27039,
	27039, -1000, -1000, 218, -1000, 272, 1047, -1000, -162, -1000,
	-1000, 1565, 27039, -1000, -1000, 7415, -1000, -1000, 1217, 1252,
	-1000, -1000, -1000, -1000, -1000, -1000, 2410, -1000, 1505, -1000,
	-1000, 266, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13686, 13686, 13686, 13686, 13686, 1598, 880, 841, 13686, 13686,
	18596, 27039, 27039, 16807, 31, 29, -1000, 12354, 12354, 1526,
	-1000, 1216, -1000, 1242, 27039, 1216, 27039, -1000, 1598, -1000,
	841, 841, 27039, 841, 1598, -1000, -1000, 401, -1000, 401,
	962, 959, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1561, 1068, -1000, 216, 27039, -1000, 222, -1000, -168, -169,
	1248, 1032, 1051, -1000, 535, 27039, 27039, -1000, -1000, -1000,
	850, 850, 850, 850, 495, 954, -1000, 850, 850, 1030,
	-1000, 1030, 1030, 429, -261, -1000, 1467, 1470, 841, 1042,
	1639, -1000, 1216, 1648, 402, 1025, -1000, -1000, 1020, -1000,
	-1000, -1000, -1000, -1000, 1248, 1216, 1212, -1000, -1000, -1000,
	185, -1000, 7415, 5125, 1002, -1000, -1000, -1000, -1000, -1000,
	954, 158, -150, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	29, 281, -1000, 1442, 1439, 1606, 27039, 1025, 27039, -1000,
	185, 12798, 27039, -1000, -57, -1000, -1000, -1000, -1000, -1000,
	1220, -1000, 1406, -109, -154, 1452, 1454, 1454, 1470, 1604,
	1466, 1462, -1000, 879, 1009, -1000, -1000, 850, 954, 984,
	283, -1000, -1000, -118, -1000, 1372, -1000, 1445, 738, -1000,
	-1000, -1000, -1000, 877, -1000, 1601, 1600, -1000, -1000, -1000,
	1338, 127, -1000, -121, -1000, 712, -1000, -1000, -1000, 875,
	773, 1336, -1000, 1629, -1000, -151, -1000, -1000, -1000, -1000,
	-1000, 1637, 464, 464, -155, -1000, -1000, -1000, 278, 723,
	-1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1921, 1920, 46, 81, 79, 1919, 1918, 1917, 1916,
	130, 129, 121, 1915, 1914, 1913, 1910, 1908, 1906, 1904,
	1900, 1899, 1897, 1896, 1894, 56, 132, 32, 29, 135,
	1893, 1891, 49, 1890, 1889, 1888, 116, 114, 480, 1887,
	115, 1885, 1883, 1882, 1881, 1880, 1879, 1877, 1876, 1875,
	1874, 1872, 1871, 1870, 214, 1867, 1866, 8, 1865, 86,
	1863, 1862, 1861, 1858, 1856, 87, 1855, 1854, 1852, 113,
	1850, 1849, 44, 107, 40, 71, 1848, 1846, 73, 816,
	1844, 103, 120, 1841, 1266, 1822, 57, 83, 80, 1817,
	35, 1814, 1813, 91, 1811, 1810, 1809, 68, 1808, 1806,
	2751, 1805, 67, 75, 17, 31, 1799, 1798, 1797, 1796,
	36, 705, 1795, 1794, 23, 1793, 1792, 127, 1790, 84,
	27, 1787, 16, 12, 22, 1786, 82, 1781, 11, 52,
	34, 1779, 78, 1776, 1773, 1771, 1770, 41, 1769, 72,
	88, 24, 1768, 1766, 6, 14, 1765, 1764, 1761, 1759,
	1757, 1756, 4, 1755, 1754, 1753, 39, 1752, 10, 19,
	70, 85, 25, 7, 1751, 123, 1750, 20, 122, 65,
	109, 1749, 1747, 1746, 1009, 1745, 62, 1744, 139, 1743,
	1742, 33, 1740, 453, 715, 1739, 1737, 64, 1027, 2291,
	9, 112, 1736, 1735, 1935, 66, 76, 21, 1734, 1731,
	1730, 118, 143, 37, 853, 43, 1729, 1727, 1726, 1725,
	1723, 1722, 1721, 125, 224, 18, 108, 26, 1719, 1718,
	1717, 63, 38, 1714, 106, 105, 60, 117, 1712, 111,
	100, 55, 1711, 42, 1710, 1707, 1704, 1703, 30, 1702,
	1701, 1700, 1697, 104, 96, 58, 50, 1696, 45, 128,
	101, 89, 1695, 28, 134, 13, 1694, 2, 0, 1693,
	5, 126, 1506, 102, 1691, 1690, 1, 1688, 3, 1687,
	1686, 77, 1682, 1680, 1676, 1674, 3047, 15, 110, 1657,
	119,
}

var yyR1 = [...]int{
	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 258, 258, 258, 261, 261, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 278, 278, 95, 95, 93, 93, 94, 94, 160,
	160, 13, 14, 14, 170, 170, 169, 169, 169, 171,
	171, 171, 171, 204, 204, 15, 15, 15, 15, 15,
	70, 70, 260, 260, 259, 257, 257, 256, 256, 255,
	23, 24, 33, 33, 33, 33, 34, 35, 262, 262,
	234, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 236, 236, 223, 223, 235, 235, 235,
	235, 235, 235, 235, 222, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 206, 206, 206, 206,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 210, 210, 210, 210,
	210, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 221, 221, 213, 213, 216, 216,
	217, 217, 217, 218, 218, 219, 219, 214, 214, 214,
	215, 215, 215, 224, 248, 248, 247, 247, 245, 245,
	245, 245, 233, 233, 242, 242, 242, 242, 242, 232,
	232, 228, 228, 228, 229, 229, 230, 230, 227, 227,
	231, 231, 244, 244, 243, 225, 225, 226, 226, 250,
	250, 250, 250, 251, 267, 268, 266, 266, 266, 266,
	266, 59, 59, 59, 185, 185, 185, 240, 240, 239,
	239, 239, 241, 241, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 180, 180, 180, 265, 265, 265, 265,
	265, 265, 264, 264, 264, 237, 237, 237, 263, 263,
	129, 129, 130, 130, 30, 30, 30, 30, 30, 30,
	29, 29, 29, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 31, 31, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 220, 220, 220, 252, 252, 253, 253,
	17, 22, 22, 18, 18, 18, 18, 19, 19, 41,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 177,
	177, 269, 269, 179, 179, 175, 175, 178, 178, 176,
	176, 176, 181, 181, 181, 182, 182, 273, 273, 273,
	43, 43, 45, 45, 46, 47, 47, 199, 199, 200,
	200, 48, 49, 60, 60, 60, 60, 60, 60, 62,
	62, 62, 7, 7, 7, 7, 56, 56, 56, 6,
	6, 44, 44, 51, 270, 270, 271, 272, 272, 272,
	272, 52, 20, 20, 20, 20, 20, 20, 77, 77,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 71, 71, 71, 66, 66, 279, 54, 55,
	55, 69, 69, 69, 63, 63, 63, 68, 68, 68,
	74, 74, 76, 76, 76, 76, 76, 78, 78, 78,
	78, 78, 78, 73, 73, 75, 75, 75, 75, 192,
	192, 192, 191, 191, 85, 85, 86, 86, 87, 87,
	88, 88, 88, 127, 103, 103, 159, 159, 158, 158,
	161, 161, 89, 89, 89, 89, 90, 90, 91, 91,
	92, 92, 198, 198, 197, 197, 197, 196, 196, 96,
	96, 96, 98, 97, 97, 97, 97, 99, 99, 101,
	101, 100, 100, 102, 104, 104, 104, 104, 104, 105,
	105, 84, 84, 84, 84, 84, 84, 84, 84, 173,
	173, 107, 107, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 118, 118, 118, 118, 118, 118, 108,
	108, 108, 108, 108, 108, 108, 72, 72, 119, 119,
	119, 126, 120, 120, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 115, 115,
	115, 115, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 280, 280, 117, 116, 116, 116, 116, 116, 116,
	116, 67, 67, 67, 67, 67, 203, 203, 203, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 133, 133, 64, 64, 131, 131, 132, 134,
	134, 128, 128, 128, 110, 110, 110, 110, 110, 110,
	110, 110, 112, 112, 112, 135, 135, 136, 136, 137,
	137, 138, 138, 139, 140, 140, 140, 141, 141, 141,
	141, 32, 32, 32, 32, 32, 27, 27, 27, 27,
	28, 28, 28, 79, 79, 79, 79, 81, 81, 80,
	80, 57, 57, 58, 58, 58, 82, 82, 83, 83,
	83, 83, 156, 156, 156, 142, 142, 142, 142, 148,
	148, 148, 144, 144, 146, 146, 146, 147, 147, 147,
	145, 151, 151, 153, 153, 152, 152, 150, 150, 155,
	155, 154, 154, 149, 149, 109, 109, 109, 109, 109,
	157, 157, 157, 157, 162, 162, 122, 122, 124, 124,
	123, 125, 163, 163, 167, 164, 164, 168, 168, 168,
	168, 168, 165, 165, 166, 166, 193, 193, 193, 172,
	172, 183, 183, 184, 184, 174, 174, 186, 186, 186,
	53, 121, 121, 249, 249, 246, 189, 189, 190, 190,
	194, 194, 195, 195, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 276, 277, 201,
	202, 202, 202,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 3, 6, 7, 7, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 3, 0, 2, 3, 3, 4,
	2, 3, 3, 2, 3, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 3, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 10,
	11, 11, 12, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 0, 1, 2, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 4, 4, 2,
	10, 3, 6, 7, 5, 5, 5, 12, 7, 5,
	9, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 8, 8,
	3, 3, 5, 5, 6, 5, 4, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 4, 2, 4, 4,
	4, 4, 4, 5, 7, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 7, 2, 4, 5,
	4, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 3, 3, 3, 7, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 5, 4, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 4, 5,
	5, 6, 4, 4, 6, 6, 6, 8, 8, 8,
	8, 9, 8, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 0, 2, 4, 0, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 4, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -274, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -276, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 225, 226, 228, 229, 230, 231,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 323, 186, 185, 26, -275, 463, -69, 5, -137,
	16, -3, -54, -279, -54, -54, -54, -54, -54, -54,
	-234, -236, 81, 126, 81, -70, 163, 164, 173, 172,
	169, -262, 107, 314, 162, -39, -38, -37, -36, -40,
	30, -30, -31, -254, -29, -26, 158, 155, 199, 102,
	103, 191, 192, 193, 157, 175, 190, 194, 189, 208,
	-25, 77, 32, 336, 339, -241, 154, 160, 161, 324,
	105, 104, 72, 156, -238, 275, 440, -40, 442, 95,
	97, 441, 41, 164, 443, 444, 445, 446, 174, 447,
	448, 449, 450, 456, 457, 458, 459, 106, 5, 163,
	-262, -79, 285, 77, -261, -258, 84, 85, 86, 163,
	163, 164, 165, -262, 163, -100, -194, -258, -188, 333,
	177, 367, 368, 223, 77, 275, 440, 225, 239, 233,
	260, 252, 334, 369, 178, 212, 437, 250, 253, 301,
	442, 370, 192, 297, 280, 288, 95, 228, 310, 455,
	371, 453, 97, 441, 76, 48, 41, 187, 248, 244,
	443, 213, 372, 344, 206, 105, 102, 462, 242, 47,
	28, 452, 104, 46, 444, 373, 445, 290, 265, 431,
	45, 193, 374, 80, 338, 439, 292, 243, 289, 222,
	451, 159, 375, 423, 299, 432, 376, 266, 270, 377,
	302, 49, 378, 379, 433, 103, 380, 75, 446, 237,
	238, 381, 220, 176, 304, 264, 174, 34, 293, 335,
	224, 55, 200, 305, 43, 268, 42, 427, 382, 430,
	263, 259, 50, 383, 384, 385, 386, 447, 262, 236,
	258, 461, 218, 448, 59, 161, 272, 271, 273, 207,
	300, 255, 387, 388, 389, 181, 78, 390, 245, 19,
	391, 392, 214, 393, 53, 394, 395, 308, 190, 396,
	51, 449, 38, 195, 450, 397, 398, 399, 400, 401,
	298, 402, 291, 267, 269, 202, 287, 337, 403, 241,
	194, 454, 404, 182, 438, 196, 199, 189, 309, 183,
	405, 406, 407, 408, 409, 410, 411, 229, 456, 40,
	412, 413, 414, 415, 221, 217, 303, 312, 58, 79,
	277, 416, 436, 235, 215, 417, 226, 52, 457, 458,
	459, 209, 460, 283, 106, 219, 44, 256, 201, 418,
	419, 246, 247, 261, 234, 257, 227, 424, 203, 191,
	420, 311, 216, 278, 341, 208, 435, 340, 254, 251,
	210, 421, 165, 204, 205, 422, 425, 294, 284, 295,
	296, 285, 211, 339, 249, 279, 163, -165, 280, 281,
	282, 293, 294, 299, 298, 202, -273, 302, 163, -175,
	144, 153, 290, -179, 291, 284, 285, 211, -269, -258,
	445, 460, 301, 253, 303, 427, 286, 292, 296, 295,
	-194, 227, -199, 232, -189, -258, -188, 230, -100, -60,
	423, 157, -201, -201, -71, 427, 429, -120, -84, -106,
	110, -111, 30, 24, -110, -107, -128, -125, -126, 144,
	145, 147, 146, 148, 133, 134, 141, 111, 149, -115,
	-113, -114, -116, 88, 87, 96, 89, 90, 91, 92,
	98, 99, 100, -189, -194, -123, -276, 65, 66, 324,
	325, 326, 327, 332, 328, 113, 54, 313, 322, 321,
	320, 317, 318, 315, 316, 330, 331, 168, 314, 162,
	139, 323, -258, -188, 41, 283, 283, -100, -5, -4,
	-276, 6, 21, 22, -141, 18, 17, -277, 83, -63,
	-76, 60, 61, -78, 22, 37, 64, 62, -55, -75,
	135, -84, -194, -75, -174, 167, -174, -174, -164, -204,
	227, -168, 303, 302, -190, -166, -189, -187, -165, 300,
	158, 342, 109, 23, 25, 112, 144, 17, 113, 36,
	160, 175, 143, 171, 324, 153, 69, 343, 315, 316,
	313, 319, 326, 327, 314, 281, 30, 11, 345, 26,
	185, 22, 37, 137, 155, 116, 117, 188, 24, 186,
	100, 348, 20, 72, 180, 12, 173, 14, 349, 350,
	15, 168, 167, 128, 164, 67, 9, 149, 27, 125,
	63, 351, 29, 352, 353, 354, 355, 65, 126, 18,
	317, 318, 32, 428, 356, 332, 197, 139, 70, 56,
	429, 110, 357, 358, 98, 359, 101, 73, 434, 107,
	16, 68, 39, 360, 198, 361, 170, 362, 306, 363,
	127, 156, 323, 66, 364, 162, 282, 6, 329, 31,
	184, 172, 64, 365, 163, 115, 330, 331, 166, 99,
	5, 169, 33, 10, 71, 74, 320, 321, 322, 54,
	336, 114, 13, 366, 307, 108, 301, 253, -235, 126,
	-222, -226, -189, 179, -251, 175, -100, -244, -243, -189,
	-79, -184, 168, -258, 164, 164, 164, -184, 323, -36,
	-37, -165, 143, 196, 82, 82, -226, -225, -224, -263,
	198, 179, -250, -242, 171, 180, -232, 172, 173, -227,
	164, 29, -263, -227, 170, 180, 198, 198, 106, 198,
	106, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	195, -233, 118, -233, 340, 340, -238, -263, -263, -263,
	166, 34, 34, -186, -227, 166, 23, -233, -233, -165,
	143, -233, -233, -233, -233, 206, 206, -233, -233, -233,
	-233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
	-233, -233, -100, -82, 213, 153, 155, 158, 73, 118,
	-38, 208, -22, -100, -183, 168, -258, -183, -183, -100,
	150, -100, -181, 126, 13, -181, -181, -181, -181, -181,
	209, 297, 209, 297, 209, 210, 209, 210, 209, -178,
	-177, 288, 289, 283, 287, -258, 430, 314, 299, -258,
	202, 163, 203, 165, -228, 164, 34, 176, 210, 283,
	205, -181, -202, -276, -190, -202, -202, 31, 166, -189,
	-56, -189, 88, -7, -3, -11, -10, -12, 118, -77,
	283, -65, 144, 445, 431, 432, 433, 430, 298, 438,
	436, 434, 209, 435, 82, 109, 107, 108, 125, -84,
	-108, 128, 110, 126, 127, 112, 130, 129, 140, 133,
	134, 135, 136, 137, 138, 139, 131, 132, 143, 118,
	119, 120, 121, 122, 123, 124, -173, -276, -126, -276,
	151, 152, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -276, 150, -2, -120, -4, -276, -276, -276,
	-276, -276, -276, -276, -276, -133, -84, -276, -280, -117,
	-276, -280, -117, -280, -117, -280, -276, -280, -117, -280,
	-117, -280, -280, -117, -276, -276, -276, -276, -276, -276,
	-276, -201, -270, -271, -103, -100, -276, -137, -3, -54,
	-156, 20, 32, -84, -138, -139, -84, -137, 56, -73,
	-75, -78, 60, 61, 94, 12, -192, -191, 23, -189,
	88, 150, 12, -101, 27, -100, -86, -87, -88, -89,
	-103, -127, -276, 12, -93, -94, -100, -102, -194, 82,
	227, -168, -204, -170, -169, 304, 306, 118, -193, -189,
	88, 30, 83, 82, -100, -206, -209, -211, -210, -212,
	-207, -208, 250, 251, 144, 254, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 31, 187, 246, 247,
	248, 249, 266, 267, 268, 269, 270, 271, 272, 273,
	233, 252, 334, 234, 235, 236, 237, 238, 239, 241,
	242, 243, 244, 245, -261, -258, 81, 83, 82, -213,
	81, -82, -100, 110, -249, -246, 74, -258, -258, -258,
	-258, -233, -233, 195, -29, -26, -254, 16, -25, -26,
	158, 102, 103, 155, 81, -222, 81, -231, -261, -258,
	81, 29, 170, 169, -230, -227, -230, -231, -258, -128,
	-189, -194, -258, 29, 29, -161, -189, -161, -161, 21,
	-161, 21, -161, 21, 89, -189, -161, 21, -161, 21,
	-161, 21, -161, 21, -161, 21, 30, 75, 76, 30,
	78, 79, 80, -128, -128, -222, -165, -100, -258, 89,
	89, -233, -233, 89, 88, 88, 88, -233, -233, 89,
	88, -258, 88, -264, 181, 222, 224, 89, 89, 89,
	89, 30, 88, -265, 30, 452, 451, 453, 454, 455,
	89, 30, 89, 30, 89, -189, 81, -81, 215, 118,
	204, 204, 163, 163, 217, -100, 216, 218, 219, 41,
	82, 166, -93, 24, 73, -95, -100, -258, -195, -194,
	-187, 88, -84, -181, -100, -181, -100, -181, -181, -181,
	-181, -176, 12, 128, -229, 12, 128, -176, -202, -202,
	-202, -100, -202, -202, -100, -202, -202, -229, -182, 126,
	73, -200, 230, 264, 424, 425, 426, 82, 336, -93,
	430, 430, 430, 430, 430, 430, -84, -84, -84, -84,
	-118, 98, 110, 99, 100, -111, -119, -123, -126, 93,
	128, 126, 127, 112, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -203,
	-258, 88, 144, -258, -110, -110, -189, -74, 22, 37,
	-73, -190, -195, -187, -69, -277, -277, -137, -73, -73,
	-84, -84, -128, 88, -73, -128, 88, -73, -73, -68,
	22, 37, -131, -132, 114, -128, -277, -111, -189, -189,
	-73, -74, -74, -73, -73, 82, -272, 306, 307, 428,
	-197, 198, -196, 23, -194, 88, -121, -120, -141, -277,
	-142, 27, 10, 128, 82, 19, 82, -140, 25, 26,
	-141, -112, -189, 89, 92, -85, 82, 12, -78, -100,
	-191, 135, -195, -100, -160, 198, -100, 31, 82, -96,
	-98, -97, -99, 63, 67, 69, 64, 65, 66, 70,
	-198, 23, -86, -3, -276, -100, -93, -278, 82, 12,
	74, -278, 82, 150, -168, -170, 82, 305, 307, 308,
	73, 101, -84, -215, 143, -240, -239, -238, -222, -224,
	-225, -226, 83, -143, -218, 278, -213, -213, -213, -213,
	-213, -214, -165, -214, -214, -214, 81, 81, -213, -213,
	-213, -213, -216, 81, -216, -216, -217, 81, -217, -251,
	-84, -248, -247, -245, -246, 174, 95, 336, -243, -140,
	89, -81, 24, 73, -189, -249, -249, -249, -258, 88,
	-258, 88, 82, 17, -223, -222, -129, 222, -253, 198,
	-250, -244, 81, 29, -230, -231, -231, 150, -258, 82,
	27, 106, 106, 106, 106, 336, 155, 31, -222, -129,
	-203, 166, -203, -203, 88, 88, -180, 460, -93, 165,
	221, -83, 319, 88, 84, -100, -100, -100, -100, -100,
	158, 155, 206, -100, -100, -59, 183, 178, -100, 82,
	-59, -181, -194, -194, -100, -181, -100, 88, -100, -189,
	-65, 306, 336, 20, -66, 20, 98, 99, 100, -119,
	-111, -111, -111, -72, 188, 109, -277, -277, -73, -73,
	-276, 150, -5, -141, -277, -277, 82, 74, 23, 12,
	12, -277, 12, 12, -277, -277, -73, -134, -132, 116,
	-84, -277, -277, 82, 82, -277, -277, -277, -277, -277,
	-271, 427, 307, -104, 71, 167, 72, -276, -196, -277,
	-156, 39, 47, 58, -84, -84, -139, -156, -172, 20,
	12, 54, 54, -105, 13, -75, -86, -78, 150, -105,
	-109, 31, 54, -3, -276, -276, -163, -167, -128, -87,
	-88, -88, -87, -88, 63, 63, 63, 68, 63, 68,
	63, -97, -194, -277, -277, -3, -160, 74, -86, -100,
	-86, -102, -194, 135, -169, -171, 309, 306, 312, -258,
	88, 82, -238, -226, 98, 110, 30, 73, 275, 95,
	170, 29, 169, -219, 279, -214, -214, -215, -258, 144,
	-215, -215, -215, -221, 88, -221, 89, 89, 83, -32,
	-27, -28, 32, 77, -245, -233, 88, 38, 83, 165,
	-100, 73, 73, 73, 16, -158, -189, 82, 83, -130,
	223, -128, 83, -189, 83, -158, -231, -190, -189, -276,
	163, 30, 30, -129, -130, -215, -258, 462, 461, 83,
	-100, -80, 213, 220, 81, 85, -260, 74, 204, 275,
	204, 207, 166, -32, -100, -176, -176, 32, 306, 439,
	437, -72, 109, -111, -111, -277, -277, -74, -190, -137,
	-156, -205, 144, 250, 187, 248, 244, 264, 255, 277,
	246, 278, -203, -205, -111, -111, -111, -111, 333, -137,
	117, -84, 115, -111, -111, 164, 164, 164, -161, 40,
	88, 88, 59, -100, -135, 14, -84, 135, -141, -162,
	73, -163, -122, -124, -123, -276, -157, -277, -189, -161,
	-105, 82, 118, -91, -90, 73, 74, -92, 73, -90,
	63, 63, -277, -105, -86, -105, -105, 150, 306, 310,
	311, -238, 98, -111, 10, 88, 29, 29, -215, -215,
	83, 82, 83, 82, 83, 82, -185, 373, 110, -28,
	-27, -233, -233, 89, -258, -100, -100, -100, -100, 17,
	82, -222, -128, 54, -248, 83, -252, -253, -100, -110,
	-130, -159, 81, 83, -257, 336, -259, -258, -189, -189,
	-189, -100, -181, -181, 32, -258, -111, -277, -141, -277,
	-213, -213, -213, -217, -213, 238, -213, 238, -277, -277,
	20, 20, 20, 20, -276, -64, 329, -84, 82, 82,
	-276, -276, -276, -277, 88, -214, -136, 15, 17, 28,
	-162, 82, -277, -277, 82, 54, 150, -277, -137, -167,
	-84, -84, 81, -84, -137, -105, -114, -214, 88, -214,
	89, 89, 373, 30, 78, 79, 80, 30, 75, 76,
	-159, -158, -189, 200, 182, -277, 82, -220, 336, 339,
	23, -158, -256, -255, -190, 81, 74, -156, -214, -258,
	-111, -111, -111, -111, -111, -141, 88, -111, -111, -158,
	-277, -158, -158, -197, -214, -145, -150, -178, -84, -120,
	29, -124, 54, -3, -189, -122, -189, -141, -158, -141,
	-215, -215, 83, 83, 23, 201, -100, -253, 340, 340,
	-3, 83, 82, 118, -158, -100, -277, -277, -277, -277,
	-67, 128, 336, -277, -277, -277, -277, -277, -277, -104,
	-148, 423, -151, 43, -152, 44, 10, -122, 150, 83,
	-3, -276, 81, -57, 336, -255, -237, -190, 88, 89,
	83, -277, 334, 70, 337, -145, 48, 256, -153, 52,
	-154, -149, 53, 17, -163, -189, -57, -111, 197, -158,
	-58, 212, 427, -260, 59, 335, 338, -146, 50, -144,
	49, -144, -152, 17, -155, 45, 46, 88, -277, -277,
	83, 175, -257, 59, -147, 51, 73, 101, 88, 17,
	17, -267, -268, 73, 214, 336, 73, 101, 88, 88,
	-268, 73, 11, 10, 337, -266, 183, 178, 181, 31,
	-266, 338, 177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 809, 0, 547, 547, 547, 547, 547, 547,
	547, 0, 0, 90, -2, -2, 833, 37, 0, 0,
	0, 0, -2, 481, 482, 0, 484, -2, 0, 0,
	493, 1339, 1339, 542, 0, 0, 0, 0, 0, 1337,
	54, 55, 499, 500, 501, 1, 3, 0, 551, 817,
	0, 0, -2, 549, 0, 0, 925, 925, 925, 0,
	85, 86, 0, 0, 0, 833, 923, 0, 0, 0,
	0, 923, 0, 108, 109, 89, -2, 113, 114, 0,
	118, 366, 327, 369, 325, 355, -2, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 222, 222, 0, 0, -2, 318, 318, 318, 0,
	0, 0, 352, 927, 272, 222, 222, 0, 222, 222,
	222, 222, 0, 0, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 0,
	107, 846, 0, 0, 117, 38, 34, 35, 36, 0,
	921, 0, 921, 921, 0, 418, 631, 940, 941, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 0, 472, 472, 472,
	472, 472, 472, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 447, 0, 0, 454, 472, 1340,
	1340, 1340, 912, 0, 478, 479, 466, 464, 461, 462,
	480, 483, 0, 488, 491, 936, 937, 0, 506, 0,
	1154, 498, 511, 512, 0, 543, 544, 39, 682, 641,
	0, 647, 649, 0, 684, 685, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	715, 716, 717, 794, 795, 796, 797, 798, 799, 800,
	801, 651, 652, 791, 0, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 751, 751, 751,
	751, 751, 751, 751, 751, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 1339, 0, 521, 0, 809, 50,
	0, 547, 552, 553, 852, 0, 0, 809, 1338, 0,
	0, -2, -2, 563, 569, 570, 571, 572, 548, 0,
	575, 579, 0, 0, 0, 926, 0, 0, 71, 0,
	1307, 905, -2, -2, 0, 0, 938, 939, 914, -2,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, -2, 1099, 0, 0,
	127, 128, 0, 37, 248, 0, 123, 0, 242, 196,
	846, 0, 0, 933, 0, 0, 0, 0, 91, 115,
	116, 222, 222, 0, 117, 117, 334, 335, 336, 0,
	0, -2, 246, 0, 319, 0, 0, 236, 236, 240,
	238, 239, 0, 0, 0, 0, 0, 0, 346, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 0, 223, 0, 364, 365, 273, 0, 0, 0,
	0, 344, 345, 0, 0, 928, 929, 0, 0, 222,
	222, 0, 0, 0, 0, 222, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 837, 0, 0, 0, 0, 0, 0,
	-2, 0, 410, 0, 0, 0, 0, 0, 0, 417,
	0, 419, 420, 0, 0, 421, 422, 423, 424, 425,
	472, 0, 472, 0, 472, 472, 472, 472, 469, 0,
	469, 467, 468, 459, 460, 1340, 1340, 1340, 0, 1340,
	1340, 0, 1340, 1340, 0, 231, 232, 233, 475, 451,
	452, 455, 456, 1341, 1342, 457, 458, 913, 489, 492,
	509, 507, 508, 510, 502, 503, 504, 505, 0, 522,
	523, 528, 0, 0, 0, 0, 534, 535, 536, 0,
	0, 539, 540, 541, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	670, 671, 672, 673, 674, 675, 648, 0, 662, 0,
	0, 0, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 0, 560, 0, 0, 0, 809, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 783, 0, 735, 743,
	0, 736, 744, 737, 745, 738, 0, 739, 746, 740,
	747, 741, 742, 748, 0, 0, 0, 560, 560, 0,
	0, 40, 513, 514, 0, 614, 931, 817, 0, 562,
	855, 0, 0, 818, 810, 811, 814, 817, 0, 584,
	573, 564, 567, 568, 550, 0, 576, 580, 0, 582,
	583, 0, 0, 69, 0, 630, 0, 586, 588, 589,
	590, 612, 0, 0, 0, 0, 65, 67, 631, 0,
	1307, 911, 0, 73, 74, 0, 0, 0, 210, 916,
	917, 918, -2, 229, 0, 135, 203, 147, 148, 149,
	196, 151, 196, 196, 196, 196, 207, 207, 207, 207,
	179, 180, 181, 182, 183, 0, 0, 166, 196, 196,
	196, 196, 186, 187, 188, 189, 190, 191, 192, 193,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 198,
	198, 198, 200, 200, 0, 38, 0, 214, 0, 814,
	0, 837, 100, 0, 0, 934, 0, 933, 933, 933,
	106, 0, 0, 367, 328, 356, 368, 0, 331, 332,
	-2, 0, 0, 318, 0, 320, 0, 230, 0, -2,
	0, 0, 0, 236, 240, 237, 240, 228, 241, 348,
	791, 0, 349, 350, 0, 382, 600, 0, 0, 0,
	0, 0, 388, 389, 390, 0, 392, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 357, 358, 359, 360,
	361, 362, 363, 0, 0, 320, 0, 353, 0, 274,
	275, 0, 0, 278, 279, 280, 281, 0, 0, 284,
	285, 286, 287, 288, 312, 313, 314, 289, 290, 291,
	292, 293, 294, 295, 306, 307, 308, 309, 310, 311,
	296, 297, 298, 299, 300, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 834, 835, 836, 0,
	0, 0, 261, 922, 0, 261, 63, 416, 632, 942,
	943, 473, 474, 426, 445, 428, 448, 429, 431, 430,
	432, 472, 0, 0, 0, 234, 235, 472, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 0, 450, 0,
	0, 0, 490, 494, 495, 496, 497, 0, 0, 525,
	530, 531, 532, 533, 545, 538, 683, 642, 643, 644,
	646, 663, 0, 665, 667, 653, 654, 678, 679, 680,
	0, 0, 0, 0, 676, 658, 0, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 703,
	766, 767, 768, 0, 701, 702, 713, 0, 0, 0,
	561, 792, 0, -2, 0, 681, 900, 817, 0, 0,
	0, 0, 686, 794, 0, 686, 794, 0, 0, 0,
	558, 559, 789, 786, 0, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 519, 0,
	634, 0, 615, 0, 617, 618, 0, 932, 852, 51,
	41, 0, 853, 0, 0, 0, 0, 813, 815, 816,
	852, 0, 802, 0, 0, 639, 0, 0, 565, 47,
	581, 577, 0, 639, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 619, 0, 0, 622, 0, 0, 0,
	0, 613, 0, 0, 0, -2, 0, 0, 0, 61,
	62, 0, 0, 0, 906, 72, 0, 0, 77, 78,
	907, 908, 909, 910, 0, 110, -2, 269, 129, 131,
	132, 133, 124, 134, 205, 204, 150, 207, 207, 173,
	174, 210, 0, 210, 210, 210, 0, 0, 167, 168,
	169, 170, 161, 0, 162, 163, 164, 0, 165, 247,
	0, 821, 215, 216, 218, 222, 0, 0, 243, 244,
	0, 0, 924, 0, 935, 0, 0, 0, 119, 120,
	121, 122, 117, 0, 0, 125, 322, 0, 0, 0,
	245, 0, 0, 224, 240, 225, 226, 0, 351, 0,
	0, 384, 385, 386, 387, 0, 0, 0, 320, 322,
	210, 0, 276, 277, 282, 283, 301, 0, 0, 0,
	0, 847, 848, 0, 851, 92, 374, 376, 375, 379,
	0, 0, 0, 0, 411, 413, 262, 263, 821, 0,
	415, 433, 470, 471, 469, 449, 469, 476, 453, 486,
	529, 0, 0, 0, 537, 0, 664, 666, 668, 655,
	676, 659, 0, 656, 0, 0, 650, 718, 0, 0,
	560, 0, 809, 852, 722, 723, 0, 0, 0, 0,
	0, 759, 0, 0, 760, 0, 809, 0, 787, 0,
	0, 734, 753, 0, 0, 754, 755, 756, 757, 758,
	515, 518, 520, 594, 0, 0, 0, 0, 616, 930,
	43, 0, 0, 0, 819, 820, 812, 42, 0, 919,
	920, 803, 804, 805, 0, 574, 585, 566, 0, 817,
	894, 0, 0, 886, 0, 0, 639, 902, 0, 587,
	608, 610, 0, 605, 620, 621, 623, 0, 625, 0,
	627, 628, 591, 592, 593, 0, 639, 0, 639, 66,
	639, 68, 0, 633, 75, 76, 0, 0, 82, 211,
	212, 117, 271, 130, 136, 0, 0, 0, 140, 0,
	0, 143, 145, 146, 206, 210, 210, 175, 208, 209,
	176, 177, 178, 0, 194, 0, 0, 0, 264, 87,
	825, 824, 222, 222, 217, 0, 220, 0, 197, 0,
	102, 0, 0, 0, 0, 326, 598, 0, 337, 338,
	0, 321, 381, 0, 214, 0, 227, 792, 601, 0,
	0, 339, 0, 322, 342, 343, 354, 304, 305, 302,
	596, 838, 839, 840, 0, 850, 95, 0, 0, 0,
	0, 372, 0, 414, 64, 472, 472, 524, 0, 527,
	0, 657, 0, 677, 660, 719, 720, 0, 793, 817,
	45, 0, 196, 196, 772, 196, 200, 775, 196, 777,
	196, 780, 0, 0, 0, 0, 0, 0, 0, 784,
	733, 790, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 857, 854, 44, 807, 0, 640, 578, 48, 52,
	0, 894, 885, 896, 898, 0, 0, 0, 890, 0,
	809, 0, 0, 602, 609, 0, 0, 603, 0, 604,
	624, 626, -2, 809, 639, 59, 60, 0, 79, 80,
	81, 270, 137, 138, 0, 141, 142, 144, 171, 172,
	207, 0, 207, 0, 201, 0, 253, 265, 0, 822,
	823, 0, 0, 219, 221, 596, 103, 104, 105, 0,
	0, 126, 323, 0, 213, 0, 0, 406, 403, 340,
	341, 0, 0, 849, 373, 0, 93, 94, 0, 0,
	378, 412, 434, 446, 526, 546, 661, 721, 852, 724,
	769, 207, 773, 774, 776, 778, 779, 781, 726, 725,
	0, 0, 0, 0, 0, 817, 0, 788, 0, 0,
	0, 0, 0, 614, 207, 877, 49, 0, 0, 0,
	53, 0, 899, 0, 0, 0, 0, 70, 817, 903,
	904, 606, 0, 611, 817, 58, 139, 210, 195, 210,
	0, 0, 266, 826, 827, 828, 829, 830, 831, 832,
	0, 329, 599, 0, 0, 383, 0, 391, 0, 0,
	0, 0, 96, 97, 0, 0, 0, 46, 770, 771,
	0, 0, 0, 0, 761, 0, 785, 0, 0, 0,
	636, 0, 0, 634, 859, 858, 871, 875, 808, 806,
	0, 897, 0, 889, 892, 888, 891, 56, 0, 57,
	184, 185, 199, 202, 0, 0, 0, 407, 404, 405,
	841, 597, 0, 0, 0, 380, 727, 729, 728, 730,
	0, 0, 0, 732, 749, 750, 635, 637, 638, 595,
	877, 0, 870, 873, -2, 0, 0, 887, 0, 607,
	841, 0, 0, 370, 843, 98, 99, 315, 316, 317,
	92, 731, 0, 0, 0, 864, 862, 862, 875, 0,
	879, 0, 884, 0, 895, 893, 88, 0, 0, 0,
	0, 844, 845, 95, 762, 0, 765, 867, 0, 860,
	863, 861, 872, 0, 878, 0, 0, 876, 408, 409,
	249, 0, 377, 763, 856, 0, 865, 866, 874, 0,
	0, 250, 251, 0, 842, 0, 868, 869, 880, 882,
	252, 0, 0, 0, 0, 254, 256, 257, 0, 0,
	255, 764, 258, 259, 260,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 463,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:409
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Load{}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:546
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:589
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = InsertAct
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:672
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadWrite
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = ReadOnly
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = SessionScope
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.scope = GlobalScope
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:759
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = false
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.boolean = true
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:831
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = false
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = true
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptions
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyDollar[1].columnTypeOptions.NotNull = false
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyDollar[1].columnTypeOptions.NotNull = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].bytes)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyPrimary
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUniqueKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUnique
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.literal = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1298
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1302
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1337
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.str = ""
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1374
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = nil
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1440
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = yyDollar[2].str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = "key"
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = ""
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1548
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1560
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1566
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = ""
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.boolean = false
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1631
		{
			yyVAL.tableOptions = nil
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.bytes = []byte("")
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colName = nil
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.colName = nil
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1846
		{
			yyVAL.alterOptions = nil
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1866
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &Force{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2037
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2061
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2146
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2150
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2154
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2158
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2162
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2178
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = false
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.boolean = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2252
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2256
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2278
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2282
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &OtherRead{}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2401
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2409
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2421
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2430
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2434
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2444
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2457
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2461
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = "extended "
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = "full "
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2558
		{
			yyVAL.showFilter = nil
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.showFilter = nil
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.empty = struct{}{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.empty = struct{}{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.empty = struct{}{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.statement = &Begin{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.statement = &Begin{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.statement = &Commit{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.statement = &Rollback{}
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.empty = struct{}{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2654
		{
			yyVAL.explainType = EmptyType
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2658
		{
			yyVAL.explainType = JSONType
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2662
		{
			yyVAL.explainType = TreeType
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.explainType = VitessType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.explainType = TraditionalType
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.explainType = AnalyzeType
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2729
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2745
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2755
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.lockType = Read
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.lockType = ReadLocal
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.lockType = Write
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2779
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2791
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2799
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2803
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2807
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2811
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.boolean = false
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.boolean = true
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.boolean = true
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			setAllowComments(yylex, true)
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2908
		{
			yyVAL.bytes2 = nil
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.boolean = true
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.boolean = false
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = SQLCacheStr
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
			yyVAL.boolean = false
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.boolean = true
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.boolean = true
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.selectExprs = nil
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2966
		{
			yyVAL.strs = nil
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2982
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = SQLCacheStr
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = DistinctStr
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = DistinctStr
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = StraightJoinHint
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3036
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3041
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3049
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3109
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3114
		{
			yyVAL.columns = nil
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3118
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3151
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3155
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3159
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3169
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3171
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3181
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.empty = struct{}{}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.empty = struct{}{}
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3191
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.joinType = NormalJoinType
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.joinType = NormalJoinType
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.joinType = NormalJoinType
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.joinType = StraightJoinType
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3232
		{
			yyVAL.joinType = LeftJoinType
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.joinType = LeftJoinType
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3240
		{
			yyVAL.joinType = RightJoinType
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3244
		{
			yyVAL.joinType = RightJoinType
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3250
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3264
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3289
		{
			yyVAL.indexHints = nil
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3293
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3297
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3301
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3305
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = nil
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = ""
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3386
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 661:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3428
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = nil
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3641
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3671
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 724:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3689
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3693
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 731:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3717
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3721
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3725
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3729
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3805
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3809
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3841
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3859
		{
			yyVAL.matchExprOption = NoOption
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3867
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 764:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3871
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3915
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3925
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3933
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3945
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3950
		{
			yyVAL.expr = nil
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string("")
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3979
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3984
		{
			yyVAL.expr = nil
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3998
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4002
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.expr = &NullVal{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.exprs = nil
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			yyVAL.expr = nil
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.orderBy = nil
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4098
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4103
		{
			yyVAL.orderDirection = AscOrder
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.orderDirection = AscOrder
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.orderDirection = DescOrder
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4116
		{
			yyVAL.limit = nil
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4124
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4128
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.alterOptions = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4156
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4160
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4174
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = yyDollar[3].str
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = yyDollar[2].str
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = "cascaded"
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = yyDollar[3].str
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4272
		{
			yyVAL.lock = NoLock
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.lock = ForUpdateLock
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4280
		{
			yyVAL.lock = ShareModeLock
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.selectInto = nil
		}
	case 856:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4289
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4297
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = " header"
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = " manifest on"
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = " manifest off"
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = " overwrite on"
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = " overwrite off"
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = " optionally"
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4427
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4435
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4439
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4443
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4461
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4466
		{
			yyVAL.updateExprs = nil
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4470
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.bytes = []byte("charset")
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &Default{}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4589
		{
			yyVAL.boolean = false
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.boolean = true
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.boolean = false
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.boolean = true
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.ignore = false
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.ignore = true
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4604
		{
			yyVAL.empty = struct{}{}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.empty = struct{}{}
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.empty = struct{}{}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4617
		{
			yyVAL.exprs = nil
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4626
		{
			yyVAL.indexOptions = nil
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4632
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			decNesting(yylex)
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5098
		{
			skipToEnd(yylex)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			skipToEnd(yylex)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			skipToEnd(yylex)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
