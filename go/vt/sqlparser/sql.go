// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const VIRTUAL = 57448
const STORED = 57449
const EMPTY_FROM_CLAUSE = 57450
const LOWER_THAN_CHARSET = 57451
const CHARSET = 57452
const UNIQUE = 57453
const KEY = 57454
const OR = 57455
const XOR = 57456
const AND = 57457
const NOT = 57458
const BETWEEN = 57459
const CASE = 57460
const WHEN = 57461
const THEN = 57462
const ELSE = 57463
const END = 57464
const LE = 57465
const GE = 57466
const NE = 57467
const NULL_SAFE_EQUAL = 57468
const IS = 57469
const LIKE = 57470
const REGEXP = 57471
const IN = 57472
const SHIFT_LEFT = 57473
const SHIFT_RIGHT = 57474
const DIV = 57475
const MOD = 57476
const UNARY = 57477
const COLLATE = 57478
const BINARY = 57479
const UNDERSCORE_BINARY = 57480
const UNDERSCORE_UTF8MB4 = 57481
const UNDERSCORE_UTF8 = 57482
const UNDERSCORE_LATIN1 = 57483
const INTERVAL = 57484
const JSON_EXTRACT_OP = 57485
const JSON_UNQUOTE_EXTRACT_OP = 57486
const CREATE = 57487
const ALTER = 57488
const DROP = 57489
const RENAME = 57490
const ANALYZE = 57491
const ADD = 57492
const FLUSH = 57493
const CHANGE = 57494
const MODIFY = 57495
const REVERT = 57496
const SCHEMA = 57497
const TABLE = 57498
const INDEX = 57499
const VIEW = 57500
const TO = 57501
const IGNORE = 57502
const IF = 57503
const PRIMARY = 57504
const COLUMN = 57505
const SPATIAL = 57506
const FULLTEXT = 57507
const KEY_BLOCK_SIZE = 57508
const CHECK = 57509
const INDEXES = 57510
const ACTION = 57511
const CASCADE = 57512
const CONSTRAINT = 57513
const FOREIGN = 57514
const NO = 57515
const REFERENCES = 57516
const RESTRICT = 57517
const SHOW = 57518
const DESCRIBE = 57519
const EXPLAIN = 57520
const DATE = 57521
const ESCAPE = 57522
const REPAIR = 57523
const OPTIMIZE = 57524
const TRUNCATE = 57525
const COALESCE = 57526
const EXCHANGE = 57527
const REBUILD = 57528
const PARTITIONING = 57529
const REMOVE = 57530
const MAXVALUE = 57531
const PARTITION = 57532
const REORGANIZE = 57533
const LESS = 57534
const THAN = 57535
const PROCEDURE = 57536
const TRIGGER = 57537
const VINDEX = 57538
const VINDEXES = 57539
const DIRECTORY = 57540
const NAME = 57541
const UPGRADE = 57542
const STATUS = 57543
const VARIABLES = 57544
const WARNINGS = 57545
const CASCADED = 57546
const DEFINER = 57547
const OPTION = 57548
const SQL = 57549
const UNDEFINED = 57550
const SEQUENCE = 57551
const MERGE = 57552
const TEMPORARY = 57553
const TEMPTABLE = 57554
const INVOKER = 57555
const SECURITY = 57556
const FIRST = 57557
const AFTER = 57558
const LAST = 57559
const VITESS_MIGRATION = 57560
const CANCEL = 57561
const RETRY = 57562
const COMPLETE = 57563
const BEGIN = 57564
const START = 57565
const TRANSACTION = 57566
const COMMIT = 57567
const ROLLBACK = 57568
const SAVEPOINT = 57569
const RELEASE = 57570
const WORK = 57571
const BIT = 57572
const TINYINT = 57573
const SMALLINT = 57574
const MEDIUMINT = 57575
const INT = 57576
const INTEGER = 57577
const BIGINT = 57578
const INTNUM = 57579
const REAL = 57580
const DOUBLE = 57581
const FLOAT_TYPE = 57582
const DECIMAL = 57583
const NUMERIC = 57584
const TIME = 57585
const TIMESTAMP = 57586
const DATETIME = 57587
const YEAR = 57588
const CHAR = 57589
const VARCHAR = 57590
const BOOL = 57591
const CHARACTER = 57592
const VARBINARY = 57593
const NCHAR = 57594
const TEXT = 57595
const TINYTEXT = 57596
const MEDIUMTEXT = 57597
const LONGTEXT = 57598
const BLOB = 57599
const TINYBLOB = 57600
const MEDIUMBLOB = 57601
const LONGBLOB = 57602
const JSON = 57603
const ENUM = 57604
const GEOMETRY = 57605
const POINT = 57606
const LINESTRING = 57607
const POLYGON = 57608
const GEOMETRYCOLLECTION = 57609
const MULTIPOINT = 57610
const MULTILINESTRING = 57611
const MULTIPOLYGON = 57612
const NULLX = 57613
const AUTO_INCREMENT = 57614
const APPROXNUM = 57615
const SIGNED = 57616
const UNSIGNED = 57617
const ZEROFILL = 57618
const CODE = 57619
const COLLATION = 57620
const COLUMNS = 57621
const DATABASES = 57622
const ENGINES = 57623
const EVENT = 57624
const EXTENDED = 57625
const FIELDS = 57626
const FULL = 57627
const FUNCTION = 57628
const GTID_EXECUTED = 57629
const KEYSPACES = 57630
const OPEN = 57631
const PLUGINS = 57632
const PRIVILEGES = 57633
const PROCESSLIST = 57634
const SCHEMAS = 57635
const TABLES = 57636
const TRIGGERS = 57637
const USER = 57638
const VGTID_EXECUTED = 57639
const VITESS_KEYSPACES = 57640
const VITESS_METADATA = 57641
const VITESS_MIGRATIONS = 57642
const VITESS_SHARDS = 57643
const VITESS_TABLETS = 57644
const VSCHEMA = 57645
const NAMES = 57646
const GLOBAL = 57647
const SESSION = 57648
const ISOLATION = 57649
const LEVEL = 57650
const READ = 57651
const WRITE = 57652
const ONLY = 57653
const REPEATABLE = 57654
const COMMITTED = 57655
const UNCOMMITTED = 57656
const SERIALIZABLE = 57657
const CURRENT_TIMESTAMP = 57658
const DATABASE = 57659
const CURRENT_DATE = 57660
const CURRENT_TIME = 57661
const LOCALTIME = 57662
const LOCALTIMESTAMP = 57663
const CURRENT_USER = 57664
const UTC_DATE = 57665
const UTC_TIME = 57666
const UTC_TIMESTAMP = 57667
const REPLACE = 57668
const CONVERT = 57669
const CAST = 57670
const SUBSTR = 57671
const SUBSTRING = 57672
const GROUP_CONCAT = 57673
const SEPARATOR = 57674
const TIMESTAMPADD = 57675
const TIMESTAMPDIFF = 57676
const MATCH = 57677
const AGAINST = 57678
const BOOLEAN = 57679
const LANGUAGE = 57680
const WITH = 57681
const QUERY = 57682
const EXPANSION = 57683
const WITHOUT = 57684
const VALIDATION = 57685
const UNUSED = 57686
const ARRAY = 57687
const CUME_DIST = 57688
const DESCRIPTION = 57689
const DENSE_RANK = 57690
const EMPTY = 57691
const EXCEPT = 57692
const FIRST_VALUE = 57693
const GROUPING = 57694
const GROUPS = 57695
const JSON_TABLE = 57696
const LAG = 57697
const LAST_VALUE = 57698
const LATERAL = 57699
const LEAD = 57700
const MEMBER = 57701
const NTH_VALUE = 57702
const NTILE = 57703
const OF = 57704
const OVER = 57705
const PERCENT_RANK = 57706
const RANK = 57707
const RECURSIVE = 57708
const ROW_NUMBER = 57709
const SYSTEM = 57710
const WINDOW = 57711
const ACTIVE = 57712
const ADMIN = 57713
const BUCKETS = 57714
const CLONE = 57715
const COMPONENT = 57716
const DEFINITION = 57717
const ENFORCED = 57718
const EXCLUDE = 57719
const FOLLOWING = 57720
const GEOMCOLLECTION = 57721
const GET_MASTER_PUBLIC_KEY = 57722
const HISTOGRAM = 57723
const HISTORY = 57724
const INACTIVE = 57725
const INVISIBLE = 57726
const LOCKED = 57727
const MASTER_COMPRESSION_ALGORITHMS = 57728
const MASTER_PUBLIC_KEY_PATH = 57729
const MASTER_TLS_CIPHERSUITES = 57730
const MASTER_ZSTD_COMPRESSION_LEVEL = 57731
const NESTED = 57732
const NETWORK_NAMESPACE = 57733
const NOWAIT = 57734
const NULLS = 57735
const OJ = 57736
const OLD = 57737
const OPTIONAL = 57738
const ORDINALITY = 57739
const ORGANIZATION = 57740
const OTHERS = 57741
const PATH = 57742
const PERSIST = 57743
const PERSIST_ONLY = 57744
const PRECEDING = 57745
const PRIVILEGE_CHECKS_USER = 57746
const PROCESS = 57747
const RANDOM = 57748
const REFERENCE = 57749
const REQUIRE_ROW_FORMAT = 57750
const RESOURCE = 57751
const RESPECT = 57752
const RESTART = 57753
const RETAIN = 57754
const REUSE = 57755
const ROLE = 57756
const SECONDARY = 57757
const SECONDARY_ENGINE = 57758
const SECONDARY_LOAD = 57759
const SECONDARY_UNLOAD = 57760
const SKIP = 57761
const SRID = 57762
const THREAD_PRIORITY = 57763
const TIES = 57764
const UNBOUNDED = 57765
const VCPU = 57766
const VISIBLE = 57767
const FORMAT = 57768
const TREE = 57769
const VITESS = 57770
const TRADITIONAL = 57771
const LOCAL = 57772
const LOW_PRIORITY = 57773
const NO_WRITE_TO_BINLOG = 57774
const LOGS = 57775
const ERROR = 57776
const GENERAL = 57777
const HOSTS = 57778
const OPTIMIZER_COSTS = 57779
const USER_RESOURCES = 57780
const SLOW = 57781
const CHANNEL = 57782
const RELAY = 57783
const EXPORT = 57784
const AVG_ROW_LENGTH = 57785
const CONNECTION = 57786
const CHECKSUM = 57787
const DELAY_KEY_WRITE = 57788
const ENCRYPTION = 57789
const ENGINE = 57790
const INSERT_METHOD = 57791
const MAX_ROWS = 57792
const MIN_ROWS = 57793
const PACK_KEYS = 57794
const PASSWORD = 57795
const FIXED = 57796
const DYNAMIC = 57797
const COMPRESSED = 57798
const REDUNDANT = 57799
const COMPACT = 57800
const ROW_FORMAT = 57801
const STATS_AUTO_RECALC = 57802
const STATS_PERSISTENT = 57803
const STATS_SAMPLE_PAGES = 57804
const STORAGE = 57805
const MEMORY = 57806
const DISK = 57807

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	483, 137,
	-2, 143,
	-1, 45,
	113, 143,
	152, 143,
	267, 143,
	-2, 366,
	-1, 52,
	33, 515,
	174, 515,
	185, 515,
	218, 529,
	219, 529,
	-2, 517,
	-1, 57,
	176, 539,
	-2, 537,
	-1, 108,
	173, 982,
	-2, 116,
	-1, 110,
	1, 138,
	483, 138,
	-2, 143,
	-1, 120,
	114, 269,
	179, 269,
	-2, 360,
	-1, 139,
	113, 143,
	152, 143,
	267, 143,
	-2, 375,
	-1, 581,
	159, 1003,
	-2, 999,
	-1, 582,
	159, 1004,
	-2, 1000,
	-1, 596,
	57, 607,
	-2, 615,
	-1, 633,
	127, 1354,
	-2, 109,
	-1, 634,
	127, 1235,
	-2, 110,
	-1, 640,
	127, 1286,
	-2, 976,
	-1, 780,
	127, 1169,
	-2, 973,
	-1, 816,
	184, 38,
	189, 38,
	-2, 280,
	-1, 893,
	1, 413,
	483, 413,
	-2, 143,
	-1, 1089,
	57, 608,
	-2, 620,
	-1, 1090,
	57, 609,
	-2, 621,
	-1, 1142,
	1, 310,
	483, 310,
	-2, 143,
	-1, 1145,
	23, 162,
	-2, 164,
	-1, 1218,
	114, 269,
	179, 269,
	-2, 360,
	-1, 1227,
	184, 39,
	189, 39,
	-2, 281,
	-1, 1439,
	159, 1008,
	-2, 1002,
	-1, 1535,
	1, 311,
	483, 311,
	-2, 143,
	-1, 1775,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1945,
	47, 944,
	-2, 938,
	-1, 2121,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 648,
}

const yyPrivate = 57344

const yyLast = 30481

var yyAct = [...]int{
	581, 2157, 2320, 2044, 2295, 2282, 3, 2226, 1956, 954,
	1793, 553, 1800, 1959, 1602, 1801, 1104, 1491, 1960, 539,
	1748, 1532, 1071, 2188, 554, 34, 2092, 2183, 2112, 1720,
	1957, 2086, 1954, 1495, 90, 1946, 1771, 1740, 1567, 524,
	589, 1822, 1474, 1884, 1845, 846, 522, 1199, 176, 1587,
	904, 176, 2175, 487, 176, 611, 1572, 1823, 1521, 503,
	1760, 176, 638, 33, 1824, 783, 1508, 612, 1513, 176,
	35, 1091, 1225, 1732, 1424, 1681, 1903, 1436, 134, 1600,
	1633, 176, 148, 1383, 1432, 1512, 1334, 515, 1586, 1574,
	1816, 1134, 1476, 1113, 1515, 1777, 593, 811, 597, 1455,
	1401, 1074, 89, 503, 824, 591, 503, 176, 503, 972,
	1331, 1584, 635, 814, 790, 1317, 614, 817, 933, 526,
	812, 1500, 1563, 787, 1232, 791, 813, 1496, 1133, 1117,
	1194, 603, 1339, 1131, 625, 889, 151, 598, 85, 111,
	112, 1217, 117, 118, 599, 952, 601, 70, 79, 1045,
	91, 1467, 1243, 83, 600, 71, 1048, 1631, 8, 1742,
	7, 510, 6, 1864, 1863, 1892, 1893, 1303, 973, 178,
	179, 180, 799, 92, 619, 794, 624, 1471, 1472, 1390,
	461, 113, 848, 1389, 1388, 84, 1387, 119, 1386, 1385,
	1373, 513, 1377, 514, 2316, 862, 863, 973, 866, 867,
	868, 869, 1718, 784, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 592,
	96, 590, 851, 605, 511, 1942, 828, 2014, 2135, 2223,
	639, 2222, 850, 983, 849, 827, 632, 606, 2334, 172,
	613, 806, 2153, 2305, 2333, 2154, 1579, 113, 72, 1671,
	805, 804, 859, 2273, 852, 853, 854, 72, 98, 99,
	74, 102, 983, 114, 108, 136, 72, 173, 1577, 2328,
	456, 72, 1751, 2158, 2296, 1619, 156, 2304, 566, 864,
	572, 573, 570, 571, 2272, 569, 568, 567, 1920, 2076,
	588, 1208, 892, 596, 1871, 574, 575, 1752, 1870, 1473,
	1992, 803, 1786, 898, 899, 1785, 1891, 146, 1787, 1993,
	1994, 113, 135, 1669, 1135, 2201, 1136, 940, 1719, 942,
	1668, 627, 628, 979, 1526, 81, 971, 1527, 1528, 928,
	929, 153, 911, 154, 81, 923, 586, 912, 123, 124,
	145, 144, 171, 81, 950, 910, 888, 909, 81, 585,
	1809, 2089, 979, 924, 1576, 939, 941, 801, 1378, 1379,
	1380, 2235, 998, 997, 1007, 1008, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 999, 1435, 911, 1009, 917, 1547, 1546,
	912, 1376, 490, 2046, 2067, 490, 803, 887, 2065, 178,
	179, 180, 490, 501, 505, 499, 1293, 140, 121, 147,
	128, 120, 1078, 141, 142, 1644, 1642, 1643, 157, 1323,
	1846, 1601, 1867, 1634, 2040, 930, 490, 162, 129, 1904,
	2317, 865, 2041, 1639, 798, 931, 800, 519, 2332, 925,
	946, 807, 132, 130, 125, 126, 127, 131, 1294, 1318,
	1295, 949, 122, 937, 1646, 932, 1647, 938, 1648, 891,
	894, 133, 1649, 918, 926, 927, 176, 943, 176, 2047,
	1879, 176, 1906, 802, 871, 978, 975, 976, 977, 982,
	984, 981, 870, 980, 1796, 2048, 1640, 1636, 936, 944,
	974, 1638, 803, 2219, 795, 2148, 808, 1603, 503, 503,
	503, 797, 796, 835, 978, 975, 976, 977, 982, 984,
	981, 2013, 980, 1509, 844, 833, 503, 503, 843, 974,
	826, 842, 841, 907, 965, 913, 914, 915, 916, 1797,
	840, 1637, 839, 149, 1908, 838, 1912, 1578, 1907, 837,
	1905, 832, 34, 945, 890, 1910, 491, 951, 801, 491,
	1211, 845, 1799, 1669, 1909, 1794, 491, 1869, 802, 1883,
	1805, 788, 2329, 2326, 788, 1324, 820, 1911, 1913, 1803,
	1804, 788, 819, 626, 1795, 786, 1332, 2271, 1585, 825,
	491, 2021, 2090, 1866, 1231, 819, 822, 823, 143, 788,
	2236, 1721, 1723, 816, 820, 1670, 176, 1880, 921, 826,
	137, 1625, 836, 138, 75, 2324, 1328, 959, 80, 855,
	1929, 947, 815, 176, 834, 826, 1928, 80, 1069, 1305,
	1304, 1306, 1307, 1308, 1927, 1081, 80, 110, 1206, 1085,
	1205, 80, 503, 908, 1802, 593, 176, 591, 1084, 900,
	1204, 503, 897, 1082, 956, 957, 1805, 503, 1621, 1230,
	635, 1019, 1856, 1329, 802, 1079, 1886, 1070, 825, 1202,
	460, 1885, 1886, 829, 819, 455, 2257, 1885, 1070, 861,
	2126, 1083, 71, 830, 825, 89, 968, 551, 966, 1878,
	967, 2288, 1877, 826, 2286, 1699, 1322, 2108, 1696, 1782,
	1075, 831, 1747, 2290, 2291, 1690, 1722, 1611, 1803, 1804,
	1020, 1021, 1121, 2287, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 1033, 902, 1991, 1533, 1009,
	167, 168, 169, 170, 608, 826, 1047, 1050, 1052, 1054,
	1055, 1057, 1059, 1060, 1051, 1053, 502, 1056, 1058, 920,
	1061, 1371, 825, 934, 1798, 906, 92, 829, 819, 1080,
	922, 999, 2267, 590, 1009, 1408, 1072, 830, 592, 1103,
	1100, 826, 2322, 1802, 1340, 2323, 989, 2321, 639, 1406,
	1407, 1405, 1127, 1128, 1319, 1805, 1320, 2102, 847, 1321,
	637, 1635, 1620, 785, 825, 792, 105, 1325, 1501, 1502,
	819, 822, 823, 176, 788, 1137, 1922, 1195, 816, 820,
	1456, 969, 893, 986, 2197, 1835, 1203, 998, 997, 1007,
	1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 999, 989,
	825, 1009, 860, 988, 986, 503, 1086, 1227, 178, 179,
	180, 2001, 1426, 1020, 1021, 1236, 1020, 1021, 106, 1240,
	989, 2000, 503, 503, 1456, 503, 1706, 503, 503, 1695,
	503, 503, 503, 503, 503, 503, 1002, 1003, 1004, 1005,
	1006, 999, 1209, 1210, 1009, 503, 1682, 905, 935, 176,
	1276, 1607, 1242, 1694, 178, 179, 180, 1237, 1744, 987,
	988, 986, 1693, 1241, 1229, 176, 987, 988, 986, 1341,
	1223, 1821, 1618, 1613, 1924, 1427, 503, 989, 176, 1216,
	1616, 1613, 1271, 1272, 989, 835, 2276, 1235, 833, 1330,
	987, 988, 986, 176, 987, 988, 986, 1617, 1111, 1132,
	1279, 1280, 987, 988, 986, 1615, 1285, 1286, 989, 176,
	1273, 2330, 989, 2310, 1996, 2277, 176, 1233, 1233, 1201,
	989, 1745, 987, 988, 986, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 503, 503, 503, 1226, 1234, 1122,
	989, 1213, 1214, 1212, 81, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1336, 1404, 1289, 1344, 1396,
	1398, 1399, 176, 1110, 2250, 1348, 1312, 1350, 1351, 1352,
	1353, 2134, 2133, 1274, 1357, 1245, 2019, 1246, 1397, 1248,
	1250, 2311, 2331, 1254, 1256, 1258, 1260, 1262, 1372, 1674,
	1675, 1676, 1820, 2251, 1402, 987, 988, 986, 1819, 1582,
	1425, 1333, 630, 542, 541, 544, 545, 546, 547, 1428,
	1207, 1310, 543, 989, 548, 1300, 1313, 1298, 1342, 1343,
	113, 1297, 503, 805, 804, 178, 179, 180, 1311, 1789,
	2043, 1296, 1347, 1437, 178, 179, 180, 1287, 1595, 1354,
	1355, 1356, 1346, 1007, 1008, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 999, 503, 503, 1009, 1281, 1429, 1430, 178,
	179, 180, 1278, 1593, 1107, 1277, 1252, 176, 1444, 1447,
	2254, 2253, 1098, 1309, 1457, 2252, 2217, 1299, 2196, 1367,
	1368, 1369, 2194, 2172, 2131, 1999, 1439, 178, 179, 180,
	1479, 2216, 1829, 176, 1817, 1664, 503, 1629, 1628, 1494,
	1480, 1337, 1403, 2101, 1301, 1288, 176, 1284, 1283, 503,
	1438, 1282, 1109, 1108, 176, 948, 176, 2156, 176, 176,
	503, 1437, 86, 503, 95, 1738, 2302, 89, 1481, 635,
	1482, 1847, 635, 87, 503, 94, 1832, 93, 1738, 2280,
	1463, 1464, 1955, 89, 1541, 637, 637, 637, 1738, 2261,
	2240, 1098, 2101, 1487, 1511, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 999, 960, 962, 1009, 2151, 1098, 1738, 2149,
	1613, 1098, 2106, 1098, 1439, 2011, 2010, 2007, 2008, 2103,
	1553, 1554, 1555, 1556, 2007, 2006, 81, 1098, 1548, 503,
	1549, 1550, 1551, 1552, 1778, 1588, 1589, 1590, 1506, 1537,
	1592, 1594, 1519, 86, 1098, 95, 1559, 1560, 1561, 1562,
	88, 1757, 1098, 503, 87, 1536, 94, 1778, 93, 503,
	1236, 1734, 1569, 1236, 1489, 1236, 88, 88, 94, 605,
	1749, 1540, 1756, 1612, 1688, 1098, 88, 1575, 1504, 1669,
	1865, 1198, 1849, 1843, 1844, 1738, 1737, 639, 985, 1524,
	639, 582, 1749, 1523, 1539, 985, 1098, 1779, 1198, 1197,
	1538, 1143, 1142, 503, 1986, 1425, 1781, 2228, 1098, 2266,
	1425, 1425, 1614, 1669, 1738, 1757, 2009, 1525, 1599, 1119,
	1779, 1711, 1710, 595, 1098, 1098, 1757, 1688, 637, 1669,
	1613, 1596, 1606, 1688, 1139, 1609, 1688, 1610, 2136, 177,
	1499, 1757, 177, 1565, 1566, 177, 176, 1583, 1570, 1591,
	504, 1581, 177, 176, 1580, 1098, 828, 1102, 176, 176,
	177, 1469, 176, 2101, 176, 827, 1233, 1381, 1622, 1613,
	176, 1327, 177, 1605, 1604, 1267, 1129, 176, 810, 1624,
	1570, 809, 1105, 1623, 1626, 1627, 1608, 2208, 2137, 2138,
	2139, 2128, 1826, 1200, 504, 1568, 2042, 504, 177, 504,
	81, 2003, 1850, 1564, 1558, 176, 503, 1557, 998, 997,
	1007, 1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 999,
	1315, 2213, 1009, 1659, 1660, 1268, 1269, 1270, 1662, 1632,
	1228, 1224, 1196, 107, 892, 2113, 2114, 1663, 2045, 1440,
	1441, 2229, 2140, 1446, 1449, 1450, 1579, 1402, 1825, 1400,
	1264, 2307, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 2283, 2116, 1462,
	1652, 2026, 1465, 1466, 998, 997, 1007, 1008, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 999, 2025, 2119, 1009, 2141,
	2142, 2319, 2024, 1486, 1955, 1826, 1836, 1265, 1266, 1653,
	176, 1374, 2118, 1974, 1977, 621, 1975, 1459, 176, 1978,
	1973, 1976, 785, 2303, 1493, 1979, 503, 1766, 1767, 1106,
	1485, 1667, 1947, 1949, 2107, 1238, 2030, 1743, 1935, 1244,
	1244, 1950, 1244, 1934, 1244, 1244, 1677, 1253, 1244, 1244,
	1244, 1244, 1244, 2249, 2187, 1753, 2094, 2189, 176, 176,
	1238, 1238, 785, 609, 2093, 1403, 2097, 1544, 1739, 1944,
	1326, 610, 584, 34, 1788, 1807, 1830, 857, 856, 86,
	516, 2055, 1773, 1452, 1825, 1762, 1765, 1766, 1767, 1763,
	87, 1764, 1768, 1314, 1705, 2113, 2114, 1453, 1889, 1735,
	958, 86, 1858, 1857, 1075, 114, 2099, 88, 88, 615,
	1725, 1717, 87, 1501, 1502, 1812, 1813, 1814, 1815, 2022,
	503, 1772, 1656, 1810, 1811, 176, 2195, 2263, 2224, 1806,
	1770, 1490, 176, 1746, 617, 618, 1645, 1933, 503, 1673,
	93, 2193, 1776, 2192, 503, 1932, 2185, 2098, 1236, 1236,
	1736, 637, 637, 637, 503, 1842, 1780, 1783, 1791, 2096,
	2027, 1853, 1828, 1575, 1597, 1731, 1862, 1762, 1765, 1766,
	1767, 1763, 616, 1764, 1768, 1792, 95, 176, 176, 176,
	176, 176, 1096, 1092, 94, 95, 1861, 94, 95, 1818,
	2184, 2087, 1749, 176, 176, 2309, 94, 1093, 93, 94,
	1734, 93, 1700, 1827, 1833, 2309, 2308, 88, 1860, 1697,
	176, 1123, 1115, 2255, 1439, 1216, 1998, 1837, 1838, 1839,
	1851, 1852, 1483, 1484, 1095, 607, 1094, 100, 101, 97,
	82, 503, 1, 2285, 473, 1425, 1470, 1073, 1438, 1431,
	1902, 637, 1859, 486, 2281, 1302, 1292, 2159, 2225, 2033,
	1573, 818, 1238, 139, 1534, 1535, 2298, 177, 104, 177,
	781, 103, 177, 821, 919, 503, 1598, 2152, 1808, 1545,
	1460, 1461, 1149, 1147, 1148, 176, 1881, 1146, 591, 503,
	1151, 1150, 1145, 1375, 1921, 500, 1769, 174, 503, 504,
	504, 504, 1138, 1937, 1894, 503, 503, 1902, 176, 176,
	176, 176, 176, 1097, 1961, 1967, 1900, 504, 504, 1914,
	176, 1938, 1915, 1492, 1901, 176, 1116, 1887, 176, 597,
	1888, 176, 176, 176, 858, 463, 1119, 2012, 1370, 637,
	1630, 1958, 469, 1017, 1931, 1784, 1958, 637, 636, 1085,
	637, 629, 1963, 2091, 1952, 1936, 176, 1939, 1686, 1687,
	1943, 785, 1945, 1741, 1987, 1948, 1941, 1988, 598, 2248,
	2186, 2262, 1542, 1112, 1704, 599, 1703, 1969, 1970, 1980,
	1972, 2020, 2004, 2005, 1678, 1679, 1680, 176, 1984, 1042,
	1989, 89, 1985, 1968, 503, 1336, 1971, 177, 1454, 1516,
	525, 503, 1478, 1395, 540, 537, 538, 176, 2079, 1727,
	1750, 991, 523, 517, 177, 1124, 792, 176, 2032, 1761,
	2034, 2017, 2018, 1995, 1759, 1758, 1654, 1930, 1520, 2115,
	2111, 176, 2016, 504, 176, 1514, 2029, 177, 2015, 1733,
	785, 1543, 504, 1868, 2056, 2039, 792, 970, 504, 1575,
	1088, 512, 793, 1451, 2037, 2036, 2031, 2078, 1966, 2028,
	2234, 1672, 998, 997, 1007, 1008, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 999, 2051, 2050, 1009, 2075, 1087, 60,
	38, 507, 176, 2315, 961, 623, 1096, 1092, 2053, 2054,
	785, 32, 31, 30, 29, 2073, 28, 2063, 23, 22,
	21, 1093, 2060, 2061, 20, 2062, 19, 2085, 2064, 25,
	2066, 998, 997, 1007, 1008, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 999, 18, 17, 1009, 1089, 1090, 1095, 2088,
	1094, 2095, 16, 109, 47, 44, 42, 176, 2110, 2100,
	116, 115, 45, 41, 990, 895, 39, 27, 2120, 26,
	2117, 15, 14, 13, 12, 11, 2122, 10, 2124, 2125,
	9, 5, 4, 964, 24, 2, 0, 0, 2127, 0,
	0, 0, 176, 2123, 0, 176, 176, 176, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1043,
	2130, 0, 2132, 1666, 177, 2147, 2160, 503, 503, 503,
	0, 0, 0, 0, 0, 2155, 0, 0, 0, 516,
	0, 0, 2165, 998, 997, 1007, 1008, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 999, 0, 504, 1009, 0, 0,
	0, 503, 503, 503, 176, 0, 0, 0, 0, 0,
	0, 0, 1114, 504, 504, 2164, 504, 0, 504, 504,
	0, 504, 504, 504, 504, 504, 504, 503, 0, 503,
	1896, 1897, 2202, 0, 2190, 1961, 504, 2182, 2191, 1961,
	177, 2204, 2200, 0, 1916, 1917, 2181, 1918, 1919, 503,
	34, 2171, 2198, 0, 2179, 2180, 177, 0, 1925, 1926,
	0, 1958, 0, 0, 2211, 591, 2212, 504, 0, 177,
	0, 2206, 2214, 1728, 2215, 0, 0, 591, 0, 503,
	2218, 0, 0, 2210, 177, 2220, 2221, 0, 2227, 997,
	1007, 1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 999,
	177, 0, 1009, 0, 0, 0, 0, 177, 172, 0,
	0, 0, 0, 0, 0, 0, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 504, 504, 504, 2247, 503,
	2245, 2244, 114, 1961, 0, 2256, 0, 0, 0, 0,
	0, 0, 0, 0, 1997, 156, 2259, 2072, 0, 503,
	176, 2265, 0, 177, 0, 552, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 2268, 1831, 0, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 2258, 0, 2278, 1492, 2260, 503, 503, 0,
	2292, 1848, 0, 2284, 2297, 2289, 2227, 2299, 0, 637,
	153, 1854, 154, 175, 0, 0, 459, 2306, 34, 498,
	0, 171, 0, 504, 0, 1958, 459, 2312, 0, 0,
	0, 0, 0, 0, 459, 0, 2318, 0, 0, 0,
	0, 0, 2325, 0, 0, 0, 604, 0, 0, 0,
	2327, 0, 0, 2057, 504, 504, 0, 0, 0, 0,
	0, 0, 622, 0, 622, 0, 0, 0, 177, 0,
	0, 0, 459, 0, 0, 998, 997, 1007, 1008, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 999, 157, 637, 1009,
	0, 0, 1099, 1101, 177, 0, 162, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	504, 0, 1338, 0, 0, 177, 0, 177, 0, 177,
	177, 504, 1244, 0, 504, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 504, 1940, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 2071, 0, 1238,
	0, 0, 1965, 1244, 1238, 490, 993, 0, 996, 0,
	0, 2129, 0, 0, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 2070, 994, 995, 992, 998, 997, 1007, 1008, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 999, 0, 0, 1009,
	504, 1391, 1392, 1393, 1394, 478, 0, 0, 0, 0,
	0, 0, 149, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 475, 0, 0, 0, 0,
	504, 0, 0, 0, 0, 0, 0, 0, 2166, 2167,
	2168, 2169, 2170, 0, 0, 0, 2173, 2174, 0, 0,
	0, 785, 1442, 1443, 1238, 0, 0, 0, 1492, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 504, 998, 997, 1007, 1008, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 999, 483, 0, 1009,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 998,
	997, 1007, 1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	999, 0, 0, 1009, 0, 0, 0, 177, 0, 491,
	0, 0, 0, 0, 177, 0, 1497, 1498, 0, 177,
	177, 0, 0, 177, 0, 177, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 462, 177, 464,
	479, 0, 493, 1531, 492, 468, 0, 466, 470, 480,
	471, 0, 465, 0, 476, 0, 0, 467, 481, 482,
	497, 496, 484, 0, 474, 494, 177, 504, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 1895, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 998, 997, 1007, 1008, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 999, 0, 0, 1009, 0,
	0, 459, 2293, 459, 0, 1492, 459, 0, 1683, 998,
	997, 1007, 1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	999, 0, 0, 1009, 2161, 2162, 2163, 0, 998, 997,
	1007, 1008, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 999,
	0, 177, 1009, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 504, 2177, 2177,
	2177, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 2203, 0, 2205, 488, 0, 177,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1458, 0, 0, 1458, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 1099, 1468, 0, 0, 604, 0,
	0, 504, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 504,
	0, 459, 0, 0, 1488, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 177, 177,
	177, 177, 177, 0, 0, 0, 583, 73, 2274, 0,
	0, 0, 0, 0, 177, 177, 0, 0, 0, 0,
	0, 0, 0, 1238, 0, 2279, 0, 0, 0, 0,
	0, 177, 1707, 0, 637, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 594, 0,
	73, 0, 0, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 594, 0,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 504, 504, 459, 177,
	177, 177, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 177, 0, 0, 177,
	0, 0, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1239, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1239, 1239,
	0, 0, 0, 0, 459, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	1290, 0, 504, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 177, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 1359, 459, 459, 459, 459, 459, 459, 459, 0,
	0, 0, 1923, 0, 0, 1076, 0, 0, 0, 0,
	0, 0, 1684, 177, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 1691, 1692, 0, 459, 0, 0,
	1698, 0, 0, 1701, 1702, 0, 0, 0, 0, 0,
	0, 1708, 0, 1709, 0, 1953, 1712, 1713, 1714, 1715,
	1716, 1488, 0, 0, 0, 0, 458, 0, 0, 0,
	0, 0, 1726, 0, 0, 0, 506, 0, 177, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 1335,
	622, 622, 0, 0, 622, 622, 622, 0, 0, 0,
	1239, 0, 0, 177, 0, 0, 177, 177, 177, 504,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	622, 622, 622, 622, 622, 0, 0, 0, 504, 504,
	504, 0, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 604, 0,
	0, 0, 504, 504, 504, 177, 0, 0, 0, 0,
	0, 459, 0, 0, 114, 0, 0, 1335, 0, 459,
	0, 459, 0, 459, 1522, 0, 0, 156, 504, 0,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 0, 0, 0, 953, 953, 953, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	504, 0, 153, 0, 154, 0, 0, 1018, 594, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1898, 1899, 0, 0, 0, 0, 0, 0, 1032, 0,
	0, 0, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	504, 1044, 1046, 1049, 1049, 1049, 1046, 1049, 1049, 1046,
	1049, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 0, 0,
	504, 177, 0, 0, 1077, 0, 0, 594, 0, 157,
	0, 594, 504, 0, 0, 0, 0, 594, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 504,
	0, 0, 0, 0, 0, 1982, 1983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 459, 459, 0, 0, 459, 0, 1657,
	0, 0, 0, 0, 0, 459, 0, 0, 2199, 0,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 2207,
	0, 0, 2209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 901, 0, 0, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2246, 516, 0, 0, 0, 2058, 0, 2059, 0, 622,
	622, 0, 0, 0, 0, 0, 0, 0, 2068, 2069,
	0, 0, 0, 0, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2104, 2105, 0, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	1841, 0, 0, 459, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 0, 2150, 0, 0,
	0, 167, 168, 169, 170, 0, 0, 146, 0, 0,
	0, 1126, 135, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 153, 0, 154, 0, 0, 0, 0, 1219, 1220,
	145, 144, 171, 0, 2176, 0, 0, 1335, 0, 0,
	953, 953, 953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 459, 459, 459, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 459,
	0, 0, 0, 0, 0, 0, 0, 140, 1221, 147,
	0, 1218, 0, 141, 142, 459, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 622, 622, 0, 0, 0, 0,
	2230, 2231, 2232, 2233, 0, 2237, 0, 2238, 2239, 2241,
	0, 0, 0, 2242, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1144, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 1239, 459, 459, 459, 459, 459, 2270, 0,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	459, 0, 0, 459, 0, 0, 459, 1990, 1335, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2313, 2314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 1316, 0, 0, 0, 0, 143, 0,
	0, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 459, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 1345, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 459, 0, 0, 459,
	0, 0, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 114, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 146, 0, 0, 0,
	0, 135, 459, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 154, 0, 0, 0, 0, 1219, 1220, 145,
	144, 171, 0, 0, 0, 0, 0, 459, 0, 0,
	459, 459, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1503, 0, 0, 0, 0, 140, 1221, 147, 1507,
	1218, 1510, 141, 142, 1384, 0, 0, 157, 0, 1290,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1167, 0, 0, 0, 0, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1180, 1183, 1184, 1185, 1186, 1187, 1188,
	0, 1189, 1190, 1191, 1192, 1193, 1168, 1169, 1170, 1171,
	1152, 1153, 1181, 0, 1155, 459, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 0, 0, 0, 143, 0, 0,
	0, 1239, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 1384, 138, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 1650, 1651, 0, 0, 1655, 0, 0,
	0, 1855, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 72, 36, 37, 74, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 40, 66, 67, 0, 64,
	68, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 53, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 73, 0, 0, 1517, 1517, 1517, 1517, 1517, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 1517, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 43, 46, 49,
	48, 51, 0, 63, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 77,
	76, 0, 0, 61, 62, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 55, 0, 56, 57, 58,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1872, 1873, 1874, 1875, 1876, 2074, 0, 0,
	0, 0, 0, 0, 2080, 2081, 2082, 0, 1384, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1890, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 0, 73, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 2264, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2143, 0, 0,
	2144, 2145, 2146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 749, 404, 0, 698, 766, 669, 686,
	776, 689, 692, 732, 648, 711, 328, 683, 0, 673,
	644, 679, 645, 671, 700, 235, 668, 751, 714, 765,
	286, 232, 650, 674, 342, 688, 187, 734, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 772, 290, 721, 0, 389, 313, 0, 0,
	0, 702, 755, 709, 745, 697, 733, 658, 720, 767,
	684, 729, 768, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 2300, 2301, 0,
	0, 0, 0, 0, 209, 0, 216, 726, 762, 681,
	728, 230, 274, 237, 229, 406, 773, 754, 0, 0,
	202, 764, 704, 731, 779, 643, 723, 0, 646, 649,
	775, 758, 677, 240, 0, 0, 0, 0, 0, 0,
	0, 701, 710, 742, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 719, 0, 0, 0, 654,
	647, 0, 0, 0, 0, 699, 0, 0, 0, 657,
	0, 676, 743, 0, 641, 258, 651, 314, 0, 747,
	757, 696, 438, 761, 694, 693, 738, 655, 753, 687,
	285, 653, 282, 182, 198, 2269, 685, 324, 363, 369,
	752, 672, 680, 221, 678, 367, 338, 423, 205, 248,
	360, 343, 365, 718, 736, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 450, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 447, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 452, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	453, 201, 434, 194, 955, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	454, 206, 207, 208, 667, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 748, 405, 422,
	430, 437, 443, 444, 448, 445, 446, 449, 319, 268,
	387, 283, 292, 740, 778, 337, 368, 211, 425, 388,
	662, 666, 660, 661, 712, 713, 663, 769, 770, 771,
	744, 656, 0, 664, 665, 0, 750, 759, 760, 717,
	181, 195, 288, 774, 357, 251, 451, 432, 428, 642,
	659, 227, 670, 0, 0, 682, 690, 691, 703, 705,
	706, 707, 708, 716, 724, 725, 727, 735, 737, 739,
	741, 746, 756, 777, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 715, 722, 298, 245, 263,
	273, 730, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	763, 749, 404, 0, 698, 766, 669, 686, 776, 689,
	692, 732, 648, 711, 328, 683, 0, 673, 644, 679,
	645, 671, 700, 235, 668, 751, 714, 765, 286, 232,
	650, 674, 342, 688, 187, 734, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	772, 290, 721, 0, 389, 313, 0, 0, 0, 702,
	755, 709, 745, 697, 733, 658, 720, 767, 684, 729,
	768, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 726, 762, 681, 728, 230,
	274, 237, 229, 406, 773, 754, 0, 0, 202, 764,
	704, 731, 779, 643, 723, 0, 646, 649, 775, 758,
	677, 240, 0, 0, 0, 0, 0, 0, 0, 701,
	710, 742, 695, 0, 0, 0, 0, 0, 0, 1991,
	0, 675, 0, 719, 0, 0, 0, 654, 647, 0,
	0, 0, 0, 699, 0, 0, 0, 657, 0, 676,
	743, 0, 641, 258, 651, 314, 0, 747, 757, 696,
	438, 761, 694, 693, 738, 655, 753, 687, 285, 653,
	282, 182, 198, 0, 685, 324, 363, 369, 752, 672,
	680, 221, 678, 367, 338, 423, 205, 248, 360, 343,
	365, 718, 736, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 450, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	447, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 452, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 453, 201,
	434, 194, 955, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 454, 206,
	207, 208, 667, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 748, 405, 422, 430, 437,
	443, 444, 448, 445, 446, 449, 319, 268, 387, 283,
	292, 740, 778, 337, 368, 211, 425, 388, 662, 666,
	660, 661, 712, 713, 663, 769, 770, 771, 744, 656,
	0, 664, 665, 0, 750, 759, 760, 717, 181, 195,
	288, 774, 357, 251, 451, 432, 428, 642, 659, 227,
	670, 0, 0, 682, 690, 691, 703, 705, 706, 707,
	708, 716, 724, 725, 727, 735, 737, 739, 741, 746,
	756, 777, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 715, 722, 298, 245, 263, 273, 730,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 763, 749,
	404, 0, 698, 766, 669, 686, 776, 689, 692, 732,
	648, 711, 328, 683, 0, 673, 644, 679, 645, 671,
	700, 235, 668, 751, 714, 765, 286, 232, 650, 674,
	342, 688, 187, 734, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 772, 290,
	721, 0, 389, 313, 0, 0, 0, 702, 755, 709,
	745, 697, 733, 658, 720, 767, 684, 729, 768, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 726, 762, 681, 728, 230, 274, 237,
	229, 406, 773, 754, 0, 0, 202, 764, 704, 731,
	779, 643, 723, 0, 646, 649, 775, 758, 677, 240,
	0, 0, 0, 0, 0, 0, 0, 701, 710, 742,
	695, 0, 0, 0, 0, 0, 0, 1951, 0, 675,
	0, 719, 0, 0, 0, 654, 647, 0, 0, 0,
	0, 699, 0, 0, 0, 657, 0, 676, 743, 0,
	641, 258, 651, 314, 0, 747, 757, 696, 438, 761,
	694, 693, 738, 655, 753, 687, 285, 653, 282, 182,
	198, 0, 685, 324, 363, 369, 752, 672, 680, 221,
	678, 367, 338, 423, 205, 248, 360, 343, 365, 718,
	736, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 450, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 447, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 452,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 453, 201, 434, 194,
	955, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 454, 206, 207, 208,
	667, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 748, 405, 422, 430, 437, 443, 444,
	448, 445, 446, 449, 319, 268, 387, 283, 292, 740,
	778, 337, 368, 211, 425, 388, 662, 666, 660, 661,
	712, 713, 663, 769, 770, 771, 744, 656, 0, 664,
	665, 0, 750, 759, 760, 717, 181, 195, 288, 774,
	357, 251, 451, 432, 428, 642, 659, 227, 670, 0,
	0, 682, 690, 691, 703, 705, 706, 707, 708, 716,
	724, 725, 727, 735, 737, 739, 741, 746, 756, 777,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 715, 722, 298, 245, 263, 273, 730, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 763, 749, 404, 0,
	698, 766, 669, 686, 776, 689, 692, 732, 648, 711,
	328, 683, 0, 673, 644, 679, 645, 671, 700, 235,
	668, 751, 714, 765, 286, 232, 650, 674, 342, 688,
	187, 734, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 772, 290, 721, 0,
	389, 313, 0, 0, 0, 702, 755, 709, 745, 697,
	733, 658, 720, 767, 684, 729, 768, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 726, 762, 681, 728, 230, 274, 237, 229, 406,
	773, 754, 0, 0, 202, 764, 704, 731, 779, 643,
	723, 0, 646, 649, 775, 758, 677, 240, 0, 0,
	0, 0, 0, 0, 0, 701, 710, 742, 695, 0,
	0, 0, 0, 0, 0, 1505, 0, 675, 0, 719,
	0, 0, 0, 654, 647, 0, 0, 0, 0, 699,
	0, 0, 0, 657, 0, 676, 743, 0, 641, 258,
	651, 314, 0, 747, 757, 696, 438, 761, 694, 693,
	738, 655, 753, 687, 285, 653, 282, 182, 198, 0,
	685, 324, 363, 369, 752, 672, 680, 221, 678, 367,
	338, 423, 205, 248, 360, 343, 365, 718, 736, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 450, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 447, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 452, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 453, 201, 434, 194, 955, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 454, 206, 207, 208, 667, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 748, 405, 422, 430, 437, 443, 444, 448, 445,
	446, 449, 319, 268, 387, 283, 292, 740, 778, 337,
	368, 211, 425, 388, 662, 666, 660, 661, 712, 713,
	663, 769, 770, 771, 744, 656, 0, 664, 665, 0,
	750, 759, 760, 717, 181, 195, 288, 774, 357, 251,
	451, 432, 428, 642, 659, 227, 670, 0, 0, 682,
	690, 691, 703, 705, 706, 707, 708, 716, 724, 725,
	727, 735, 737, 739, 741, 746, 756, 777, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 715,
	722, 298, 245, 263, 273, 730, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 763, 749, 404, 0, 698, 766,
	669, 686, 776, 689, 692, 732, 648, 711, 328, 683,
	0, 673, 644, 679, 645, 671, 700, 235, 668, 751,
	714, 765, 286, 232, 650, 674, 342, 688, 187, 734,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 772, 290, 721, 0, 389, 313,
	0, 0, 0, 702, 755, 709, 745, 697, 733, 658,
	720, 767, 684, 729, 768, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 726,
	762, 681, 728, 230, 274, 237, 229, 406, 773, 754,
	0, 0, 202, 764, 704, 731, 779, 643, 723, 0,
	646, 649, 775, 758, 677, 240, 0, 0, 0, 0,
	0, 0, 0, 701, 710, 742, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 675, 0, 719, 0, 0,
	0, 654, 647, 0, 0, 0, 0, 699, 0, 0,
	0, 657, 0, 676, 743, 0, 641, 258, 651, 314,
	0, 747, 757, 696, 438, 761, 694, 693, 738, 655,
	753, 687, 285, 653, 282, 182, 198, 0, 685, 324,
	363, 369, 752, 672, 680, 221, 678, 367, 338, 423,
	205, 248, 360, 343, 365, 718, 736, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 450,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 447, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 452, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 453, 201, 434, 194, 955, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 454, 206, 207, 208, 667, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 748,
	405, 422, 430, 437, 443, 444, 448, 445, 446, 449,
	319, 268, 387, 283, 292, 740, 778, 337, 368, 211,
	425, 388, 662, 666, 660, 661, 712, 713, 663, 769,
	770, 771, 744, 656, 0, 664, 665, 0, 750, 759,
	760, 717, 181, 195, 288, 774, 357, 251, 451, 432,
	428, 642, 659, 227, 670, 0, 0, 682, 690, 691,
	703, 705, 706, 707, 708, 716, 724, 725, 727, 735,
	737, 739, 741, 746, 756, 777, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 260, 420, 442, 0, 296, 715, 722, 298,
	245, 263, 273, 730, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 763, 749, 404, 0, 698, 766, 669, 686,
	776, 689, 692, 732, 648, 711, 328, 683, 0, 673,
	644, 679, 645, 671, 700, 235, 668, 751, 714, 765,
	286, 232, 650, 674, 342, 688, 187, 734, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 772, 290, 721, 0, 389, 313, 0, 0,
	0, 702, 755, 709, 745, 697, 733, 658, 720, 767,
	684, 729, 768, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 726, 762, 681,
	728, 230, 274, 237, 229, 406, 773, 754, 0, 0,
	202, 764, 704, 731, 779, 643, 723, 0, 646, 649,
	775, 758, 677, 240, 0, 0, 0, 0, 0, 0,
	0, 701, 710, 742, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 719, 0, 0, 0, 654,
	647, 0, 0, 0, 0, 699, 0, 0, 0, 657,
	0, 676, 743, 0, 641, 258, 651, 314, 0, 747,
	757, 696, 438, 761, 694, 693, 738, 655, 753, 687,
	285, 653, 282, 182, 198, 0, 685, 324, 363, 369,
	752, 672, 680, 221, 678, 367, 338, 423, 205, 248,
	360, 343, 365, 718, 736, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 450, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 447, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 452, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	453, 201, 434, 194, 955, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	454, 206, 207, 208, 667, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 748, 405, 422,
	430, 437, 443, 444, 448, 445, 446, 449, 319, 268,
	387, 283, 292, 740, 778, 337, 368, 211, 425, 388,
	662, 666, 660, 661, 712, 713, 663, 769, 770, 771,
	744, 656, 0, 664, 665, 0, 750, 759, 760, 717,
	181, 195, 288, 774, 357, 251, 451, 432, 428, 642,
	659, 227, 670, 0, 0, 682, 690, 691, 703, 705,
	706, 707, 708, 716, 724, 725, 727, 735, 737, 739,
	741, 746, 756, 777, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 715, 722, 298, 245, 263,
	273, 730, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	763, 749, 404, 0, 698, 766, 669, 686, 776, 689,
	692, 732, 648, 711, 328, 683, 0, 673, 644, 679,
	645, 671, 700, 235, 668, 751, 714, 765, 286, 232,
	650, 674, 342, 688, 187, 734, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	772, 290, 721, 0, 389, 313, 0, 0, 0, 702,
	755, 709, 745, 697, 733, 658, 720, 767, 684, 729,
	768, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 726, 762, 681, 728, 230,
	274, 237, 229, 406, 773, 754, 0, 0, 780, 764,
	704, 731, 779, 643, 723, 0, 646, 649, 775, 758,
	677, 240, 0, 0, 0, 0, 0, 0, 0, 701,
	710, 742, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 719, 0, 0, 0, 654, 647, 0,
	0, 0, 0, 699, 0, 0, 0, 657, 0, 676,
	743, 0, 641, 258, 651, 314, 0, 747, 757, 696,
	438, 761, 694, 693, 738, 655, 753, 687, 285, 653,
	282, 182, 198, 0, 685, 324, 363, 369, 752, 672,
	680, 221, 678, 367, 338, 423, 205, 248, 360, 343,
	365, 718, 736, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 450, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	447, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 452, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 453, 201,
	434, 194, 652, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 454, 206,
	207, 208, 667, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 748, 405, 422, 430, 437,
	443, 444, 448, 445, 446, 449, 640, 634, 633, 283,
	292, 740, 778, 337, 368, 211, 425, 388, 662, 666,
	660, 661, 712, 713, 663, 769, 770, 771, 744, 656,
	0, 664, 665, 0, 750, 759, 760, 717, 181, 195,
	288, 774, 357, 251, 451, 432, 428, 642, 659, 227,
	670, 0, 0, 682, 690, 691, 703, 705, 706, 707,
	708, 716, 724, 725, 727, 735, 737, 739, 741, 746,
	756, 777, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 260, 420,
	442, 0, 296, 715, 722, 298, 245, 263, 273, 730,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 763, 749,
	404, 0, 698, 766, 669, 686, 776, 689, 692, 732,
	648, 711, 328, 683, 0, 673, 644, 679, 645, 671,
	700, 235, 668, 751, 714, 765, 286, 232, 650, 674,
	342, 688, 187, 734, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 772, 290,
	721, 0, 389, 313, 0, 0, 0, 702, 755, 709,
	745, 697, 733, 658, 720, 767, 684, 729, 768, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 726, 762, 681, 728, 230, 274, 237,
	229, 406, 773, 754, 0, 0, 780, 764, 704, 731,
	779, 643, 723, 0, 646, 649, 775, 758, 677, 240,
	0, 0, 0, 0, 0, 0, 0, 701, 710, 742,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 675,
	0, 719, 0, 0, 0, 654, 647, 0, 0, 0,
	0, 699, 0, 0, 0, 657, 0, 676, 743, 0,
	641, 258, 651, 314, 0, 747, 757, 696, 438, 761,
	694, 693, 738, 655, 753, 687, 285, 653, 282, 182,
	198, 0, 685, 324, 363, 369, 752, 672, 680, 221,
	678, 367, 338, 423, 205, 248, 360, 343, 365, 718,
	736, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 450, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 447, 197,
	375, 213, 190, 397, 1130, 210, 378, 0, 0, 452,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 453, 201, 434, 194,
	652, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 454, 206, 207, 208,
	667, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 748, 405, 422, 430, 437, 443, 444,
	448, 445, 446, 449, 640, 634, 633, 283, 292, 740,
	778, 337, 368, 211, 425, 388, 662, 666, 660, 661,
	712, 713, 663, 769, 770, 771, 744, 656, 0, 664,
	665, 0, 750, 759, 760, 717, 181, 195, 288, 774,
	357, 251, 451, 432, 428, 642, 659, 227, 670, 0,
	0, 682, 690, 691, 703, 705, 706, 707, 708, 716,
	724, 725, 727, 735, 737, 739, 741, 746, 756, 777,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 715, 722, 298, 245, 263, 273, 730, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 763, 749, 404, 0,
	698, 766, 669, 686, 776, 689, 692, 732, 648, 711,
	328, 683, 0, 673, 644, 679, 645, 671, 700, 235,
	668, 751, 714, 765, 286, 232, 650, 674, 342, 688,
	187, 734, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 772, 290, 721, 0,
	389, 313, 0, 0, 0, 702, 755, 709, 745, 697,
	733, 658, 720, 767, 684, 729, 768, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 726, 762, 681, 728, 230, 274, 237, 229, 406,
	773, 754, 0, 0, 780, 764, 704, 731, 779, 643,
	723, 0, 646, 649, 775, 758, 677, 240, 0, 0,
	0, 0, 0, 0, 0, 701, 710, 742, 695, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 719,
	0, 0, 0, 654, 647, 0, 0, 0, 0, 699,
	0, 0, 0, 657, 0, 676, 743, 0, 641, 258,
	651, 314, 0, 747, 757, 696, 438, 761, 694, 693,
	738, 655, 753, 687, 285, 653, 282, 182, 198, 0,
	685, 324, 363, 369, 752, 672, 680, 221, 678, 367,
	338, 423, 205, 248, 360, 343, 365, 718, 736, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 450, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 447, 197, 375, 213,
	190, 397, 631, 210, 378, 0, 0, 452, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 453, 201, 434, 194, 652, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 454, 206, 207, 208, 667, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 748, 405, 422, 430, 437, 443, 444, 448, 445,
	446, 449, 640, 634, 633, 283, 292, 740, 778, 337,
	368, 211, 425, 388, 662, 666, 660, 661, 712, 713,
	663, 769, 770, 771, 744, 656, 0, 664, 665, 0,
	750, 759, 760, 717, 181, 195, 288, 774, 357, 251,
	451, 432, 428, 642, 659, 227, 670, 0, 0, 682,
	690, 691, 703, 705, 706, 707, 708, 716, 724, 725,
	727, 735, 737, 739, 741, 746, 756, 777, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 260, 420, 442, 0, 296, 715,
	722, 298, 245, 263, 273, 730, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 1433,
	0, 521, 0, 0, 0, 235, 520, 0, 0, 0,
	286, 232, 0, 1434, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 564, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 542, 541, 544, 545,
	546, 547, 0, 0, 209, 543, 216, 548, 549, 550,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 518, 535, 0, 563,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	533, 620, 0, 0, 0, 579, 0, 534, 0, 0,
	527, 528, 530, 529, 531, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 578,
	0, 0, 438, 0, 0, 576, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 450, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 447, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 452, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	453, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	454, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 448, 445, 446, 449, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	566, 577, 572, 573, 570, 571, 565, 569, 568, 567,
	580, 557, 558, 559, 560, 562, 0, 574, 575, 561,
	181, 195, 288, 0, 357, 251, 451, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 521, 0, 0,
	0, 235, 520, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 564, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 0, 0, 1529, 0, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 0, 178,
	179, 180, 542, 541, 544, 545, 546, 547, 0, 0,
	209, 543, 216, 548, 549, 550, 1530, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 518, 535, 0, 563, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 532, 533, 0, 0, 0,
	0, 579, 0, 534, 0, 0, 527, 528, 530, 529,
	531, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 578, 0, 0, 438, 0,
	0, 576, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 450, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 447, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 452,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 453, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 454, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	448, 445, 446, 449, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 566, 577, 572, 573,
	570, 571, 565, 569, 568, 567, 580, 557, 558, 559,
	560, 562, 0, 574, 575, 561, 181, 195, 288, 0,
	357, 251, 451, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 72, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 521, 0, 0, 0, 235, 520,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 564, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 542,
	541, 544, 545, 546, 547, 0, 0, 209, 543, 216,
	548, 549, 550, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 518,
	535, 0, 563, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 0, 579, 0,
	534, 0, 0, 527, 528, 530, 529, 531, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 578, 0, 0, 438, 0, 0, 576, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 566, 577, 572, 573, 570, 571, 565,
	569, 568, 567, 580, 557, 558, 559, 560, 562, 0,
	574, 575, 561, 181, 195, 288, 80, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	521, 0, 0, 0, 235, 520, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 564, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 81,
	0, 1098, 178, 179, 180, 542, 541, 544, 545, 546,
	547, 0, 0, 209, 543, 216, 548, 549, 550, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 518, 535, 0, 563, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 533,
	0, 0, 0, 0, 579, 0, 534, 0, 0, 527,
	528, 530, 529, 531, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 578, 0,
	0, 438, 0, 0, 576, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 566,
	577, 572, 573, 570, 571, 565, 569, 568, 567, 580,
	557, 558, 559, 560, 562, 0, 574, 575, 561, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 521, 0, 0, 0,
	235, 520, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 564, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 542, 541, 544, 545, 546, 547, 0, 0, 209,
	543, 216, 548, 549, 550, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 518, 535, 0, 563, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 620, 0, 0, 0,
	579, 0, 534, 0, 0, 527, 528, 530, 529, 531,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 578, 0, 0, 438, 0, 0,
	576, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 566, 577, 572, 573, 570,
	571, 565, 569, 568, 567, 580, 557, 558, 559, 560,
	562, 0, 574, 575, 561, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 521, 0, 0, 0, 235, 520, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 564, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 81, 0, 0, 178, 179, 180, 542, 1448, 544,
	545, 546, 547, 0, 0, 209, 543, 216, 548, 549,
	550, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 518, 535, 0,
	563, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 533, 620, 0, 0, 0, 579, 0, 534, 0,
	0, 527, 528, 530, 529, 531, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	578, 0, 0, 438, 0, 0, 576, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 566, 577, 572, 573, 570, 571, 565, 569, 568,
	567, 580, 557, 558, 559, 560, 562, 0, 574, 575,
	561, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 521, 0,
	0, 0, 235, 520, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 564,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 81, 0, 0,
	178, 179, 180, 542, 1445, 544, 545, 546, 547, 0,
	0, 209, 543, 216, 548, 549, 550, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 518, 535, 0, 563, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 533, 620, 0,
	0, 0, 579, 0, 534, 0, 0, 527, 528, 530,
	529, 531, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 578, 0, 0, 438,
	0, 0, 576, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 566, 577, 572,
	573, 570, 571, 565, 569, 568, 567, 580, 557, 558,
	559, 560, 562, 0, 574, 575, 561, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 521, 0, 0, 0, 235, 520,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 564, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 542,
	541, 544, 545, 546, 547, 0, 0, 209, 543, 216,
	548, 549, 550, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 518,
	535, 0, 563, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 0, 579, 0,
	534, 0, 0, 527, 528, 530, 529, 531, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 578, 0, 0, 438, 0, 0, 576, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 566, 577, 572, 573, 570, 571, 565,
	569, 568, 567, 580, 557, 558, 559, 560, 562, 0,
	574, 575, 561, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 564, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 81,
	0, 0, 178, 179, 180, 542, 541, 544, 545, 546,
	547, 0, 0, 209, 543, 216, 548, 549, 550, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 535, 0, 563, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 533,
	0, 0, 0, 0, 579, 0, 534, 0, 0, 527,
	528, 530, 529, 531, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 578, 0,
	0, 438, 0, 0, 576, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 2294, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 566,
	577, 572, 573, 570, 571, 565, 569, 568, 567, 580,
	557, 558, 559, 560, 562, 0, 574, 575, 561, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 564, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 1098, 178, 179,
	180, 542, 541, 544, 545, 546, 547, 0, 0, 209,
	543, 216, 548, 549, 550, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 535, 0, 563, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 0,
	579, 0, 534, 0, 0, 527, 528, 530, 529, 531,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 578, 0, 0, 438, 0, 0,
	576, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 566, 577, 572, 573, 570,
	571, 565, 569, 568, 567, 580, 557, 558, 559, 560,
	562, 0, 574, 575, 561, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 564, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 81, 0, 0, 178, 179, 180, 542, 541, 544,
	545, 546, 547, 0, 0, 209, 543, 216, 548, 549,
	550, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 535, 0,
	563, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 533, 0, 0, 0, 0, 579, 0, 534, 0,
	0, 527, 528, 530, 529, 531, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	578, 0, 0, 438, 0, 0, 576, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 566, 577, 572, 573, 570, 571, 565, 569, 568,
	567, 580, 557, 558, 559, 560, 562, 0, 574, 575,
	561, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 998, 997, 1007, 1008, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 999, 0, 0, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 825, 438, 0, 0, 0, 0,
	0, 822, 823, 285, 788, 282, 182, 198, 816, 820,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 1118,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1120, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 987, 988, 986, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 72,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 1098, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 450, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 447, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 452,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 453, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 454, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	448, 445, 446, 449, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 80,
	357, 251, 451, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 72, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 80, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 1477,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1291, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 1475, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 788, 282, 182, 198,
	786, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 1477, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 1291, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 1098,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 2178, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 1729, 0, 0, 1730, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 1141, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1140, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 2275, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 2178, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	1291, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1120, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 1382, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 1263, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 1261, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 1259, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1257, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 1255,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 1251, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 1249, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 1247, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 1222, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 1125, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 963, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 450, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 447,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	452, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 453, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 454, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 448, 445, 446, 449, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 451, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	450, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 447, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 452, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 453, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 454, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 448, 445, 446,
	449, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 451,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 450, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 447, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 452, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 453,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 454,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 448, 445, 446, 449, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 451, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 508,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 457, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 450, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 447, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 452, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 453, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 454, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 448,
	445, 446, 449, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 451, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 450, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 447, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 452, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 453, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 454, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 448, 445, 446, 449, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 451, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231,
}

var yyPact = [...]int{
	4545, -1000, -330, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1541, 1640, -1000, -1000, -1000, -1000, 1677,
	-1000, 693, 1320, -1000, 1536, 234, -1000, 29998, 482, -1000,
	29522, 477, 2312, 29998, -1000, 154, -1000, 147, 29998, 150,
	29046, -1000, -1000, -256, 12860, 1490, 38, 25, 29998, -1000,
	1631, 1287, -1000, 265, -1000, -1000, -1000, -1000, -1000, -1000,
	28570, -1000, -1000, -1000, 1540, 1519, 1675, 577, 1483, -1000,
	1582, 1287, -1000, 12860, 1615, 1573, 11432, -1000, 11432, 386,
	-1000, -1000, 9051, -1000, -1000, 17622, 29998, 29998, 310, -1000,
	1536, -1000, -1000, 279, -1000, 281, 1267, -1000, 1264, -1000,
	395, 474, 324, 397, 385, 322, 318, 315, 313, 305,
	304, 301, 297, 337, -1000, 641, 641, -126, -128, 2183,
	382, 382, 382, 423, 1505, 1504, -1000, 636, -1000, 641,
	641, 269, 641, 641, 641, 641, 257, 249, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 214, 1536, 233, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29998, 129, 29998, -1000, 547,
	29998, 722, 722, 36, 722, 722, 722, 722, 159, 555,
	24, -1000, 135, 236, 111, 227, 721, 144, 83, -1000,
	-1000, 211, 721, 1035, 130, -1000, 722, 7139, 7139, 7139,
	-1000, 1530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	421, -1000, -1000, -1000, -1000, 29998, 28094, 251, 664, -1000,
	-1000, -1000, 15, -1000, -1000, 1174, 784, -1000, 12860, 2307,
	1113, 1113, -1000, -1000, 530, -1000, -1000, 14288, 14288, 14288,
	14288, 14288, 14288, 14288, 14288, 14288, 14288, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1113, 546, -1000, -1000, 1113, 1113, 1113, 1113, 1113,
	1113, 1113, 1113, 12860, 1113, 1113, 1113, 1113, 1113, 1113,
	1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
	1113, -1000, -1000, 10480, -1000, 29998, -1000, 1113, 167, 1582,
	1287, -1000, 1631, 1643, 265, -1000, 1915, 1210, 1193, 997,
	1287, 1243, 29998, -1000, 1269, -1000, -1000, -1000, 1430, 1033,
	1032, -1000, -1000, -1000, -1000, 889, 12860, -1000, -1000, 1660,
	-1000, 15716, 533, 853, 1659, 27618, -1000, 386, 386, 1262,
	8573, -10, -1000, -1000, -1000, 658, 19526, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1530, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1187, 29998, -1000, -1000, 4196, 1011, -1000, 1319, -1000,
	1184, -1000, 1280, 1326, 476, 1011, 456, 446, 444, -1000,
	-52, -1000, -1000, -1000, -1000, -1000, 641, 641, 336, 234,
	4143, -1000, -1000, -1000, 27142, 1318, 1011, -1000, 1317, -1000,
	759, 460, 490, 490, 1011, -1000, -1000, 29998, 1011, 758,
	747, 29998, 29998, -1000, 26666, -1000, 26190, 25714, 985, 29998,
	25238, 24762, 24286, 23810, 23334, -1000, 1391, -1000, 1316, -1000,
	-1000, -1000, 29998, 29998, 29998, 272, -1000, -1000, 29998, 1011,
	-1000, -1000, 984, 981, 641, 641, 975, 1031, 1028, 1027,
	641, 641, 956, 1025, 21430, 206, 950, 940, 936, 996,
	1024, 138, 992, 947, 935, 29998, 1307, 29998, -1000, 217,
	602, 319, 650, 1536, 1488, 1257, 420, 470, 1011, 388,
	388, -1000, 7617, -1000, -1000, 1021, 12860, -1000, 742, 721,
	721, -1000, -1000, -1000, -1000, -1000, -1000, 722, 29998, 742,
	-1000, -1000, -1000, 721, 722, 29998, 722, 722, 722, 722,
	721, 721, 721, 722, 29998, 29998, 29998, 29998, 29998, 29998,
	29998, 29998, 29998, 7139, 7139, 7139, 596, 722, -260, -1000,
	1397, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 137,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -86,
	1253, 22858, -1000, -261, -262, -264, -266, -1000, -1000, -1000,
	-267, -271, -1000, -1000, -1000, 12860, 12860, 12860, 12860, 869,
	622, 14288, 871, 624, 14288, 14288, 14288, 14288, 14288, 14288,
	14288, 14288, 14288, 14288, 14288, 14288, 14288, 14288, 14288, 732,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1011, -1000,
	924, 924, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 14764, 9527, 7617, 11432, 11432, 12860, 12860, 12384, 11908,
	11432, 1521, 667, 784, 29998, -1000, 997, -1000, -1000, 13812,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29998, 29998, 11432, 11432, 11432, 11432, 11432, 1129,
	1112, 1181, -1000, 1247, -1000, -149, 17146, 12860, 1020, -1000,
	-1000, -1000, 1582, -1000, 1582, 1129, 1621, 1433, 11432, -1000,
	-1000, 1621, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1209, -1000, 29998, 1243, 1568, 29998, 1424, 1019, 272, -1000,
	12860, 12860, 1226, -1000, 753, 29998, -1000, -1000, 22382, -1000,
	-1000, 6661, -1000, 29998, 296, 29998, -1000, 20954, 21906, 8095,
	-10, -1000, 8095, 1203, -1000, -1, 0, 10003, 556, -1000,
	-1000, -1000, 2183, 15240, 1069, 1489, 87, -1000, -1000, -1000,
	1280, -1000, 1280, 1280, 1280, 1280, 272, 272, 272, 272,
	-1000, -1000, -1000, -1000, -1000, 1294, 1291, -1000, 1280, 1280,
	1280, 1280, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1290,
	1290, 1290, 1282, 1282, 370, -1000, 12860, 171, 29998, 1548,
	918, 217, 390, 1341, 1011, 1011, 1011, 390, -1000, 983,
	958, -1000, 1217, -1000, -1000, 1607, -1000, -1000, 600, 790,
	787, 558, 29998, 179, 280, -1000, 367, -1000, 29998, 1011,
	746, 490, 1011, -1000, 1011, -1000, -1000, -1000, -1000, 528,
	-1000, -1000, 1011, 1216, -1000, 1255, 807, 782, 799, 774,
	1216, -1000, -1000, -81, 1216, -1000, 1216, -1000, 1216, -1000,
	1216, -1000, 1216, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 608, 29998, 179, 732, -1000, 415, -1000, -1000, 732,
	732, -1000, -1000, -1000, -1000, 1018, 1017, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -323, 29998, -1000, 189, 644, 264,
	308, 250, 29998, 169, 1575, 219, 237, 29998, 29998, 388,
	1395, 29998, 1558, 29998, -1000, -1000, -1000, -1000, 784, 29998,
	-1000, -1000, 722, 722, -1000, -1000, 29998, 722, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 722, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1015, -1000, -1000, 29998, 29998, -1000, -1000, -1000, -1000,
	-1000, 44, -6, 229, -1000, -1000, -1000, -1000, -1000, 1579,
	-1000, 784, 622, 696, 675, -1000, -1000, 899, -1000, -1000,
	2561, -1000, -1000, -1000, -1000, 871, 14288, 14288, 14288, 659,
	2561, 2580, 913, 2030, 557, 702, 702, 592, 592, 592,
	592, 592, 1023, 1023, -1000, -1000, -1000, -1000, 997, -1000,
	-1000, -1000, 997, 11432, 11432, 1213, -1000, 1113, 526, -1000,
	1160, 1160, 788, 816, 666, 1657, 1160, 663, 1650, 1160,
	1160, 11432, -1000, -1000, 711, -1000, 12860, 997, -1000, 1240,
	1208, 1207, 1160, 997, 997, 1160, 1160, 997, -1000, 29998,
	-1000, -245, -1000, -9, 509, 1113, -1000, 21430, 997, 1174,
	-1000, -1000, -1000, -1000, -1000, 19050, 1219, 1621, -1000, -1000,
	1113, 1171, -1000, -1000, 272, 79, 778, 784, 784, 12860,
	-1000, -1000, -1000, -1000, -1000, -1000, 523, 1639, 242, 1113,
	-1000, 1212, 1563, -1000, -1000, -1000, 1567, 16670, 29998, 1215,
	1192, -1000, 520, -1000, 1203, -10, -24, -1000, -1000, -1000,
	-1000, 784, -1000, 949, -1000, 3325, -1000, 377, -1000, -1000,
	-1000, -1000, 445, 1566, 1496, 57, -1000, -1000, -1000, 272,
	272, -1000, -1000, 556, 556, 556, 556, 1014, 1014, -1000,
	-1000, -1000, -1000, -1000, 917, -1000, -1000, -1000, 911, -1000,
	-1000, 796, 1387, 171, -1000, -1000, 641, 1012, 1499, 29998,
	-1000, -1000, 1061, 189, 29998, 676, 1392, -1000, 1341, 1341,
	1341, 29998, -1000, -1000, -1000, -1000, 3734, 29998, 1169, -1000,
	177, -1000, 1056, 29998, -1000, 1167, 1289, 1011, 1011, -1000,
	-1000, 7617, -1000, 29998, 1113, -1000, -1000, -1000, -1000, 469,
	1534, 1533, 179, 177, 556, 1011, -1000, -1000, -1000, -1000,
	-1000, -318, 1165, 398, 181, 208, 29998, 29998, 29998, 29998,
	29998, 505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 244,
	411, -1000, 29998, 29998, 465, -1000, -1000, -1000, 721, -1000,
	-1000, 721, -1000, -1000, -1000, -1000, -1000, -1000, 1527, 29998,
	-20, -294, -1000, -291, -1000, -1000, -1000, -1000, 659, 2561,
	2536, -1000, 14288, 14288, -1000, -1000, 1160, 1160, 11432, 11432,
	7617, -1000, -1000, 266, 732, 266, 14288, 14288, -1000, 14288,
	14288, -1000, -65, 1222, 660, -1000, 12860, 760, -1000, -1000,
	14288, 14288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 440, 432, 426, 29998, -1000, -1000, 1585, -1000, 1448,
	1443, 1648, 1639, -1000, 20954, 1621, -1000, -1000, 29998, -218,
	-1000, 1485, 1447, -1000, -1000, -1000, -1000, 6183, 1582, 12860,
	1390, 29998, 1113, -1000, 16193, 29998, 29998, 20954, 20954, 20954,
	20954, 20954, -1000, 1416, 1409, -1000, 1412, 1410, 1421, 29998,
	-1000, 1137, 997, 1643, 16670, 296, 1199, 20954, -1000, -1000,
	20954, 29998, 5705, -1000, -1000, -26, -21, -1000, -1000, -1000,
	2183, -1000, -1000, -1000, -1000, 824, 14288, 1666, -1000, 1005,
	-1000, -1000, 716, 706, -1000, 29998, 1288, -1000, -1000, -1000,
	556, 556, -1000, -1000, -1000, -1000, 1110, -1000, 1103, 1202,
	1101, 108, -1000, 1284, 1513, 641, 641, -1000, 895, -1000,
	1011, -1000, -1000, 396, -1000, 1555, 29998, 1388, 1382, 1367,
	-1000, 1603, 1200, 29998, -1000, -1000, 29998, -1000, 1441, 171,
	29998, -1000, -1000, -1000, -1000, 280, 29998, -1000, 924, 177,
	-1000, -1000, -1000, -1000, -1000, -1000, 29998, 192, -1000, 1283,
	953, -1000, 1333, -1000, -1000, -1000, -1000, 170, 262, -1000,
	29998, 459, 1387, 29998, -1000, -1000, -1000, 722, 722, -1000,
	-1000, 1510, -1000, 1011, -1000, 14288, 2561, 2561, -1000, -1000,
	-1000, 997, -1000, 997, 1280, 1280, -1000, 1280, 1282, -1000,
	1280, 136, 1280, 132, 997, 997, 2421, 2397, 2207, 1925,
	1113, -60, -1000, 784, 12860, 1823, 1774, 1113, 1113, 1113,
	1096, 29998, -1000, -1000, -1000, -1000, 1639, 1637, 1201, -1000,
	-1000, 79, 302, -1000, 1471, 1447, -1000, 1602, 1479, 1590,
	-1000, -1000, -1000, 784, -1000, 1538, 1078, -1000, 640, 1105,
	-1000, -1000, 10956, 1098, 1439, 518, 1096, 1249, 1563, 1331,
	1364, 1481, -1000, -1000, -1000, -1000, 1408, -1000, 1393, -1000,
	-1000, 1269, -1000, -1000, 1112, 1639, 20954, 1227, 1227, -1000,
	501, -1000, -1000, -1000, -1000, -1000, -1000, 2561, -55, -1000,
	-1000, -1000, 1278, 14288, -1000, -1000, 272, 1004, 272, 891,
	-1000, 890, -1000, -1000, -165, -1000, -1000, 1279, 1383, -1000,
	-1000, 29998, -1000, -1000, 29998, 29998, 29998, 29998, -1000, -1000,
	276, -1000, 1094, 1092, -1000, -114, -1000, -1000, 1269, -1000,
	-1000, -1000, 1042, -1000, -83, 1011, 29998, 29998, 29998, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2561, -1000, -1000,
	-1000, 303, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14288, 14288, 14288, 14288, 14288, 1582, 1003, 784, 14288, 14288,
	18574, 20478, 20478, 18098, -1000, 1637, 1635, 1589, 1463, 1467,
	1467, 1471, -1000, 1586, 1584, -1000, 1002, 1569, 998, 679,
	-1000, 29998, 12860, 1113, -1000, 260, 29998, 1113, 29998, -1000,
	1628, -1000, -1000, 12860, 1274, -1000, 12860, -1000, -1000, -1000,
	-1000, -1000, 1628, 1227, -1000, -1000, 563, -1000, 29998, 1306,
	556, -1000, 556, 1016, 1001, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1269, -1000, -1000, -1000, 1200, 273, 359,
	-1000, 280, -1000, -129, -131, 1565, -1000, -1000, 7617, -1000,
	-1000, 1194, 1336, -1000, -1000, -1000, 1240, 1240, 1240, 1240,
	224, 997, -1000, 1240, 1240, 1076, -1000, -1000, -1000, 1076,
	1076, 509, 1635, -1000, 12860, 12860, 1461, 900, -1000, -1000,
	-1000, -1000, 995, 991, -1000, 990, -1000, 1663, -1000, 784,
	-1000, 1113, -1000, 497, 1105, -1000, 1582, 784, 29998, 784,
	1582, -1000, 1074, -1000, -1000, -1000, -1000, -1000, 1564, 1113,
	-1000, -1000, -1000, -1000, 265, 1195, -1000, 615, 29998, 29998,
	-1000, -1000, -1000, -1000, 997, 213, -104, -1000, -1000, -1000,
	20002, -1000, -1000, -1000, -1000, -1000, 784, 1174, -1000, 822,
	-1000, -1000, -1000, -1000, -1000, 29998, 1105, 29998, -1000, 1064,
	-1000, 1363, 574, 265, 13336, -82, 7617, 5227, 1051, -1000,
	-1000, 1423, -78, -115, -1000, -1000, -1000, -1000, 1029, -1000,
	-1000, 1347, -1000, 1655, -1000, -1000, -1000, 823, 901, -1000,
	-1000, -1000, -82, 1240, 997, -1000, -27, -1000, -1000, -1000,
	-1000, -1000, 1333, -1000, 1401, -1000, -1000, 1645, 565, 565,
	-1000, -1000, -1000, -1000, -1000, 369, -1000, -1000, -83, -87,
	-1000, -1000, -1000, 366, 892, -1000, 205, -1000, -113, -1000,
	-1000, -1000, -1000, -120, -1000,
}

var yyPgo = [...]int{
	0, 2015, 24, 63, 147, 6, 148, 70, 2014, 2013,
	2012, 2011, 162, 160, 158, 2010, 2007, 2005, 2004, 2003,
	2002, 2001, 1999, 1997, 1996, 154, 131, 146, 1995, 1993,
	1992, 78, 141, 57, 64, 143, 1991, 1990, 41, 1986,
	1985, 1984, 140, 139, 617, 1983, 136, 79, 1982, 1974,
	1973, 1959, 1956, 1954, 1950, 1949, 1948, 1946, 1944, 1943,
	1942, 1941, 220, 1935, 1934, 4, 1933, 43, 1931, 1930,
	1929, 1928, 1927, 109, 1911, 1910, 1903, 150, 1902, 1901,
	75, 374, 84, 77, 1900, 1897, 71, 135, 1895, 80,
	115, 1893, 1891, 1475, 73, 36, 1889, 85, 68, 1885,
	28, 1880, 1879, 83, 1878, 1876, 1875, 60, 1874, 1869,
	3185, 1865, 58, 94, 29, 20, 1863, 1862, 1861, 1860,
	46, 427, 1859, 1856, 19, 1855, 1854, 156, 1853, 100,
	22, 1852, 13, 11, 18, 1850, 119, 1849, 39, 44,
	1848, 99, 1839, 1824, 31, 27, 40, 1823, 34, 93,
	121, 55, 67, 138, 1822, 1821, 23, 37, 1820, 1819,
	1816, 1815, 1813, 1812, 35, 1810, 26, 1803, 151, 1802,
	17, 16, 52, 66, 152, 32, 8, 1801, 127, 1798,
	30, 133, 91, 128, 1795, 1794, 1793, 134, 159, 1792,
	1790, 50, 1788, 110, 111, 1787, 175, 1785, 1784, 62,
	1261, 667, 9, 129, 1776, 1752, 2235, 86, 92, 42,
	1747, 118, 1746, 1745, 1743, 161, 145, 74, 909, 76,
	1742, 1741, 1740, 1737, 1734, 1733, 1732, 47, 33, 21,
	122, 38, 1729, 1728, 1727, 90, 65, 1726, 126, 120,
	97, 104, 1724, 132, 124, 72, 1723, 45, 1721, 1720,
	1718, 1716, 82, 1715, 1714, 1713, 1711, 125, 114, 89,
	49, 1710, 56, 88, 117, 123, 1709, 14, 142, 7,
	1708, 1, 0, 1707, 3, 130, 172, 113, 1706, 1705,
	2, 1704, 5, 1703, 1697, 101, 1696, 1694, 1693, 12,
	15, 10, 1692, 1690, 2906, 1763, 95, 1689, 149,
}

//line sql.y:5475
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 292, 293, 293, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 272, 272, 272, 275, 275,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 296, 296, 105,
	105, 103, 103, 104, 104, 173, 173, 15, 16, 16,
	183, 183, 182, 182, 182, 184, 184, 184, 184, 218,
	218, 17, 17, 17, 17, 17, 78, 78, 274, 274,
	273, 271, 271, 270, 270, 269, 29, 30, 39, 39,
	39, 39, 40, 41, 276, 276, 248, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 250,
	250, 237, 237, 249, 249, 249, 249, 249, 249, 249,
	236, 236, 92, 92, 154, 154, 154, 154, 154, 154,
	154, 154, 288, 288, 155, 155, 155, 155, 155, 155,
	289, 289, 289, 289, 220, 220, 220, 220, 223, 223,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 224, 224, 224, 224, 224, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 226, 226, 226, 226, 226, 226,
	226, 226, 235, 235, 227, 227, 230, 230, 231, 231,
	231, 232, 232, 232, 233, 233, 228, 228, 228, 228,
	229, 229, 229, 238, 262, 262, 261, 261, 259, 259,
	259, 259, 247, 247, 256, 256, 256, 256, 256, 246,
	246, 242, 242, 242, 243, 243, 244, 244, 241, 241,
	245, 245, 258, 258, 257, 239, 239, 240, 240, 264,
	290, 290, 290, 290, 291, 291, 265, 281, 282, 280,
	280, 280, 280, 280, 67, 67, 67, 195, 195, 195,
	254, 254, 253, 253, 253, 255, 255, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 190, 190, 190, 279, 279,
	279, 279, 279, 279, 278, 278, 278, 251, 251, 251,
	277, 277, 47, 47, 139, 139, 36, 36, 36, 36,
	36, 36, 35, 35, 35, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 37, 37, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 234,
	234, 234, 266, 266, 267, 267, 19, 28, 28, 20,
	20, 20, 20, 21, 21, 48, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 283, 283, 189, 189, 197, 197, 188,
	188, 211, 211, 211, 191, 191, 191, 192, 192, 287,
	287, 287, 50, 50, 52, 52, 53, 54, 54, 213,
	213, 214, 214, 55, 56, 68, 68, 68, 68, 68,
	68, 70, 70, 70, 9, 9, 9, 9, 64, 64,
	64, 8, 8, 51, 51, 58, 284, 284, 285, 286,
	286, 286, 286, 59, 61, 22, 22, 22, 22, 22,
	22, 85, 85, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 79, 79, 79, 74, 74,
	297, 62, 63, 63, 77, 77, 77, 71, 71, 71,
	76, 76, 76, 82, 82, 84, 84, 84, 84, 84,
	86, 86, 86, 86, 86, 86, 86, 81, 81, 83,
	83, 83, 83, 204, 204, 204, 203, 203, 94, 94,
	96, 95, 95, 97, 97, 98, 98, 98, 137, 113,
	113, 171, 171, 170, 170, 172, 172, 172, 172, 174,
	174, 99, 99, 99, 99, 100, 100, 101, 101, 102,
	102, 212, 212, 209, 209, 209, 208, 208, 106, 106,
	106, 108, 107, 107, 107, 107, 109, 109, 111, 111,
	110, 110, 112, 114, 114, 114, 114, 114, 115, 115,
	93, 93, 93, 93, 93, 93, 93, 93, 186, 186,
	117, 117, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 128, 128, 128, 128, 128, 128, 118, 118,
	118, 118, 118, 118, 118, 80, 80, 129, 129, 129,
	136, 130, 130, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 125, 125, 125,
	125, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 298, 298, 127, 126, 126, 126, 126, 126, 126,
	126, 75, 75, 75, 75, 75, 217, 217, 217, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 142, 142, 72, 72, 140, 140, 141, 143,
	143, 138, 138, 138, 120, 120, 120, 120, 120, 120,
	120, 120, 122, 122, 122, 144, 144, 145, 145, 146,
	146, 148, 147, 147, 149, 150, 150, 150, 151, 151,
	152, 152, 152, 38, 38, 38, 38, 38, 33, 33,
	33, 33, 34, 34, 34, 87, 87, 87, 87, 89,
	89, 88, 88, 65, 65, 66, 66, 66, 90, 90,
	91, 91, 91, 91, 168, 168, 153, 153, 153, 160,
	160, 160, 156, 156, 158, 158, 158, 159, 159, 159,
	157, 165, 165, 167, 167, 166, 166, 162, 162, 163,
	163, 164, 164, 164, 161, 161, 119, 119, 119, 119,
	119, 169, 169, 169, 169, 175, 175, 132, 132, 134,
	134, 133, 135, 176, 176, 180, 177, 177, 181, 181,
	181, 181, 181, 178, 178, 179, 179, 205, 205, 205,
	185, 185, 196, 196, 193, 193, 194, 194, 187, 187,
	198, 198, 198, 60, 131, 131, 263, 263, 260, 201,
	201, 202, 202, 206, 206, 210, 210, 207, 207, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 294, 295, 215, 216, 216, 216,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 3, 4, 2,
	3, 2, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -292, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 162, -40, -30, 163, -41, 165, 164,
	200, 166, 193, 72, 239, 240, 242, 243, 244, 245,
	-70, 198, 199, 168, 34, 43, 31, 32, 35, 171,
	-4, -25, 6, -294, 9, 343, 195, 194, 26, -6,
	356, 83, -293, 483, -168, -153, 20, 31, 27, -152,
	-148, -77, -153, 18, 16, 5, -62, -297, -62, -62,
	10, 11, -62, -248, -250, 83, 135, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -268, -35, -32,
	167, 164, 208, 104, 105, 200, 201, 202, 166, 184,
	199, 203, 198, 217, -31, 78, 31, 356, 359, -255,
	163, 169, 170, 344, 107, 106, 73, 165, -252, 289,
	460, -46, 462, 97, 99, 461, 42, 174, 463, 464,
	465, 466, 183, 467, 468, 469, 470, 476, 477, 478,
	479, 108, 5, -62, -210, -206, -272, -200, 86, 87,
	88, 353, 186, 387, 388, 233, 78, 39, 289, 460,
	239, 253, 247, 274, 266, 354, 389, 236, 187, 221,
	457, 264, 113, 462, 390, 201, 294, 295, 296, 97,
	242, 330, 475, 238, 391, 473, 99, 461, 77, 49,
	42, 196, 262, 258, 463, 222, 392, 364, 215, 107,
	104, 482, 34, 256, 48, 28, 472, 106, 47, 464,
	126, 393, 465, 298, 279, 451, 46, 299, 202, 394,
	81, 358, 459, 300, 257, 301, 232, 471, 168, 395,
	443, 302, 303, 452, 396, 280, 284, 397, 322, 304,
	50, 398, 399, 453, 105, 400, 76, 466, 251, 252,
	401, 230, 185, 324, 278, 183, 33, 305, 355, 234,
	56, 209, 325, 44, 282, 43, 447, 402, 450, 277,
	273, 51, 403, 404, 405, 406, 467, 276, 250, 272,
	481, 227, 468, 60, 170, 286, 285, 287, 216, 321,
	269, 407, 408, 409, 190, 79, 410, 259, 19, 411,
	412, 306, 223, 413, 54, 414, 415, 328, 199, 416,
	52, 469, 37, 204, 470, 417, 418, 419, 420, 421,
	308, 422, 307, 281, 283, 211, 309, 357, 423, 255,
	203, 474, 424, 191, 458, 205, 208, 198, 329, 192,
	425, 426, 427, 428, 429, 237, 430, 431, 243, 476,
	41, 432, 433, 434, 435, 231, 226, 323, 332, 59,
	80, 291, 436, 456, 249, 224, 437, 240, 53, 477,
	478, 479, 218, 480, 7, 311, 108, 228, 229, 45,
	270, 210, 438, 439, 260, 261, 275, 248, 271, 241,
	444, 212, 312, 200, 440, 331, 225, 292, 361, 217,
	313, 455, 360, 268, 265, 219, 441, 314, 175, 213,
	214, 442, 445, 315, 316, 318, 319, 235, 317, 320,
	220, 359, 246, 263, 293, 173, -62, 173, -110, -206,
	173, -178, 295, -197, 297, 310, 305, 315, 303, -189,
	306, 308, 211, -287, 322, 173, 312, 162, 153, 298,
	307, 316, 317, 235, 320, 220, -283, -272, 465, 480,
	113, 267, 302, 300, 323, 447, 319, 318, -206, 241,
	-213, 246, -201, -272, -200, 244, -110, -68, 443, 166,
	-215, -215, -79, 447, 449, -130, -93, -116, 119, -121,
	29, 24, -120, -117, -138, -135, -136, 153, 154, 156,
	155, 157, 142, 143, 150, 120, 158, -125, -123, -124,
	-126, 90, 89, 98, 91, 92, 93, 94, 100, 101,
	102, -201, -206, -133, -2, 66, 67, 344, 345, 346,
	347, 352, 348, 122, 55, 339, 333, 342, 341, 340,
	337, 338, 335, 336, 350, 351, 178, 334, 172, 148,
	343, -272, -200, -294, 42, 311, 311, -110, -62, -146,
	-77, -148, -4, -2, -294, 6, -62, -2, -3, -7,
	-25, -27, 383, -26, -206, -153, -168, 10, 137, 40,
	48, -151, -152, -6, -2, -93, 17, 21, 22, -83,
	144, -93, -206, -63, -83, -187, 177, -62, -62, -177,
	-218, 241, -181, 323, 322, -202, -179, -201, -199, -178,
	321, 167, 362, 118, 23, 25, 121, 153, 17, 122,
	35, 169, 267, 184, 152, 180, 344, 162, 70, 363,
	335, 336, 333, 339, 346, 347, 334, 297, 29, 11,
	365, 26, 194, 22, 36, 146, 164, 125, 197, 24,
	195, 102, 368, 20, 73, 189, 12, 182, 38, 14,
	369, 370, 15, 178, 177, 137, 174, 68, 9, 158,
	27, 134, 64, 371, 115, 372, 373, 374, 375, 66,
	135, 18, 337, 338, 31, 448, 376, 352, 206, 148,
	71, 57, 449, 119, 377, 378, 100, 379, 103, 74,
	454, 116, 16, 69, 40, 380, 207, 381, 179, 382,
	326, 383, 136, 165, 343, 67, 384, 172, 310, 6,
	349, 30, 193, 181, 110, 65, 385, 173, 124, 350,
	351, 176, 101, 5, 114, 32, 10, 72, 75, 340,
	341, 342, 55, 109, 356, 123, 13, 386, 327, 117,
	113, -249, 135, -236, -240, -201, 188, -265, 184, -110,
	-258, -257, -201, -78, -196, 174, 182, 181, 114, -276,
	116, 228, 334, 172, -42, -43, -178, 152, 205, 84,
	84, -240, -239, -238, -277, 207, 188, -264, -256, 180,
	189, -246, 181, 182, -241, 174, 115, -277, -241, 179,
	189, 207, 207, 108, 207, 108, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 204, -247, 127, -247, 360,
	360, -252, -277, -277, -277, 176, 33, 33, -198, -241,
	176, 23, -247, -247, -178, 152, -247, -247, -247, -247,
	215, 215, -247, -247, -247, -247, -247, -247, -247, -247,
	-247, -247, -247, -247, -247, -247, -247, 173, -276, -87,
	320, 235, 78, -44, 217, -28, -110, -196, 174, 175,
	-276, -110, 159, -110, -191, 135, 13, -191, -188, 311,
	309, 296, 301, -191, -191, -191, -191, 218, 294, -242,
	174, 33, 185, 311, 218, 294, 218, 219, 218, 219,
	304, 314, 218, -211, 12, 137, 334, 299, 303, 211,
	173, 212, 175, 313, -272, 450, 219, -211, 90, 311,
	214, -191, -216, -294, -202, 267, -216, -216, 30, 176,
	-201, -64, -201, 90, -9, -5, -13, -12, -14, 127,
	-85, 311, -73, 153, 465, 451, 452, 453, 450, 308,
	458, 456, 454, 218, 455, 84, 118, 116, 117, 134,
	-93, -118, 137, 119, 135, 136, 121, 139, 138, 149,
	142, 143, 144, 145, 146, 147, 148, 140, 141, 152,
	127, 128, 129, 130, 131, 132, 133, -186, -294, -136,
	160, 161, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -294, 159, -294, -294, -294, -294, -294, -294,
	-294, -294, -142, -93, -294, -298, -294, -298, -127, -294,
	-298, -127, -298, -127, -298, -298, -127, -298, -127, -298,
	-298, -127, -294, -294, -294, -294, -294, -294, -294, -2,
	-3, -130, -215, -284, -285, -113, -110, -294, 235, -151,
	-6, -2, -146, -152, -148, -2, -62, -71, -84, 61,
	62, -86, 22, 36, 65, 63, 21, -295, 85, -295,
	-168, -295, 84, -27, -171, 83, 59, 41, 90, 90,
	84, 19, -147, -149, -93, 12, -204, -203, 23, -201,
	90, 159, 96, 12, -111, 27, -110, -187, -187, 84,
	241, -181, -218, -183, -182, 324, 326, 127, -205, -201,
	90, 29, 85, 84, -110, -220, -223, -225, -224, -226,
	-221, -222, 264, 265, 153, 268, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 30, 196, 260, 261,
	262, 263, 280, 281, 282, 283, 284, 285, 286, 287,
	247, 266, 354, 248, 249, 250, 251, 252, 253, 255,
	256, 257, 258, 259, -275, -272, 83, 85, 84, -227,
	83, -87, 173, -272, 174, 174, 174, -62, 343, -247,
	-247, 204, -35, -32, -268, 16, -31, -32, 167, 104,
	105, 164, 83, -236, 83, -245, -275, -272, 83, 115,
	179, 114, -244, -241, -244, -245, -272, -138, -201, -206,
	-272, 115, 115, -174, -201, -174, -174, 21, -174, 21,
	-174, 21, 91, -201, -174, 21, -174, 21, -174, 21,
	-174, 21, -174, 21, 29, 76, 77, 29, 79, 80,
	81, -138, -138, -236, -178, -110, -272, 91, 91, -247,
	-247, 91, 90, 90, 90, -247, -247, 91, 90, -208,
	-206, 90, -278, 190, 232, 234, 91, 91, 91, 91,
	29, 90, -279, 29, 472, 471, 473, 474, 475, 91,
	29, 91, 29, 91, -201, 83, -110, -90, 222, 162,
	164, 167, 74, 90, 236, 127, 42, 84, 176, 173,
	-272, -193, 178, -193, -207, -206, -199, 90, -93, -243,
	12, 137, -211, -211, -191, -110, -243, -211, -191, -110,
	-191, -191, -191, -191, -211, -211, -211, -191, -206, -206,
	-110, -110, -110, -110, -110, -110, -110, -216, -216, -216,
	-192, 135, -191, 450, 74, -214, 244, 278, 444, 445,
	446, 84, 356, -103, -110, 450, 450, 450, 450, 450,
	450, -93, -93, -93, -93, -128, 100, 119, 101, 102,
	-121, -129, -133, -136, 95, 137, 135, 136, 121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -217, -272, 90, 153, -272, -120,
	-120, -201, -82, 22, 36, -81, -83, -202, -207, -199,
	-81, -81, -93, -93, -138, 90, -81, -138, 90, -81,
	-81, -76, 22, 36, -140, -141, 123, -138, -295, -121,
	-201, -201, -81, -82, -82, -81, -81, -168, -295, 84,
	-286, 326, 327, 448, -209, 207, -208, 23, -131, -130,
	90, -151, -151, 61, 62, 57, -81, -86, -295, -26,
	23, -170, -201, 60, 90, -228, -178, -93, -93, 84,
	-150, 25, 26, -110, -203, 144, -207, -110, -173, 207,
	-110, -95, -97, -98, -99, -113, -137, -294, 12, -103,
	-104, -112, -206, -181, -183, 84, 325, 327, 328, 74,
	103, -93, -229, 152, -254, -253, -252, -236, -238, -239,
	-240, 85, -154, -92, 38, -232, 292, 291, -227, -227,
	-227, -227, -227, -228, -228, -228, -228, 83, 83, -227,
	-227, -227, -227, -230, 83, -230, -230, -231, 83, -231,
	-265, -93, -262, -261, -259, -260, 183, 97, 356, 75,
	-257, -150, 91, -90, -194, 178, -263, -260, -272, -272,
	-272, -194, -272, 90, -272, 90, 84, 17, -237, -236,
	-47, 232, -267, 207, -264, -258, -245, 115, -244, -245,
	-245, 159, -272, 84, 27, 108, 108, 108, 108, 356,
	164, 30, -236, -47, -217, 176, -217, -217, 90, 90,
	-190, 480, -103, -89, 224, 127, 213, 213, 173, 173,
	226, -110, 237, 238, 236, 21, 225, 227, 229, 215,
	-110, -110, -193, 74, -105, -110, 24, -206, -110, -191,
	-191, -110, -191, -191, 90, -110, -201, -73, 326, 84,
	356, 20, -74, 20, 100, 101, 102, -129, -121, -121,
	-121, -80, 197, 118, -295, -295, -81, -81, 84, -294,
	159, -295, -295, 84, 75, 23, 12, 12, -295, 12,
	12, -295, -295, -81, -143, -141, 125, -93, -295, -295,
	84, 84, -295, -295, -295, -295, -295, -285, 447, 327,
	-114, 72, 177, 73, -294, -208, -295, -122, -201, 91,
	94, -153, -94, -96, 12, -86, -136, 85, 84, -228,
	-157, -162, -188, -272, 90, 153, -149, 159, -115, 13,
	-119, 30, 55, -5, -294, -294, 30, 84, -106, -108,
	-107, -109, 64, 68, 70, 65, 66, 67, 71, -212,
	23, -95, -3, -2, -294, -110, -103, -296, 12, 75,
	-296, 84, 159, -182, -184, 329, 326, 332, -272, 90,
	84, -252, -240, -291, 100, 119, 29, 74, 289, 97,
	-289, -290, 179, 114, 115, 191, 23, 39, -233, 293,
	-228, -228, -229, -229, -229, -229, -235, 90, -235, 91,
	91, 85, -38, -33, -34, 31, 78, -259, -247, 90,
	37, -201, 85, -89, -110, 119, 74, -263, -263, -263,
	-206, 16, -170, 84, 85, -139, 233, 85, -201, 85,
	83, -245, -245, -202, -201, -294, 173, 29, 29, -47,
	-139, -229, -272, 482, 481, 85, 175, 231, -91, 339,
	90, 86, -110, -110, -110, -110, -110, 167, 164, 216,
	176, -103, -110, 84, -67, 192, 187, -211, -211, 31,
	-110, 326, 459, 457, -80, 118, -121, -121, -295, -295,
	-83, -82, -202, -219, 153, 264, 196, 262, 258, 278,
	269, 291, 260, 292, -217, -219, -121, -121, -121, -121,
	353, -146, 126, -93, 124, -121, -121, 174, 174, 174,
	-174, -185, 20, 12, 55, 55, -94, -115, -95, -86,
	-201, -160, 443, -165, 44, -163, -164, 45, -161, 46,
	54, 144, -151, -93, -175, 74, -176, -180, -138, -132,
	-134, -133, -294, -169, -295, -201, -174, -176, -97, -98,
	-98, -97, -98, 64, 64, 64, 69, 64, 69, 64,
	-107, -206, -295, -295, -3, -173, 75, -95, -95, -112,
	-206, 144, 326, 330, 331, -252, 100, -121, 10, 90,
	115, 115, -110, 83, -229, -229, 85, 84, 85, 84,
	85, 84, -195, 393, 119, -34, -33, -247, -247, 91,
	-272, 175, 24, -110, 74, 74, 74, 17, -236, -138,
	55, -262, -170, -266, -267, -110, -120, -139, -110, -88,
	222, 230, 83, 87, -274, 75, 213, 289, 213, -110,
	-67, -38, -110, -191, -191, 31, -272, -121, -295, -295,
	-227, -227, -227, -231, -227, 252, -227, 252, -295, -295,
	20, 20, 20, 20, -294, -72, 349, -93, 84, 84,
	-294, -294, -294, -295, -110, -115, -144, 14, -157, 49,
	270, -167, -166, 53, 45, -164, 17, 47, 17, 28,
	-175, 84, 127, 84, -295, -295, 84, 55, 159, -295,
	-115, -101, -100, 74, 75, -102, 74, -100, 64, 64,
	-171, -295, -115, -95, -115, -115, 159, -124, 83, -121,
	-228, 90, -228, 91, 91, 393, 29, 79, 80, 81,
	29, 76, 77, -110, -110, -110, -110, -170, 209, 85,
	-295, 84, -234, 356, 359, -171, 85, -271, 356, -273,
	-272, -201, -201, -201, -228, -272, -121, -121, -121, -121,
	-121, -151, 90, -121, -121, -172, -295, -201, 179, -172,
	-172, -209, -144, -145, 15, 17, -158, 51, -156, 50,
	-156, -166, 17, 17, 90, 17, 90, 115, -180, -93,
	-134, 55, -5, -201, -132, -201, -146, -93, 83, -93,
	-146, -115, -170, 85, -229, -229, 85, 85, -171, 210,
	-290, -267, 360, 360, 23, -270, -269, -202, 83, 75,
	-295, -295, -295, -295, -75, 137, 356, -295, -295, -295,
	84, -295, -295, -295, -114, -145, -93, -130, -159, 52,
	74, 103, 90, 90, 90, 10, -132, 159, -151, -170,
	-151, 85, -155, 23, -294, -5, 84, 127, -170, -110,
	-295, 354, 71, 357, -201, 179, 74, 103, -176, -201,
	85, -281, -282, 74, -291, -288, 100, 119, 97, -289,
	109, 110, -5, -121, 206, -65, 356, -269, -251, -202,
	90, 91, 85, 60, 355, 358, -282, 74, 11, 10,
	100, 90, -65, -295, -295, -66, 221, 447, -274, 60,
	-280, 192, 187, 190, 30, -280, 184, -271, 356, 186,
	29, 100, 223, 357, 358,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 600, 600, 600, 0,
	600, 0, 0, 600, -2, -2, 600, 1005, 0, 600,
	0, 0, -2, 533, 534, 0, 536, -2, 0, 0,
	545, 1424, 1424, 595, 0, 0, 0, 0, 0, 600,
	869, 45, 600, 0, 80, 81, 551, 552, 553, 60,
	0, 1422, 1, 3, 66, 70, 0, 0, 0, 53,
	878, 0, 73, 0, 0, 604, 0, 602, 0, 988,
	600, 600, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 408, 369, 411, 367, 397,
	-2, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 262, 262, 0, 0, -2,
	360, 360, 360, 0, 0, 0, 394, 990, 315, 262,
	262, 0, 262, 262, 262, 262, 0, 0, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 895, 143, 1006, 1003, 1004, 35, 36,
	37, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 0, 982, 0, 464, 690,
	0, 524, 524, 0, 524, 524, 524, 524, 0, 0,
	0, 476, 0, 0, 0, 0, 521, 0, 0, 495,
	497, 0, 521, 0, 0, 508, 524, 1425, 1425, 1425,
	973, 0, 518, 516, 530, 531, 513, 514, 532, 535,
	0, 540, 543, 999, 1000, 0, 558, 44, 1227, 550,
	563, 564, 0, 596, 597, 40, 741, 700, 0, 706,
	708, 0, 743, 744, 745, 746, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 774, 775,
	776, 854, 855, 856, 857, 858, 859, 860, 861, 710,
	711, 851, 0, 962, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 842, 0, 811, 811, 811, 811, 811,
	811, 811, 811, 811, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 1424, 0, 573, 0, 0, 878,
	0, 870, 869, 58, 0, 600, -2, 0, 0, 0,
	0, 42, 0, 47, 651, 72, 71, 914, 0, 0,
	0, 54, 879, 62, 64, 880, 0, 605, 606, 0,
	629, 633, 0, 601, 0, 0, 989, 988, 988, 97,
	0, 1386, 966, -2, -2, 0, 0, 1001, 1002, 975,
	-2, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	-2, 0, 0, 153, 154, 0, 38, 288, 0, 149,
	0, 282, 234, 895, 0, 0, 0, 0, 0, 600,
	0, 983, 134, 135, 141, 142, 262, 262, 0, 143,
	143, 376, 377, 378, 0, 0, -2, 286, 0, 361,
	0, 0, 276, 276, 280, 278, 279, 0, 0, 0,
	0, 0, 0, 388, 0, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 263, 0, 406,
	407, 316, 0, 0, 0, 0, 386, 387, 0, 0,
	991, 992, 0, 0, 262, 262, 0, 0, 0, 0,
	262, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 908,
	0, 0, 0, -2, 0, 456, 0, 0, 0, 984,
	984, 463, 0, 465, 466, 0, 0, 467, 0, 521,
	521, 519, 520, 469, 470, 471, 472, 524, 0, 0,
	271, 272, 273, 521, 524, 0, 524, 524, 524, 524,
	521, 521, 521, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 1425, 1425, 527, 524, 0, 505,
	506, 509, 510, 1426, 1427, 1020, 511, 512, 974, 541,
	544, 561, 559, 560, 562, 554, 555, 556, 557, 0,
	575, 576, 581, 0, 0, 0, 0, 587, 588, 589,
	0, 0, 592, 593, 594, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 729, 730, 731, 732, 733, 734, 707, 0, 721,
	0, 0, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 0, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 0, 843, 0, 794, 0, 795, 803, 0,
	796, 804, 797, 805, 798, 799, 806, 800, 807, 801,
	802, 808, 0, 0, 0, 613, 613, 0, 0, 740,
	0, 0, 41, 565, 566, 0, 673, 994, 0, 52,
	61, 63, 878, 56, 878, 0, 615, 0, 0, -2,
	-2, 616, 622, 623, 624, 625, 626, 49, 1423, 50,
	0, 69, 0, 43, 0, 0, 0, 0, 246, 917,
	0, 0, 871, 872, 875, 0, 630, 634, 0, 636,
	637, 0, 603, 0, 95, 0, 689, 0, 0, 0,
	1386, 972, 0, 99, 100, 0, 0, 0, 250, 977,
	978, 979, -2, 269, 0, -2, 241, 185, 186, 187,
	234, 189, 234, 234, 234, 234, 246, 246, 246, 246,
	217, 218, 219, 220, 221, 0, 0, 204, 234, 234,
	234, 234, 224, 225, 226, 227, 228, 229, 230, 231,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 236,
	236, 236, 238, 238, 0, 39, 0, 254, 0, 875,
	0, 908, 986, 996, 0, 0, 0, 986, 117, 0,
	0, 409, 370, 398, 410, 0, 373, 374, -2, 0,
	0, 360, 0, 362, 0, 270, 0, -2, 0, 280,
	0, 276, 280, 277, 280, 268, 281, 390, 851, 0,
	391, 392, 0, 428, 659, 0, 0, 0, 0, 0,
	434, 435, 436, 0, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 399, 400, 401, 402, 403, 404,
	405, 0, 0, 362, 0, 395, 0, 317, 318, 0,
	0, 321, 322, 323, 324, 0, 0, 327, 328, 329,
	676, 677, 330, 354, 355, 356, 331, 332, 333, 334,
	335, 336, 337, 348, 349, 350, 351, 352, 353, 338,
	339, 340, 341, 342, 345, 0, 127, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 0, 0, 0, 691, 1007, 1008, 525, 526, 0,
	274, 275, 524, 524, 473, 496, 0, 524, 477, 498,
	478, 480, 479, 481, 500, 501, 524, 484, 522, 523,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	502, 0, 503, 504, 0, 0, 542, 546, 547, 548,
	549, 0, 0, 578, 91, 583, 584, 585, 586, 598,
	591, 742, 701, 702, 703, 705, 722, 0, 724, 726,
	712, 713, 737, 738, 739, 0, 0, 0, 0, 735,
	717, 0, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 762, 826, 827, 828, 0, 760,
	761, 772, 0, 0, 0, 614, 627, 852, 0, -2,
	0, 0, 0, 0, 745, 854, 0, 745, 854, 0,
	0, 0, 611, 612, 849, 846, 0, 0, 812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 961, 0,
	568, 569, 571, 0, 693, 0, 674, 0, 0, 995,
	574, 55, 57, 620, 621, 0, 638, 617, 51, 46,
	0, 0, 653, 915, 246, 937, 0, 881, 882, 0,
	874, 876, 877, 74, 635, 631, 0, 698, 0, 0,
	688, 0, 641, 643, 644, 645, 671, 0, 0, 0,
	0, 93, 690, 967, 98, 0, 0, 103, 104, 968,
	969, 970, 971, 0, 136, -2, 312, 155, 157, 158,
	159, 150, 294, 0, 0, 244, 242, 243, 188, 246,
	246, 211, 212, 250, 250, 250, 250, 0, 0, 205,
	206, 207, 208, 199, 0, 200, 201, 202, 0, 203,
	287, 0, 883, 255, 256, 258, 262, 0, 0, 0,
	283, 284, 0, 899, 0, 0, 0, 997, 996, 996,
	996, 0, 145, 146, 147, 148, 143, 0, 0, 151,
	364, 363, 0, 0, 285, 0, 0, 280, 280, 265,
	266, 0, 393, 0, 0, 430, 431, 432, 433, 0,
	0, 0, 362, 364, 250, 0, 319, 320, 325, 326,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 424, 425, 426, 896, 897, 898, 0,
	0, 457, 0, 0, 304, 89, 985, 462, 521, 483,
	499, 521, 475, 482, 528, 507, 538, 582, 0, 0,
	0, 0, 590, 0, 723, 725, 727, 714, 735, 718,
	0, 715, 0, 0, 709, 777, 0, 0, 0, 613,
	0, 781, 782, 0, 0, 0, 0, 0, 819, 0,
	0, 820, 0, 869, 0, 847, 0, 0, 793, 813,
	0, 0, 814, 815, 816, 817, 818, 567, 570, 572,
	649, 0, 0, 0, 0, 675, 993, 0, 862, 0,
	0, 638, 698, 639, 0, 618, 48, 652, 0, 919,
	918, 931, 944, 247, 248, 249, 873, 0, 878, 0,
	955, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 678, 0, 0, 681, 0, 0, 0, 0,
	672, 0, 0, 0, 0, -2, 0, 0, 87, 88,
	0, 0, 0, 101, 102, 0, 0, 108, 251, 252,
	143, 314, 156, 160, 165, 0, 0, 0, 169, 0,
	171, 295, 0, 181, 183, 0, 0, 163, 184, 245,
	250, 250, 213, 214, 215, 216, 0, 232, 0, 0,
	0, 307, 113, 887, 886, 262, 262, 257, 0, 260,
	0, 998, 235, 0, 126, 0, 0, 0, 0, 0,
	132, 0, 368, 0, 379, 380, 0, 427, 0, 254,
	0, 264, 267, 852, 660, 0, 0, 381, 0, 364,
	384, 385, 396, 346, 347, 344, 0, 0, 909, 910,
	0, 913, 118, 416, 418, 417, 421, 0, 0, 414,
	0, 304, 883, 0, 461, 305, 306, 524, 524, 577,
	92, 0, 580, 0, 716, 0, 736, 719, 778, 779,
	628, 0, 853, 0, 234, 234, 832, 234, 238, 835,
	234, 837, 234, 840, 0, 0, 0, 0, 0, 0,
	0, 844, 792, 850, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 981, 863, 864, 698, 865, 640, 619,
	654, 937, 0, 930, 0, -2, 939, 0, 0, 0,
	945, 632, 75, 699, 78, 0, 955, 963, 0, 946,
	957, 959, 0, 0, 0, 951, 0, 698, 642, 667,
	669, 0, 664, 679, 680, 682, 0, 684, 0, 686,
	687, 651, 647, 648, 0, 698, 0, 698, 698, 94,
	0, 692, 105, 106, 107, 313, 166, 167, 0, 170,
	180, 182, 0, 0, 209, 210, 246, 0, 246, 0,
	239, 0, 296, 308, 0, 884, 885, 0, 0, 259,
	261, 0, 987, 128, 0, 0, 0, 0, 152, 365,
	0, 253, 0, 0, 452, 449, 382, 383, 651, 900,
	901, 902, 0, 912, 121, 0, 0, 0, 0, 458,
	459, 460, 90, 468, 474, 579, 599, 720, 780, 783,
	829, 246, 833, 834, 836, 838, 839, 841, 785, 784,
	0, 0, 0, 0, 0, 878, 0, 848, 0, 0,
	0, 0, 0, 673, 59, 865, 867, 0, 924, 922,
	922, 932, 933, 0, 0, 940, 0, 0, 0, 0,
	79, 0, 0, 0, 960, 0, 0, 0, 0, 96,
	869, 661, 668, 0, 0, 662, 0, 663, 683, 685,
	646, -2, 869, 698, 85, 86, 0, 168, 0, 0,
	250, 233, 250, 0, 0, 309, 888, 889, 890, 891,
	892, 893, 894, 651, 129, 130, 131, 371, 0, 0,
	429, 0, 437, 0, 0, 0, 911, 415, 0, 119,
	120, 0, 0, 420, 830, 831, 0, 0, 0, 0,
	821, 0, 845, 0, 0, 0, 695, 655, 656, 0,
	0, 693, 867, 77, 0, 0, 927, 0, 920, 923,
	921, 934, 0, 0, 941, 0, 943, 0, 964, 965,
	958, 0, 950, 953, 949, 952, 878, 665, 0, 670,
	878, 84, 0, 174, 222, 223, 237, 240, 0, 0,
	289, 453, 450, 451, 0, 122, 123, 0, 0, 0,
	786, 788, 787, 789, 0, 0, 0, 791, 809, 810,
	0, 694, 696, 697, 650, 76, 868, 866, 916, 0,
	925, 926, 935, 936, 942, 0, 948, 0, 82, 0,
	83, 290, 294, 0, 0, 903, 0, 0, 0, 422,
	790, 0, 0, 0, 657, 658, 928, 929, 956, 954,
	666, 291, 292, 0, 161, 175, 176, 0, 0, 179,
	172, 173, 903, 0, 0, 412, 905, 124, 125, 357,
	358, 359, 118, 822, 0, 825, 293, 0, 0, 0,
	177, 178, 114, 454, 455, 0, 906, 907, 121, 823,
	297, 299, 300, 0, 0, 298, 0, 419, 0, 301,
	302, 303, 904, 0, 824,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 120, 3, 3, 3, 147, 139, 3,
	83, 85, 144, 142, 84, 143, 159, 145, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 483,
	128, 127, 129, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 149, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 150,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 124, 125,
	126, 130, 131, 132, 133, 134, 135, 136, 137, 140,
	141, 146, 148, 151, 152, 153, 154, 155, 156, 157,
	158, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:445
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:450
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:455
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:488
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:494
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:498
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:502
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:507
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:517
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:523
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:529
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:533
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:542
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:552
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:558
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:564
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:568
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:572
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:595
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:601
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:612
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:646
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:717
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:737
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:761
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:765
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:771
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:777
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:799
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:809
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:819
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:832
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:838
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:854
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:864
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:868
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:872
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:878
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:882
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:886
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:890
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:896
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:900
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:948
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:963
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:968
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:974
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:991
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:998
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1005
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1010
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1015
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1020
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1027
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1034
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1045
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1055
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1061
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1065
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1099
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1103
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1110
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1114
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1120
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1130
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1135
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1144
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1163
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1169
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1177
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1190
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1194
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1200
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1206
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1211
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1216
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1221
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1226
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1233
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1237
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1251
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1257
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1275
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1279
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1283
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1287
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1518
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1523
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1527
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1553
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1557
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1561
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1570
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1607
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1616
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1622
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1636
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1641
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1645
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1661
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1665
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1669
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1673
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1677
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = "key"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = ""
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1745
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1755
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1761
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1765
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1771
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1775
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1781
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1787
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1791
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1795
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1799
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1808
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1814
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1820
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1826
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1832
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1836
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1840
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1844
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1848
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1883
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1889
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1903
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1913
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1921
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1925
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1961
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1965
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1993
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1997
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2085
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2094
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2102
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2110
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2116
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2130
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2134
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2138
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2142
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2150
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2154
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2158
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2198
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2202
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2206
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2210
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2214
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2220
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2230
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2234
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2238
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2242
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2246
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2250
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2254
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2258
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2262
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2268
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2274
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2281
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2288
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2294
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2298
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2305
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2312
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2324
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2334
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2338
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2342
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2365
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2380
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2387
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2394
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2401
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2409
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2413
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2417
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2421
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2425
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2429
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2433
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2437
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2441
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2445
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2449
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2453
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2457
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2461
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2465
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2469
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2473
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2477
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2481
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2485
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2489
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2493
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2498
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2513
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2523
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2527
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2539
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2543
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2562
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2566
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2576
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2581
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2675
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = "extended "
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2809
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2813
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2847
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2851
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2861
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2867
		{
			yyVAL.empty = struct{}{}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2885
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2901
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2907
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2911
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2916
		{
			yyVAL.empty = struct{}{}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.empty = struct{}{}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.empty = struct{}{}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.empty = struct{}{}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2928
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2939
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2943
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2947
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2951
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2955
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2959
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2979
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2983
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2987
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2991
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3010
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3036
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3046
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3052
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3056
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3060
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3064
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3094
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3175
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			setAllowComments(yylex, true)
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.strs = nil
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = ""
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.str = SQLCacheStr
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3252
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3257
		{
			yyVAL.strs = nil
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3273
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.str = SQLCacheStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3287
		{
			yyVAL.str = DistinctStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = DistinctStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = StraightJoinHint
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3309
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3319
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3323
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3327
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3331
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3336
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3356
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3360
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3366
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3372
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3386
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3390
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3394
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3400
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3406
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3410
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3419
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3425
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3435
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3439
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3453
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3457
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3470
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3474
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3478
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3482
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3488
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3490
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3494
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3500
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3505
		{
			yyVAL.empty = struct{}{}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			yyVAL.empty = struct{}{}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3510
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3531
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3535
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3539
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3545
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3551
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3555
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3559
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3563
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3569
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3573
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3587
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3612
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3616
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3620
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3624
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3633
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3639
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3643
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3647
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3651
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3655
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3659
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3663
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3667
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3683
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3687
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3693
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3697
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3701
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3705
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3709
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3713
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3717
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3721
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3725
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3729
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3735
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3739
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3743
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3747
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3751
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3755
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3761
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3765
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3769
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3773
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3777
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3781
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3785
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3794
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3800
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3804
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3808
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3815
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3821
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3831
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3835
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3839
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3847
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3851
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3855
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3859
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3863
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3867
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3891
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3899
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3903
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3907
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3915
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3919
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3923
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3927
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3931
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3935
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3939
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3943
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3947
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3965
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3969
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3973
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3977
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4003
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4019
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4023
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4027
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4031
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4035
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4039
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4053
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4057
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4062
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4067
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4072
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4078
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4088
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4092
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4096
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4106
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4111
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4115
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4119
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4129
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4139
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4143
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4147
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4151
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4155
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4159
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4163
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4169
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4173
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4177
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4181
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4185
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4205
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4209
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4213
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4217
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4231
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4235
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4239
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4243
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4247
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4251
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4264
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string("")
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4279
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4283
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4289
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4304
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4308
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4312
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4322
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4326
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4334
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4347
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4376
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4385
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4394
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4400
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4406
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4416
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4421
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4425
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4429
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4438
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4444
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4448
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4452
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4461
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4465
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4469
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4473
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4480
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4484
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4488
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4492
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4498
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4502
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4506
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = yyDollar[3].str
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = "cascaded"
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4569
		{
			yyVAL.str = ""
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = yyDollar[3].str
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4597
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4601
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4607
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4611
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4615
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4620
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = " header"
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = " manifest on"
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = " manifest off"
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = " overwrite on"
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = " overwrite off"
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = yyDollar[1].str
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = " optionally"
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4753
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4757
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4761
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4765
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4769
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4775
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4779
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4783
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4787
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4796
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4802
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4812
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4816
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4822
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4828
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4838
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4848
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4854
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4864
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4868
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4872
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4876
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4880
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = "charset"
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4915
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4917
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4925
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4927
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4935
		{
			yyVAL.empty = struct{}{}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.empty = struct{}{}
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.empty = struct{}{}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4943
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4952
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4959
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4963
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4986
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4996
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			decNesting(yylex)
		}
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5459
		{
			skipToEnd(yylex)
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5464
		{
			skipToEnd(yylex)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5468
		{
			skipToEnd(yylex)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5472
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
