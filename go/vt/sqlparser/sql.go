// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
	columnTypeOptions      *ColumnTypeOptions
	revertMigration        *RevertMigration
	alterMigration         *AlterMigration
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const COLLATION = 57611
const DATABASES = 57612
const SCHEMAS = 57613
const TABLES = 57614
const VITESS_METADATA = 57615
const VSCHEMA = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const EXTENDED = 57623
const KEYSPACES = 57624
const VITESS_KEYSPACES = 57625
const VITESS_SHARDS = 57626
const VITESS_TABLETS = 57627
const VITESS_MIGRATIONS = 57628
const CODE = 57629
const PRIVILEGES = 57630
const FUNCTION = 57631
const OPEN = 57632
const TRIGGERS = 57633
const EVENT = 57634
const USER = 57635
const NAMES = 57636
const CHARSET = 57637
const GLOBAL = 57638
const SESSION = 57639
const ISOLATION = 57640
const LEVEL = 57641
const READ = 57642
const WRITE = 57643
const ONLY = 57644
const REPEATABLE = 57645
const COMMITTED = 57646
const UNCOMMITTED = 57647
const SERIALIZABLE = 57648
const CURRENT_TIMESTAMP = 57649
const DATABASE = 57650
const CURRENT_DATE = 57651
const CURRENT_TIME = 57652
const LOCALTIME = 57653
const LOCALTIMESTAMP = 57654
const CURRENT_USER = 57655
const UTC_DATE = 57656
const UTC_TIME = 57657
const UTC_TIMESTAMP = 57658
const REPLACE = 57659
const CONVERT = 57660
const CAST = 57661
const SUBSTR = 57662
const SUBSTRING = 57663
const GROUP_CONCAT = 57664
const SEPARATOR = 57665
const TIMESTAMPADD = 57666
const TIMESTAMPDIFF = 57667
const MATCH = 57668
const AGAINST = 57669
const BOOLEAN = 57670
const LANGUAGE = 57671
const WITH = 57672
const QUERY = 57673
const EXPANSION = 57674
const WITHOUT = 57675
const VALIDATION = 57676
const UNUSED = 57677
const ARRAY = 57678
const CUME_DIST = 57679
const DESCRIPTION = 57680
const DENSE_RANK = 57681
const EMPTY = 57682
const EXCEPT = 57683
const FIRST_VALUE = 57684
const GROUPING = 57685
const GROUPS = 57686
const JSON_TABLE = 57687
const LAG = 57688
const LAST_VALUE = 57689
const LATERAL = 57690
const LEAD = 57691
const MEMBER = 57692
const NTH_VALUE = 57693
const NTILE = 57694
const OF = 57695
const OVER = 57696
const PERCENT_RANK = 57697
const RANK = 57698
const RECURSIVE = 57699
const ROW_NUMBER = 57700
const SYSTEM = 57701
const WINDOW = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const FORMAT = 57759
const TREE = 57760
const VITESS = 57761
const TRADITIONAL = 57762
const LOCAL = 57763
const LOW_PRIORITY = 57764
const NO_WRITE_TO_BINLOG = 57765
const LOGS = 57766
const ERROR = 57767
const GENERAL = 57768
const HOSTS = 57769
const OPTIMIZER_COSTS = 57770
const USER_RESOURCES = 57771
const SLOW = 57772
const CHANNEL = 57773
const RELAY = 57774
const EXPORT = 57775
const AVG_ROW_LENGTH = 57776
const CONNECTION = 57777
const CHECKSUM = 57778
const DELAY_KEY_WRITE = 57779
const ENCRYPTION = 57780
const ENGINE = 57781
const INSERT_METHOD = 57782
const MAX_ROWS = 57783
const MIN_ROWS = 57784
const PACK_KEYS = 57785
const PASSWORD = 57786
const FIXED = 57787
const DYNAMIC = 57788
const COMPRESSED = 57789
const REDUNDANT = 57790
const COMPACT = 57791
const ROW_FORMAT = 57792
const STATS_AUTO_RECALC = 57793
const STATS_PERSISTENT = 57794
const STATS_SAMPLE_PAGES = 57795
const STORAGE = 57796
const MEMORY = 57797
const DISK = 57798

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 931,
	-2, 91,
	-1, 45,
	1, 112,
	474, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	312, 118,
	-2, 325,
	-1, 53,
	34, 471,
	165, 471,
	177, 471,
	210, 485,
	211, 485,
	-2, 473,
	-1, 58,
	167, 495,
	-2, 493,
	-1, 84,
	56, 563,
	-2, 571,
	-1, 109,
	1, 113,
	474, 113,
	-2, 118,
	-1, 119,
	170, 230,
	171, 230,
	-2, 319,
	-1, 138,
	143, 118,
	259, 118,
	312, 118,
	-2, 334,
	-1, 579,
	150, 952,
	-2, 948,
	-1, 580,
	150, 953,
	-2, 949,
	-1, 599,
	56, 564,
	-2, 576,
	-1, 600,
	56, 565,
	-2, 577,
	-1, 621,
	118, 1294,
	-2, 84,
	-1, 622,
	118, 1176,
	-2, 85,
	-1, 628,
	118, 1226,
	-2, 925,
	-1, 765,
	118, 1113,
	-2, 922,
	-1, 800,
	176, 38,
	181, 38,
	-2, 241,
	-1, 881,
	1, 372,
	474, 372,
	-2, 118,
	-1, 1119,
	1, 268,
	474, 268,
	-2, 118,
	-1, 1197,
	170, 230,
	171, 230,
	-2, 319,
	-1, 1206,
	176, 39,
	181, 39,
	-2, 242,
	-1, 1419,
	150, 955,
	-2, 951,
	-1, 1511,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1532,
	1, 269,
	474, 269,
	-2, 118,
	-1, 1940,
	5, 819,
	18, 819,
	20, 819,
	32, 819,
	83, 819,
	-2, 603,
	-1, 2152,
	46, 893,
	-2, 891,
}

const yyPrivate = 57344

const yyLast = 28158

var yyAct = [...]int{
	579, 2220, 1992, 2233, 2152, 1853, 2197, 2161, 2081, 1743,
	2103, 1989, 83, 3, 1710, 1021, 538, 1595, 1456, 1529,
	1730, 1744, 1176, 1917, 940, 1920, 1826, 893, 1921, 1067,
	552, 521, 1807, 1562, 1181, 1808, 523, 769, 1508, 147,
	1567, 1932, 1879, 1413, 1074, 1670, 1806, 1569, 1645, 179,
	1405, 1319, 191, 1204, 486, 191, 920, 626, 1593, 133,
	502, 1547, 191, 1800, 592, 1111, 795, 1104, 1497, 1095,
	191, 1490, 601, 1072, 1458, 1077, 1097, 1439, 81, 33,
	1094, 514, 1382, 1059, 1222, 525, 957, 586, 776, 1822,
	1101, 773, 502, 1180, 1211, 502, 191, 502, 1473, 796,
	781, 801, 798, 1294, 830, 777, 797, 1110, 1513, 1108,
	938, 79, 1324, 1084, 887, 1558, 623, 110, 178, 150,
	111, 509, 1196, 116, 117, 1034, 785, 8, 1548, 7,
	808, 6, 1035, 1845, 1844, 1624, 78, 1867, 1868, 958,
	872, 1371, 1370, 2105, 180, 181, 182, 1369, 1368, 1367,
	1366, 1359, 512, 84, 513, 2189, 1453, 1454, 1708, 587,
	2149, 770, 608, 612, 2060, 112, 2127, 2126, 2076, 118,
	834, 2077, 958, 191, 833, 2239, 2194, 1660, 835, 1966,
	2232, 1182, 461, 80, 191, 510, 886, 2223, 1281, 191,
	86, 87, 88, 89, 90, 91, 2172, 1993, 1612, 2193,
	1896, 620, 1572, 2171, 2024, 968, 2139, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 787,
	627, 994, 1631, 811, 1947, 1948, 1630, 789, 1709, 112,
	788, 35, 1524, 1525, 72, 39, 40, 1946, 968, 1514,
	832, 790, 836, 837, 838, 1112, 1866, 1113, 1658, 177,
	1523, 812, 849, 846, 847, 913, 850, 851, 852, 853,
	171, 906, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 843, 1455, 848,
	912, 490, 1571, 936, 956, 113, 564, 135, 570, 571,
	568, 569, 583, 567, 566, 565, 155, 582, 112, 1791,
	964, 1541, 889, 572, 573, 107, 71, 185, 186, 900,
	901, 104, 791, 1855, 2174, 1416, 1360, 1361, 1362, 1774,
	2015, 500, 1773, 2013, 1358, 1775, 504, 145, 180, 181,
	182, 498, 134, 964, 489, 107, 172, 898, 1305, 1303,
	1304, 899, 900, 901, 1271, 878, 585, 1827, 1594, 914,
	152, 1627, 153, 1300, 927, 907, 929, 122, 123, 144,
	143, 170, 105, 180, 181, 182, 935, 107, 490, 99,
	1295, 2222, 882, 1849, 102, 873, 933, 101, 100, 1858,
	2190, 1850, 1639, 1307, 919, 1308, 1272, 1309, 1273, 1856,
	917, 918, 1299, 926, 928, 915, 916, 1857, 855, 176,
	854, 1297, 2123, 2071, 1596, 819, 1491, 1301, 828, 139,
	120, 146, 127, 119, 1880, 140, 141, 817, 827, 826,
	156, 489, 825, 478, 105, 2140, 824, 1190, 490, 823,
	161, 128, 477, 1298, 822, 821, 963, 960, 961, 962,
	967, 969, 966, 475, 965, 131, 129, 124, 125, 126,
	130, 959, 816, 1965, 1573, 121, 792, 829, 1882, 2072,
	1514, 191, 2237, 175, 132, 2240, 610, 106, 1629, 963,
	960, 961, 962, 967, 969, 966, 774, 965, 2170, 931,
	772, 489, 472, 109, 959, 879, 2209, 502, 502, 502,
	896, 484, 902, 903, 904, 905, 925, 106, 820, 924,
	930, 932, 774, 490, 1659, 502, 502, 1644, 810, 774,
	818, 1210, 1209, 937, 804, 923, 803, 888, 786, 950,
	1884, 614, 1888, 1859, 1883, 2162, 1881, 910, 2175, 106,
	1618, 1886, 515, 1711, 1713, 1312, 148, 810, 490, 934,
	1885, 845, 944, 839, 1614, 1816, 1626, 810, 1905, 1904,
	810, 1903, 784, 1887, 1889, 783, 489, 1647, 782, 73,
	1837, 885, 1646, 780, 460, 462, 464, 465, 183, 481,
	483, 491, 1006, 1007, 2156, 479, 480, 492, 466, 467,
	496, 495, 482, 191, 471, 468, 470, 476, 2044, 1945,
	142, 489, 474, 493, 1735, 1788, 1783, 810, 941, 942,
	1638, 1065, 136, 1637, 1647, 137, 1004, 897, 1678, 1646,
	2235, 502, 1530, 2236, 191, 2234, 191, 191, 1604, 502,
	1283, 1282, 1284, 1285, 1286, 502, 1519, 1088, 810, 994,
	1712, 1064, 1019, 1022, 953, 1689, 951, 1686, 952, 1784,
	891, 1770, 984, 623, 809, 994, 877, 972, 973, 971,
	813, 803, 921, 1469, 1093, 1900, 1325, 1354, 909, 1060,
	814, 1786, 881, 974, 1781, 974, 895, 2131, 1613, 831,
	911, 1930, 1296, 809, 1078, 1114, 1782, 954, 815, 1442,
	803, 806, 807, 809, 774, 844, 809, 94, 800, 804,
	880, 1037, 1039, 1041, 1043, 1045, 1047, 1048, 1038, 1040,
	1898, 1044, 1046, 1057, 1049, 971, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 494, 180, 181,
	182, 974, 166, 167, 168, 169, 874, 1440, 875, 973,
	971, 876, 95, 809, 1187, 487, 1789, 1787, 1611, 1609,
	803, 806, 807, 1066, 774, 819, 974, 627, 800, 804,
	488, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 595, 809, 994, 1685, 799, 922, 191,
	813, 803, 1326, 1172, 1006, 1007, 1006, 1007, 1796, 894,
	814, 817, 1950, 1183, 1184, 1185, 1186, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 1081, 502,
	994, 1206, 987, 988, 989, 990, 991, 984, 71, 1215,
	994, 1671, 1440, 1219, 1696, 2059, 502, 502, 1389, 502,
	1385, 502, 502, 2058, 502, 502, 502, 502, 502, 502,
	1971, 1804, 1387, 1388, 1386, 2224, 1202, 1606, 2214, 502,
	972, 973, 971, 191, 1255, 1606, 1907, 1785, 1216, 613,
	972, 973, 971, 2241, 1195, 1377, 1379, 1380, 974, 1268,
	174, 1610, 1214, 2225, 1803, 1576, 2215, 1378, 974, 1608,
	502, 1291, 1276, 1250, 1251, 1275, 1252, 1290, 191, 985,
	986, 987, 988, 989, 990, 991, 984, 1109, 191, 994,
	1318, 1171, 191, 518, 1908, 1188, 1189, 1663, 1664, 1665,
	1274, 1224, 1213, 1225, 1266, 1227, 1229, 1179, 191, 1233,
	1235, 1237, 1239, 1241, 1076, 191, 1192, 1193, 1191, 1205,
	1178, 2242, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 502, 502, 502, 1329, 1260, 1289, 1212, 1212, 615,
	616, 1333, 1257, 1335, 1336, 1337, 1338, 1471, 1340, 1321,
	1288, 1256, 1231, 1258, 1259, 1327, 1328, 191, 779, 1264,
	1265, 2227, 1355, 180, 181, 182, 2226, 1407, 1253, 1332,
	2216, 1278, 1474, 1475, 2205, 2094, 1339, 2056, 2032, 618,
	180, 181, 182, 1953, 975, 992, 993, 985, 986, 987,
	988, 989, 990, 991, 984, 1406, 1909, 994, 1684, 789,
	1313, 112, 788, 1813, 1409, 1801, 1683, 1654, 1383, 1287,
	1470, 180, 181, 182, 1622, 1777, 596, 1621, 502, 1322,
	515, 1331, 1279, 1408, 180, 181, 182, 1267, 1588, 1032,
	1277, 972, 973, 971, 1263, 972, 973, 971, 1410, 1411,
	1262, 1350, 1351, 1352, 1417, 1261, 1063, 1365, 1852, 974,
	80, 502, 502, 974, 972, 973, 971, 1978, 2208, 2121,
	1070, 1073, 191, 1384, 1428, 1431, 2120, 1423, 1991, 1805,
	1441, 1418, 974, 1978, 2168, 1829, 502, 1419, 1463, 82,
	180, 181, 182, 191, 1586, 1022, 502, 180, 181, 182,
	191, 1269, 191, 972, 973, 971, 1815, 1447, 1448, 1538,
	191, 191, 1978, 2157, 1978, 596, 1929, 502, 1978, 2129,
	502, 974, 1509, 1417, 541, 540, 543, 544, 545, 546,
	2039, 502, 1515, 542, 1515, 547, 2074, 596, 596, 1464,
	970, 623, 1420, 580, 623, 1606, 596, 2042, 596, 1476,
	1488, 1978, 1983, 1963, 1962, 1482, 1419, 1959, 1960, 1731,
	1542, 1484, 1543, 1544, 1545, 1546, 1959, 1958, 1534, 1533,
	1482, 596, 1514, 1846, 1175, 1831, 1824, 1825, 1554, 1555,
	1556, 1557, 1494, 596, 1731, 35, 502, 970, 596, 1607,
	191, 1175, 1174, 502, 1516, 192, 1516, 1537, 192, 1585,
	1587, 1512, 1518, 503, 1514, 192, 1549, 1550, 1551, 1486,
	1738, 35, 502, 192, 1564, 1120, 1119, 2061, 502, 1570,
	1918, 1517, 1215, 1764, 1215, 1521, 1520, 1493, 1494, 1929,
	1536, 1514, 1605, 1739, 1246, 503, 2130, 1535, 503, 192,
	503, 1978, 1961, 35, 1606, 627, 1494, 1522, 627, 1592,
	1701, 1700, 1482, 1929, 589, 1606, 1483, 1589, 1472, 2110,
	71, 2160, 502, 1451, 1406, 2062, 2063, 2064, 1363, 1406,
	1406, 1311, 1106, 1565, 794, 1602, 793, 1603, 1494, 71,
	2083, 1990, 1247, 1248, 1249, 1575, 71, 1581, 1582, 1583,
	2050, 1574, 1577, 1560, 1561, 1177, 1563, 1851, 1599, 1615,
	1559, 1553, 1552, 1293, 191, 1207, 1598, 1565, 191, 191,
	191, 191, 191, 811, 1617, 1601, 192, 1597, 71, 1619,
	1620, 1616, 191, 191, 191, 191, 1482, 192, 1203, 71,
	1173, 96, 192, 1810, 2065, 191, 177, 1854, 1809, 1243,
	2084, 812, 191, 1933, 1934, 1182, 2229, 2221, 1936, 1424,
	1425, 1212, 596, 1430, 1433, 1434, 1499, 1502, 1503, 1504,
	1500, 1918, 1501, 1505, 1820, 1649, 1650, 191, 502, 1819,
	1652, 1818, 1323, 1579, 1356, 1314, 1939, 1653, 1446, 2066,
	2067, 1449, 1450, 1810, 1244, 1245, 1499, 1502, 1503, 1504,
	1500, 1938, 1501, 1505, 1625, 1870, 1933, 1934, 983, 982,
	992, 993, 985, 986, 987, 988, 989, 990, 991, 984,
	1752, 1751, 994, 2211, 1642, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 1383, 2192, 994,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1757, 1910, 1503, 1504, 1720, 606, 602, 1372, 1373, 1374,
	1375, 1755, 606, 602, 1753, 1075, 1756, 2043, 1981, 1754,
	1657, 603, 191, 1729, 1728, 2180, 2177, 2213, 603, 2196,
	191, 103, 98, 1718, 2198, 2204, 2151, 2203, 1310, 1666,
	2153, 1719, 1384, 581, 1079, 1080, 605, 1814, 604, 841,
	840, 599, 600, 605, 191, 604, 1436, 2002, 1680, 1809,
	1068, 1865, 1426, 1427, 1717, 191, 191, 191, 191, 191,
	587, 1437, 1069, 1740, 943, 1839, 1724, 191, 1679, 173,
	1736, 191, 187, 184, 191, 191, 1695, 1838, 191, 191,
	191, 113, 1733, 1762, 2108, 1955, 1954, 1600, 1060, 515,
	1745, 1776, 1221, 1220, 1715, 1707, 1208, 2037, 1474, 1475,
	1584, 1467, 1317, 2122, 2078, 1507, 1723, 590, 591, 1795,
	1306, 1727, 1765, 1662, 593, 2218, 1767, 1734, 1732, 1726,
	2217, 2201, 2181, 2036, 1977, 1747, 1748, 1794, 1750, 1797,
	1798, 1799, 1779, 1590, 1758, 1746, 594, 1321, 1749, 82,
	191, 1528, 2035, 1763, 1913, 1731, 1768, 1690, 1771, 2231,
	2230, 502, 1687, 1089, 192, 1082, 2231, 502, 2154, 1952,
	502, 1780, 1215, 1570, 1468, 1792, 1793, 502, 589, 80,
	85, 77, 1, 473, 1452, 1058, 1811, 1802, 485, 1843,
	503, 503, 503, 2219, 1280, 1270, 1994, 191, 2080, 1834,
	1984, 1828, 1568, 802, 138, 1531, 1532, 1842, 503, 503,
	1566, 2164, 93, 1841, 767, 191, 92, 805, 908, 1195,
	1591, 2075, 1790, 1540, 1126, 1833, 1418, 1124, 1125, 1123,
	1128, 1127, 1419, 1122, 1357, 499, 1506, 1115, 1083, 842,
	463, 1964, 1353, 1623, 1840, 469, 1812, 1002, 1725, 502,
	1772, 624, 617, 1924, 2202, 1406, 2178, 2176, 2150, 1832,
	1861, 1860, 2104, 2179, 2148, 2212, 2195, 1539, 1466, 1071,
	1421, 1422, 2034, 1876, 1912, 1863, 1694, 1031, 1864, 1438,
	1878, 1098, 524, 1869, 1462, 502, 192, 1376, 539, 536,
	537, 1875, 1477, 1737, 1877, 976, 191, 522, 1891, 516,
	1675, 1676, 1090, 1498, 1496, 1890, 502, 1495, 1897, 1315,
	1102, 1935, 502, 502, 503, 1465, 1931, 192, 1919, 192,
	192, 1693, 503, 1096, 1481, 1628, 1848, 955, 503, 598,
	1876, 511, 97, 1435, 1928, 191, 2138, 1661, 2023, 597,
	1922, 61, 38, 506, 2188, 1745, 946, 607, 32, 31,
	30, 29, 28, 23, 1941, 22, 1943, 21, 1944, 20,
	19, 1937, 25, 18, 17, 16, 108, 48, 45, 1906,
	43, 1916, 115, 1942, 114, 46, 42, 883, 27, 26,
	15, 14, 1956, 1957, 13, 1972, 12, 191, 1949, 191,
	191, 191, 11, 10, 9, 502, 5, 1927, 4, 949,
	24, 1020, 2, 0, 0, 0, 0, 0, 191, 0,
	0, 1968, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1985, 1995, 502, 502, 502, 0,
	191, 0, 1979, 0, 1980, 0, 1570, 1988, 0, 2003,
	1381, 1987, 1982, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 0, 0,
	0, 2000, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 2008, 2009, 0, 2010, 1697, 0, 2012,
	0, 2014, 0, 551, 1969, 1970, 0, 0, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1443, 0, 503, 0, 0, 0, 0, 1721, 1722, 1073,
	0, 0, 2006, 2038, 0, 0, 0, 0, 0, 503,
	503, 2047, 503, 0, 503, 503, 0, 503, 503, 503,
	503, 503, 503, 2053, 0, 190, 1745, 0, 497, 2054,
	2033, 0, 503, 2046, 0, 190, 192, 0, 502, 502,
	0, 0, 0, 190, 0, 2068, 2052, 0, 0, 0,
	0, 502, 0, 0, 502, 0, 0, 0, 0, 0,
	611, 611, 0, 503, 0, 0, 0, 0, 0, 190,
	2087, 192, 0, 0, 0, 0, 0, 0, 2082, 0,
	2055, 192, 2057, 0, 0, 192, 0, 0, 0, 502,
	502, 502, 191, 0, 0, 0, 2085, 0, 0, 0,
	0, 192, 0, 502, 0, 502, 0, 0, 192, 0,
	2101, 502, 2107, 0, 2111, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 503, 503, 503, 2069, 2109, 2113,
	1922, 2086, 0, 191, 1922, 2118, 0, 2119, 0, 0,
	2079, 0, 0, 0, 502, 191, 190, 0, 2093, 1673,
	192, 2128, 2125, 1674, 2102, 0, 0, 190, 0, 0,
	0, 0, 190, 0, 1681, 1682, 0, 0, 0, 0,
	1688, 2115, 0, 1691, 1692, 0, 2147, 2117, 2097, 2099,
	2100, 1698, 0, 1699, 0, 0, 1702, 1703, 1704, 1705,
	1706, 502, 502, 0, 0, 2158, 2155, 0, 0, 2163,
	2116, 1922, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 2082, 2165, 502, 0, 2173,
	0, 502, 0, 1899, 2182, 0, 2184, 0, 0, 0,
	0, 0, 0, 2132, 2191, 0, 0, 0, 0, 0,
	0, 2200, 2199, 0, 503, 503, 0, 0, 1760, 1761,
	0, 1745, 0, 0, 2210, 192, 0, 0, 1914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2021, 503,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 503,
	0, 2228, 0, 192, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 192, 192, 2238, 0, 2027, 0, 0,
	503, 0, 0, 503, 0, 0, 0, 978, 0, 981,
	2187, 0, 0, 0, 503, 995, 996, 997, 998, 999,
	1000, 1001, 0, 979, 980, 977, 983, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 0, 0,
	994, 1667, 1668, 1669, 983, 982, 992, 993, 985, 986,
	987, 988, 989, 990, 991, 984, 2026, 2020, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 192, 0, 0, 503, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 0,
	0, 994, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 503, 0, 983, 982, 992, 993, 985, 986, 987,
	988, 989, 990, 991, 984, 1873, 1874, 994, 2019, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 0, 0, 2048, 0, 0,
	2049, 0, 0, 2051, 0, 0, 983, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 0, 0,
	994, 1925, 2018, 0, 0, 0, 0, 192, 0, 0,
	0, 192, 192, 192, 192, 192, 0, 0, 0, 0,
	0, 0, 1940, 0, 0, 192, 192, 192, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 192, 0, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 503, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 2106, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 190,
	1105, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 1871, 1872, 0, 0, 0,
	2016, 2017, 0, 0, 0, 0, 0, 0, 0, 501,
	1892, 1893, 0, 1894, 1895, 192, 2031, 0, 0, 0,
	0, 0, 0, 192, 1901, 1902, 0, 0, 0, 0,
	0, 0, 0, 2040, 2041, 0, 0, 2045, 0, 0,
	0, 625, 0, 0, 771, 0, 778, 192, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 192, 192,
	192, 192, 192, 0, 0, 0, 1061, 0, 0, 0,
	192, 0, 0, 0, 192, 1672, 0, 192, 192, 0,
	113, 192, 192, 192, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 2073, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 1951, 0, 994,
	0, 0, 190, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 1778, 0, 0, 0, 584, 0, 2098, 0,
	0, 0, 0, 192, 0, 152, 0, 153, 0, 0,
	0, 0, 0, 0, 503, 1218, 170, 0, 0, 0,
	503, 0, 775, 503, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 1218, 0, 0, 0, 0, 190, 0, 0, 0,
	192, 0, 0, 0, 2004, 0, 0, 0, 2134, 2135,
	2136, 2137, 0, 2141, 0, 2142, 2143, 2144, 192, 2145,
	2146, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 1320, 0, 0, 0, 871,
	0, 0, 503, 0, 0, 0, 0, 0, 2169, 0,
	884, 190, 0, 0, 0, 890, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 1341, 1342, 190, 190, 190,
	190, 190, 190, 190, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 2206, 2207, 0, 0, 503,
	190, 0, 0, 0, 0, 503, 503, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2088, 2089, 2090, 2091, 2092, 0, 0, 0,
	2095, 2096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 1320, 0, 0, 0, 611, 611, 0,
	0, 611, 611, 611, 0, 0, 0, 1218, 0, 0,
	192, 0, 192, 192, 192, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 611, 611, 611, 611,
	611, 192, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	503, 503, 0, 192, 0, 0, 190, 0, 0, 0,
	0, 0, 1320, 190, 0, 190, 625, 625, 625, 171,
	0, 0, 0, 190, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 947, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 2185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 154, 151, 157, 158, 159, 160, 162, 163,
	164, 165, 0, 0, 0, 0, 0, 166, 167, 168,
	169, 0, 0, 190, 0, 0, 0, 892, 0, 152,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 503, 503, 0, 0, 553, 34, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 503, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 0, 0, 0, 1116, 0, 0, 0, 0, 0,
	34, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 503, 503, 192, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 503, 0, 503, 161,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 190, 0, 0,
	0, 190, 190, 190, 190, 190, 0, 503, 192, 0,
	0, 0, 0, 0, 0, 190, 190, 190, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	1092, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 503, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	503, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 611,
	0, 1217, 0, 0, 0, 1223, 1223, 0, 1223, 0,
	1223, 1223, 0, 1232, 1223, 1223, 1223, 1223, 1223, 611,
	0, 0, 0, 0, 0, 0, 1217, 1217, 771, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 611, 190, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 1218, 190, 190,
	190, 190, 190, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 190, 0, 0, 190, 190, 0,
	0, 190, 1769, 1320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 625, 625, 0, 0, 149, 154, 151, 157, 158,
	159, 160, 162, 163, 164, 165, 0, 0, 0, 0,
	0, 166, 167, 168, 169, 0, 0, 0, 0, 1254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 1320, 0,
	0, 0, 0, 0, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 625,
	190, 0, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 1334, 0, 1217, 0, 0, 0, 0, 190, 0,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 0, 0, 0,
	1444, 1445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 1103, 0, 1478, 0, 0, 0, 0,
	0, 0, 939, 939, 939, 1086, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 34, 0, 0, 0, 625, 0, 0, 625,
	0, 0, 0, 0, 0, 1003, 1005, 0, 0, 190,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 190, 1033,
	1036, 1036, 1036, 1042, 1036, 1036, 1042, 1036, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 778, 0, 0, 0, 0,
	1062, 0, 1580, 0, 34, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 1485,
	0, 771, 1821, 0, 0, 0, 1489, 778, 1492, 0,
	190, 1099, 190, 190, 190, 0, 113, 1511, 135, 0,
	0, 1218, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 190, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1194, 0, 0, 0,
	0, 771, 0, 190, 0, 0, 0, 0, 145, 0,
	113, 0, 135, 134, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 153, 0, 0, 0, 0, 1198, 1199,
	144, 143, 170, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1218, 0, 152, 0, 153, 0, 0,
	0, 0, 1198, 1199, 144, 143, 170, 0, 0, 0,
	139, 1200, 146, 0, 1197, 0, 140, 141, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 1656, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 1200, 146, 0, 1197, 0,
	140, 141, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	1103, 0, 0, 0, 1632, 1633, 1634, 1635, 1636, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 1640, 1641,
	1103, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 148, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 939, 939, 939, 0,
	0, 0, 0, 136, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1143, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 1217, 0, 1830, 0, 0, 1823,
	0, 0, 0, 0, 625, 0, 1835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 149, 154, 151,
	157, 158, 159, 160, 162, 163, 164, 165, 0, 0,
	0, 0, 0, 166, 167, 168, 169, 0, 0, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 149, 154, 151, 157, 158, 159, 160, 162, 163,
	164, 165, 0, 0, 0, 1510, 1817, 166, 167, 168,
	169, 0, 0, 1144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 0, 1217, 0,
	0, 1926, 1223, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 1160, 1161, 1162, 1163, 1164,
	1165, 1862, 1166, 1167, 1168, 1169, 1170, 1145, 1146, 1147,
	1148, 1129, 1130, 1158, 0, 1132, 0, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 1217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 1997, 1998, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	35, 36, 37, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 41, 67, 68, 0, 65,
	69, 0, 0, 0, 0, 0, 66, 0, 0, 1217,
	0, 0, 0, 1973, 0, 1974, 1975, 1976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 54, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 1823, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 588, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1823,
	1823, 0, 0, 0, 0, 0, 0, 44, 47, 50,
	49, 52, 2112, 64, 2114, 0, 70, 0, 0, 0,
	1823, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	75, 74, 0, 0, 62, 63, 51, 0, 0, 1099,
	0, 0, 0, 1823, 0, 0, 1741, 1742, 0, 0,
	1099, 1099, 1099, 1099, 1099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1099,
	0, 0, 0, 1099, 0, 55, 56, 0, 57, 58,
	59, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 2183, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2133, 0, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2022, 0, 0, 0, 0, 0, 0, 2028,
	2029, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1923, 0, 34, 0, 1923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 736, 34, 2159,
	685, 752, 656, 674, 761, 676, 679, 719, 636, 698,
	336, 671, 0, 660, 632, 667, 633, 658, 687, 246,
	691, 655, 738, 701, 751, 294, 0, 638, 661, 350,
	721, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 758, 298, 708, 0, 397,
	321, 0, 0, 0, 689, 741, 696, 732, 684, 720,
	645, 707, 753, 672, 716, 754, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 2166,
	2167, 0, 0, 0, 0, 0, 221, 0, 228, 713,
	748, 669, 715, 242, 282, 248, 241, 413, 718, 764,
	631, 710, 0, 634, 637, 760, 744, 664, 665, 0,
	0, 0, 0, 0, 0, 0, 688, 697, 729, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	706, 0, 0, 0, 641, 635, 0, 0, 0, 0,
	686, 0, 0, 0, 644, 0, 663, 730, 0, 629,
	268, 639, 322, 0, 734, 743, 683, 444, 747, 681,
	680, 750, 725, 642, 740, 675, 293, 640, 290, 194,
	209, 0, 673, 332, 371, 377, 739, 659, 668, 233,
	666, 375, 346, 430, 217, 258, 368, 351, 373, 705,
	723, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 654, 735,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 727, 763,
	345, 376, 223, 432, 396, 649, 653, 647, 648, 699,
	700, 650, 755, 756, 757, 731, 643, 0, 651, 652,
	0, 737, 745, 746, 704, 193, 206, 296, 759, 365,
	261, 457, 439, 435, 630, 646, 239, 657, 0, 0,
	670, 677, 678, 690, 692, 693, 694, 695, 703, 711,
	712, 714, 722, 724, 726, 728, 733, 742, 762, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	702, 709, 306, 255, 272, 281, 717, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 749, 736, 0, 0, 685,
	752, 656, 674, 761, 676, 679, 719, 636, 698, 336,
	671, 0, 660, 632, 667, 633, 658, 687, 246, 691,
	655, 738, 701, 751, 294, 0, 638, 661, 350, 721,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 758, 298, 708, 0, 397, 321,
	0, 0, 0, 689, 741, 696, 732, 684, 720, 645,
	707, 753, 672, 716, 754, 284, 230, 198, 333, 398,
	260, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 713, 748,
	669, 715, 242, 282, 248, 241, 413, 718, 764, 631,
	710, 0, 634, 637, 760, 744, 664, 665, 0, 0,
	0, 0, 0, 0, 0, 688, 697, 729, 682, 0,
	0, 0, 0, 0, 0, 1915, 0, 662, 0, 706,
	0, 0, 0, 641, 635, 0, 0, 0, 0, 686,
	0, 0, 0, 644, 0, 663, 730, 0, 629, 268,
	639, 322, 0, 734, 743, 683, 444, 747, 681, 680,
	750, 725, 642, 740, 675, 293, 640, 290, 194, 209,
	0, 673, 332, 371, 377, 739, 659, 668, 233, 666,
	375, 346, 430, 217, 258, 368, 351, 373, 705, 723,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 654, 735, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 727, 763, 345,
	376, 223, 432, 396, 649, 653, 647, 648, 699, 700,
	650, 755, 756, 757, 731, 643, 0, 651, 652, 0,
	737, 745, 746, 704, 193, 206, 296, 759, 365, 261,
	457, 439, 435, 630, 646, 239, 657, 0, 0, 670,
	677, 678, 690, 692, 693, 694, 695, 703, 711, 712,
	714, 722, 724, 726, 728, 733, 742, 762, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 702,
	709, 306, 255, 272, 281, 717, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 749, 736, 0, 0, 685, 752,
	656, 674, 761, 676, 679, 719, 636, 698, 336, 671,
	0, 660, 632, 667, 633, 658, 687, 246, 691, 655,
	738, 701, 751, 294, 0, 638, 661, 350, 721, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 758, 298, 708, 0, 397, 321, 0,
	0, 0, 689, 741, 696, 732, 684, 720, 645, 707,
	753, 672, 716, 754, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 713, 748, 669,
	715, 242, 282, 248, 241, 413, 718, 764, 631, 710,
	0, 634, 637, 760, 744, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 688, 697, 729, 682, 0, 0,
	0, 0, 0, 0, 1770, 0, 662, 0, 706, 0,
	0, 0, 641, 635, 0, 0, 0, 0, 686, 0,
	0, 0, 644, 0, 663, 730, 0, 629, 268, 639,
	322, 0, 734, 743, 683, 444, 747, 681, 680, 750,
	725, 642, 740, 675, 293, 640, 290, 194, 209, 0,
	673, 332, 371, 377, 739, 659, 668, 233, 666, 375,
	346, 430, 217, 258, 368, 351, 373, 705, 723, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 654, 735, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 727, 763, 345, 376,
	223, 432, 396, 649, 653, 647, 648, 699, 700, 650,
	755, 756, 757, 731, 643, 0, 651, 652, 0, 737,
	745, 746, 704, 193, 206, 296, 759, 365, 261, 457,
	439, 435, 630, 646, 239, 657, 0, 0, 670, 677,
	678, 690, 692, 693, 694, 695, 703, 711, 712, 714,
	722, 724, 726, 728, 733, 742, 762, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 702, 709,
	306, 255, 272, 281, 717, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 749, 736, 0, 0, 685, 752, 656,
	674, 761, 676, 679, 719, 636, 698, 336, 671, 0,
	660, 632, 667, 633, 658, 687, 246, 691, 655, 738,
	701, 751, 294, 0, 638, 661, 350, 721, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 758, 298, 708, 0, 397, 321, 0, 0,
	0, 689, 741, 696, 732, 684, 720, 645, 707, 753,
	672, 716, 754, 284, 230, 198, 333, 398, 260, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 713, 748, 669, 715,
	242, 282, 248, 241, 413, 718, 764, 631, 710, 0,
	634, 637, 760, 744, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 688, 697, 729, 682, 0, 0, 0,
	0, 0, 0, 1487, 0, 662, 0, 706, 0, 0,
	0, 641, 635, 0, 0, 0, 0, 686, 0, 0,
	0, 644, 0, 663, 730, 0, 629, 268, 639, 322,
	0, 734, 743, 683, 444, 747, 681, 680, 750, 725,
	642, 740, 675, 293, 640, 290, 194, 209, 0, 673,
	332, 371, 377, 739, 659, 668, 233, 666, 375, 346,
	430, 217, 258, 368, 351, 373, 705, 723, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 654, 735, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 727, 763, 345, 376, 223,
	432, 396, 649, 653, 647, 648, 699, 700, 650, 755,
	756, 757, 731, 643, 0, 651, 652, 0, 737, 745,
	746, 704, 193, 206, 296, 759, 365, 261, 457, 439,
	435, 630, 646, 239, 657, 0, 0, 670, 677, 678,
	690, 692, 693, 694, 695, 703, 711, 712, 714, 722,
	724, 726, 728, 733, 742, 762, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 702, 709, 306,
	255, 272, 281, 717, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 749, 736, 0, 0, 685, 752, 656, 674,
	761, 676, 679, 719, 636, 698, 336, 671, 0, 660,
	632, 667, 633, 658, 687, 246, 691, 655, 738, 701,
	751, 294, 0, 638, 661, 350, 721, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 758, 298, 708, 0, 397, 321, 0, 0, 0,
	689, 741, 696, 732, 684, 720, 645, 707, 753, 672,
	716, 754, 284, 230, 198, 333, 398, 260, 71, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 713, 748, 669, 715, 242,
	282, 248, 241, 413, 718, 764, 631, 710, 0, 634,
	637, 760, 744, 664, 665, 0, 0, 0, 0, 0,
	0, 0, 688, 697, 729, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 706, 0, 0, 0,
	641, 635, 0, 0, 0, 0, 686, 0, 0, 0,
	644, 0, 663, 730, 0, 629, 268, 639, 322, 0,
	734, 743, 683, 444, 747, 681, 680, 750, 725, 642,
	740, 675, 293, 640, 290, 194, 209, 0, 673, 332,
	371, 377, 739, 659, 668, 233, 666, 375, 346, 430,
	217, 258, 368, 351, 373, 705, 723, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 654, 735, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 727, 763, 345, 376, 223, 432,
	396, 649, 653, 647, 648, 699, 700, 650, 755, 756,
	757, 731, 643, 0, 651, 652, 0, 737, 745, 746,
	704, 193, 206, 296, 759, 365, 261, 457, 439, 435,
	630, 646, 239, 657, 0, 0, 670, 677, 678, 690,
	692, 693, 694, 695, 703, 711, 712, 714, 722, 724,
	726, 728, 733, 742, 762, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 702, 709, 306, 255,
	272, 281, 717, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 749, 736, 0, 0, 685, 752, 656, 674, 761,
	676, 679, 719, 636, 698, 336, 671, 0, 660, 632,
	667, 633, 658, 687, 246, 691, 655, 738, 701, 751,
	294, 0, 638, 661, 350, 721, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	758, 298, 708, 0, 397, 321, 0, 0, 0, 689,
	741, 696, 732, 684, 720, 645, 707, 753, 672, 716,
	754, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 713, 748, 669, 715, 242, 282,
	248, 241, 413, 718, 764, 631, 710, 0, 634, 637,
	760, 744, 664, 665, 0, 0, 0, 0, 0, 0,
	0, 688, 697, 729, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 706, 0, 0, 0, 641,
	635, 0, 0, 0, 0, 686, 0, 0, 0, 644,
	0, 663, 730, 0, 629, 268, 639, 322, 0, 734,
	743, 683, 444, 747, 681, 680, 750, 725, 642, 740,
	675, 293, 640, 290, 194, 209, 0, 673, 332, 371,
	377, 739, 659, 668, 233, 666, 375, 346, 430, 217,
	258, 368, 351, 373, 705, 723, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 654, 735, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 727, 763, 345, 376, 223, 432, 396,
	649, 653, 647, 648, 699, 700, 650, 755, 756, 757,
	731, 643, 0, 651, 652, 0, 737, 745, 746, 704,
	193, 206, 296, 759, 365, 261, 457, 439, 435, 630,
	646, 239, 657, 0, 0, 670, 677, 678, 690, 692,
	693, 694, 695, 703, 711, 712, 714, 722, 724, 726,
	728, 733, 742, 762, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 702, 709, 306, 255, 272,
	281, 717, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	749, 736, 0, 0, 685, 752, 656, 674, 761, 676,
	679, 719, 636, 698, 336, 671, 0, 660, 632, 667,
	633, 658, 687, 246, 691, 655, 738, 701, 751, 294,
	0, 638, 661, 350, 721, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 758,
	298, 708, 0, 397, 321, 0, 0, 0, 689, 741,
	696, 732, 684, 720, 645, 707, 753, 672, 716, 754,
	284, 230, 198, 333, 398, 260, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 713, 748, 669, 715, 242, 282, 248,
	241, 413, 718, 764, 631, 710, 0, 634, 637, 760,
	744, 664, 665, 0, 0, 0, 0, 0, 0, 0,
	688, 697, 729, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 706, 0, 0, 0, 641, 635,
	0, 0, 0, 0, 686, 0, 0, 0, 644, 0,
	663, 730, 0, 629, 268, 639, 322, 0, 734, 743,
	683, 444, 747, 681, 680, 750, 725, 642, 740, 675,
	293, 640, 290, 194, 209, 0, 673, 332, 371, 377,
	739, 659, 668, 233, 666, 375, 346, 430, 217, 258,
	368, 351, 373, 705, 723, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 766, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 654, 735, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 628, 765, 622, 621,
	291, 300, 727, 763, 345, 376, 223, 432, 396, 649,
	653, 647, 648, 699, 700, 650, 755, 756, 757, 731,
	643, 0, 651, 652, 0, 737, 745, 746, 704, 193,
	206, 296, 759, 365, 261, 457, 439, 435, 630, 646,
	239, 657, 0, 0, 670, 677, 678, 690, 692, 693,
	694, 695, 703, 711, 712, 714, 722, 724, 726, 728,
	733, 742, 762, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 702, 709, 306, 255, 272, 281,
	717, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 749,
	736, 0, 0, 685, 752, 656, 674, 761, 676, 679,
	719, 636, 698, 336, 671, 0, 660, 632, 667, 633,
	658, 687, 246, 691, 655, 738, 701, 751, 294, 0,
	638, 661, 350, 721, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 758, 298,
	708, 0, 397, 321, 0, 0, 0, 689, 741, 696,
	732, 684, 720, 645, 707, 753, 672, 716, 754, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 713, 748, 669, 715, 242, 282, 248, 241,
	413, 718, 764, 631, 710, 0, 634, 637, 760, 744,
	664, 665, 0, 0, 0, 0, 0, 0, 0, 688,
	697, 729, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 706, 0, 0, 0, 641, 635, 0,
	0, 0, 0, 686, 0, 0, 0, 644, 0, 663,
	730, 0, 629, 268, 639, 322, 0, 734, 743, 683,
	444, 747, 681, 680, 750, 725, 642, 740, 675, 293,
	640, 290, 194, 209, 0, 673, 332, 371, 377, 739,
	659, 668, 233, 666, 375, 346, 430, 217, 258, 368,
	351, 373, 705, 723, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 1107, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 766, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 654, 735, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 628, 765, 622, 621, 291,
	300, 727, 763, 345, 376, 223, 432, 396, 649, 653,
	647, 648, 699, 700, 650, 755, 756, 757, 731, 643,
	0, 651, 652, 0, 737, 745, 746, 704, 193, 206,
	296, 759, 365, 261, 457, 439, 435, 630, 646, 239,
	657, 0, 0, 670, 677, 678, 690, 692, 693, 694,
	695, 703, 711, 712, 714, 722, 724, 726, 728, 733,
	742, 762, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 702, 709, 306, 255, 272, 281, 717,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 749, 736,
	0, 0, 685, 752, 656, 674, 761, 676, 679, 719,
	636, 698, 336, 671, 0, 660, 632, 667, 633, 658,
	687, 246, 691, 655, 738, 701, 751, 294, 0, 638,
	661, 350, 721, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 758, 298, 708,
	0, 397, 321, 0, 0, 0, 689, 741, 696, 732,
	684, 720, 645, 707, 753, 672, 716, 754, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 713, 748, 669, 715, 242, 282, 248, 241, 413,
	718, 764, 631, 710, 0, 634, 637, 760, 744, 664,
	665, 0, 0, 0, 0, 0, 0, 0, 688, 697,
	729, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 706, 0, 0, 0, 641, 635, 0, 0,
	0, 0, 686, 0, 0, 0, 644, 0, 663, 730,
	0, 629, 268, 639, 322, 0, 734, 743, 683, 444,
	747, 681, 680, 750, 725, 642, 740, 675, 293, 640,
	290, 194, 209, 0, 673, 332, 371, 377, 739, 659,
	668, 233, 666, 375, 346, 430, 217, 258, 368, 351,
	373, 705, 723, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 619, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 766, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	654, 735, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 628, 765, 622, 621, 291, 300,
	727, 763, 345, 376, 223, 432, 396, 649, 653, 647,
	648, 699, 700, 650, 755, 756, 757, 731, 643, 0,
	651, 652, 0, 737, 745, 746, 704, 193, 206, 296,
	759, 365, 261, 457, 439, 435, 630, 646, 239, 657,
	0, 0, 670, 677, 678, 690, 692, 693, 694, 695,
	703, 711, 712, 714, 722, 724, 726, 728, 733, 742,
	762, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 702, 709, 306, 255, 272, 281, 717, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	1414, 0, 520, 0, 0, 0, 246, 0, 519, 0,
	0, 0, 294, 0, 0, 1415, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 517, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 609, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 520, 0, 0,
	0, 246, 0, 519, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 1526, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 0, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 1527, 242, 282, 248, 241, 413,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 577, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 576, 0, 0, 444,
	0, 0, 574, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 564, 575, 570,
	571, 568, 569, 0, 567, 566, 565, 578, 556, 557,
	558, 559, 561, 0, 572, 573, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 520, 0, 0, 0, 246, 0, 519, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 596, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 517, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 520, 0, 0,
	0, 246, 0, 519, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 0, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 609, 0,
	0, 0, 577, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 576, 0, 0, 444,
	0, 0, 574, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 564, 575, 570,
	571, 568, 569, 0, 567, 566, 565, 578, 556, 557,
	558, 559, 561, 0, 572, 573, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 520, 0, 0, 0, 246, 0, 519, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 1432, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 517, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 609, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 520, 0, 0,
	0, 246, 0, 519, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 0, 180, 181, 182,
	541, 1429, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 609, 0,
	0, 0, 577, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 576, 0, 0, 444,
	0, 0, 574, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 564, 575, 570,
	571, 568, 569, 0, 567, 566, 565, 578, 556, 557,
	558, 559, 561, 0, 572, 573, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 520, 0, 0, 0, 246,
	0, 519, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 563, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 71, 0, 0, 180, 181, 182, 541, 540,
	543, 544, 545, 546, 0, 0, 221, 542, 228, 547,
	548, 549, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 517, 534, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	577, 0, 533, 0, 0, 526, 527, 529, 528, 530,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 576, 0, 0, 444, 0, 0,
	574, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 564, 575, 570, 571, 568,
	569, 0, 567, 566, 565, 578, 556, 557, 558, 559,
	561, 0, 572, 573, 560, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	520, 0, 0, 0, 246, 0, 519, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	563, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 71, 0, 0,
	180, 181, 182, 541, 540, 543, 544, 545, 546, 0,
	0, 221, 542, 228, 547, 548, 549, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 517, 534, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 0, 577, 0, 533, 0, 0,
	526, 527, 529, 528, 530, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 576,
	0, 0, 444, 0, 0, 574, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	564, 575, 570, 571, 568, 569, 0, 567, 566, 565,
	578, 556, 557, 558, 559, 561, 0, 572, 573, 560,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 563, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 71, 0, 0, 180, 181, 182, 541, 540,
	543, 544, 545, 546, 0, 0, 221, 542, 228, 547,
	548, 549, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 534, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	577, 0, 533, 0, 0, 526, 527, 529, 528, 530,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 576, 0, 0, 444, 0, 0,
	574, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 2186,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 564, 575, 570, 571, 568,
	569, 0, 567, 566, 565, 578, 556, 557, 558, 559,
	561, 0, 572, 573, 560, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	563, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 71, 0, 596,
	180, 181, 182, 541, 540, 543, 544, 545, 546, 0,
	0, 221, 542, 228, 547, 548, 549, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 534, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 0, 577, 0, 533, 0, 0,
	526, 527, 529, 528, 530, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 576,
	0, 0, 444, 0, 0, 574, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	564, 575, 570, 571, 568, 569, 0, 567, 566, 565,
	578, 556, 557, 558, 559, 561, 0, 572, 573, 560,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 563, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 71, 0, 0, 180, 181, 182, 541, 540,
	543, 544, 545, 546, 0, 0, 221, 542, 228, 547,
	548, 549, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 534, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	577, 0, 533, 0, 0, 526, 527, 529, 528, 530,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 576, 0, 0, 444, 0, 0,
	574, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 564, 575, 570, 571, 568,
	569, 0, 567, 566, 565, 578, 556, 557, 558, 559,
	561, 0, 572, 573, 560, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	810, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 809, 444, 0, 0,
	0, 0, 0, 0, 806, 807, 293, 774, 290, 194,
	209, 800, 804, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 1085,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 1087, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 972, 973, 971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 71, 0, 596, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 1459, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 1461, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 1457, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	768, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	774, 290, 194, 209, 772, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 1459, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 1461, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 71, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 1479, 0, 0, 1480, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 1118, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 1117, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 596, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 71, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	1461, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 1087, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 1364,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 1242, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 1240, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 1238, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 1236, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 1234, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 1230, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 1228, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 336, 0, 1226, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	350, 0, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 0, 298, 0, 0,
	397, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	0, 0, 0, 0, 242, 282, 248, 241, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 322, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 290,
	194, 209, 0, 0, 332, 371, 377, 0, 0, 0,
	233, 0, 375, 346, 430, 217, 258, 368, 351, 373,
	0, 0, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 213, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 0,
	0, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 327, 214, 277, 395, 291, 300, 0,
	0, 345, 376, 223, 432, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 206, 296, 0,
	365, 261, 457, 439, 435, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 0, 0, 306, 255, 272, 281, 0, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 350, 0, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 0, 298, 0, 0, 397, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 230, 198, 333, 398, 260, 1201, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 0, 0, 0, 0, 242,
	282, 248, 241, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 322, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 290, 194, 209, 0, 0, 332,
	371, 377, 0, 0, 0, 233, 0, 375, 346, 430,
	217, 258, 368, 351, 373, 0, 0, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 0, 0, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 0, 0, 345, 376, 223, 432,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 206, 296, 0, 365, 261, 457, 439, 435,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 0, 0, 306, 255,
	272, 281, 0, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 1100, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 1091, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 948, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 507, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 188, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243,
}

var yyPact = [...]int{
	4404, -1000, -338, 1604, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1563, 1227, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 606, 1240, 204, 1491, 255, 172, 896, 404,
	142, 27229, 400, 279, 27684, -1000, 98, -1000, 83, 27684,
	90, 26774, -1000, -1000, -286, 12636, 1432, 8, 3, 27684,
	119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1238,
	1526, 1536, 1559, 1045, 1421, -1000, 10803, 10803, 353, 353,
	353, 8983, -1000, -1000, 16744, 27684, 27684, 1249, 399, 896,
	393, 390, 387, 349, -115, -1000, -1000, -1000, -1000, 1491,
	-1000, -1000, 169, -1000, 259, 1184, -1000, 1182, -1000, 568,
	479, 253, 311, 299, 236, 235, 230, 227, 223, 220,
	219, 209, 261, -1000, 551, 551, -177, -181, 3004, 344,
	344, 344, 376, 1446, 1445, -1000, 518, -1000, 551, 551,
	109, 551, 551, 551, 551, 193, 191, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 27684, -1000, 161, 573, 257, 572, 1491, 163,
	-1000, -1000, -1000, 27684, 397, 896, 348, 348, 27684, -1000,
	490, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27684, 653, 653, 48, 653, 653, 653, 653, 51, 493,
	-9, -1000, 45, 185, 180, 174, 640, 190, 60, -1000,
	-1000, 165, 640, 77, -1000, 653, 7107, 7107, 7107, -1000,
	1473, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 375,
	-1000, -1000, -1000, -1000, 27684, 26319, 225, 559, -1000, -1000,
	-1000, -5, -1000, -1000, 1048, 733, -1000, 12636, 2137, 1188,
	1188, -1000, -1000, 421, -1000, -1000, 14001, 14001, 14001, 14001,
	14001, 14001, 14001, 14001, 14001, 14001, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1188, 482, -1000, 12181, 1188, 1188, 1188, 1188, 1188, 1188,
	1188, 1188, 12636, 1188, 1188, 1188, 1188, 1188, 1188, 1188,
	1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, -1000,
	-1000, -1000, 27684, -1000, 1188, 958, 1563, -1000, 1227, -1000,
	-1000, -1000, 1470, 12636, 12636, 1563, -1000, 1389, 10803, -1000,
	-1000, 1414, -1000, -1000, -1000, -1000, -1000, 704, 1583, -1000,
	15366, 477, 1581, 25864, -1000, 19487, 25409, 1180, 8514, -70,
	-1000, -1000, -1000, 557, 18577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1473, 1123, 27684, -1000,
	-1000, 4035, 896, -1000, 1239, -1000, 1099, -1000, 1204, 161,
	349, 1261, 896, 896, 896, 896, 624, -1000, -1000, -1000,
	551, 551, 231, 255, 3750, -1000, -1000, -1000, 24947, 1237,
	896, -1000, 1214, -1000, 1507, 341, 521, 521, 896, -1000,
	-1000, 27684, 896, 1504, 1503, 27684, 27684, -1000, 24492, -1000,
	24037, 23582, 863, 27684, 23127, 22672, 22217, 21762, 21307, -1000,
	1299, -1000, 1194, -1000, -1000, -1000, 27684, 27684, 27684, 22,
	-1000, -1000, 27684, 896, -1000, -1000, 862, 853, 551, 551,
	846, 957, 952, 946, 551, 551, 815, 939, 1003, 162,
	811, 786, 783, 941, 934, 158, 920, 847, 782, 27684,
	1212, -1000, 154, 554, 196, 228, 189, 27684, 110, 1529,
	166, 1491, 1427, 1179, 368, 348, 1292, 27684, 1518, 896,
	-1000, 7576, -1000, -1000, 931, 12636, -1000, 644, 640, 640,
	-1000, -1000, -1000, -1000, -1000, -1000, 653, 27684, 644, -1000,
	-1000, -1000, 640, 653, 27684, 653, 653, 653, 653, 640,
	653, 27684, 27684, 27684, 27684, 27684, 27684, 27684, 27684, 27684,
	7107, 7107, 7107, 531, 653, -1000, 1291, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 88, -1000, -1000, -1000, -1000, -1000,
	1604, -1000, -1000, -1000, -119, 1176, 20852, -1000, -291, -292,
	-293, -294, -1000, -1000, -1000, -299, -300, -1000, -1000, -1000,
	12636, 12636, 12636, 12636, 757, 538, 14001, 727, 706, 14001,
	14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001,
	14001, 14001, 14001, 14001, 879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 896, -1000, 1602, 1027, 1027, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 14456, 9438, 7576,
	1045, 1095, 1563, 10803, 10803, 12636, 12636, 11713, 11258, 10803,
	1464, 613, 733, 27684, -1000, -1000, 13546, -1000, -1000, -1000,
	-1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27684, 27684, 10803, 10803, 10803, 10803, 10803, -1000, 1171, -1000,
	-161, 16289, 12636, -1000, 1536, 1045, 1414, 1514, 1594, 525,
	928, 1166, -1000, 947, 1536, 18122, 1234, -1000, 1414, -1000,
	-1000, -1000, 27684, -1000, -1000, 20397, -1000, -1000, 6638, 27684,
	207, 27684, -1000, 1186, 1283, -1000, -1000, -1000, 1522, 17667,
	27684, 1112, 1110, -1000, -1000, 476, 8045, -70, -1000, 8045,
	1155, -1000, -66, -86, 9893, 469, -1000, -1000, -1000, 3004,
	14911, 1016, -1000, 17, -1000, -1000, -1000, 1204, -1000, 1204,
	1204, 1204, 1204, 22, 22, 22, 22, -1000, -1000, -1000,
	-1000, -1000, 1211, 1210, -1000, 1204, 1204, 1204, 1204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1209, 1209, 1209, 1205,
	1205, 326, -1000, 12636, 107, 27684, 1513, 776, 154, 27684,
	1290, -1000, 27684, 1261, 1261, 1261, -1000, 1516, 996, 940,
	-1000, 1165, -1000, -1000, 1556, -1000, -1000, 508, 675, 639,
	599, 27684, 124, 205, -1000, 333, -1000, 27684, 1207, 1498,
	521, 896, -1000, 896, -1000, -1000, -1000, -1000, 468, -1000,
	-1000, 896, 1163, -1000, 1152, 763, 633, 755, 632, 1163,
	-1000, -1000, -149, 1163, -1000, 1163, -1000, 1163, -1000, 1163,
	-1000, 1163, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	513, 27684, 124, 879, -1000, 363, -1000, -1000, 879, 879,
	-1000, -1000, -1000, -1000, 929, 926, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -336, 27684, 380, 128, 138, 27684, 27684, 27684,
	27684, 27684, 445, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	175, 27684, 27684, 27684, 27684, 425, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 733, 27684, -1000, -1000, 653, 653, -1000,
	-1000, 27684, 653, -1000, -1000, -1000, -1000, -1000, -1000, 653,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 919, -1000, 27684, 27684, -1000, -1000,
	-1000, -1000, -1000, 28, -69, 157, -1000, -1000, -1000, -1000,
	1533, -1000, 733, 538, 621, 596, -1000, -1000, 799, -1000,
	-1000, 2748, -1000, -1000, -1000, -1000, 727, 14001, 14001, 14001,
	622, 2748, 2536, 854, 657, 486, 667, 667, 502, 502,
	502, 502, 502, 746, 746, -1000, -1000, -1000, -1000, 933,
	-1000, -1000, -1000, 933, 10803, 10803, 1160, 1188, 458, -1000,
	1238, -1000, -1000, 1536, 1078, 1078, 924, 743, 625, 1580,
	1078, 623, 1575, 1078, 1078, 10803, -1000, -1000, 698, -1000,
	12636, 933, -1000, 1259, 1159, 1158, 1078, 933, 933, 1078,
	1078, 27684, -1000, -280, -1000, -90, 462, 1188, -1000, 19942,
	-1000, -1000, 933, 1048, 1470, -1000, -1000, 1424, -1000, 1376,
	12636, 12636, 12636, -1000, -1000, -1000, 1470, 1539, -1000, 1400,
	1399, 1572, 10803, 19487, 1414, -1000, -1000, -1000, 444, 1572,
	1169, 1188, -1000, 27684, 19487, 19487, 19487, 19487, 19487, -1000,
	1338, 1337, -1000, 1381, 1378, 1367, 27684, -1000, 1090, 1045,
	17667, 207, 1139, 19487, 27684, -1000, -1000, 19487, 27684, 6169,
	-1000, 1155, -70, 2, -1000, -1000, -1000, -1000, 733, -1000,
	927, -1000, 2620, -1000, 300, -1000, -1000, -1000, -1000, 566,
	14, -1000, -1000, 22, 22, -1000, -1000, 469, 634, 469,
	469, 469, 917, 917, -1000, -1000, -1000, -1000, -1000, 775,
	-1000, -1000, -1000, 742, -1000, -1000, 986, 1296, 107, -1000,
	-1000, 551, 915, 1439, -1000, -1000, 1013, 379, -1000, 27684,
	-1000, 1288, 1286, 1281, -1000, -1000, -1000, -1000, -1000, 3706,
	27684, 1084, -1000, 122, 27684, 992, 27684, -1000, 1082, 27684,
	-1000, 896, -1000, -1000, 7576, -1000, 27684, 1188, -1000, -1000,
	-1000, -1000, 396, 1487, 1475, 124, 122, 469, 896, -1000,
	-1000, -1000, -1000, -1000, -339, 1080, 27684, 159, -1000, 1206,
	963, -1000, 1253, -1000, -1000, -1000, -1000, 108, 192, 171,
	356, -1000, 378, 1296, 27684, -1000, -1000, -1000, 640, -1000,
	-1000, 640, -1000, -1000, -1000, -1000, -1000, -1000, 1459, -71,
	-313, -1000, -310, -1000, -1000, -1000, -1000, 622, 2748, 1276,
	-1000, 14001, 14001, -1000, -1000, 1078, 1078, 10803, 7576, 1563,
	1470, -1000, -1000, 270, 879, 270, 14001, 14001, -1000, 14001,
	14001, -1000, -144, 1063, 583, -1000, 12636, 540, -1000, -1000,
	14001, 14001, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 386, 384, 383, 27684, -1000, -1000, -1000, 806, 908,
	1372, 733, 733, -1000, -1000, 27684, -1000, -1000, -1000, -1000,
	1570, 12636, -1000, 1154, -1000, 5700, 1536, 1278, 27684, 1188,
	1604, 15834, 27684, 1161, -1000, 553, 1283, 1260, 1265, 1313,
	-1000, -1000, -1000, -1000, 1318, -1000, 1303, -1000, -1000, -1000,
	-1000, -1000, 1045, 1572, 19487, 1136, -1000, 1136, -1000, 439,
	-1000, -1000, -1000, -80, -97, -1000, -1000, -1000, 3004, -1000,
	-1000, -1000, 684, 14001, 1589, -1000, 895, 1497, -1000, 1496,
	-1000, -1000, 469, 469, -1000, -1000, -1000, -1000, -1000, -1000,
	1074, -1000, 1065, 1150, 1061, 69, -1000, 1246, 1457, 551,
	551, -1000, 741, -1000, 896, -1000, 27684, -1000, 27684, 27684,
	27684, 1547, 1149, -1000, 27684, -1000, -1000, 27684, -1000, -1000,
	1394, 107, 1059, -1000, -1000, -1000, 205, 27684, -1000, 1027,
	122, -1000, -1000, -1000, -1000, -1000, -1000, 1190, -1000, -1000,
	-1000, 985, -1000, -150, 896, 27684, 27684, 27684, -1000, 27684,
	-1000, -1000, -1000, 653, 653, -1000, 1455, -1000, 896, -1000,
	14001, 2748, 2748, -1000, -1000, 933, -1000, 1536, -1000, 933,
	1204, 1204, -1000, 1204, 1205, -1000, 1204, 79, 1204, 76,
	933, 933, 2402, 2338, 2277, 2188, 1188, -136, -1000, 733,
	12636, 2214, 2155, 1188, 1188, 1188, 1053, 890, 22, -1000,
	-1000, -1000, 1567, 1546, 733, -1000, -1000, -1000, 1509, 1137,
	1038, -1000, -1000, 10348, 1055, 1393, 438, 1053, 1563, 27684,
	12636, -1000, -1000, 12636, 1199, -1000, 12636, -1000, -1000, -1000,
	1563, 1563, 1136, -1000, -1000, 506, -1000, -1000, -1000, -1000,
	-1000, 2748, -38, -1000, -1000, -1000, -1000, -1000, 22, 889,
	22, 734, -1000, 726, -1000, -1000, -220, -1000, -1000, 1177,
	1294, -1000, -1000, 1190, -1000, -1000, -1000, 27684, 27684, -1000,
	-1000, 202, -1000, 276, 1044, -1000, -179, -1000, -1000, 1521,
	27684, -1000, -1000, 7576, -1000, -1000, 1189, 1256, -1000, -1000,
	-1000, -1000, -1000, -1000, 2748, -1000, 1470, -1000, -1000, 244,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14001, 14001,
	14001, 14001, 14001, 1536, 887, 733, 14001, 14001, 19032, 27684,
	27684, 17199, 22, 15, -1000, 12636, 12636, 1495, -1000, 1188,
	-1000, 1195, 27684, 1188, 27684, -1000, 1536, -1000, 733, 733,
	27684, 733, 1536, -1000, -1000, 469, -1000, 469, 983, 976,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1520, 1149,
	-1000, 200, 27684, -1000, 205, -1000, -184, -185, 1227, 1026,
	1144, -1000, 549, 27684, 27684, -1000, -1000, -1000, 1259, 1259,
	1259, 1259, 78, 933, -1000, 1259, 1259, 1022, -1000, 1022,
	1022, 462, -274, -1000, 1423, 1426, 733, 1048, 1588, -1000,
	1188, 1604, 424, 1038, -1000, -1000, 1020, -1000, -1000, -1000,
	-1000, -1000, 1227, 1188, 1170, -1000, -1000, -1000, 178, -1000,
	7576, 5231, 991, -1000, -1000, -1000, -1000, -1000, 933, 133,
	-152, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15, 266,
	-1000, 1404, 1402, 1545, 27684, 1038, 27684, -1000, 178, 13091,
	27684, -1000, -58, -1000, -1000, -1000, -1000, -1000, 1253, -1000,
	1359, -147, -173, 1409, 1415, 1415, 1426, 1544, 1422, 1419,
	-1000, 886, 1024, -1000, -1000, 1259, 933, 975, 310, -1000,
	-1000, -150, -1000, 1344, -1000, 1406, 765, -1000, -1000, -1000,
	-1000, 882, -1000, 1543, 1538, -1000, -1000, -1000, 1264, 156,
	-1000, -160, -1000, 762, -1000, -1000, -1000, 878, 873, 1263,
	-1000, 1579, -1000, -168, -1000, -1000, -1000, -1000, -1000, 1586,
	431, 431, -174, -1000, -1000, -1000, 287, 823, -1000, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1832, 1831, 12, 79, 87, 1830, 1829, 1828, 1826,
	131, 129, 127, 1824, 1823, 1822, 1816, 1814, 1811, 1810,
	1809, 1808, 1807, 1806, 1805, 59, 122, 32, 35, 124,
	1804, 1802, 46, 1800, 1798, 1797, 120, 117, 483, 1796,
	119, 1795, 1794, 1793, 1792, 1790, 1789, 1787, 1785, 1783,
	1782, 1781, 1780, 1779, 1778, 153, 1777, 1776, 7, 1774,
	48, 1773, 1772, 1771, 1769, 1768, 86, 1767, 1766, 1763,
	111, 1762, 1761, 45, 315, 43, 75, 1759, 1757, 72,
	860, 1756, 103, 140, 1755, 466, 1754, 38, 80, 69,
	1753, 41, 1746, 1741, 90, 1740, 1739, 1737, 68, 1734,
	1733, 2636, 1732, 67, 76, 14, 20, 1729, 1727, 1725,
	1723, 31, 893, 1722, 1720, 16, 1719, 1718, 132, 1717,
	82, 15, 1714, 25, 30, 28, 1712, 85, 1711, 36,
	58, 26, 1709, 77, 1707, 1706, 1704, 1702, 44, 1699,
	73, 98, 64, 1698, 1697, 6, 10, 1696, 1695, 1694,
	1693, 1692, 1688, 4, 1687, 1686, 1684, 29, 1683, 89,
	11, 71, 84, 23, 9, 1682, 128, 1681, 21, 109,
	65, 107, 1680, 1678, 1677, 849, 56, 143, 1675, 1673,
	27, 1672, 114, 126, 1671, 1462, 1670, 1669, 57, 1133,
	2519, 24, 113, 1668, 1667, 1913, 51, 74, 18, 1666,
	1665, 1664, 121, 110, 50, 887, 42, 1663, 1661, 1660,
	1659, 1658, 1657, 1654, 22, 61, 19, 115, 33, 1653,
	1652, 1651, 63, 37, 1650, 106, 99, 66, 130, 1648,
	112, 94, 53, 1647, 104, 1646, 1644, 1642, 1641, 39,
	1636, 1635, 1634, 1633, 105, 88, 47, 34, 1632, 40,
	93, 101, 91, 1630, 17, 123, 8, 1628, 2, 0,
	1626, 5, 118, 1461, 102, 1625, 1624, 3, 1623, 1,
	1618, 1615, 83, 1614, 1613, 1612, 1611, 3115, 679, 108,
	1610, 125,
}

var yyR1 = [...]int{
	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 259, 259, 259, 262, 262,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 279, 279, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 205, 205, 15, 15, 15, 15,
	15, 71, 71, 261, 261, 260, 258, 258, 257, 257,
	256, 23, 24, 33, 33, 33, 33, 34, 35, 263,
	263, 235, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 237, 237, 224, 224, 236, 236,
	236, 236, 236, 236, 236, 223, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 207, 207, 207,
	207, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 211, 211, 211,
	211, 211, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 222, 222, 214, 214, 217,
	217, 218, 218, 218, 219, 219, 220, 220, 215, 215,
	215, 216, 216, 216, 225, 249, 249, 248, 248, 246,
	246, 246, 246, 234, 234, 243, 243, 243, 243, 243,
	233, 233, 229, 229, 229, 230, 230, 231, 231, 228,
	228, 232, 232, 245, 245, 244, 226, 226, 227, 227,
	251, 251, 251, 251, 252, 268, 269, 267, 267, 267,
	267, 267, 60, 60, 60, 184, 184, 184, 241, 241,
	240, 240, 240, 242, 242, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 179, 179, 179, 266, 266, 266,
	266, 266, 266, 265, 265, 265, 238, 238, 238, 264,
	264, 130, 130, 131, 131, 30, 30, 30, 30, 30,
	30, 29, 29, 29, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 31, 31, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 221, 221,
	221, 253, 253, 254, 254, 17, 22, 22, 18, 18,
	18, 18, 19, 19, 41, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 270,
	270, 178, 178, 186, 186, 177, 177, 176, 176, 176,
	180, 180, 180, 181, 181, 274, 274, 274, 43, 43,
	45, 45, 46, 47, 47, 200, 200, 201, 201, 48,
	49, 61, 61, 61, 61, 61, 61, 63, 63, 63,
	7, 7, 7, 7, 57, 57, 57, 6, 6, 44,
	44, 51, 271, 271, 272, 273, 273, 273, 273, 52,
	54, 20, 20, 20, 20, 20, 20, 78, 78, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 72, 72, 72, 67, 67, 280, 55, 56, 56,
	70, 70, 70, 64, 64, 64, 69, 69, 69, 75,
	75, 77, 77, 77, 77, 77, 79, 79, 79, 79,
	79, 79, 79, 74, 74, 76, 76, 76, 76, 193,
	193, 193, 192, 192, 86, 86, 87, 87, 88, 88,
	89, 89, 89, 128, 104, 104, 160, 160, 159, 159,
	162, 162, 90, 90, 90, 90, 91, 91, 92, 92,
	93, 93, 199, 199, 198, 198, 198, 197, 197, 97,
	97, 97, 99, 98, 98, 98, 98, 100, 100, 102,
	102, 101, 101, 103, 105, 105, 105, 105, 105, 106,
	106, 85, 85, 85, 85, 85, 85, 85, 85, 174,
	174, 108, 108, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 119, 119, 119, 119, 119, 119, 109,
	109, 109, 109, 109, 109, 109, 73, 73, 120, 120,
	120, 127, 121, 121, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 116, 116,
	116, 116, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 281, 281, 118, 117, 117, 117, 117, 117, 117,
	117, 68, 68, 68, 68, 68, 204, 204, 204, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 134, 134, 65, 65, 132, 132, 133, 135,
	135, 129, 129, 129, 111, 111, 111, 111, 111, 111,
	111, 111, 113, 113, 113, 136, 136, 137, 137, 138,
	138, 139, 139, 140, 141, 141, 141, 142, 142, 142,
	142, 32, 32, 32, 32, 32, 27, 27, 27, 27,
	28, 28, 28, 80, 80, 80, 80, 82, 82, 81,
	81, 58, 58, 59, 59, 59, 83, 83, 84, 84,
	84, 84, 157, 157, 157, 143, 143, 143, 143, 149,
	149, 149, 145, 145, 147, 147, 147, 148, 148, 148,
	146, 152, 152, 154, 154, 153, 153, 151, 151, 156,
	156, 155, 155, 150, 150, 110, 110, 110, 110, 110,
	158, 158, 158, 158, 163, 163, 123, 123, 125, 125,
	124, 126, 164, 164, 168, 165, 165, 169, 169, 169,
	169, 169, 166, 166, 167, 167, 194, 194, 194, 173,
	173, 185, 185, 182, 182, 183, 183, 175, 175, 187,
	187, 187, 53, 122, 122, 250, 250, 247, 190, 190,
	191, 191, 195, 195, 196, 196, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 277,
	278, 202, 203, 203, 203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 4, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 3, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 10, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 4, 4, 4, 4, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 6, 6,
	5, 4, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 3, 3, 3, 7, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 5, 4, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 4, 5,
	5, 6, 4, 4, 6, 6, 6, 8, 8, 8,
	8, 9, 8, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 0, 2, 4, 0, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 4, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -275, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -277, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 334, 187, 186, 26, -276, 474, -70,
	5, -138, 16, -3, -55, -280, -55, -55, -55, -55,
	-55, -55, -235, -237, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -263, 107, 220, 325, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -255, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 347, 350, -242, 154,
	160, 161, 335, 105, 104, 72, 156, -239, 281, 451,
	-40, 453, 95, 97, 452, 41, 165, 454, 455, 456,
	457, 175, 458, 459, 460, 461, 467, 468, 469, 470,
	106, 5, 164, -263, -80, 291, 227, 77, -262, -259,
	84, 85, 86, 164, -185, 165, 166, -263, 164, -101,
	-195, -259, -189, 344, 178, 378, 379, 225, 77, 281,
	451, 231, 245, 239, 266, 258, 345, 380, 228, 179,
	213, 448, 256, 259, 312, 453, 381, 193, 304, 286,
	294, 95, 234, 321, 466, 230, 382, 464, 97, 452,
	76, 48, 41, 188, 254, 250, 454, 214, 383, 355,
	207, 105, 102, 473, 248, 47, 28, 463, 104, 46,
	455, 384, 456, 296, 271, 442, 45, 309, 194, 385,
	80, 349, 450, 298, 249, 295, 224, 462, 159, 386,
	434, 306, 443, 387, 272, 276, 388, 313, 49, 389,
	390, 444, 103, 391, 75, 457, 243, 244, 392, 222,
	177, 315, 270, 175, 34, 299, 346, 226, 55, 201,
	316, 43, 274, 42, 438, 393, 441, 269, 265, 50,
	394, 395, 396, 397, 458, 268, 242, 264, 472, 219,
	459, 59, 161, 278, 277, 279, 208, 311, 261, 398,
	399, 400, 182, 78, 401, 251, 19, 402, 403, 307,
	215, 404, 53, 405, 406, 319, 191, 407, 51, 460,
	38, 196, 461, 408, 409, 410, 411, 412, 305, 413,
	297, 273, 275, 203, 293, 348, 414, 247, 195, 465,
	415, 183, 449, 197, 200, 190, 320, 184, 416, 417,
	418, 419, 420, 229, 421, 422, 235, 467, 40, 423,
	424, 425, 426, 223, 218, 314, 323, 58, 79, 283,
	427, 447, 241, 216, 428, 232, 52, 468, 469, 470,
	210, 471, 289, 106, 220, 221, 44, 262, 202, 429,
	430, 252, 253, 267, 240, 263, 233, 435, 204, 308,
	192, 431, 322, 217, 284, 352, 209, 310, 446, 351,
	260, 257, 211, 432, 166, 205, 206, 433, 436, 300,
	290, 301, 302, 227, 303, 291, 212, 350, 255, 285,
	164, -166, 286, -186, 287, 288, 299, 300, 306, -178,
	307, 305, 203, -274, 313, 164, 308, 153, 144, 296,
	297, 290, 303, 291, 212, -270, -259, 456, 471, 312,
	259, 292, 298, 314, 438, 302, 301, -195, 233, -200,
	238, -190, -259, -189, 236, -101, -61, 434, 157, -202,
	-202, -72, 438, 440, -121, -85, -107, 110, -112, 30,
	24, -111, -108, -129, -126, -127, 144, 145, 147, 146,
	148, 133, 134, 141, 111, 149, -116, -114, -115, -117,
	88, 87, 96, 89, 90, 91, 92, 98, 99, 100,
	-190, -195, -124, -277, 65, 66, 335, 336, 337, 338,
	343, 339, 113, 54, 324, 333, 332, 331, 328, 329,
	326, 327, 341, 342, 169, 325, 163, 139, 334, -259,
	-189, 41, 289, 289, -101, 227, -5, -4, -277, 6,
	21, 22, -142, 18, 17, -278, 83, -64, -77, 60,
	61, -79, 22, 37, 64, 62, 21, -56, -76, 135,
	-85, -195, -76, -175, 168, -175, -175, -165, -205, 233,
	-169, 314, 313, -191, -167, -190, -188, -166, 311, 158,
	353, 109, 23, 25, 112, 144, 17, 113, 36, 160,
	176, 143, 172, 335, 153, 69, 354, 326, 327, 324,
	330, 337, 338, 325, 287, 30, 11, 356, 26, 186,
	22, 37, 137, 155, 116, 117, 189, 24, 187, 100,
	359, 20, 72, 181, 12, 174, 14, 360, 361, 15,
	169, 168, 128, 165, 67, 9, 149, 27, 125, 63,
	362, 29, 363, 364, 365, 366, 65, 126, 18, 328,
	329, 32, 439, 367, 343, 198, 139, 70, 56, 440,
	110, 368, 369, 98, 370, 101, 73, 445, 107, 16,
	68, 39, 371, 199, 372, 171, 373, 317, 374, 127,
	156, 334, 66, 375, 163, 288, 6, 340, 31, 185,
	173, 64, 376, 164, 115, 341, 342, 167, 99, 5,
	170, 33, 10, 71, 74, 331, 332, 333, 54, 347,
	114, 13, 377, 318, 108, 312, 259, -236, 126, -223,
	-227, -190, 180, -252, 176, -101, -245, -244, -190, -80,
	164, -259, 165, 165, 165, -183, 169, 334, -36, -37,
	-166, 143, 197, 82, 82, -227, -226, -225, -264, 199,
	180, -251, -243, 172, 181, -233, 173, 174, -228, 165,
	29, -264, -228, 171, 181, 199, 199, 106, 199, 106,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 196,
	-234, 118, -234, 351, 351, -239, -264, -264, -264, 167,
	34, 34, -187, -228, 167, 23, -234, -234, -166, 143,
	-234, -234, -234, -234, 207, 207, -234, -234, -234, -234,
	-234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
	-234, -101, -83, 214, 153, 155, 158, 73, 88, 228,
	118, -38, 209, -22, -101, 164, -259, -182, 169, -182,
	-101, 150, -101, -180, 126, 13, -180, -177, 289, 293,
	294, 295, -180, -180, -180, -180, 210, 304, -229, 165,
	34, 177, 289, 210, 304, 210, 211, 210, 211, 210,
	-176, 12, 128, 325, 309, 306, 203, 164, 204, 166,
	310, -259, 441, 211, -176, 289, 206, -180, -203, -277,
	-191, -203, -203, 31, 167, -190, -57, -190, 88, -7,
	-3, -11, -10, -12, 118, -78, 289, -66, 144, 456,
	442, 443, 444, 441, 305, 449, 447, 445, 210, 446,
	82, 109, 107, 108, 125, -85, -109, 128, 110, 126,
	127, 112, 130, 129, 140, 133, 134, 135, 136, 137,
	138, 139, 131, 132, 143, 118, 119, 120, 121, 122,
	123, 124, -174, -277, -127, -277, 151, 152, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -277, 150,
	-2, -121, -4, -277, -277, -277, -277, -277, -277, -277,
	-277, -134, -85, -277, -281, -118, -277, -281, -118, -281,
	-118, -281, -277, -281, -118, -281, -118, -281, -281, -118,
	-277, -277, -277, -277, -277, -277, -277, -202, -271, -272,
	-104, -101, -277, 88, -138, -3, -55, -157, 20, 32,
	-85, -139, -140, -85, -138, 56, -74, -76, -79, 60,
	61, 94, 12, -193, -192, 23, -190, 88, 150, 12,
	-102, 27, -101, -87, -88, -89, -90, -104, -128, -277,
	12, -94, -95, -101, -103, -195, 82, 233, -169, -205,
	-171, -170, 315, 317, 118, -194, -190, 88, 30, 83,
	82, -101, -207, -210, -212, -211, -213, -208, -209, 256,
	257, 144, 260, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 31, 188, 252, 253, 254, 255, 272,
	273, 274, 275, 276, 277, 278, 279, 239, 258, 345,
	240, 241, 242, 243, 244, 245, 247, 248, 249, 250,
	251, -262, -259, 81, 83, 82, -214, 81, -83, -183,
	-250, -247, 74, -259, -259, -259, -259, 110, -234, -234,
	196, -29, -26, -255, 16, -25, -26, 158, 102, 103,
	155, 81, -223, 81, -232, -262, -259, 81, 29, 171,
	170, -231, -228, -231, -232, -259, -129, -190, -195, -259,
	29, 29, -162, -190, -162, -162, 21, -162, 21, -162,
	21, 89, -190, -162, 21, -162, 21, -162, 21, -162,
	21, -162, 21, 30, 75, 76, 30, 78, 79, 80,
	-129, -129, -223, -166, -101, -259, 89, 89, -234, -234,
	89, 88, 88, 88, -234, -234, 89, 88, -259, 88,
	-265, 182, 224, 226, 89, 89, 89, 89, 30, 88,
	-266, 30, 463, 462, 464, 465, 466, 89, 30, 89,
	30, 89, -190, 81, -82, 216, 118, 205, 205, 164,
	164, 218, -101, 229, 230, 228, 21, 217, 219, 221,
	41, 82, 167, -182, 73, -96, -101, 24, -259, -196,
	-195, -188, 88, -85, -230, 12, 128, -176, -176, -180,
	-101, -230, -176, -180, -101, -180, -180, -180, -180, -176,
	-180, -195, -195, -101, -101, -101, -101, -101, -101, -101,
	-203, -203, -203, -181, 126, -180, 73, -201, 236, 270,
	435, 436, 437, 82, 347, -94, 441, 441, 441, 441,
	441, 441, -85, -85, -85, -85, -119, 98, 110, 99,
	100, -112, -120, -124, -127, 93, 128, 126, 127, 112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -204, -259, 88, 144, -259,
	-111, -111, -190, -75, 22, 37, -74, -191, -196, -188,
	-70, -278, -278, -138, -74, -74, -85, -85, -129, 88,
	-74, -129, 88, -74, -74, -69, 22, 37, -132, -133,
	114, -129, -278, -112, -190, -190, -74, -75, -75, -74,
	-74, 82, -273, 317, 318, 439, -198, 199, -197, 23,
	-195, 88, -122, -121, -142, -278, -143, 27, 10, 128,
	82, 19, 82, -141, 25, 26, -142, -113, -190, 89,
	92, -86, 82, 12, -79, -101, -192, 135, -196, -101,
	-161, 199, -101, 31, 82, -97, -99, -98, -100, 63,
	67, 69, 64, 65, 66, 70, -199, 23, -87, -3,
	-277, -101, -94, -279, 82, 12, 74, -279, 82, 150,
	-169, -171, 82, 316, 318, 319, 73, 101, -85, -216,
	143, -241, -240, -239, -223, -225, -226, -227, 83, -144,
	-219, 284, -214, -214, -214, -214, -214, -215, -166, -215,
	-215, -215, 81, 81, -214, -214, -214, -214, -217, 81,
	-217, -217, -218, 81, -218, -252, -85, -249, -248, -246,
	-247, 175, 95, 347, -244, -141, 89, -82, -101, 73,
	-190, -250, -250, -250, 24, -259, 88, -259, 88, 82,
	17, -224, -223, -130, 224, -254, 199, -251, -245, 81,
	29, -231, -232, -232, 150, -259, 82, 27, 106, 106,
	106, 106, 347, 155, 31, -223, -130, -204, 167, -204,
	-204, 88, 88, -179, 471, -94, 166, 223, -84, 330,
	88, 84, -101, -101, -101, -101, -101, 158, 155, 207,
	-101, -101, -94, -101, 82, -60, 184, 179, -101, -180,
	-180, -101, -180, -180, 88, -101, -190, -66, 317, 347,
	20, -67, 20, 98, 99, 100, -120, -112, -112, -112,
	-73, 189, 109, -278, -278, -74, -74, -277, 150, -5,
	-142, -278, -278, 82, 74, 23, 12, 12, -278, 12,
	12, -278, -278, -74, -135, -133, 116, -85, -278, -278,
	82, 82, -278, -278, -278, -278, -278, -272, 438, 318,
	-105, 71, 168, 72, -277, -197, -278, -157, 39, 47,
	58, -85, -85, -140, -157, -173, 20, 12, 54, 54,
	-106, 13, -76, -87, -79, 150, -106, -110, 31, 54,
	-3, -277, -277, -164, -168, -129, -88, -89, -89, -88,
	-89, 63, 63, 63, 68, 63, 68, 63, -98, -195,
	-278, -278, -3, -161, 74, -87, -101, -87, -103, -195,
	135, -170, -172, 320, 317, 323, -259, 88, 82, -239,
	-227, 98, 110, 30, 73, 281, 95, 171, 29, 170,
	-220, 285, -215, -215, -216, -259, 144, -216, -216, -216,
	-222, 88, -222, 89, 89, 83, -32, -27, -28, 32,
	77, -246, -234, 88, 38, 83, 166, -101, 73, 73,
	73, 16, -159, -190, 82, 83, -131, 225, -129, 83,
	-190, 83, -159, -232, -191, -190, -277, 164, 30, 30,
	-130, -131, -216, -259, 473, 472, 83, -101, -81, 214,
	222, 81, 85, -261, 74, 205, 281, 205, 208, 167,
	-60, -32, -101, -176, -176, 32, 317, 450, 448, -73,
	109, -112, -112, -278, -278, -75, -191, -138, -157, -206,
	144, 256, 188, 254, 250, 270, 261, 283, 252, 284,
	-204, -206, -112, -112, -112, -112, 344, -138, 117, -85,
	115, -112, -112, 165, 165, 165, -162, 40, 88, 88,
	59, -101, -136, 14, -85, 135, -142, -163, 73, -164,
	-123, -125, -124, -277, -158, -278, -190, -162, -106, 82,
	118, -92, -91, 73, 74, -93, 73, -91, 63, 63,
	-278, -106, -87, -106, -106, 150, 317, 321, 322, -239,
	98, -112, 10, 88, 29, 29, -216, -216, 83, 82,
	83, 82, 83, 82, -184, 384, 110, -28, -27, -234,
	-234, 89, -259, -101, -101, -101, -101, 17, 82, -223,
	-129, 54, -249, 83, -253, -254, -101, -111, -131, -160,
	81, 83, -258, 347, -260, -259, -190, -190, -190, -101,
	-180, -180, 32, -259, -112, -278, -142, -278, -214, -214,
	-214, -218, -214, 244, -214, 244, -278, -278, 20, 20,
	20, 20, -277, -65, 340, -85, 82, 82, -277, -277,
	-277, -278, 88, -215, -137, 15, 17, 28, -163, 82,
	-278, -278, 82, 54, 150, -278, -138, -168, -85, -85,
	81, -85, -138, -106, -115, -215, 88, -215, 89, 89,
	384, 30, 78, 79, 80, 30, 75, 76, -160, -159,
	-190, 201, 183, -278, 82, -221, 347, 350, 23, -159,
	-257, -256, -191, 81, 74, -157, -215, -259, -112, -112,
	-112, -112, -112, -142, 88, -112, -112, -159, -278, -159,
	-159, -198, -215, -146, -151, -177, -85, -121, 29, -125,
	54, -3, -190, -123, -190, -142, -159, -142, -216, -216,
	83, 83, 23, 202, -101, -254, 351, 351, -3, 83,
	82, 118, -159, -101, -278, -278, -278, -278, -68, 128,
	347, -278, -278, -278, -278, -278, -278, -105, -149, 434,
	-152, 43, -153, 44, 10, -123, 150, 83, -3, -277,
	81, -58, 347, -256, -238, -191, 88, 89, 83, -278,
	345, 70, 348, -146, 48, 262, -154, 52, -155, -150,
	53, 17, -164, -190, -58, -112, 198, -159, -59, 213,
	438, -261, 59, 346, 349, -147, 50, -145, 49, -145,
	-153, 17, -156, 45, 46, 88, -278, -278, 83, 176,
	-258, 59, -148, 51, 73, 101, 88, 17, 17, -268,
	-269, 73, 215, 347, 73, 101, 88, 88, -269, 73,
	11, 10, 348, -267, 184, 179, 182, 31, -267, 349,
	178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 819, 0, 556, 556, 556, 556, 556,
	556, 556, 0, 0, -2, -2, -2, 843, 38, 0,
	931, 0, 0, -2, 489, 490, 0, 492, -2, 0,
	0, 501, 1361, 1361, 551, 0, 0, 0, 0, 0,
	0, 1359, 55, 56, 507, 508, 509, 1, 3, 0,
	560, 827, 0, 0, -2, 558, 0, 0, 937, 937,
	937, 0, 86, 87, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 935, 0, 932, 109, 110, 90, -2,
	114, 115, 0, 119, 367, 328, 370, 326, 356, -2,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 223, 223, 0, 0, -2, 319,
	319, 319, 0, 0, 0, 353, 939, 273, 223, 223,
	0, 223, 223, 223, 223, 0, 0, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 0, 108, 856, 0, 0, 0, 118, 39,
	35, 36, 37, 0, 0, 0, 933, 933, 0, 423,
	641, 952, 953, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	0, 480, 480, 0, 480, 480, 480, 480, 0, 0,
	0, 435, 0, 0, 0, 0, 477, 0, 0, 454,
	456, 0, 477, 0, 464, 480, 1362, 1362, 1362, 922,
	0, 474, 472, 486, 487, 469, 470, 488, 491, 0,
	496, 499, 948, 949, 0, 514, 0, 1169, 506, 519,
	520, 0, 552, 553, 40, 692, 651, 0, 657, 659,
	0, 694, 695, 696, 697, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 725, 726, 727,
	804, 805, 806, 807, 808, 809, 810, 811, 661, 662,
	801, 0, 911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 761, 761, 761, 761, 761, 761,
	761, 761, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1361, 0, 529, 0, 0, 819, 51, 0, 556,
	561, 562, 862, 0, 0, 819, 1360, 0, 0, -2,
	-2, 572, 578, 579, 580, 581, 582, 557, 0, 585,
	589, 0, 0, 0, 938, 0, 0, 72, 0, 1325,
	915, -2, -2, 0, 0, 950, 951, 924, -2, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, -2, 1112, 0, 0, 128,
	129, 0, 38, 249, 0, 124, 0, 243, 197, 856,
	935, 945, 0, 0, 0, 0, 0, 92, 116, 117,
	223, 223, 0, 118, 118, 335, 336, 337, 0, 0,
	-2, 247, 0, 320, 0, 0, 237, 237, 241, 239,
	240, 0, 0, 0, 0, 0, 0, 347, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 224, 0, 365, 366, 274, 0, 0, 0, 0,
	345, 346, 0, 0, 940, 941, 0, 0, 223, 223,
	0, 0, 0, 0, 223, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 847, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 415, 0, 933, 0, 0, 0, 0,
	422, 0, 424, 425, 0, 0, 426, 0, 477, 477,
	475, 476, 428, 429, 430, 431, 480, 0, 0, 232,
	233, 234, 477, 480, 0, 480, 480, 480, 480, 477,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 1362, 1362, 483, 480, 461, 462, 465, 466, 1363,
	1364, 467, 468, 923, 497, 500, 517, 515, 516, 518,
	510, 511, 512, 513, 0, 531, 532, 537, 0, 0,
	0, 0, 543, 544, 545, 0, 0, 548, 549, 550,
	0, 0, 0, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 680, 681, 682, 683,
	684, 685, 658, 0, 672, 0, 0, 0, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 0, 569, 0,
	0, 0, 819, 0, 0, 0, 0, 0, 0, 0,
	566, 0, 793, 0, 745, 753, 0, 746, 754, 747,
	755, 748, 0, 749, 756, 750, 757, 751, 752, 758,
	0, 0, 0, 569, 569, 0, 0, 41, 521, 522,
	0, 624, 943, 530, 827, 0, 571, 865, 0, 0,
	828, 820, 821, 824, 827, 0, 594, 583, 573, 576,
	577, 559, 0, 586, 590, 0, 592, 593, 0, 0,
	70, 0, 640, 0, 596, 598, 599, 600, 622, 0,
	0, 0, 0, 66, 68, 641, 0, 1325, 921, 0,
	74, 75, 0, 0, 0, 211, 926, 927, 928, -2,
	230, 0, 136, 204, 148, 149, 150, 197, 152, 197,
	197, 197, 197, 208, 208, 208, 208, 180, 181, 182,
	183, 184, 0, 0, 167, 197, 197, 197, 197, 187,
	188, 189, 190, 191, 192, 193, 194, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 199, 199, 199, 201,
	201, 0, 39, 0, 215, 0, 824, 0, 847, 0,
	0, 946, 0, 945, 945, 945, 107, 0, 0, 0,
	368, 329, 357, 369, 0, 332, 333, -2, 0, 0,
	319, 0, 321, 0, 231, 0, -2, 0, 0, 0,
	237, 241, 238, 241, 229, 242, 349, 801, 0, 350,
	351, 0, 387, 610, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 321, 0, 354, 0, 275, 276, 0, 0,
	279, 280, 281, 282, 0, 0, 285, 286, 287, 288,
	289, 313, 314, 315, 290, 291, 292, 293, 294, 295,
	296, 307, 308, 309, 310, 311, 312, 297, 298, 299,
	300, 301, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 383, 384, 385, 844, 845, 846,
	0, 0, 0, 0, 0, 262, 64, 934, 421, 642,
	954, 955, 481, 482, 0, 235, 236, 480, 480, 432,
	455, 0, 480, 436, 457, 437, 439, 438, 440, 480,
	443, 478, 479, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 459, 0, 460, 0, 0, 498, 502,
	503, 504, 505, 0, 0, 534, 539, 540, 541, 542,
	554, 547, 693, 652, 653, 654, 656, 673, 0, 675,
	677, 663, 664, 688, 689, 690, 0, 0, 0, 0,
	686, 668, 0, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 713, 776, 777, 778, 0,
	711, 712, 723, 0, 0, 0, 570, 802, 0, -2,
	0, 691, 910, 827, 0, 0, 0, 0, 696, 804,
	0, 696, 804, 0, 0, 0, 567, 568, 799, 796,
	0, 0, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 527, 0, 644, 0, 625, 0,
	627, 628, 0, 944, 862, 52, 42, 0, 863, 0,
	0, 0, 0, 823, 825, 826, 862, 0, 812, 0,
	0, 649, 0, 0, 574, 48, 591, 587, 0, 649,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 629,
	0, 0, 632, 0, 0, 0, 0, 623, 0, 0,
	0, -2, 0, 0, 0, 62, 63, 0, 0, 0,
	916, 73, 0, 0, 78, 79, 917, 918, 919, 920,
	0, 111, -2, 270, 130, 132, 133, 134, 125, 135,
	206, 205, 151, 208, 208, 174, 175, 211, 0, 211,
	211, 211, 0, 0, 168, 169, 170, 171, 162, 0,
	163, 164, 165, 0, 166, 248, 0, 831, 216, 217,
	219, 223, 0, 0, 244, 245, 0, 0, 101, 0,
	947, 0, 0, 0, 936, 120, 121, 122, 123, 118,
	0, 0, 126, 323, 0, 0, 0, 246, 0, 0,
	225, 241, 226, 227, 0, 352, 0, 0, 389, 390,
	391, 392, 0, 0, 0, 321, 323, 211, 0, 277,
	278, 283, 284, 302, 0, 0, 0, 0, 857, 858,
	0, 861, 93, 375, 377, 376, 380, 0, 0, 0,
	0, 416, 262, 831, 0, 420, 263, 264, 477, 442,
	458, 477, 434, 441, 484, 463, 494, 538, 0, 0,
	0, 546, 0, 674, 676, 678, 665, 686, 669, 0,
	666, 0, 0, 660, 728, 0, 0, 569, 0, 819,
	862, 732, 733, 0, 0, 0, 0, 0, 769, 0,
	0, 770, 0, 819, 0, 797, 0, 0, 744, 763,
	0, 0, 764, 765, 766, 767, 768, 523, 526, 528,
	604, 0, 0, 0, 0, 626, 942, 44, 0, 0,
	0, 829, 830, 822, 43, 0, 929, 930, 813, 814,
	815, 0, 584, 595, 575, 0, 827, 904, 0, 0,
	896, 0, 0, 649, 912, 0, 597, 618, 620, 0,
	615, 630, 631, 633, 0, 635, 0, 637, 638, 601,
	602, 603, 0, 649, 0, 649, 67, 649, 69, 0,
	643, 76, 77, 0, 0, 83, 212, 213, 118, 272,
	131, 137, 0, 0, 0, 141, 0, 0, 144, 146,
	147, 207, 211, 211, 176, 209, 210, 177, 178, 179,
	0, 195, 0, 0, 0, 265, 88, 835, 834, 223,
	223, 218, 0, 221, 0, 198, 0, 103, 0, 0,
	0, 0, 327, 608, 0, 338, 339, 0, 322, 386,
	0, 215, 0, 228, 802, 611, 0, 0, 340, 0,
	323, 343, 344, 355, 305, 306, 303, 606, 848, 849,
	850, 0, 860, 96, 0, 0, 0, 0, 373, 0,
	418, 419, 65, 480, 480, 533, 0, 536, 0, 667,
	0, 687, 670, 729, 730, 0, 803, 827, 46, 0,
	197, 197, 782, 197, 201, 785, 197, 787, 197, 790,
	0, 0, 0, 0, 0, 0, 0, 794, 743, 800,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 867,
	864, 45, 817, 0, 650, 588, 49, 53, 0, 904,
	895, 906, 908, 0, 0, 0, 900, 0, 819, 0,
	0, 612, 619, 0, 0, 613, 0, 614, 634, 636,
	-2, 819, 649, 60, 61, 0, 80, 81, 82, 271,
	138, 139, 0, 142, 143, 145, 172, 173, 208, 0,
	208, 0, 202, 0, 254, 266, 0, 832, 833, 0,
	0, 220, 222, 606, 104, 105, 106, 0, 0, 127,
	324, 0, 214, 0, 0, 411, 408, 341, 342, 0,
	0, 859, 374, 0, 94, 95, 0, 0, 379, 417,
	427, 433, 535, 555, 671, 731, 862, 734, 779, 208,
	783, 784, 786, 788, 789, 791, 736, 735, 0, 0,
	0, 0, 0, 827, 0, 798, 0, 0, 0, 0,
	0, 624, 208, 887, 50, 0, 0, 0, 54, 0,
	909, 0, 0, 0, 0, 71, 827, 913, 914, 616,
	0, 621, 827, 59, 140, 211, 196, 211, 0, 0,
	267, 836, 837, 838, 839, 840, 841, 842, 0, 330,
	609, 0, 0, 388, 0, 396, 0, 0, 0, 0,
	97, 98, 0, 0, 0, 47, 780, 781, 0, 0,
	0, 0, 771, 0, 795, 0, 0, 0, 646, 0,
	0, 644, 869, 868, 881, 885, 818, 816, 0, 907,
	0, 899, 902, 898, 901, 57, 0, 58, 185, 186,
	200, 203, 0, 0, 0, 412, 409, 410, 851, 607,
	0, 0, 0, 381, 737, 739, 738, 740, 0, 0,
	0, 742, 759, 760, 645, 647, 648, 605, 887, 0,
	880, 883, -2, 0, 0, 897, 0, 617, 851, 0,
	0, 371, 853, 99, 100, 316, 317, 318, 93, 741,
	0, 0, 0, 874, 872, 872, 885, 0, 889, 0,
	894, 0, 905, 903, 89, 0, 0, 0, 0, 854,
	855, 96, 772, 0, 775, 877, 0, 870, 873, 871,
	882, 0, 888, 0, 0, 886, 413, 414, 250, 0,
	378, 773, 866, 0, 875, 876, 884, 0, 0, 251,
	252, 0, 852, 0, 878, 879, 890, 892, 253, 0,
	0, 0, 0, 255, 257, 258, 0, 0, 256, 774,
	259, 260, 261,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 474,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:416
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:421
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:422
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:426
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:459
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:469
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:473
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:478
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:488
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:494
		{
			yyVAL.statement = &Load{}
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:500
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:513
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{&Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:540
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:554
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:560
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:578
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:585
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:597
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.insertAction = InsertAct
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:633
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:651
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:661
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:676
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:680
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:686
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:692
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:696
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.characteristic = ReadWrite
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			yyVAL.characteristic = ReadOnly
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:734
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:738
		{
			yyVAL.isolationLevel = Serializable
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.scope = SessionScope
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			yyVAL.scope = GlobalScope
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:754
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:767
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:776
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:787
		{
			yyVAL.boolean = false
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.boolean = true
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:796
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:800
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:811
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:839
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:853
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:858
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:863
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:868
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:875
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:893
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharsets = nil
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.boolean = false
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.boolean = true
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:936
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:940
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:946
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:950
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:957
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:961
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:991
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptions
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyDollar[1].columnTypeOptions.NotNull = false
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1029
		{
			yyDollar[1].columnTypeOptions.NotNull = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1039
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].bytes)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyPrimary
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUniqueKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUnique
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1242
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1297
		{
			yyVAL.literal = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1310
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1318
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1328
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1336
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1382
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1387
		{
			yyVAL.indexOptions = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1397
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = ""
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = yyDollar[2].str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = "key"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = yyDollar[1].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1560
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1564
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1568
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1574
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1580
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1626
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.boolean = true
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1634
		{
			yyVAL.boolean = false
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1639
		{
			yyVAL.tableOptions = nil
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1781
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1785
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1830
		{
			yyVAL.bytes = []byte("")
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1836
		{
			yyVAL.colName = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1840
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1845
		{
			yyVAL.colName = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOptions = nil
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1874
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1888
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1966
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.alterOption = &Force{}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2014
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2038
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2045
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 371:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2058
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2069
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 378:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2129
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[3].bytes),
			}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[3].bytes),
			}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2158
		{
			yyVAL.statement = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[3].bytes),
			}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2173
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2181
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2185
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2193
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2197
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2213
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2257
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2262
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.boolean = false
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.boolean = true
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2287
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2291
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2307
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2313
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[5].tableNames, IfExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2317
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2326
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2330
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.statement = &OtherRead{}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{&ShowBasic{Full: yyDollar[2].boolean, Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2383
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2403
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2419
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].boolean, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2423
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2427
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2431
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2435
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2439
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2443
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2447
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2459
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2463
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2467
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2471
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2479
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2483
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2487
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilter, DbName: yyDollar[3].str}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = "extended "
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2561
		{
			yyVAL.boolean = false
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.boolean = true
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.showFilter = nil
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2609
		{
			yyVAL.showFilter = nil
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.empty = struct{}{}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &Begin{}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &Begin{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.statement = &Commit{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.statement = &Rollback{}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2663
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.empty = struct{}{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.empty = struct{}{}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2673
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.explainType = EmptyType
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2695
		{
			yyVAL.explainType = JSONType
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yyVAL.explainType = TreeType
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.explainType = VitessType
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yyVAL.explainType = TraditionalType
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.explainType = AnalyzeType
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2766
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.lockType = Read
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.lockType = ReadLocal
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.lockType = Write
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2822
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.statement = &RevertMigration{UUID: string(yyDollar[3].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2842
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2846
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2850
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2854
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2919
		{
			yyVAL.boolean = false
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.boolean = true
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
			setAllowComments(yylex, true)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2945
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2951
		{
			yyVAL.bytes2 = nil
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.boolean = true
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.boolean = false
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.boolean = true
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = SQLCacheStr
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2987
		{
			yyVAL.boolean = false
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.boolean = true
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.boolean = true
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.selectExprs = nil
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3009
		{
			yyVAL.strs = nil
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3021
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3025
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.str = SQLCacheStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.str = DistinctStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = DistinctStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = StraightJoinHint
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3083
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3088
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3108
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3112
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3156
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3161
		{
			yyVAL.columns = nil
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3198
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3202
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3206
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3218
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3222
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3228
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3230
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3233
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3238
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3246
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.joinType = NormalJoinType
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3263
		{
			yyVAL.joinType = NormalJoinType
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.joinType = NormalJoinType
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.joinType = StraightJoinType
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.joinType = LeftJoinType
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.joinType = LeftJoinType
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.joinType = RightJoinType
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.joinType = RightJoinType
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3336
		{
			yyVAL.indexHints = nil
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3340
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3344
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3348
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3352
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = nil
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = ""
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3429
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3437
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3441
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3445
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3453
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3457
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3513
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = nil
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3536
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3626
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = handleUnaryMinus(yyDollar[2].expr)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3734
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 741:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 759:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3838
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.matchExprOption = NoOption
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3900
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3904
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.expr = nil
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string("")
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4012
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4017
		{
			yyVAL.expr = nil
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4035
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.expr = &NullVal{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4088
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.exprs = nil
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.expr = nil
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.orderBy = nil
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4131
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.orderDirection = AscOrder
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.orderDirection = AscOrder
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.orderDirection = DescOrder
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.limit = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4157
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4161
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4166
		{
			yyVAL.alterOptions = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4174
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4215
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = yyDollar[3].str
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = yyDollar[2].str
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = "cascaded"
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = yyDollar[3].str
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.lock = NoLock
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.lock = ForUpdateLock
		}
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4313
		{
			yyVAL.lock = ShareModeLock
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.selectInto = nil
		}
	case 866:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4322
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4330
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = " header"
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = " manifest on"
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = " manifest off"
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = " overwrite on"
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = " overwrite off"
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = " optionally"
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4460
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4468
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4472
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4476
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4494
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4499
		{
			yyVAL.updateExprs = nil
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4503
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4555
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4583
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.bytes = []byte("charset")
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.expr = &Default{}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4622
		{
			yyVAL.boolean = false
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.boolean = true
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4627
		{
			yyVAL.boolean = false
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.boolean = true
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4632
		{
			yyVAL.boolean = false
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.boolean = true
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.ignore = false
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.ignore = true
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.empty = struct{}{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.empty = struct{}{}
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4650
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.exprs = nil
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4664
		{
			yyVAL.indexOptions = nil
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			decNesting(yylex)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5146
		{
			skipToEnd(yylex)
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5151
		{
			skipToEnd(yylex)
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5155
		{
			skipToEnd(yylex)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
