// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
	columnTypeOptions      *ColumnTypeOptions
	revertMigration        *RevertMigration
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const BEGIN = 57553
const START = 57554
const TRANSACTION = 57555
const COMMIT = 57556
const ROLLBACK = 57557
const SAVEPOINT = 57558
const RELEASE = 57559
const WORK = 57560
const BIT = 57561
const TINYINT = 57562
const SMALLINT = 57563
const MEDIUMINT = 57564
const INT = 57565
const INTEGER = 57566
const BIGINT = 57567
const INTNUM = 57568
const REAL = 57569
const DOUBLE = 57570
const FLOAT_TYPE = 57571
const DECIMAL = 57572
const NUMERIC = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const TEXT = 57584
const TINYTEXT = 57585
const MEDIUMTEXT = 57586
const LONGTEXT = 57587
const BLOB = 57588
const TINYBLOB = 57589
const MEDIUMBLOB = 57590
const LONGBLOB = 57591
const JSON = 57592
const ENUM = 57593
const GEOMETRY = 57594
const POINT = 57595
const LINESTRING = 57596
const POLYGON = 57597
const GEOMETRYCOLLECTION = 57598
const MULTIPOINT = 57599
const MULTILINESTRING = 57600
const MULTIPOLYGON = 57601
const NULLX = 57602
const AUTO_INCREMENT = 57603
const APPROXNUM = 57604
const SIGNED = 57605
const UNSIGNED = 57606
const ZEROFILL = 57607
const COLLATION = 57608
const DATABASES = 57609
const SCHEMAS = 57610
const TABLES = 57611
const VITESS_METADATA = 57612
const VSCHEMA = 57613
const FULL = 57614
const PROCESSLIST = 57615
const COLUMNS = 57616
const FIELDS = 57617
const ENGINES = 57618
const PLUGINS = 57619
const EXTENDED = 57620
const KEYSPACES = 57621
const VITESS_KEYSPACES = 57622
const VITESS_SHARDS = 57623
const VITESS_TABLETS = 57624
const VITESS_MIGRATIONS = 57625
const CODE = 57626
const PRIVILEGES = 57627
const FUNCTION = 57628
const OPEN = 57629
const TRIGGERS = 57630
const EVENT = 57631
const USER = 57632
const NAMES = 57633
const CHARSET = 57634
const GLOBAL = 57635
const SESSION = 57636
const ISOLATION = 57637
const LEVEL = 57638
const READ = 57639
const WRITE = 57640
const ONLY = 57641
const REPEATABLE = 57642
const COMMITTED = 57643
const UNCOMMITTED = 57644
const SERIALIZABLE = 57645
const CURRENT_TIMESTAMP = 57646
const DATABASE = 57647
const CURRENT_DATE = 57648
const CURRENT_TIME = 57649
const LOCALTIME = 57650
const LOCALTIMESTAMP = 57651
const CURRENT_USER = 57652
const UTC_DATE = 57653
const UTC_TIME = 57654
const UTC_TIMESTAMP = 57655
const REPLACE = 57656
const CONVERT = 57657
const CAST = 57658
const SUBSTR = 57659
const SUBSTRING = 57660
const GROUP_CONCAT = 57661
const SEPARATOR = 57662
const TIMESTAMPADD = 57663
const TIMESTAMPDIFF = 57664
const MATCH = 57665
const AGAINST = 57666
const BOOLEAN = 57667
const LANGUAGE = 57668
const WITH = 57669
const QUERY = 57670
const EXPANSION = 57671
const WITHOUT = 57672
const VALIDATION = 57673
const UNUSED = 57674
const ARRAY = 57675
const CUME_DIST = 57676
const DESCRIPTION = 57677
const DENSE_RANK = 57678
const EMPTY = 57679
const EXCEPT = 57680
const FIRST_VALUE = 57681
const GROUPING = 57682
const GROUPS = 57683
const JSON_TABLE = 57684
const LAG = 57685
const LAST_VALUE = 57686
const LATERAL = 57687
const LEAD = 57688
const MEMBER = 57689
const NTH_VALUE = 57690
const NTILE = 57691
const OF = 57692
const OVER = 57693
const PERCENT_RANK = 57694
const RANK = 57695
const RECURSIVE = 57696
const ROW_NUMBER = 57697
const SYSTEM = 57698
const WINDOW = 57699
const ACTIVE = 57700
const ADMIN = 57701
const BUCKETS = 57702
const CLONE = 57703
const COMPONENT = 57704
const DEFINITION = 57705
const ENFORCED = 57706
const EXCLUDE = 57707
const FOLLOWING = 57708
const GEOMCOLLECTION = 57709
const GET_MASTER_PUBLIC_KEY = 57710
const HISTOGRAM = 57711
const HISTORY = 57712
const INACTIVE = 57713
const INVISIBLE = 57714
const LOCKED = 57715
const MASTER_COMPRESSION_ALGORITHMS = 57716
const MASTER_PUBLIC_KEY_PATH = 57717
const MASTER_TLS_CIPHERSUITES = 57718
const MASTER_ZSTD_COMPRESSION_LEVEL = 57719
const NESTED = 57720
const NETWORK_NAMESPACE = 57721
const NOWAIT = 57722
const NULLS = 57723
const OJ = 57724
const OLD = 57725
const OPTIONAL = 57726
const ORDINALITY = 57727
const ORGANIZATION = 57728
const OTHERS = 57729
const PATH = 57730
const PERSIST = 57731
const PERSIST_ONLY = 57732
const PRECEDING = 57733
const PRIVILEGE_CHECKS_USER = 57734
const PROCESS = 57735
const RANDOM = 57736
const REFERENCE = 57737
const REQUIRE_ROW_FORMAT = 57738
const RESOURCE = 57739
const RESPECT = 57740
const RESTART = 57741
const RETAIN = 57742
const REUSE = 57743
const ROLE = 57744
const SECONDARY = 57745
const SECONDARY_ENGINE = 57746
const SECONDARY_LOAD = 57747
const SECONDARY_UNLOAD = 57748
const SKIP = 57749
const SRID = 57750
const THREAD_PRIORITY = 57751
const TIES = 57752
const UNBOUNDED = 57753
const VCPU = 57754
const VISIBLE = 57755
const FORMAT = 57756
const TREE = 57757
const VITESS = 57758
const TRADITIONAL = 57759
const LOCAL = 57760
const LOW_PRIORITY = 57761
const NO_WRITE_TO_BINLOG = 57762
const LOGS = 57763
const ERROR = 57764
const GENERAL = 57765
const HOSTS = 57766
const OPTIMIZER_COSTS = 57767
const USER_RESOURCES = 57768
const SLOW = 57769
const CHANNEL = 57770
const RELAY = 57771
const EXPORT = 57772
const AVG_ROW_LENGTH = 57773
const CONNECTION = 57774
const CHECKSUM = 57775
const DELAY_KEY_WRITE = 57776
const ENCRYPTION = 57777
const ENGINE = 57778
const INSERT_METHOD = 57779
const MAX_ROWS = 57780
const MIN_ROWS = 57781
const PACK_KEYS = 57782
const PASSWORD = 57783
const FIXED = 57784
const DYNAMIC = 57785
const COMPRESSED = 57786
const REDUNDANT = 57787
const COMPACT = 57788
const ROW_FORMAT = 57789
const STATS_AUTO_RECALC = 57790
const STATS_PERSISTENT = 57791
const STATS_SAMPLE_PAGES = 57792
const STORAGE = 57793
const MEMORY = 57794
const DISK = 57795

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 927,
	-2, 91,
	-1, 45,
	1, 112,
	471, 112,
	-2, 118,
	-1, 46,
	143, 118,
	256, 118,
	309, 118,
	-2, 325,
	-1, 53,
	34, 467,
	165, 467,
	177, 467,
	210, 481,
	211, 481,
	-2, 469,
	-1, 58,
	167, 491,
	-2, 489,
	-1, 84,
	56, 559,
	-2, 567,
	-1, 109,
	1, 113,
	471, 113,
	-2, 118,
	-1, 119,
	170, 230,
	171, 230,
	-2, 319,
	-1, 138,
	143, 118,
	256, 118,
	309, 118,
	-2, 334,
	-1, 575,
	150, 948,
	-2, 944,
	-1, 576,
	150, 949,
	-2, 945,
	-1, 595,
	56, 560,
	-2, 572,
	-1, 596,
	56, 561,
	-2, 573,
	-1, 617,
	118, 1287,
	-2, 84,
	-1, 618,
	118, 1170,
	-2, 85,
	-1, 624,
	118, 1220,
	-2, 921,
	-1, 761,
	118, 1108,
	-2, 918,
	-1, 795,
	176, 38,
	181, 38,
	-2, 241,
	-1, 874,
	1, 372,
	471, 372,
	-2, 118,
	-1, 1112,
	1, 268,
	471, 268,
	-2, 118,
	-1, 1190,
	170, 230,
	171, 230,
	-2, 319,
	-1, 1199,
	176, 39,
	181, 39,
	-2, 242,
	-1, 1408,
	150, 951,
	-2, 947,
	-1, 1500,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1521,
	1, 269,
	471, 269,
	-2, 118,
	-1, 1932,
	5, 815,
	18, 815,
	20, 815,
	32, 815,
	83, 815,
	-2, 599,
	-1, 2144,
	46, 889,
	-2, 887,
}

const yyPrivate = 57344

const yyLast = 27857

var yyAct = [...]int{
	575, 2225, 2212, 1984, 1845, 2153, 2073, 1734, 1701, 2095,
	548, 2144, 1912, 2189, 1585, 1913, 1014, 1445, 534, 519,
	1518, 1981, 1735, 1909, 588, 1818, 1169, 1551, 1060, 1556,
	1799, 1814, 517, 1067, 886, 1175, 1798, 83, 3, 1797,
	1721, 1924, 1871, 1402, 1661, 147, 1635, 622, 1558, 178,
	1583, 1497, 190, 1308, 482, 190, 133, 1197, 1791, 1104,
	498, 790, 190, 1065, 1394, 765, 1215, 81, 1097, 1447,
	190, 913, 1479, 597, 1486, 1090, 521, 1088, 1428, 33,
	1052, 1070, 510, 582, 1371, 950, 1094, 1405, 1087, 772,
	769, 793, 498, 1174, 803, 498, 190, 498, 796, 773,
	777, 1204, 1287, 791, 1547, 1462, 933, 825, 792, 1103,
	1077, 1101, 1431, 931, 79, 1313, 1502, 880, 150, 110,
	111, 116, 117, 1189, 1172, 505, 867, 1027, 8, 7,
	78, 177, 1537, 6, 1028, 1837, 1836, 1614, 84, 1274,
	2097, 1859, 1860, 1360, 1359, 179, 180, 181, 1358, 1357,
	1356, 1355, 508, 2181, 509, 1348, 766, 1699, 2141, 583,
	1442, 1443, 2052, 2119, 112, 2118, 829, 1958, 604, 608,
	118, 2068, 951, 190, 2069, 86, 87, 88, 89, 90,
	91, 828, 2231, 190, 830, 879, 457, 2186, 190, 506,
	1651, 80, 1136, 1176, 2224, 2164, 591, 2215, 619, 1985,
	171, 1602, 2185, 616, 2163, 1888, 2016, 782, 1700, 1536,
	1939, 1940, 806, 35, 1561, 807, 72, 39, 40, 1621,
	1513, 1514, 1938, 1620, 623, 113, 1858, 951, 112, 784,
	783, 831, 832, 833, 1765, 1649, 155, 1764, 961, 1512,
	1766, 838, 781, 827, 929, 785, 560, 905, 566, 567,
	564, 565, 1503, 563, 562, 561, 841, 842, 486, 845,
	846, 847, 848, 568, 569, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	906, 899, 1444, 843, 1105, 579, 1106, 578, 71, 1782,
	152, 171, 153, 961, 1560, 107, 112, 184, 185, 1530,
	176, 170, 1813, 893, 894, 1124, 179, 180, 181, 1847,
	2007, 485, 496, 2005, 949, 1347, 113, 2166, 135, 500,
	1349, 1350, 1351, 494, 928, 882, 844, 155, 581, 1584,
	957, 2131, 976, 975, 985, 986, 978, 979, 980, 981,
	982, 983, 984, 977, 1617, 1819, 987, 786, 2214, 1137,
	891, 1264, 105, 1841, 892, 893, 894, 1288, 145, 926,
	156, 1842, 1296, 134, 1297, 1293, 1298, 868, 910, 911,
	161, 907, 900, 908, 909, 2182, 912, 875, 2115, 1850,
	1629, 152, 1848, 153, 850, 957, 107, 172, 1191, 1192,
	144, 143, 170, 1265, 849, 1266, 1849, 1150, 1153, 1154,
	1155, 1156, 1157, 1158, 1292, 1159, 1160, 1161, 1162, 1163,
	1138, 1139, 1140, 1141, 1122, 1123, 1151, 1290, 1125, 1294,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1957, 486,
	139, 1193, 146, 2063, 1190, 1291, 140, 141, 920, 814,
	922, 156, 104, 805, 106, 812, 1586, 190, 1480, 823,
	486, 161, 1619, 1562, 822, 821, 956, 953, 954, 955,
	960, 962, 959, 148, 958, 924, 2162, 820, 486, 819,
	818, 952, 817, 498, 498, 498, 816, 919, 921, 811,
	787, 1183, 485, 889, 824, 895, 896, 897, 898, 925,
	2064, 498, 498, 1152, 770, 2232, 2201, 1503, 107, 799,
	99, 175, 770, 485, 1650, 102, 930, 2229, 101, 100,
	798, 956, 953, 954, 955, 960, 962, 959, 2167, 958,
	2154, 485, 109, 1779, 1774, 770, 952, 1634, 73, 768,
	943, 903, 815, 1203, 1202, 106, 881, 2132, 813, 1173,
	927, 610, 1851, 1608, 1301, 937, 834, 1807, 1702, 1704,
	1616, 1897, 805, 1896, 148, 105, 1895, 780, 1276, 1275,
	1277, 1278, 1279, 805, 779, 805, 778, 1775, 1829, 190,
	878, 776, 456, 182, 1604, 1628, 840, 918, 1627, 804,
	917, 923, 805, 997, 2148, 808, 798, 934, 935, 1777,
	890, 872, 1772, 2036, 1637, 809, 916, 498, 1937, 1636,
	190, 1726, 190, 190, 1773, 498, 1057, 1680, 142, 805,
	1677, 498, 1058, 810, 999, 1000, 1669, 1594, 1508, 1015,
	136, 946, 944, 137, 1637, 1081, 945, 1519, 1012, 1636,
	884, 987, 914, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 1053, 1703, 179, 180, 181, 166,
	167, 168, 169, 1086, 1761, 2227, 1458, 106, 2228, 1872,
	2226, 1071, 902, 1343, 1780, 1778, 967, 977, 888, 606,
	987, 869, 1069, 870, 904, 2123, 871, 826, 1922, 1030,
	1032, 1034, 1036, 1038, 1040, 1041, 1031, 1033, 804, 1037,
	1039, 94, 1042, 1050, 808, 798, 1289, 1796, 1603, 804,
	874, 804, 1107, 1874, 809, 947, 1787, 1314, 798, 801,
	802, 619, 770, 1890, 1059, 873, 795, 799, 804, 1429,
	839, 965, 966, 964, 149, 154, 151, 157, 158, 159,
	160, 162, 163, 164, 165, 511, 95, 623, 1568, 967,
	166, 167, 168, 169, 1601, 804, 999, 1000, 915, 999,
	1000, 964, 798, 801, 802, 190, 770, 1599, 814, 1165,
	795, 799, 1876, 1429, 1880, 1687, 1875, 967, 1873, 1177,
	1178, 1179, 1776, 1878, 179, 180, 181, 1378, 1396, 794,
	812, 887, 1877, 1942, 498, 1074, 1199, 1366, 1368, 1369,
	2051, 1376, 1377, 1375, 1208, 1879, 1881, 1675, 1212, 1367,
	2050, 498, 498, 1283, 498, 1674, 498, 498, 1281, 498,
	498, 498, 498, 498, 498, 1596, 1209, 980, 981, 982,
	983, 984, 977, 1315, 498, 987, 966, 964, 190, 1248,
	965, 966, 964, 576, 1397, 1596, 1188, 1463, 1464, 1600,
	1102, 1243, 1244, 967, 1261, 1654, 1655, 1656, 967, 1195,
	2233, 1207, 174, 2216, 2206, 498, 965, 966, 964, 1598,
	1963, 1795, 1282, 190, 1892, 1794, 1565, 1280, 1217, 1844,
	1218, 190, 1220, 1222, 967, 190, 1226, 1228, 1230, 1232,
	1234, 2217, 2207, 1181, 1182, 191, 1205, 1205, 191, 1245,
	1164, 190, 1171, 499, 1206, 191, 1180, 1899, 190, 1284,
	1186, 1184, 1185, 191, 1269, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 498, 498, 498, 1198, 2234, 965,
	966, 964, 1310, 1271, 1318, 499, 1268, 71, 499, 191,
	499, 1322, 614, 1324, 1325, 1326, 1327, 967, 1329, 1374,
	190, 1251, 1252, 1267, 1259, 1900, 2219, 1257, 1258, 2218,
	775, 1253, 1344, 1316, 1317, 1250, 1676, 1246, 978, 979,
	980, 981, 982, 983, 984, 977, 1249, 1321, 987, 1224,
	609, 1372, 2208, 2197, 1328, 179, 180, 181, 1395, 1768,
	2086, 592, 1270, 112, 784, 783, 1302, 1398, 2048, 2024,
	1307, 985, 986, 978, 979, 980, 981, 982, 983, 984,
	977, 498, 1945, 987, 1901, 1804, 191, 1320, 537, 536,
	539, 540, 541, 542, 1792, 1645, 191, 538, 1612, 543,
	1611, 191, 1399, 1400, 1460, 1311, 1354, 1339, 1340, 1341,
	1417, 1420, 1272, 1260, 498, 498, 1430, 1373, 1256, 1412,
	965, 966, 964, 1255, 1254, 190, 965, 966, 964, 1056,
	1408, 179, 180, 181, 2113, 1578, 1407, 2112, 967, 498,
	611, 612, 1452, 35, 967, 1983, 190, 1821, 1015, 498,
	1970, 2200, 1453, 190, 80, 190, 179, 180, 181, 1806,
	1436, 1437, 1465, 190, 190, 1970, 2160, 1459, 1970, 2149,
	498, 1970, 592, 498, 1413, 1414, 1970, 2121, 1419, 1422,
	1423, 179, 180, 181, 498, 1576, 179, 180, 181, 1406,
	1262, 2102, 965, 966, 964, 1722, 1410, 1411, 1409, 1408,
	1498, 2066, 592, 1435, 82, 1477, 1438, 1439, 1596, 592,
	967, 2034, 592, 1970, 1975, 1473, 1504, 1531, 71, 1532,
	1533, 1534, 1535, 1955, 1954, 1951, 1952, 1527, 1522, 1951,
	1950, 1504, 592, 1471, 592, 1543, 1544, 1545, 1546, 498,
	1722, 1454, 1472, 190, 1921, 1526, 2053, 498, 2031, 1523,
	1501, 1574, 1575, 1577, 1503, 1838, 1168, 1823, 1406, 1475,
	963, 1553, 1482, 968, 1483, 498, 1816, 1817, 1483, 592,
	1471, 498, 35, 1559, 1597, 1208, 619, 1208, 1505, 619,
	1510, 1509, 1506, 963, 592, 1595, 1507, 1525, 1168, 1167,
	1113, 1112, 1524, 1505, 2054, 2055, 2056, 1729, 1910, 511,
	1239, 1503, 623, 1755, 35, 623, 2122, 1921, 1025, 1921,
	1970, 1503, 1471, 1483, 1953, 498, 1483, 1395, 1511, 1692,
	1730, 1691, 1395, 1395, 585, 1554, 1471, 1596, 1579, 1596,
	1582, 1461, 1592, 1440, 1593, 1549, 1550, 1352, 1563, 1063,
	1066, 1571, 1572, 1573, 1566, 1564, 1300, 71, 1240, 1241,
	1242, 1099, 1846, 789, 788, 806, 2152, 190, 807, 1554,
	1588, 190, 190, 190, 190, 190, 1606, 1587, 1205, 71,
	191, 190, 190, 190, 190, 1591, 2075, 1982, 1638, 71,
	1605, 1607, 2042, 1170, 190, 1552, 1609, 1610, 1843, 1589,
	1548, 190, 1542, 1541, 1286, 1200, 499, 499, 499, 71,
	1196, 1166, 96, 1801, 176, 1925, 1926, 1538, 1539, 1540,
	2076, 1176, 1800, 2221, 499, 499, 190, 498, 2057, 2213,
	1236, 1640, 1641, 1931, 1928, 1910, 1643, 1812, 1488, 1491,
	1492, 1493, 1489, 1644, 1490, 1494, 1811, 1810, 1925, 1926,
	1569, 1345, 1303, 1615, 976, 975, 985, 986, 978, 979,
	980, 981, 982, 983, 984, 977, 1372, 1801, 987, 1632,
	971, 1930, 974, 2058, 2059, 1237, 1238, 1743, 988, 989,
	990, 991, 992, 993, 994, 1742, 972, 973, 970, 976,
	975, 985, 986, 978, 979, 980, 981, 982, 983, 984,
	977, 2203, 191, 987, 1488, 1491, 1492, 1493, 1489, 2184,
	1490, 1494, 1902, 1711, 1662, 602, 598, 1671, 1648, 1746,
	1744, 190, 1068, 2035, 1747, 1745, 1973, 1720, 1719, 190,
	499, 599, 1373, 191, 2172, 191, 191, 2169, 499, 1748,
	1657, 1492, 1493, 2205, 499, 2188, 2190, 2196, 2195, 1709,
	2145, 98, 2143, 190, 1072, 1073, 601, 1710, 600, 1299,
	103, 577, 1708, 1805, 190, 190, 190, 190, 190, 583,
	1425, 1666, 1667, 1670, 1715, 836, 190, 835, 1061, 1994,
	190, 1800, 1736, 190, 190, 1426, 1686, 190, 190, 190,
	1062, 1664, 1684, 1857, 936, 1665, 1053, 1731, 1706, 1727,
	1767, 1698, 183, 1831, 1724, 1714, 1672, 1673, 173, 1830,
	113, 186, 1679, 2100, 1947, 1682, 1683, 1753, 1786, 602,
	598, 1946, 1590, 1689, 1214, 1690, 1213, 1725, 1693, 1694,
	1695, 1696, 1697, 1723, 1756, 599, 1310, 1785, 1758, 1788,
	1789, 1790, 1738, 1739, 1707, 1741, 1201, 1770, 1312, 1749,
	190, 1762, 1737, 1754, 2013, 1740, 1759, 2029, 595, 596,
	601, 498, 600, 1463, 1464, 1771, 1456, 498, 1808, 1306,
	498, 2114, 1208, 1559, 2070, 1496, 1653, 498, 586, 587,
	589, 1793, 2210, 2209, 1820, 1718, 1802, 2193, 191, 1835,
	1751, 1752, 2173, 1717, 2028, 1969, 1580, 190, 590, 82,
	2027, 1824, 1905, 1722, 2223, 2222, 2223, 1681, 1834, 1678,
	1082, 1075, 1833, 2146, 1944, 190, 1188, 499, 1457, 585,
	80, 85, 1408, 1361, 1362, 1363, 1364, 514, 1407, 1825,
	77, 1, 469, 1441, 499, 499, 1832, 499, 1051, 499,
	499, 481, 499, 499, 499, 499, 499, 499, 1803, 2211,
	498, 1273, 1263, 1853, 1986, 2072, 1395, 499, 1976, 1852,
	1557, 191, 797, 976, 975, 985, 986, 978, 979, 980,
	981, 982, 983, 984, 977, 138, 1520, 987, 1415, 1416,
	1870, 1826, 1521, 1861, 1869, 2156, 498, 93, 499, 763,
	92, 1855, 1867, 800, 1856, 901, 191, 190, 1889, 1883,
	1581, 2067, 1781, 1529, 191, 1119, 1117, 498, 191, 1118,
	1116, 1121, 1120, 498, 498, 511, 1115, 1911, 1346, 495,
	1882, 1914, 1783, 1784, 191, 1495, 1108, 1076, 837, 1736,
	459, 191, 1908, 1956, 1342, 1613, 190, 465, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 499, 499, 499,
	995, 1716, 1898, 1763, 620, 1920, 1868, 613, 1916, 1865,
	1866, 2194, 1929, 2170, 2168, 2142, 2096, 1517, 2171, 2140,
	2204, 2187, 1528, 191, 1455, 1933, 1064, 1935, 2026, 1936,
	1919, 1904, 1685, 1024, 1948, 1949, 1964, 1934, 190, 1427,
	1091, 190, 190, 190, 520, 1941, 1451, 498, 975, 985,
	986, 978, 979, 980, 981, 982, 983, 984, 977, 1959,
	190, 987, 1365, 1868, 535, 532, 1960, 533, 1466, 1972,
	1728, 969, 518, 1977, 512, 1917, 1555, 1987, 498, 498,
	498, 1083, 190, 1974, 499, 1487, 1485, 1484, 1980, 1559,
	1304, 1995, 1095, 1927, 1979, 1923, 1932, 1089, 1470, 1618,
	1840, 948, 594, 507, 97, 1424, 2130, 1652, 547, 2015,
	593, 61, 1971, 38, 502, 2180, 939, 499, 499, 603,
	1992, 1993, 32, 31, 1998, 30, 29, 28, 191, 2000,
	2001, 23, 2002, 22, 2003, 2004, 21, 2006, 1961, 1962,
	20, 19, 499, 25, 18, 17, 16, 108, 48, 191,
	45, 43, 499, 115, 114, 46, 191, 42, 191, 876,
	189, 27, 26, 493, 15, 2030, 191, 191, 14, 13,
	189, 1736, 12, 499, 2039, 11, 499, 10, 189, 9,
	5, 4, 942, 24, 2038, 1013, 2, 499, 0, 0,
	0, 0, 0, 2046, 0, 607, 607, 2044, 0, 0,
	498, 498, 0, 0, 189, 2045, 0, 0, 0, 0,
	1997, 0, 0, 498, 1999, 0, 498, 2060, 0, 0,
	0, 0, 0, 0, 0, 2008, 2009, 0, 0, 0,
	0, 2061, 2079, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 499, 0, 2071, 0, 191, 0, 0, 0,
	499, 498, 498, 498, 190, 0, 0, 2077, 2032, 2033,
	0, 0, 2037, 0, 0, 498, 0, 498, 499, 0,
	2085, 2093, 1914, 498, 499, 2099, 1914, 2101, 2105, 0,
	0, 189, 2089, 2091, 2092, 0, 0, 0, 0, 0,
	0, 189, 0, 2107, 0, 190, 189, 0, 2110, 2109,
	2111, 2103, 0, 0, 2108, 0, 498, 190, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 499, 2065,
	0, 0, 2074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2139, 0, 0, 0, 0, 2124, 2120, 1688,
	2025, 0, 0, 1914, 0, 2147, 0, 0, 0, 0,
	0, 0, 0, 498, 498, 0, 0, 0, 0, 2155,
	191, 0, 0, 2090, 191, 191, 191, 191, 191, 1712,
	1713, 1066, 0, 0, 191, 191, 191, 191, 0, 498,
	2165, 0, 2150, 498, 2174, 0, 2176, 191, 0, 0,
	2047, 0, 2049, 0, 191, 2183, 1736, 0, 0, 0,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	2192, 2191, 0, 0, 2179, 0, 0, 2202, 0, 191,
	499, 0, 0, 2126, 2127, 2128, 2129, 0, 2133, 0,
	2134, 2135, 2136, 0, 2137, 2138, 0, 0, 0, 0,
	592, 2078, 0, 0, 2220, 0, 0, 0, 0, 171,
	546, 0, 0, 0, 0, 2230, 0, 0, 0, 2074,
	2157, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 2161, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 976, 975, 985, 986,
	978, 979, 980, 981, 982, 983, 984, 977, 0, 0,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	2198, 2199, 191, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 153, 621, 0, 0, 767, 191, 774, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 191, 191, 191,
	191, 191, 0, 0, 0, 189, 0, 0, 0, 191,
	0, 0, 0, 191, 0, 0, 191, 191, 0, 0,
	191, 191, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 35, 36, 37, 72, 39, 40, 1891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 76, 0, 0, 2012, 0, 41, 67, 68, 161,
	65, 69, 0, 0, 2019, 0, 0, 66, 0, 0,
	0, 0, 1906, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 191, 2018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 54, 0, 0, 0,
	499, 0, 0, 499, 0, 0, 71, 0, 0, 0,
	499, 976, 975, 985, 986, 978, 979, 980, 981, 982,
	983, 984, 977, 0, 0, 987, 0, 189, 0, 0,
	191, 976, 975, 985, 986, 978, 979, 980, 981, 982,
	983, 984, 977, 607, 0, 987, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	189, 1098, 148, 976, 975, 985, 986, 978, 979, 980,
	981, 982, 983, 984, 977, 0, 0, 987, 44, 47,
	50, 49, 52, 499, 64, 0, 0, 70, 976, 975,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	0, 0, 987, 0, 0, 0, 0, 0, 0, 0,
	53, 75, 74, 0, 0, 62, 63, 51, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 0, 2017, 0, 0, 0, 499, 499, 0, 0,
	0, 0, 0, 55, 56, 0, 57, 58, 59, 60,
	0, 0, 0, 0, 0, 511, 0, 0, 0, 191,
	0, 0, 2040, 0, 0, 2041, 0, 0, 2043, 0,
	0, 0, 0, 0, 2010, 0, 0, 1370, 0, 0,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 191, 191, 191, 0, 0, 0,
	499, 0, 149, 154, 151, 157, 158, 159, 160, 162,
	163, 164, 165, 191, 0, 0, 0, 1432, 166, 167,
	168, 169, 0, 0, 0, 1211, 73, 0, 0, 0,
	0, 499, 499, 499, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 621, 621, 621, 0, 2098, 511, 0,
	1211, 1211, 0, 0, 0, 0, 189, 0, 1862, 0,
	0, 938, 940, 976, 975, 985, 986, 978, 979, 980,
	981, 982, 983, 984, 977, 0, 0, 987, 976, 975,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	0, 189, 987, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 1309, 976, 975, 985, 986, 978, 979,
	980, 981, 982, 983, 984, 977, 0, 0, 987, 189,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 1330, 1331, 189, 189, 189, 189, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 499, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 499, 1079, 189, 499,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 1109, 976, 975, 985, 986, 978, 979, 980, 981,
	982, 983, 984, 977, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 499, 499, 499, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	499, 0, 0, 0, 0, 0, 499, 0, 0, 0,
	607, 1309, 0, 0, 0, 607, 607, 0, 0, 607,
	607, 607, 0, 0, 0, 1211, 0, 0, 191, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 499,
	191, 0, 0, 0, 607, 607, 607, 607, 607, 0,
	0, 0, 0, 1449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	1309, 189, 0, 189, 0, 0, 499, 499, 549, 34,
	474, 189, 189, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 499, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 1659, 1660, 1210, 0, 468,
	0, 1216, 1216, 0, 1216, 0, 1216, 1216, 480, 1225,
	1216, 1216, 1216, 1216, 1216, 0, 0, 0, 584, 0,
	0, 189, 1210, 1210, 767, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 486, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 0, 458,
	460, 461, 0, 477, 479, 487, 0, 0, 0, 475,
	476, 488, 462, 463, 492, 491, 478, 0, 467, 464,
	466, 472, 0, 0, 0, 485, 470, 489, 0, 0,
	0, 0, 0, 0, 621, 621, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 189,
	189, 189, 189, 189, 0, 0, 0, 0, 0, 189,
	189, 189, 189, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 877, 0, 0, 0, 0, 883, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 1401, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 1433, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 607, 607, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 1079,
	0, 0, 621, 607, 0, 0, 0, 0, 0, 0,
	1863, 1864, 0, 0, 0, 0, 0, 0, 0, 189,
	621, 0, 0, 621, 0, 1884, 1885, 1449, 1886, 1887,
	0, 0, 0, 0, 767, 0, 0, 0, 0, 1893,
	1894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1211, 189, 189, 189, 189, 189, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 189, 0,
	0, 189, 189, 0, 0, 189, 1760, 1309, 0, 774,
	0, 0, 0, 0, 0, 0, 0, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 774, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 932, 932, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 767, 0, 885, 0, 0,
	0, 34, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 189, 0, 1011, 0, 0, 0, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 0, 1026, 1029,
	1029, 1029, 1035, 1029, 1029, 1035, 1029, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 0, 0, 0, 607, 0, 1055,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 0, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 2081,
	2082, 2083, 2084, 0, 0, 0, 2087, 2088, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 0, 0, 113, 0, 135, 0, 1211, 0,
	0, 0, 0, 1210, 0, 155, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 153, 0, 0, 0, 0, 122, 123, 144, 143,
	170, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2177,
	1211, 1815, 0, 0, 0, 1210, 0, 1822, 0, 0,
	1815, 0, 0, 0, 0, 621, 0, 1827, 139, 120,
	146, 127, 119, 0, 140, 141, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	128, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 131, 129, 124, 125, 126, 130,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	621, 1305, 932, 932, 932, 0, 0, 0, 0, 0,
	0, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 1319, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 0, 0, 0, 0, 1216, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 189, 0, 0, 0, 621, 0, 0,
	1210, 0, 0, 1918, 1216, 189, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	1210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 1499, 0, 0, 0, 0, 0, 0, 1988, 1989,
	1990, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 1474, 135, 0, 0,
	0, 0, 0, 1478, 0, 1481, 155, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 149, 154, 151, 157, 158, 159, 160, 162,
	163, 164, 165, 0, 0, 0, 0, 145, 166, 167,
	168, 169, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 153, 0, 0, 0, 0, 1191, 1192, 144,
	143, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 0, 0,
	1815, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 621, 0, 0, 139,
	1193, 146, 0, 1190, 0, 140, 141, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1815, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 2106, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 1096, 0, 0,
	0, 1622, 1623, 1624, 1625, 1626, 0, 0, 0, 0,
	0, 1630, 1631, 1096, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 0, 0,
	0, 1642, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 621, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 2175,
	0, 0, 0, 1815, 0, 1668, 0, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 0, 0, 0, 0, 1732, 1733,
	0, 0, 1092, 1092, 1092, 1092, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 1092, 0, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 1757, 0, 0, 0, 0, 166,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1915,
	0, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 1966, 1967, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 1991, 0, 2020, 2021, 2022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1915, 0, 34, 0, 1915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1915, 0, 0, 0, 2116, 0, 0, 0, 0,
	0, 0, 0, 34, 2151, 745, 732, 2125, 0, 681,
	748, 652, 670, 757, 672, 675, 715, 632, 694, 333,
	667, 0, 656, 628, 663, 629, 654, 683, 243, 687,
	651, 734, 697, 747, 291, 0, 634, 657, 347, 717,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 754, 295, 704, 0, 393, 318,
	0, 0, 0, 685, 737, 692, 728, 680, 716, 641,
	703, 749, 668, 712, 750, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 2158, 2159,
	0, 0, 0, 0, 0, 219, 0, 225, 709, 744,
	665, 711, 239, 279, 245, 238, 409, 714, 760, 627,
	706, 0, 630, 633, 756, 740, 660, 661, 0, 0,
	0, 0, 0, 0, 0, 684, 693, 725, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 702,
	0, 0, 0, 637, 631, 0, 0, 0, 0, 682,
	0, 0, 0, 640, 0, 659, 726, 0, 625, 265,
	635, 319, 0, 730, 739, 679, 440, 743, 677, 676,
	746, 721, 638, 736, 671, 290, 636, 287, 193, 207,
	0, 669, 329, 368, 374, 735, 655, 664, 230, 662,
	372, 343, 426, 215, 255, 365, 348, 370, 701, 719,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 650, 731, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 723, 759, 342, 373, 221, 428,
	392, 645, 649, 643, 644, 695, 696, 646, 751, 752,
	753, 727, 639, 0, 647, 648, 0, 733, 741, 742,
	700, 192, 205, 293, 755, 362, 258, 453, 435, 431,
	626, 642, 236, 653, 0, 0, 666, 673, 674, 686,
	688, 689, 690, 691, 699, 707, 708, 710, 718, 720,
	722, 724, 729, 738, 758, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 698, 705, 303, 252,
	269, 278, 713, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 745, 732, 0, 0, 681, 748, 652, 670, 757,
	672, 675, 715, 632, 694, 333, 667, 0, 656, 628,
	663, 629, 654, 683, 243, 687, 651, 734, 697, 747,
	291, 0, 634, 657, 347, 717, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	754, 295, 704, 0, 393, 318, 0, 0, 0, 685,
	737, 692, 728, 680, 716, 641, 703, 749, 668, 712,
	750, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 709, 744, 665, 711, 239, 279,
	245, 238, 409, 714, 760, 627, 706, 0, 630, 633,
	756, 740, 660, 661, 0, 0, 0, 0, 0, 0,
	0, 684, 693, 725, 678, 0, 0, 0, 0, 0,
	0, 1907, 0, 658, 0, 702, 0, 0, 0, 637,
	631, 0, 0, 0, 0, 682, 0, 0, 0, 640,
	0, 659, 726, 0, 625, 265, 635, 319, 0, 730,
	739, 679, 440, 743, 677, 676, 746, 721, 638, 736,
	671, 290, 636, 287, 193, 207, 0, 669, 329, 368,
	374, 735, 655, 664, 230, 662, 372, 343, 426, 215,
	255, 365, 348, 370, 701, 719, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	650, 731, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	723, 759, 342, 373, 221, 428, 392, 645, 649, 643,
	644, 695, 696, 646, 751, 752, 753, 727, 639, 0,
	647, 648, 0, 733, 741, 742, 700, 192, 205, 293,
	755, 362, 258, 453, 435, 431, 626, 642, 236, 653,
	0, 0, 666, 673, 674, 686, 688, 689, 690, 691,
	699, 707, 708, 710, 718, 720, 722, 724, 729, 738,
	758, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 698, 705, 303, 252, 269, 278, 713, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 745, 732, 0,
	0, 681, 748, 652, 670, 757, 672, 675, 715, 632,
	694, 333, 667, 0, 656, 628, 663, 629, 654, 683,
	243, 687, 651, 734, 697, 747, 291, 0, 634, 657,
	347, 717, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 754, 295, 704, 0,
	393, 318, 0, 0, 0, 685, 737, 692, 728, 680,
	716, 641, 703, 749, 668, 712, 750, 281, 227, 197,
	330, 394, 257, 0, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	709, 744, 665, 711, 239, 279, 245, 238, 409, 714,
	760, 627, 706, 0, 630, 633, 756, 740, 660, 661,
	0, 0, 0, 0, 0, 0, 0, 684, 693, 725,
	678, 0, 0, 0, 0, 0, 0, 1761, 0, 658,
	0, 702, 0, 0, 0, 637, 631, 0, 0, 0,
	0, 682, 0, 0, 0, 640, 0, 659, 726, 0,
	625, 265, 635, 319, 0, 730, 739, 679, 440, 743,
	677, 676, 746, 721, 638, 736, 671, 290, 636, 287,
	193, 207, 0, 669, 329, 368, 374, 735, 655, 664,
	230, 662, 372, 343, 426, 215, 255, 365, 348, 370,
	701, 719, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 650, 731, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 723, 759, 342, 373,
	221, 428, 392, 645, 649, 643, 644, 695, 696, 646,
	751, 752, 753, 727, 639, 0, 647, 648, 0, 733,
	741, 742, 700, 192, 205, 293, 755, 362, 258, 453,
	435, 431, 626, 642, 236, 653, 0, 0, 666, 673,
	674, 686, 688, 689, 690, 691, 699, 707, 708, 710,
	718, 720, 722, 724, 729, 738, 758, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 698, 705,
	303, 252, 269, 278, 713, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 745, 732, 0, 0, 681, 748, 652,
	670, 757, 672, 675, 715, 632, 694, 333, 667, 0,
	656, 628, 663, 629, 654, 683, 243, 687, 651, 734,
	697, 747, 291, 0, 634, 657, 347, 717, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 754, 295, 704, 0, 393, 318, 0, 0,
	0, 685, 737, 692, 728, 680, 716, 641, 703, 749,
	668, 712, 750, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 709, 744, 665, 711,
	239, 279, 245, 238, 409, 714, 760, 627, 706, 0,
	630, 633, 756, 740, 660, 661, 0, 0, 0, 0,
	0, 0, 0, 684, 693, 725, 678, 0, 0, 0,
	0, 0, 0, 1476, 0, 658, 0, 702, 0, 0,
	0, 637, 631, 0, 0, 0, 0, 682, 0, 0,
	0, 640, 0, 659, 726, 0, 625, 265, 635, 319,
	0, 730, 739, 679, 440, 743, 677, 676, 746, 721,
	638, 736, 671, 290, 636, 287, 193, 207, 0, 669,
	329, 368, 374, 735, 655, 664, 230, 662, 372, 343,
	426, 215, 255, 365, 348, 370, 701, 719, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 650, 731, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 723, 759, 342, 373, 221, 428, 392, 645,
	649, 643, 644, 695, 696, 646, 751, 752, 753, 727,
	639, 0, 647, 648, 0, 733, 741, 742, 700, 192,
	205, 293, 755, 362, 258, 453, 435, 431, 626, 642,
	236, 653, 0, 0, 666, 673, 674, 686, 688, 689,
	690, 691, 699, 707, 708, 710, 718, 720, 722, 724,
	729, 738, 758, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 698, 705, 303, 252, 269, 278,
	713, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 745,
	732, 0, 0, 681, 748, 652, 670, 757, 672, 675,
	715, 632, 694, 333, 667, 0, 656, 628, 663, 629,
	654, 683, 243, 687, 651, 734, 697, 747, 291, 0,
	634, 657, 347, 717, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 754, 295,
	704, 0, 393, 318, 0, 0, 0, 685, 737, 692,
	728, 680, 716, 641, 703, 749, 668, 712, 750, 281,
	227, 197, 330, 394, 257, 71, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 709, 744, 665, 711, 239, 279, 245, 238,
	409, 714, 760, 627, 706, 0, 630, 633, 756, 740,
	660, 661, 0, 0, 0, 0, 0, 0, 0, 684,
	693, 725, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 658, 0, 702, 0, 0, 0, 637, 631, 0,
	0, 0, 0, 682, 0, 0, 0, 640, 0, 659,
	726, 0, 625, 265, 635, 319, 0, 730, 739, 679,
	440, 743, 677, 676, 746, 721, 638, 736, 671, 290,
	636, 287, 193, 207, 0, 669, 329, 368, 374, 735,
	655, 664, 230, 662, 372, 343, 426, 215, 255, 365,
	348, 370, 701, 719, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 650, 731,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 723, 759,
	342, 373, 221, 428, 392, 645, 649, 643, 644, 695,
	696, 646, 751, 752, 753, 727, 639, 0, 647, 648,
	0, 733, 741, 742, 700, 192, 205, 293, 755, 362,
	258, 453, 435, 431, 626, 642, 236, 653, 0, 0,
	666, 673, 674, 686, 688, 689, 690, 691, 699, 707,
	708, 710, 718, 720, 722, 724, 729, 738, 758, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	698, 705, 303, 252, 269, 278, 713, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 745, 732, 0, 0, 681,
	748, 652, 670, 757, 672, 675, 715, 632, 694, 333,
	667, 0, 656, 628, 663, 629, 654, 683, 243, 687,
	651, 734, 697, 747, 291, 0, 634, 657, 347, 717,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 754, 295, 704, 0, 393, 318,
	0, 0, 0, 685, 737, 692, 728, 680, 716, 641,
	703, 749, 668, 712, 750, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 709, 744,
	665, 711, 239, 279, 245, 238, 409, 714, 760, 627,
	706, 0, 630, 633, 756, 740, 660, 661, 0, 0,
	0, 0, 0, 0, 0, 684, 693, 725, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 702,
	0, 0, 0, 637, 631, 0, 0, 0, 0, 682,
	0, 0, 0, 640, 0, 659, 726, 0, 625, 265,
	635, 319, 0, 730, 739, 679, 440, 743, 677, 676,
	746, 721, 638, 736, 671, 290, 636, 287, 193, 207,
	0, 669, 329, 368, 374, 735, 655, 664, 230, 662,
	372, 343, 426, 215, 255, 365, 348, 370, 701, 719,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 650, 731, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 723, 759, 342, 373, 221, 428,
	392, 645, 649, 643, 644, 695, 696, 646, 751, 752,
	753, 727, 639, 0, 647, 648, 0, 733, 741, 742,
	700, 192, 205, 293, 755, 362, 258, 453, 435, 431,
	626, 642, 236, 653, 0, 0, 666, 673, 674, 686,
	688, 689, 690, 691, 699, 707, 708, 710, 718, 720,
	722, 724, 729, 738, 758, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 698, 705, 303, 252,
	269, 278, 713, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 745, 732, 0, 0, 681, 748, 652, 670, 757,
	672, 675, 715, 632, 694, 333, 667, 0, 656, 628,
	663, 629, 654, 683, 243, 687, 651, 734, 697, 747,
	291, 0, 634, 657, 347, 717, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	754, 295, 704, 0, 393, 318, 0, 0, 0, 685,
	737, 692, 728, 680, 716, 641, 703, 749, 668, 712,
	750, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 709, 744, 665, 711, 239, 279,
	245, 238, 409, 714, 760, 627, 706, 0, 630, 633,
	756, 740, 660, 661, 0, 0, 0, 0, 0, 0,
	0, 684, 693, 725, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 0, 702, 0, 0, 0, 637,
	631, 0, 0, 0, 0, 682, 0, 0, 0, 640,
	0, 659, 726, 0, 625, 265, 635, 319, 0, 730,
	739, 679, 440, 743, 677, 676, 746, 721, 638, 736,
	671, 290, 636, 287, 193, 207, 0, 669, 329, 368,
	374, 735, 655, 664, 230, 662, 372, 343, 426, 215,
	255, 365, 348, 370, 701, 719, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 762, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	650, 731, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 624, 761, 618, 617, 288, 297,
	723, 759, 342, 373, 221, 428, 392, 645, 649, 643,
	644, 695, 696, 646, 751, 752, 753, 727, 639, 0,
	647, 648, 0, 733, 741, 742, 700, 192, 205, 293,
	755, 362, 258, 453, 435, 431, 626, 642, 236, 653,
	0, 0, 666, 673, 674, 686, 688, 689, 690, 691,
	699, 707, 708, 710, 718, 720, 722, 724, 729, 738,
	758, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 698, 705, 303, 252, 269, 278, 713, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 745, 732, 0,
	0, 681, 748, 652, 670, 757, 672, 675, 715, 632,
	694, 333, 667, 0, 656, 628, 663, 629, 654, 683,
	243, 687, 651, 734, 697, 747, 291, 0, 634, 657,
	347, 717, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 754, 295, 704, 0,
	393, 318, 0, 0, 0, 685, 737, 692, 728, 680,
	716, 641, 703, 749, 668, 712, 750, 281, 227, 197,
	330, 394, 257, 0, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	709, 744, 665, 711, 239, 279, 245, 238, 409, 714,
	760, 627, 706, 0, 630, 633, 756, 740, 660, 661,
	0, 0, 0, 0, 0, 0, 0, 684, 693, 725,
	678, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 702, 0, 0, 0, 637, 631, 0, 0, 0,
	0, 682, 0, 0, 0, 640, 0, 659, 726, 0,
	625, 265, 635, 319, 0, 730, 739, 679, 440, 743,
	677, 676, 746, 721, 638, 736, 671, 290, 636, 287,
	193, 207, 0, 669, 329, 368, 374, 735, 655, 664,
	230, 662, 372, 343, 426, 215, 255, 365, 348, 370,
	701, 719, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 1100, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 762, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 650, 731, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	624, 761, 618, 617, 288, 297, 723, 759, 342, 373,
	221, 428, 392, 645, 649, 643, 644, 695, 696, 646,
	751, 752, 753, 727, 639, 0, 647, 648, 0, 733,
	741, 742, 700, 192, 205, 293, 755, 362, 258, 453,
	435, 431, 626, 642, 236, 653, 0, 0, 666, 673,
	674, 686, 688, 689, 690, 691, 699, 707, 708, 710,
	718, 720, 722, 724, 729, 738, 758, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 698, 705,
	303, 252, 269, 278, 713, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 745, 732, 0, 0, 681, 748, 652,
	670, 757, 672, 675, 715, 632, 694, 333, 667, 0,
	656, 628, 663, 629, 654, 683, 243, 687, 651, 734,
	697, 747, 291, 0, 634, 657, 347, 717, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 754, 295, 704, 0, 393, 318, 0, 0,
	0, 685, 737, 692, 728, 680, 716, 641, 703, 749,
	668, 712, 750, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 709, 744, 665, 711,
	239, 279, 245, 238, 409, 714, 760, 627, 706, 0,
	630, 633, 756, 740, 660, 661, 0, 0, 0, 0,
	0, 0, 0, 684, 693, 725, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 702, 0, 0,
	0, 637, 631, 0, 0, 0, 0, 682, 0, 0,
	0, 640, 0, 659, 726, 0, 625, 265, 635, 319,
	0, 730, 739, 679, 440, 743, 677, 676, 746, 721,
	638, 736, 671, 290, 636, 287, 193, 207, 0, 669,
	329, 368, 374, 735, 655, 664, 230, 662, 372, 343,
	426, 215, 255, 365, 348, 370, 701, 719, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 615, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 762, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 650, 731, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 624, 761, 618, 617,
	288, 297, 723, 759, 342, 373, 221, 428, 392, 645,
	649, 643, 644, 695, 696, 646, 751, 752, 753, 727,
	639, 0, 647, 648, 0, 733, 741, 742, 700, 192,
	205, 293, 755, 362, 258, 453, 435, 431, 626, 642,
	236, 653, 0, 0, 666, 673, 674, 686, 688, 689,
	690, 691, 699, 707, 708, 710, 718, 720, 722, 724,
	729, 738, 758, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 698, 705, 303, 252, 269, 278,
	713, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 1403, 0, 516, 0, 0, 0, 243, 0,
	515, 0, 0, 0, 291, 0, 0, 1404, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 559, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 71, 0, 0, 179, 180, 181, 537, 536, 539,
	540, 541, 542, 0, 0, 219, 538, 225, 543, 544,
	545, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	513, 530, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 528, 605, 0, 0, 0, 573,
	0, 529, 0, 0, 522, 523, 525, 524, 526, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 572, 0, 0, 440, 0, 0, 570,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 560, 571, 566, 567, 564, 565, 0, 563, 562,
	561, 574, 552, 553, 554, 555, 557, 0, 568, 569,
	556, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 0, 0, 0, 516, 0, 0, 0,
	243, 0, 515, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 559, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 550, 551, 0,
	0, 0, 0, 0, 0, 1515, 0, 281, 227, 197,
	330, 394, 257, 71, 0, 0, 179, 180, 181, 537,
	536, 539, 540, 541, 542, 0, 0, 219, 538, 225,
	543, 544, 545, 1516, 239, 279, 245, 238, 409, 0,
	0, 0, 513, 530, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	0, 573, 0, 529, 0, 0, 522, 523, 525, 524,
	526, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 319, 0, 572, 0, 0, 440, 0,
	0, 570, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 560, 571, 566, 567, 564, 565, 0,
	563, 562, 561, 574, 552, 553, 554, 555, 557, 0,
	568, 569, 556, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 0, 0, 0, 516, 0,
	0, 0, 243, 0, 515, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 559, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 71, 0, 592, 179, 180,
	181, 537, 536, 539, 540, 541, 542, 0, 0, 219,
	538, 225, 543, 544, 545, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 513, 530, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 0,
	0, 0, 0, 573, 0, 529, 0, 0, 522, 523,
	525, 524, 526, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 572, 0, 0,
	440, 0, 0, 570, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 560, 571, 566, 567, 564,
	565, 0, 563, 562, 561, 574, 552, 553, 554, 555,
	557, 0, 568, 569, 556, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	516, 0, 0, 0, 243, 0, 515, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	559, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 71, 0, 0,
	179, 180, 181, 537, 536, 539, 540, 541, 542, 0,
	0, 219, 538, 225, 543, 544, 545, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 513, 530, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	528, 605, 0, 0, 0, 573, 0, 529, 0, 0,
	522, 523, 525, 524, 526, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 572,
	0, 0, 440, 0, 0, 570, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 560, 571, 566,
	567, 564, 565, 0, 563, 562, 561, 574, 552, 553,
	554, 555, 557, 0, 568, 569, 556, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 516, 0, 0, 0, 243, 0, 515, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 559, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 71,
	0, 0, 179, 180, 181, 537, 1421, 539, 540, 541,
	542, 0, 0, 219, 538, 225, 543, 544, 545, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 513, 530,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 528, 605, 0, 0, 0, 573, 0, 529,
	0, 0, 522, 523, 525, 524, 526, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 572, 0, 0, 440, 0, 0, 570, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 560,
	571, 566, 567, 564, 565, 0, 563, 562, 561, 574,
	552, 553, 554, 555, 557, 0, 568, 569, 556, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 0, 0, 516, 0, 0, 0, 243, 0,
	515, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 559, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 71, 0, 0, 179, 180, 181, 537, 1418, 539,
	540, 541, 542, 0, 0, 219, 538, 225, 543, 544,
	545, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	513, 530, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 528, 605, 0, 0, 0, 573,
	0, 529, 0, 0, 522, 523, 525, 524, 526, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 572, 0, 0, 440, 0, 0, 570,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 560, 571, 566, 567, 564, 565, 0, 563, 562,
	561, 574, 552, 553, 554, 555, 557, 0, 568, 569,
	556, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 516,
	0, 0, 0, 243, 0, 515, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 559,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	550, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 71, 0, 0, 179,
	180, 181, 537, 536, 539, 540, 541, 542, 0, 0,
	219, 538, 225, 543, 544, 545, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 513, 530, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 528,
	0, 0, 0, 0, 573, 0, 529, 0, 0, 522,
	523, 525, 524, 526, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 572, 0,
	0, 440, 0, 0, 570, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 560, 571, 566, 567,
	564, 565, 0, 563, 562, 561, 574, 552, 553, 554,
	555, 557, 0, 568, 569, 556, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 516, 0, 0, 0, 243, 0, 515, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 559, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 550, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 71, 0,
	0, 179, 180, 181, 537, 536, 539, 540, 541, 542,
	0, 0, 219, 538, 225, 543, 544, 545, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 513, 530, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 0, 573, 0, 529, 0,
	0, 522, 523, 525, 524, 526, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	572, 0, 0, 440, 0, 0, 570, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 560, 571,
	566, 567, 564, 565, 0, 563, 562, 561, 574, 552,
	553, 554, 555, 557, 0, 568, 569, 556, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 559, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 550, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	71, 0, 0, 179, 180, 181, 537, 536, 539, 540,
	541, 542, 0, 0, 219, 538, 225, 543, 544, 545,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	530, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 0, 0, 0, 0, 573, 0,
	529, 0, 0, 522, 523, 525, 524, 526, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 572, 0, 0, 440, 0, 0, 570, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 2178, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	560, 571, 566, 567, 564, 565, 0, 563, 562, 561,
	574, 552, 553, 554, 555, 557, 0, 568, 569, 556,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 559, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 227, 197, 330,
	394, 257, 71, 0, 592, 179, 180, 181, 537, 536,
	539, 540, 541, 542, 0, 0, 219, 538, 225, 543,
	544, 545, 0, 239, 279, 245, 238, 409, 0, 0,
	0, 0, 530, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 528, 0, 0, 0, 0,
	573, 0, 529, 0, 0, 522, 523, 525, 524, 526,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 319, 0, 572, 0, 0, 440, 0, 0,
	570, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 560, 571, 566, 567, 564, 565, 0, 563,
	562, 561, 574, 552, 553, 554, 555, 557, 0, 568,
	569, 556, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 559, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 550, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 71, 0, 0, 179, 180, 181,
	537, 536, 539, 540, 541, 542, 0, 0, 219, 538,
	225, 543, 544, 545, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 530, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 528, 0, 0,
	0, 0, 573, 0, 529, 0, 0, 522, 523, 525,
	524, 526, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 572, 0, 0, 440,
	0, 0, 570, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 560, 571, 566, 567, 564, 565,
	0, 563, 562, 561, 574, 552, 553, 554, 555, 557,
	0, 568, 569, 556, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 976, 975, 985, 986, 978, 979,
	980, 981, 982, 983, 984, 977, 0, 0, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 805, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 804, 440, 0, 0, 0, 0, 0, 0,
	801, 802, 290, 770, 287, 193, 207, 795, 799, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 1078, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 1080, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 965, 966, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 71, 0, 592, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 1448,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 1450, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 1446, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 770, 287, 193, 207, 768, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 0, 1448, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 0, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 1450, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 0, 0,
	0, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 0, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 71, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 1468, 0, 0, 1469,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 1111,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 1110, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 0, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 227, 197, 330,
	394, 257, 0, 0, 592, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 0,
	0, 0, 0, 239, 279, 245, 238, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 319, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 0, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 71, 0, 0, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 0, 0, 0, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 0, 0, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 1450, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 1080, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 1353, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 1235, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 0, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 227, 197, 330,
	394, 257, 0, 0, 0, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 0,
	0, 0, 0, 239, 279, 245, 238, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 319, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 1233, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 0, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 0, 0, 0, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 0, 0, 0, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 0, 0, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 1231, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 1229, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	1227, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 1223, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 0, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 227, 197, 330,
	394, 257, 0, 0, 0, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 0,
	0, 0, 0, 239, 279, 245, 238, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 319, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 1221, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 0, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 0, 0, 0, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 0, 0, 0, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 0, 0, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 1219, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 1194, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 1093, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 0, 0, 0, 1084, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 0, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 941, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 0, 0,
	0, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 0, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 0, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 227, 197,
	330, 394, 257, 0, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	0, 0, 0, 0, 239, 279, 245, 238, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 265, 0, 319, 0, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 503, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 0, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 187, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240,
}

var yyPact = [...]int{
	2355, -1000, -341, 1635, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1603, 1228, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 620, 1251, 345, 1500, 3664, 223, 1002, 419,
	132, 26934, 418, 2826, 27386, -1000, 93, -1000, 77, 27386,
	86, 26482, -1000, -1000, -283, 12437, 1440, 1, -1, 27386,
	101, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1248,
	1577, 1582, 1601, 1079, 1518, -1000, 10616, 10616, 383, 383,
	383, 8808, -1000, -1000, 16518, 27386, 27386, 1257, 417, 1002,
	411, 409, 402, -1000, -124, -1000, -1000, -1000, -1000, 1500,
	-1000, -1000, 204, -1000, 293, 1202, -1000, 1201, -1000, 590,
	424, 290, 349, 343, 287, 283, 281, 280, 278, 266,
	265, 260, 298, -1000, 569, 569, -167, -182, 195, 348,
	348, 348, 389, 1463, 1461, -1000, 563, -1000, 569, 569,
	183, 569, 569, 569, 569, 187, 177, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 27386, -1000, 153, 528, 607, 1500, 168, -1000,
	-1000, -1000, 27386, 416, 1002, 377, -1000, 27386, -1000, 490,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27386, 665, 665, 64,
	665, 665, 665, 665, 71, 507, -39, -1000, 70, 163,
	158, 166, 630, 284, 61, -1000, -1000, 148, 630, 38,
	-1000, 665, 6944, 6944, 6944, -1000, 1483, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 388, -1000, -1000, -1000, -1000,
	27386, 26030, 207, 597, -1000, -1000, -1000, 28, -1000, -1000,
	1108, 949, -1000, 12437, 1280, 1218, 1218, -1000, -1000, 473,
	-1000, -1000, 13793, 13793, 13793, 13793, 13793, 13793, 13793, 13793,
	13793, 13793, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1218, 488, -1000, 11985,
	1218, 1218, 1218, 1218, 1218, 1218, 1218, 1218, 12437, 1218,
	1218, 1218, 1218, 1218, 1218, 1218, 1218, 1218, 1218, 1218,
	1218, 1218, 1218, 1218, 1218, -1000, -1000, -1000, 27386, -1000,
	1218, 971, 1603, -1000, 1228, -1000, -1000, -1000, 1478, 12437,
	12437, 1603, -1000, 1386, 10616, -1000, -1000, 1414, -1000, -1000,
	-1000, -1000, -1000, 701, 1619, -1000, 15149, 485, 1618, 25578,
	-1000, 19243, 25126, 1199, 8342, -28, -1000, -1000, -1000, 594,
	18339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1483, 1138, 27386, -1000, -1000, 161, 1002, -1000,
	1250, -1000, 1136, -1000, 1232, 153, 380, 1267, 1002, 1002,
	1002, 380, -1000, -1000, -1000, 569, 569, 295, 3664, 4055,
	-1000, -1000, -1000, 24667, 1249, 1002, -1000, 1244, -1000, 1537,
	373, 544, 544, 1002, -1000, -1000, 27386, 1002, 1517, 1515,
	27386, 27386, -1000, 24215, -1000, 23763, 23311, 890, 27386, 22859,
	22407, 21955, 21503, 21051, -1000, 1320, -1000, 1200, -1000, -1000,
	-1000, 27386, 27386, 27386, 2, -1000, -1000, 27386, 1002, -1000,
	-1000, 887, 876, 569, 569, 872, 966, 965, 960, 569,
	569, 865, 955, 1032, 169, 864, 847, 825, 903, 954,
	109, 788, 783, 820, 27386, 1243, -1000, 141, 588, 212,
	240, 201, 27386, 145, 1500, 1438, 1194, 387, 377, 1299,
	27386, 1565, 377, -1000, 7410, -1000, -1000, 947, 12437, -1000,
	705, 630, 630, -1000, -1000, -1000, -1000, -1000, -1000, 665,
	27386, 705, -1000, -1000, -1000, 630, 665, 27386, 665, 665,
	665, 665, 630, 665, 27386, 27386, 27386, 27386, 27386, 27386,
	27386, 27386, 27386, 6944, 6944, 6944, 547, 665, -1000, 1298,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 82, -1000, -1000,
	-1000, -1000, -1000, 1635, -1000, -1000, -1000, -112, 1185, 20599,
	-1000, -287, -288, -289, -290, -1000, -1000, -1000, -294, -295,
	-1000, -1000, -1000, 12437, 12437, 12437, 12437, 699, 551, 13793,
	856, 675, 13793, 13793, 13793, 13793, 13793, 13793, 13793, 13793,
	13793, 13793, 13793, 13793, 13793, 13793, 13793, 700, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1002, -1000, 1633, 931,
	931, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	14245, 9260, 7410, 1079, 1131, 1603, 10616, 10616, 12437, 12437,
	11520, 11068, 10616, 1468, 615, 949, 27386, -1000, -1000, 13341,
	-1000, -1000, -1000, -1000, -1000, 908, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27386, 27386, 10616, 10616, 10616, 10616, 10616,
	-1000, 1181, -1000, -154, 16066, 12437, -1000, 1582, 1079, 1414,
	1559, 1628, 538, 1015, 1179, -1000, 822, 1582, 17887, 1160,
	-1000, 1414, -1000, -1000, -1000, 27386, -1000, -1000, 20147, -1000,
	-1000, 6478, 27386, 259, 27386, -1000, 1161, 1361, -1000, -1000,
	-1000, 1572, 17435, 27386, 1149, 1134, -1000, -1000, 478, 7876,
	-28, -1000, 7876, 1166, -1000, -74, -95, 9712, 494, -1000,
	-1000, -1000, 195, 14697, 1074, -1000, 18, -1000, -1000, -1000,
	1232, -1000, 1232, 1232, 1232, 1232, 2, 2, 2, 2,
	-1000, -1000, -1000, -1000, -1000, 1242, 1241, -1000, 1232, 1232,
	1232, 1232, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1239,
	1239, 1239, 1234, 1234, 336, -1000, 12437, 119, 27386, 1558,
	787, 141, 27386, 638, 1297, -1000, 27386, 1267, 1267, 1267,
	1002, 1027, 977, -1000, 1176, -1000, -1000, 1599, -1000, -1000,
	546, 684, 662, 533, 27386, 105, 257, -1000, 328, -1000,
	27386, 1238, 1513, 544, 1002, -1000, 1002, -1000, -1000, -1000,
	-1000, 477, -1000, -1000, 1002, 1175, -1000, 1177, 763, 661,
	743, 648, 1175, -1000, -1000, -143, 1175, -1000, 1175, -1000,
	1175, -1000, 1175, -1000, 1175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 553, 27386, 105, 700, -1000, 386, -1000,
	-1000, 700, 700, -1000, -1000, -1000, -1000, 942, 940, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -331, 27386, 394, 121, 135,
	27386, 27386, 27386, 27386, 27386, 430, -1000, -1000, -1000, 173,
	27386, 27386, 27386, 27386, 455, -1000, -1000, 1002, -1000, -1000,
	-1000, -1000, 949, 27386, -1000, -1000, 665, 665, -1000, -1000,
	27386, 665, -1000, -1000, -1000, -1000, -1000, -1000, 665, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 937, -1000, 27386, 27386, -1000, -1000, -1000,
	-1000, -1000, 83, -79, 170, -1000, -1000, -1000, -1000, 1576,
	-1000, 949, 551, 728, 652, -1000, -1000, 757, -1000, -1000,
	2635, -1000, -1000, -1000, -1000, 856, 13793, 13793, 13793, 1245,
	2635, 2713, 870, 1688, 498, 692, 692, 537, 537, 537,
	537, 537, 835, 835, -1000, -1000, -1000, -1000, 908, -1000,
	-1000, -1000, 908, 10616, 10616, 1174, 1218, 476, -1000, 1248,
	-1000, -1000, 1582, 1081, 1081, 733, 943, 608, 1617, 1081,
	605, 1615, 1081, 1081, 10616, -1000, -1000, 659, -1000, 12437,
	908, -1000, 2127, 1169, 1167, 1081, 908, 908, 1081, 1081,
	27386, -1000, -278, -1000, -107, 487, 1218, -1000, 19695, -1000,
	-1000, 908, 1108, 1478, -1000, -1000, 1430, -1000, 1375, 12437,
	12437, 12437, -1000, -1000, -1000, 1478, 1593, -1000, 1394, 1393,
	1610, 10616, 19243, 1414, -1000, -1000, -1000, 461, 1610, 1196,
	1218, -1000, 27386, 19243, 19243, 19243, 19243, 19243, -1000, 1342,
	1334, -1000, 1377, 1376, 1396, 27386, -1000, 1116, 1079, 17435,
	259, 1159, 19243, 27386, -1000, -1000, 19243, 27386, 6012, -1000,
	1166, -28, -80, -1000, -1000, -1000, -1000, 949, -1000, 901,
	-1000, 2214, -1000, 359, -1000, -1000, -1000, -1000, 504, 7,
	-1000, -1000, 2, 2, -1000, -1000, 494, 572, 494, 494,
	494, 936, 936, -1000, -1000, -1000, -1000, -1000, 786, -1000,
	-1000, -1000, 782, -1000, -1000, 624, 1310, 119, -1000, -1000,
	569, 927, 1445, -1000, -1000, 1006, 391, -1000, 1564, 27386,
	-1000, 1294, 1293, 1284, -1000, -1000, -1000, -1000, -1000, 286,
	27386, 1114, -1000, 120, 27386, 994, 27386, -1000, 1104, 27386,
	-1000, 1002, -1000, -1000, 7410, -1000, 27386, 1218, -1000, -1000,
	-1000, -1000, 414, 1499, 1493, 105, 120, 494, 1002, -1000,
	-1000, -1000, -1000, -1000, -334, 1102, 27386, 139, -1000, 1237,
	794, -1000, 1208, -1000, -1000, -1000, -1000, 104, 191, 171,
	385, -1000, 425, 1310, 27386, -1000, -1000, -1000, -1000, 630,
	-1000, -1000, 630, -1000, -1000, -1000, -1000, -1000, -1000, 1481,
	-88, -306, -1000, -303, -1000, -1000, -1000, -1000, 1245, 2635,
	2609, -1000, 13793, 13793, -1000, -1000, 1081, 1081, 10616, 7410,
	1603, 1478, -1000, -1000, 525, 700, 525, 13793, 13793, -1000,
	13793, 13793, -1000, -136, 1118, 606, -1000, 12437, 759, -1000,
	-1000, 13793, 13793, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 401, 398, 396, 27386, -1000, -1000, -1000, 867,
	926, 1373, 949, 949, -1000, -1000, 27386, -1000, -1000, -1000,
	-1000, 1608, 12437, -1000, 1164, -1000, 5546, 1582, 1282, 27386,
	1218, 1635, 15614, 27386, 1157, -1000, 570, 1361, 1262, 1281,
	1295, -1000, -1000, -1000, -1000, 1328, -1000, 1290, -1000, -1000,
	-1000, -1000, -1000, 1079, 1610, 19243, 1112, -1000, 1112, -1000,
	458, -1000, -1000, -1000, -92, -108, -1000, -1000, -1000, 195,
	-1000, -1000, -1000, 695, 13793, 1624, -1000, 924, 1512, -1000,
	1505, -1000, -1000, 494, 494, -1000, -1000, -1000, -1000, -1000,
	-1000, 1077, -1000, 1073, 1162, 1071, 57, -1000, 1256, 1469,
	569, 569, -1000, 781, -1000, 1002, -1000, 27386, -1000, -1000,
	27386, 27386, 27386, 1598, 1158, -1000, 27386, -1000, -1000, 27386,
	-1000, -1000, 1392, 119, 1061, -1000, -1000, -1000, 257, 27386,
	-1000, 931, 120, -1000, -1000, -1000, -1000, -1000, -1000, 1226,
	-1000, -1000, -1000, 992, -1000, -145, 1002, 27386, 27386, 27386,
	-1000, 27386, -1000, -1000, -1000, 665, 665, -1000, 1467, -1000,
	1002, -1000, 13793, 2635, 2635, -1000, -1000, 908, -1000, 1582,
	-1000, 908, 1232, 1232, -1000, 1232, 1234, -1000, 1232, 72,
	1232, 69, 908, 908, 2594, 2389, 2364, 1554, 1218, -131,
	-1000, 949, 12437, 2332, 2312, 1218, 1218, 1218, 1056, 911,
	2, -1000, -1000, -1000, 1605, 1597, 949, -1000, -1000, -1000,
	1549, 1155, 1096, -1000, -1000, 10164, 1059, 1389, 453, 1056,
	1603, 27386, 12437, -1000, -1000, 12437, 1231, -1000, 12437, -1000,
	-1000, -1000, 1603, 1603, 1112, -1000, -1000, 529, -1000, -1000,
	-1000, -1000, -1000, 2635, -75, -1000, -1000, -1000, -1000, -1000,
	2, 910, 2, 721, -1000, 711, -1000, -1000, -219, -1000,
	-1000, 1146, 1318, -1000, -1000, 1226, -1000, -1000, -1000, 27386,
	27386, -1000, -1000, 242, -1000, 317, 1049, -1000, -173, -1000,
	-1000, 1571, 27386, -1000, -1000, 7410, -1000, -1000, 1225, 1266,
	-1000, -1000, -1000, -1000, -1000, -1000, 2635, -1000, 1478, -1000,
	-1000, 222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13793, 13793, 13793, 13793, 13793, 1582, 902, 949, 13793, 13793,
	18791, 27386, 27386, 16970, 2, 12, -1000, 12437, 12437, 1504,
	-1000, 1218, -1000, 1067, 27386, 1218, 27386, -1000, 1582, -1000,
	949, 949, 27386, 949, 1582, -1000, -1000, 494, -1000, 494,
	984, 981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1568, 1158, -1000, 176, 27386, -1000, 257, -1000, -183, -185,
	1228, 1024, 1154, -1000, 567, 27386, 27386, -1000, -1000, -1000,
	2127, 2127, 2127, 2127, 203, 908, -1000, 2127, 2127, 1019,
	-1000, 1019, 1019, 487, -273, -1000, 1429, 1426, 949, 1108,
	1623, -1000, 1218, 1635, 444, 1096, -1000, -1000, 1016, -1000,
	-1000, -1000, -1000, -1000, 1228, 1218, 1205, -1000, -1000, -1000,
	186, -1000, 7410, 5080, 1013, -1000, -1000, -1000, -1000, -1000,
	908, 134, -150, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12, 269, -1000, 1405, 1401, 1595, 27386, 1096, 27386, -1000,
	186, 12889, 27386, -1000, -60, -1000, -1000, -1000, -1000, -1000,
	1208, -1000, 1370, -141, -159, 1415, 1417, 1417, 1426, 1590,
	1423, 1421, -1000, 895, 1092, -1000, -1000, 2127, 908, 998,
	330, -1000, -1000, -145, -1000, 1362, -1000, 1412, 791, -1000,
	-1000, -1000, -1000, 894, -1000, 1586, 1585, -1000, -1000, -1000,
	1276, 133, -1000, -147, -1000, 790, -1000, -1000, -1000, 871,
	868, 1270, -1000, 1614, -1000, -151, -1000, -1000, -1000, -1000,
	-1000, 1616, 486, 486, -164, -1000, -1000, -1000, 327, 830,
	-1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1956, 1955, 37, 79, 83, 1953, 1952, 1951, 1950,
	133, 129, 128, 1949, 1947, 1945, 1942, 1939, 1938, 1934,
	1932, 1931, 1929, 1927, 1925, 56, 123, 36, 30, 122,
	1924, 1923, 39, 1921, 1920, 1918, 120, 119, 532, 1917,
	118, 1916, 1915, 1914, 1913, 1911, 1910, 1906, 1903, 1901,
	1897, 1896, 1895, 1893, 1892, 138, 1889, 1886, 5, 1885,
	46, 1884, 1883, 1881, 1880, 1879, 85, 1877, 1876, 1875,
	114, 1874, 1873, 44, 87, 43, 81, 1872, 1871, 73,
	862, 1870, 102, 126, 1869, 679, 1868, 51, 88, 77,
	1867, 41, 1865, 1863, 86, 1862, 1860, 1857, 74, 1856,
	1855, 3010, 1851, 68, 75, 8, 40, 1844, 1842, 1841,
	1840, 32, 1647, 1838, 1837, 18, 1835, 1834, 134, 1832,
	84, 16, 1816, 12, 10, 15, 1814, 76, 1810, 19,
	50, 25, 1809, 78, 1803, 1802, 1801, 1798, 33, 1796,
	63, 105, 24, 1794, 1792, 13, 9, 1791, 1790, 1789,
	1788, 1786, 1785, 11, 1784, 1783, 1781, 28, 1778, 31,
	21, 72, 66, 23, 7, 1777, 132, 1774, 22, 111,
	59, 109, 1773, 1771, 1770, 980, 71, 140, 1757, 1755,
	34, 1754, 117, 124, 1753, 1471, 1750, 1748, 47, 843,
	2220, 106, 110, 1747, 1746, 1878, 53, 69, 17, 1745,
	1739, 1738, 125, 113, 64, 850, 42, 1736, 1732, 1731,
	1730, 1729, 1726, 1725, 26, 209, 20, 104, 27, 1723,
	1722, 1721, 58, 65, 1720, 108, 103, 61, 94, 1715,
	115, 101, 57, 1713, 107, 1710, 1709, 1707, 1705, 45,
	1702, 1696, 1695, 1682, 99, 89, 48, 35, 1680, 29,
	93, 98, 90, 1678, 14, 121, 6, 1675, 3, 0,
	1674, 4, 131, 1480, 91, 1672, 1671, 1, 1669, 2,
	1661, 1658, 80, 1653, 1652, 1651, 1650, 2968, 112, 116,
	1641, 127,
}

var yyR1 = [...]int{
	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 259, 259, 259, 262, 262,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 279, 279, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 205, 205, 15, 15, 15, 15,
	15, 71, 71, 261, 261, 260, 258, 258, 257, 257,
	256, 23, 24, 33, 33, 33, 33, 34, 35, 263,
	263, 235, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 237, 237, 224, 224, 236, 236,
	236, 236, 236, 236, 236, 223, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 207, 207, 207,
	207, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 211, 211, 211,
	211, 211, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 222, 222, 214, 214, 217,
	217, 218, 218, 218, 219, 219, 220, 220, 215, 215,
	215, 216, 216, 216, 225, 249, 249, 248, 248, 246,
	246, 246, 246, 234, 234, 243, 243, 243, 243, 243,
	233, 233, 229, 229, 229, 230, 230, 231, 231, 228,
	228, 232, 232, 245, 245, 244, 226, 226, 227, 227,
	251, 251, 251, 251, 252, 268, 269, 267, 267, 267,
	267, 267, 60, 60, 60, 184, 184, 184, 241, 241,
	240, 240, 240, 242, 242, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 179, 179, 179, 266, 266, 266,
	266, 266, 266, 265, 265, 265, 238, 238, 238, 264,
	264, 130, 130, 131, 131, 30, 30, 30, 30, 30,
	30, 29, 29, 29, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 31, 31, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 221, 221, 221, 253, 253, 254,
	254, 17, 22, 22, 18, 18, 18, 18, 19, 19,
	41, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 270, 270, 178, 178, 186,
	186, 177, 177, 176, 176, 176, 180, 180, 180, 181,
	181, 274, 274, 274, 43, 43, 45, 45, 46, 47,
	47, 200, 200, 201, 201, 48, 49, 61, 61, 61,
	61, 61, 61, 63, 63, 63, 7, 7, 7, 7,
	57, 57, 57, 6, 6, 44, 44, 51, 271, 271,
	272, 273, 273, 273, 273, 52, 54, 20, 20, 20,
	20, 20, 20, 78, 78, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 72, 72, 72,
	67, 67, 280, 55, 56, 56, 70, 70, 70, 64,
	64, 64, 69, 69, 69, 75, 75, 77, 77, 77,
	77, 77, 79, 79, 79, 79, 79, 79, 79, 74,
	74, 76, 76, 76, 76, 193, 193, 193, 192, 192,
	86, 86, 87, 87, 88, 88, 89, 89, 89, 128,
	104, 104, 160, 160, 159, 159, 162, 162, 90, 90,
	90, 90, 91, 91, 92, 92, 93, 93, 199, 199,
	198, 198, 198, 197, 197, 97, 97, 97, 99, 98,
	98, 98, 98, 100, 100, 102, 102, 101, 101, 103,
	105, 105, 105, 105, 105, 106, 106, 85, 85, 85,
	85, 85, 85, 85, 85, 174, 174, 108, 108, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 119,
	119, 119, 119, 119, 119, 109, 109, 109, 109, 109,
	109, 109, 73, 73, 120, 120, 120, 127, 121, 121,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 116, 116, 116, 116, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 281, 281, 118,
	117, 117, 117, 117, 117, 117, 117, 68, 68, 68,
	68, 68, 204, 204, 204, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 134, 134,
	65, 65, 132, 132, 133, 135, 135, 129, 129, 129,
	111, 111, 111, 111, 111, 111, 111, 111, 113, 113,
	113, 136, 136, 137, 137, 138, 138, 139, 139, 140,
	141, 141, 141, 142, 142, 142, 142, 32, 32, 32,
	32, 32, 27, 27, 27, 27, 28, 28, 28, 80,
	80, 80, 80, 82, 82, 81, 81, 58, 58, 59,
	59, 59, 83, 83, 84, 84, 84, 84, 157, 157,
	157, 143, 143, 143, 143, 149, 149, 149, 145, 145,
	147, 147, 147, 148, 148, 148, 146, 152, 152, 154,
	154, 153, 153, 151, 151, 156, 156, 155, 155, 150,
	150, 110, 110, 110, 110, 110, 158, 158, 158, 158,
	163, 163, 123, 123, 125, 125, 124, 126, 164, 164,
	168, 165, 165, 169, 169, 169, 169, 169, 166, 166,
	167, 167, 194, 194, 194, 173, 173, 185, 185, 182,
	182, 183, 183, 175, 175, 187, 187, 187, 53, 122,
	122, 250, 250, 247, 190, 190, 191, 191, 195, 195,
	196, 196, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 277, 278, 202, 203, 203, 203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 5, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 3, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 10, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 6, 6, 5, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 3, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 5, 6, 4, 4,
	6, 6, 6, 8, 8, 8, 8, 9, 8, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 4, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -275, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -277, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 228, 229, 231, 232, 233,
	234, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 331, 187, 186, 26, -276, 471, -70,
	5, -138, 16, -3, -55, -280, -55, -55, -55, -55,
	-55, -55, -235, -237, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -263, 107, 220, 322, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -255, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 344, 347, -242, 154,
	160, 161, 332, 105, 104, 72, 156, -239, 278, 448,
	-40, 450, 95, 97, 449, 41, 165, 451, 452, 453,
	454, 175, 455, 456, 457, 458, 464, 465, 466, 467,
	106, 5, 164, -263, -80, 288, 77, -262, -259, 84,
	85, 86, 164, -185, 165, 166, -263, 164, -101, -195,
	-259, -189, 341, 178, 375, 376, 225, 77, 278, 448,
	228, 242, 236, 263, 255, 342, 377, 179, 213, 445,
	253, 256, 309, 450, 378, 193, 301, 283, 291, 95,
	231, 318, 463, 379, 461, 97, 449, 76, 48, 41,
	188, 251, 247, 451, 214, 380, 352, 207, 105, 102,
	470, 245, 47, 28, 460, 104, 46, 452, 381, 453,
	293, 268, 439, 45, 306, 194, 382, 80, 346, 447,
	295, 246, 292, 224, 459, 159, 383, 431, 303, 440,
	384, 269, 273, 385, 310, 49, 386, 387, 441, 103,
	388, 75, 454, 240, 241, 389, 222, 177, 312, 267,
	175, 34, 296, 343, 226, 55, 201, 313, 43, 271,
	42, 435, 390, 438, 266, 262, 50, 391, 392, 393,
	394, 455, 265, 239, 261, 469, 219, 456, 59, 161,
	275, 274, 276, 208, 308, 258, 395, 396, 397, 182,
	78, 398, 248, 19, 399, 400, 304, 215, 401, 53,
	402, 403, 316, 191, 404, 51, 457, 38, 196, 458,
	405, 406, 407, 408, 409, 302, 410, 294, 270, 272,
	203, 290, 345, 411, 244, 195, 462, 412, 183, 446,
	197, 200, 190, 317, 184, 413, 414, 415, 416, 417,
	418, 419, 232, 464, 40, 420, 421, 422, 423, 223,
	218, 311, 320, 58, 79, 280, 424, 444, 238, 216,
	425, 229, 52, 465, 466, 467, 210, 468, 286, 106,
	220, 221, 44, 259, 202, 426, 427, 249, 250, 264,
	237, 260, 230, 432, 204, 305, 192, 428, 319, 217,
	281, 349, 209, 307, 443, 348, 257, 254, 211, 429,
	166, 205, 206, 430, 433, 297, 287, 298, 299, 227,
	300, 288, 212, 347, 252, 282, 164, -166, 283, -186,
	284, 285, 296, 297, 303, -178, 304, 302, 203, -274,
	310, 164, 305, 153, 144, 293, 294, 287, 300, 288,
	212, -270, -259, 453, 468, 309, 256, 289, 295, 311,
	435, 299, 298, -195, 230, -200, 235, -190, -259, -189,
	233, -101, -61, 431, 157, -202, -202, -72, 435, 437,
	-121, -85, -107, 110, -112, 30, 24, -111, -108, -129,
	-126, -127, 144, 145, 147, 146, 148, 133, 134, 141,
	111, 149, -116, -114, -115, -117, 88, 87, 96, 89,
	90, 91, 92, 98, 99, 100, -190, -195, -124, -277,
	65, 66, 332, 333, 334, 335, 340, 336, 113, 54,
	321, 330, 329, 328, 325, 326, 323, 324, 338, 339,
	169, 322, 163, 139, 331, -259, -189, 41, 286, 286,
	-101, 227, -5, -4, -277, 6, 21, 22, -142, 18,
	17, -278, 83, -64, -77, 60, 61, -79, 22, 37,
	64, 62, 21, -56, -76, 135, -85, -195, -76, -175,
	168, -175, -175, -165, -205, 230, -169, 311, 310, -191,
	-167, -190, -188, -166, 308, 158, 350, 109, 23, 25,
	112, 144, 17, 113, 36, 160, 176, 143, 172, 332,
	153, 69, 351, 323, 324, 321, 327, 334, 335, 322,
	284, 30, 11, 353, 26, 186, 22, 37, 137, 155,
	116, 117, 189, 24, 187, 100, 356, 20, 72, 181,
	12, 174, 14, 357, 358, 15, 169, 168, 128, 165,
	67, 9, 149, 27, 125, 63, 359, 29, 360, 361,
	362, 363, 65, 126, 18, 325, 326, 32, 436, 364,
	340, 198, 139, 70, 56, 437, 110, 365, 366, 98,
	367, 101, 73, 442, 107, 16, 68, 39, 368, 199,
	369, 171, 370, 314, 371, 127, 156, 331, 66, 372,
	163, 285, 6, 337, 31, 185, 173, 64, 373, 164,
	115, 338, 339, 167, 99, 5, 170, 33, 10, 71,
	74, 328, 329, 330, 54, 344, 114, 13, 374, 315,
	108, 309, 256, -236, 126, -223, -227, -190, 180, -252,
	176, -101, -245, -244, -190, -80, 164, -259, 165, 165,
	165, -55, 331, -36, -37, -166, 143, 197, 82, 82,
	-227, -226, -225, -264, 199, 180, -251, -243, 172, 181,
	-233, 173, 174, -228, 165, 29, -264, -228, 171, 181,
	199, 199, 106, 199, 106, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 196, -234, 118, -234, 348, 348,
	-239, -264, -264, -264, 167, 34, 34, -187, -228, 167,
	23, -234, -234, -166, 143, -234, -234, -234, -234, 207,
	207, -234, -234, -234, -234, -234, -234, -234, -234, -234,
	-234, -234, -234, -234, -234, -234, -101, -83, 214, 153,
	155, 158, 73, 118, -38, 209, -22, -101, 164, -259,
	-182, 169, -55, -101, 150, -101, -180, 126, 13, -180,
	-177, 286, 290, 291, 292, -180, -180, -180, -180, 210,
	301, -229, 165, 34, 177, 286, 210, 301, 210, 211,
	210, 211, 210, -176, 12, 128, 322, 306, 303, 203,
	164, 204, 166, 307, -259, 438, 211, -176, 286, 206,
	-180, -203, -277, -191, -203, -203, 31, 167, -190, -57,
	-190, 88, -7, -3, -11, -10, -12, 118, -78, 286,
	-66, 144, 453, 439, 440, 441, 438, 302, 446, 444,
	442, 210, 443, 82, 109, 107, 108, 125, -85, -109,
	128, 110, 126, 127, 112, 130, 129, 140, 133, 134,
	135, 136, 137, 138, 139, 131, 132, 143, 118, 119,
	120, 121, 122, 123, 124, -174, -277, -127, -277, 151,
	152, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -277, 150, -2, -121, -4, -277, -277, -277, -277,
	-277, -277, -277, -277, -134, -85, -277, -281, -118, -277,
	-281, -118, -281, -118, -281, -277, -281, -118, -281, -118,
	-281, -281, -118, -277, -277, -277, -277, -277, -277, -277,
	-202, -271, -272, -104, -101, -277, 88, -138, -3, -55,
	-157, 20, 32, -85, -139, -140, -85, -138, 56, -74,
	-76, -79, 60, 61, 94, 12, -193, -192, 23, -190,
	88, 150, 12, -102, 27, -101, -87, -88, -89, -90,
	-104, -128, -277, 12, -94, -95, -101, -103, -195, 82,
	230, -169, -205, -171, -170, 312, 314, 118, -194, -190,
	88, 30, 83, 82, -101, -207, -210, -212, -211, -213,
	-208, -209, 253, 254, 144, 257, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 31, 188, 249, 250,
	251, 252, 269, 270, 271, 272, 273, 274, 275, 276,
	236, 255, 342, 237, 238, 239, 240, 241, 242, 244,
	245, 246, 247, 248, -262, -259, 81, 83, 82, -214,
	81, -83, -183, 169, -250, -247, 74, -259, -259, -259,
	-183, -234, -234, 196, -29, -26, -255, 16, -25, -26,
	158, 102, 103, 155, 81, -223, 81, -232, -262, -259,
	81, 29, 171, 170, -231, -228, -231, -232, -259, -129,
	-190, -195, -259, 29, 29, -162, -190, -162, -162, 21,
	-162, 21, -162, 21, 89, -190, -162, 21, -162, 21,
	-162, 21, -162, 21, -162, 21, 30, 75, 76, 30,
	78, 79, 80, -129, -129, -223, -166, -101, -259, 89,
	89, -234, -234, 89, 88, 88, 88, -234, -234, 89,
	88, -259, 88, -265, 182, 224, 226, 89, 89, 89,
	89, 30, 88, -266, 30, 460, 459, 461, 462, 463,
	89, 30, 89, 30, 89, -190, 81, -82, 216, 118,
	205, 205, 164, 164, 218, -101, 217, 219, 221, 41,
	82, 167, -182, 73, -96, -101, 24, -182, -196, -195,
	-188, 88, -85, -230, 12, 128, -176, -176, -180, -101,
	-230, -176, -180, -101, -180, -180, -180, -180, -176, -180,
	-195, -195, -101, -101, -101, -101, -101, -101, -101, -203,
	-203, -203, -181, 126, -180, 73, -201, 233, 267, 432,
	433, 434, 82, 344, -94, 438, 438, 438, 438, 438,
	438, -85, -85, -85, -85, -119, 98, 110, 99, 100,
	-112, -120, -124, -127, 93, 128, 126, 127, 112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -204, -259, 88, 144, -259, -111,
	-111, -190, -75, 22, 37, -74, -191, -196, -188, -70,
	-278, -278, -138, -74, -74, -85, -85, -129, 88, -74,
	-129, 88, -74, -74, -69, 22, 37, -132, -133, 114,
	-129, -278, -112, -190, -190, -74, -75, -75, -74, -74,
	82, -273, 314, 315, 436, -198, 199, -197, 23, -195,
	88, -122, -121, -142, -278, -143, 27, 10, 128, 82,
	19, 82, -141, 25, 26, -142, -113, -190, 89, 92,
	-86, 82, 12, -79, -101, -192, 135, -196, -101, -161,
	199, -101, 31, 82, -97, -99, -98, -100, 63, 67,
	69, 64, 65, 66, 70, -199, 23, -87, -3, -277,
	-101, -94, -279, 82, 12, 74, -279, 82, 150, -169,
	-171, 82, 313, 315, 316, 73, 101, -85, -216, 143,
	-241, -240, -239, -223, -225, -226, -227, 83, -144, -219,
	281, -214, -214, -214, -214, -214, -215, -166, -215, -215,
	-215, 81, 81, -214, -214, -214, -214, -217, 81, -217,
	-217, -218, 81, -218, -252, -85, -249, -248, -246, -247,
	175, 95, 344, -244, -141, 89, -82, -101, 110, 73,
	-190, -250, -250, -250, -259, -259, 88, -259, 88, 82,
	17, -224, -223, -130, 224, -254, 199, -251, -245, 81,
	29, -231, -232, -232, 150, -259, 82, 27, 106, 106,
	106, 106, 344, 155, 31, -223, -130, -204, 167, -204,
	-204, 88, 88, -179, 468, -94, 166, 223, -84, 327,
	88, 84, -101, -101, -101, -101, -101, 158, 155, 207,
	-101, -101, -94, -101, 82, -60, 184, 179, -259, -101,
	-180, -180, -101, -180, -180, 88, -101, -190, -66, 314,
	344, 20, -67, 20, 98, 99, 100, -120, -112, -112,
	-112, -73, 189, 109, -278, -278, -74, -74, -277, 150,
	-5, -142, -278, -278, 82, 74, 23, 12, 12, -278,
	12, 12, -278, -278, -74, -135, -133, 116, -85, -278,
	-278, 82, 82, -278, -278, -278, -278, -278, -272, 435,
	315, -105, 71, 168, 72, -277, -197, -278, -157, 39,
	47, 58, -85, -85, -140, -157, -173, 20, 12, 54,
	54, -106, 13, -76, -87, -79, 150, -106, -110, 31,
	54, -3, -277, -277, -164, -168, -129, -88, -89, -89,
	-88, -89, 63, 63, 63, 68, 63, 68, 63, -98,
	-195, -278, -278, -3, -161, 74, -87, -101, -87, -103,
	-195, 135, -170, -172, 317, 314, 320, -259, 88, 82,
	-239, -227, 98, 110, 30, 73, 278, 95, 171, 29,
	170, -220, 282, -215, -215, -216, -259, 144, -216, -216,
	-216, -222, 88, -222, 89, 89, 83, -32, -27, -28,
	32, 77, -246, -234, 88, 38, 83, 166, 24, -101,
	73, 73, 73, 16, -159, -190, 82, 83, -131, 225,
	-129, 83, -190, 83, -159, -232, -191, -190, -277, 164,
	30, 30, -130, -131, -216, -259, 470, 469, 83, -101,
	-81, 214, 222, 81, 85, -261, 74, 205, 278, 205,
	208, 167, -60, -32, -101, -176, -176, 32, 314, 447,
	445, -73, 109, -112, -112, -278, -278, -75, -191, -138,
	-157, -206, 144, 253, 188, 251, 247, 267, 258, 280,
	249, 281, -204, -206, -112, -112, -112, -112, 341, -138,
	117, -85, 115, -112, -112, 165, 165, 165, -162, 40,
	88, 88, 59, -101, -136, 14, -85, 135, -142, -163,
	73, -164, -123, -125, -124, -277, -158, -278, -190, -162,
	-106, 82, 118, -92, -91, 73, 74, -93, 73, -91,
	63, 63, -278, -106, -87, -106, -106, 150, 314, 318,
	319, -239, 98, -112, 10, 88, 29, 29, -216, -216,
	83, 82, 83, 82, 83, 82, -184, 381, 110, -28,
	-27, -234, -234, 89, -259, -101, -101, -101, -101, 17,
	82, -223, -129, 54, -249, 83, -253, -254, -101, -111,
	-131, -160, 81, 83, -258, 344, -260, -259, -190, -190,
	-190, -101, -180, -180, 32, -259, -112, -278, -142, -278,
	-214, -214, -214, -218, -214, 241, -214, 241, -278, -278,
	20, 20, 20, 20, -277, -65, 337, -85, 82, 82,
	-277, -277, -277, -278, 88, -215, -137, 15, 17, 28,
	-163, 82, -278, -278, 82, 54, 150, -278, -138, -168,
	-85, -85, 81, -85, -138, -106, -115, -215, 88, -215,
	89, 89, 381, 30, 78, 79, 80, 30, 75, 76,
	-160, -159, -190, 201, 183, -278, 82, -221, 344, 347,
	23, -159, -257, -256, -191, 81, 74, -157, -215, -259,
	-112, -112, -112, -112, -112, -142, 88, -112, -112, -159,
	-278, -159, -159, -198, -215, -146, -151, -177, -85, -121,
	29, -125, 54, -3, -190, -123, -190, -142, -159, -142,
	-216, -216, 83, 83, 23, 202, -101, -254, 348, 348,
	-3, 83, 82, 118, -159, -101, -278, -278, -278, -278,
	-68, 128, 344, -278, -278, -278, -278, -278, -278, -105,
	-149, 431, -152, 43, -153, 44, 10, -123, 150, 83,
	-3, -277, 81, -58, 344, -256, -238, -191, 88, 89,
	83, -278, 342, 70, 345, -146, 48, 259, -154, 52,
	-155, -150, 53, 17, -164, -190, -58, -112, 198, -159,
	-59, 213, 435, -261, 59, 343, 346, -147, 50, -145,
	49, -145, -153, 17, -156, 45, 46, 88, -278, -278,
	83, 176, -258, 59, -148, 51, 73, 101, 88, 17,
	17, -268, -269, 73, 215, 344, 73, 101, 88, 88,
	-269, 73, 11, 10, 345, -267, 184, 179, 182, 31,
	-267, 346, 178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 815, 0, 552, 552, 552, 552, 552,
	552, 552, 0, 0, -2, -2, -2, 839, 38, 0,
	927, 0, 0, -2, 485, 486, 0, 488, -2, 0,
	0, 497, 1354, 1354, 547, 0, 0, 0, 0, 0,
	0, 1352, 55, 56, 503, 504, 505, 1, 3, 0,
	556, 823, 0, 0, -2, 554, 0, 0, 933, 933,
	933, 0, 86, 87, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 552, 0, 928, 109, 110, 90, -2,
	114, 115, 0, 119, 367, 328, 370, 326, 356, -2,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 223, 223, 0, 0, -2, 319,
	319, 319, 0, 0, 0, 353, 935, 273, 223, 223,
	0, 223, 223, 223, 223, 0, 0, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 0, 108, 852, 0, 0, 118, 39, 35,
	36, 37, 0, 0, 0, 929, 552, 0, 419, 637,
	948, 949, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 0, 476, 476, 0,
	476, 476, 476, 476, 0, 0, 0, 431, 0, 0,
	0, 0, 473, 0, 0, 450, 452, 0, 473, 0,
	460, 476, 1355, 1355, 1355, 918, 0, 470, 468, 482,
	483, 465, 466, 484, 487, 0, 492, 495, 944, 945,
	0, 510, 0, 1163, 502, 515, 516, 0, 548, 549,
	40, 688, 647, 0, 653, 655, 0, 690, 691, 692,
	693, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 721, 722, 723, 800, 801, 802, 803,
	804, 805, 806, 807, 657, 658, 797, 0, 907, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 0,
	757, 757, 757, 757, 757, 757, 757, 757, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 1354, 0, 525,
	0, 0, 815, 51, 0, 552, 557, 558, 858, 0,
	0, 815, 1353, 0, 0, -2, -2, 568, 574, 575,
	576, 577, 578, 553, 0, 581, 585, 0, 0, 0,
	934, 0, 0, 72, 0, 1318, 911, -2, -2, 0,
	0, 946, 947, 920, -2, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, -2, 1107, 0, 0, 128, 129, 0, 38, 249,
	0, 124, 0, 243, 197, 852, 931, 941, 0, 0,
	0, 931, 92, 116, 117, 223, 223, 0, 118, 118,
	335, 336, 337, 0, 0, -2, 247, 0, 320, 0,
	0, 237, 237, 241, 239, 240, 0, 0, 0, 0,
	0, 0, 347, 0, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 224, 0, 365, 366,
	274, 0, 0, 0, 0, 345, 346, 0, 0, 936,
	937, 0, 0, 223, 223, 0, 0, 0, 0, 223,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 843, 0, 0,
	0, 0, 0, 0, -2, 0, 411, 0, 929, 0,
	0, 0, 929, 418, 0, 420, 421, 0, 0, 422,
	0, 473, 473, 471, 472, 424, 425, 426, 427, 476,
	0, 0, 232, 233, 234, 473, 476, 0, 476, 476,
	476, 476, 473, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1355, 1355, 479, 476, 457, 458,
	461, 462, 1356, 1357, 463, 464, 919, 493, 496, 513,
	511, 512, 514, 506, 507, 508, 509, 0, 527, 528,
	533, 0, 0, 0, 0, 539, 540, 541, 0, 0,
	544, 545, 546, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 675, 676,
	677, 678, 679, 680, 681, 654, 0, 668, 0, 0,
	0, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	0, 565, 0, 0, 0, 815, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 789, 0, 741, 749, 0,
	742, 750, 743, 751, 744, 0, 745, 752, 746, 753,
	747, 748, 754, 0, 0, 0, 565, 565, 0, 0,
	41, 517, 518, 0, 620, 939, 526, 823, 0, 567,
	861, 0, 0, 824, 816, 817, 820, 823, 0, 590,
	579, 569, 572, 573, 555, 0, 582, 586, 0, 588,
	589, 0, 0, 70, 0, 636, 0, 592, 594, 595,
	596, 618, 0, 0, 0, 0, 66, 68, 637, 0,
	1318, 917, 0, 74, 75, 0, 0, 0, 211, 922,
	923, 924, -2, 230, 0, 136, 204, 148, 149, 150,
	197, 152, 197, 197, 197, 197, 208, 208, 208, 208,
	180, 181, 182, 183, 184, 0, 0, 167, 197, 197,
	197, 197, 187, 188, 189, 190, 191, 192, 193, 194,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 199,
	199, 199, 201, 201, 0, 39, 0, 215, 0, 820,
	0, 843, 0, 0, 0, 942, 0, 941, 941, 941,
	0, 0, 0, 368, 329, 357, 369, 0, 332, 333,
	-2, 0, 0, 319, 0, 321, 0, 231, 0, -2,
	0, 0, 0, 237, 241, 238, 241, 229, 242, 349,
	797, 0, 350, 351, 0, 383, 606, 0, 0, 0,
	0, 0, 389, 390, 391, 0, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 321, 0, 354, 0, 275,
	276, 0, 0, 279, 280, 281, 282, 0, 0, 285,
	286, 287, 288, 289, 313, 314, 315, 290, 291, 292,
	293, 294, 295, 296, 307, 308, 309, 310, 311, 312,
	297, 298, 299, 300, 301, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 840, 841, 842, 0,
	0, 0, 0, 0, 262, 64, 930, 0, 638, 950,
	951, 477, 478, 0, 235, 236, 476, 476, 428, 451,
	0, 476, 432, 453, 433, 435, 434, 436, 476, 439,
	474, 475, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 455, 0, 456, 0, 0, 494, 498, 499,
	500, 501, 0, 0, 530, 535, 536, 537, 538, 550,
	543, 689, 648, 649, 650, 652, 669, 0, 671, 673,
	659, 660, 684, 685, 686, 0, 0, 0, 0, 682,
	664, 0, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 709, 772, 773, 774, 0, 707,
	708, 719, 0, 0, 0, 566, 798, 0, -2, 0,
	687, 906, 823, 0, 0, 0, 0, 692, 800, 0,
	692, 800, 0, 0, 0, 563, 564, 795, 792, 0,
	0, 758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 521, 523, 0, 640, 0, 621, 0, 623,
	624, 0, 940, 858, 52, 42, 0, 859, 0, 0,
	0, 0, 819, 821, 822, 858, 0, 808, 0, 0,
	645, 0, 0, 570, 48, 587, 583, 0, 645, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 628, 0, 0, 0, 0, 619, 0, 0, 0,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 912,
	73, 0, 0, 78, 79, 913, 914, 915, 916, 0,
	111, -2, 270, 130, 132, 133, 134, 125, 135, 206,
	205, 151, 208, 208, 174, 175, 211, 0, 211, 211,
	211, 0, 0, 168, 169, 170, 171, 162, 0, 163,
	164, 165, 0, 166, 248, 0, 827, 216, 217, 219,
	223, 0, 0, 244, 245, 0, 0, 101, 0, 0,
	943, 0, 0, 0, 107, 120, 121, 122, 123, 118,
	0, 0, 126, 323, 0, 0, 0, 246, 0, 0,
	225, 241, 226, 227, 0, 352, 0, 0, 385, 386,
	387, 388, 0, 0, 0, 321, 323, 211, 0, 277,
	278, 283, 284, 302, 0, 0, 0, 0, 853, 854,
	0, 857, 93, 375, 377, 376, 380, 0, 0, 0,
	0, 412, 262, 827, 0, 416, 263, 264, 417, 473,
	438, 454, 473, 430, 437, 480, 459, 490, 534, 0,
	0, 0, 542, 0, 670, 672, 674, 661, 682, 665,
	0, 662, 0, 0, 656, 724, 0, 0, 565, 0,
	815, 858, 728, 729, 0, 0, 0, 0, 0, 765,
	0, 0, 766, 0, 815, 0, 793, 0, 0, 740,
	759, 0, 0, 760, 761, 762, 763, 764, 519, 522,
	524, 600, 0, 0, 0, 0, 622, 938, 44, 0,
	0, 0, 825, 826, 818, 43, 0, 925, 926, 809,
	810, 811, 0, 580, 591, 571, 0, 823, 900, 0,
	0, 892, 0, 0, 645, 908, 0, 593, 614, 616,
	0, 611, 626, 627, 629, 0, 631, 0, 633, 634,
	597, 598, 599, 0, 645, 0, 645, 67, 645, 69,
	0, 639, 76, 77, 0, 0, 83, 212, 213, 118,
	272, 131, 137, 0, 0, 0, 141, 0, 0, 144,
	146, 147, 207, 211, 211, 176, 209, 210, 177, 178,
	179, 0, 195, 0, 0, 0, 265, 88, 831, 830,
	223, 223, 218, 0, 221, 0, 198, 0, 932, 103,
	0, 0, 0, 0, 327, 604, 0, 338, 339, 0,
	322, 382, 0, 215, 0, 228, 798, 607, 0, 0,
	340, 0, 323, 343, 344, 355, 305, 306, 303, 602,
	844, 845, 846, 0, 856, 96, 0, 0, 0, 0,
	373, 0, 414, 415, 65, 476, 476, 529, 0, 532,
	0, 663, 0, 683, 666, 725, 726, 0, 799, 823,
	46, 0, 197, 197, 778, 197, 201, 781, 197, 783,
	197, 786, 0, 0, 0, 0, 0, 0, 0, 790,
	739, 796, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 863, 860, 45, 813, 0, 646, 584, 49, 53,
	0, 900, 891, 902, 904, 0, 0, 0, 896, 0,
	815, 0, 0, 608, 615, 0, 0, 609, 0, 610,
	630, 632, -2, 815, 645, 60, 61, 0, 80, 81,
	82, 271, 138, 139, 0, 142, 143, 145, 172, 173,
	208, 0, 208, 0, 202, 0, 254, 266, 0, 828,
	829, 0, 0, 220, 222, 602, 104, 105, 106, 0,
	0, 127, 324, 0, 214, 0, 0, 407, 404, 341,
	342, 0, 0, 855, 374, 0, 94, 95, 0, 0,
	379, 413, 423, 429, 531, 551, 667, 727, 858, 730,
	775, 208, 779, 780, 782, 784, 785, 787, 732, 731,
	0, 0, 0, 0, 0, 823, 0, 794, 0, 0,
	0, 0, 0, 620, 208, 883, 50, 0, 0, 0,
	54, 0, 905, 0, 0, 0, 0, 71, 823, 909,
	910, 612, 0, 617, 823, 59, 140, 211, 196, 211,
	0, 0, 267, 832, 833, 834, 835, 836, 837, 838,
	0, 330, 605, 0, 0, 384, 0, 392, 0, 0,
	0, 0, 97, 98, 0, 0, 0, 47, 776, 777,
	0, 0, 0, 0, 767, 0, 791, 0, 0, 0,
	642, 0, 0, 640, 865, 864, 877, 881, 814, 812,
	0, 903, 0, 895, 898, 894, 897, 57, 0, 58,
	185, 186, 200, 203, 0, 0, 0, 408, 405, 406,
	847, 603, 0, 0, 0, 381, 733, 735, 734, 736,
	0, 0, 0, 738, 755, 756, 641, 643, 644, 601,
	883, 0, 876, 879, -2, 0, 0, 893, 0, 613,
	847, 0, 0, 371, 849, 99, 100, 316, 317, 318,
	93, 737, 0, 0, 0, 870, 868, 868, 881, 0,
	885, 0, 890, 0, 901, 899, 89, 0, 0, 0,
	0, 850, 851, 96, 768, 0, 771, 873, 0, 866,
	869, 867, 878, 0, 884, 0, 0, 882, 409, 410,
	250, 0, 378, 769, 862, 0, 871, 872, 880, 0,
	0, 251, 252, 0, 848, 0, 874, 875, 886, 888,
	253, 0, 0, 0, 0, 255, 257, 258, 0, 0,
	256, 770, 259, 260, 261,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 471,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:413
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:418
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:423
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:456
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:475
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:485
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:491
		{
			yyVAL.statement = &Load{}
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:497
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:506
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:510
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:514
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:537
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:557
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:565
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:582
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:594
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
			yyVAL.insertAction = InsertAct
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:630
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:668
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:677
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:693
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyVAL.characteristic = ReadWrite
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:717
		{
			yyVAL.characteristic = ReadOnly
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.isolationLevel = Serializable
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.scope = SessionScope
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.scope = GlobalScope
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:764
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:784
		{
			yyVAL.boolean = false
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.boolean = true
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:793
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:808
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:836
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:865
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:872
		{
			yyVAL.createDatabase = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfNotExists: yyDollar[4].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:896
		{
			yyVAL.collateAndCharsets = nil
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:914
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:918
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:923
		{
			yyVAL.boolean = false
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
			yyVAL.boolean = true
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:933
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:937
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].str) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:943
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:947
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].str) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:958
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:968
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:993
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptions
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyDollar[1].columnTypeOptions.NotNull = false
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyDollar[1].columnTypeOptions.NotNull = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1036
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].str)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyPrimary
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUniqueKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUnique
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1203
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1231
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1266
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].str)+"'")
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].str)+"'")
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.literal = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].str)
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1303
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1307
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1315
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1319
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1333
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1337
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1342
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1351
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexOptions = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = ""
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1445
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = yyDollar[2].str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = "key"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1553
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1557
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1561
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1565
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1571
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1577
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1623
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.boolean = true
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1631
		{
			yyVAL.boolean = false
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1636
		{
			yyVAL.tableOptions = nil
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1650
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1678
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1682
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1702
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1706
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1718
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1738
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1754
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNames}
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = "'" + string(yyDollar[1].str) + "'"
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = ""
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1833
		{
			yyVAL.colName = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1842
		{
			yyVAL.colName = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.alterOptions = nil
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1859
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1867
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1871
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1907
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1915
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1919
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1923
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1927
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1931
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1963
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.alterOption = &Force{}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1975
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2035
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2042
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 371:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2059
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2066
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2073
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 378:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2143
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2151
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2155
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2159
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2163
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2167
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2183
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.boolean = false
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.boolean = true
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2257
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2261
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2277
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2283
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[5].tableNames, IfExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2287
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2300
		{
			yyVAL.statement = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfExists: yyDollar[4].boolean}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &OtherRead{}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2329
		{
			yyVAL.statement = &Show{&ShowBasic{Full: yyDollar[2].boolean, Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2337
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2349
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2353
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2357
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2365
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2381
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2385
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2389
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].boolean, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2401
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2409
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2413
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2421
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2429
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2437
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2441
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2449
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2453
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2457
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilter, DbName: yyDollar[3].str}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2497
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2501
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = "extended "
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.boolean = false
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.boolean = true
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.showFilter = nil
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].str)}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.showFilter = nil
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].str)}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.statement = &Begin{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.statement = &Begin{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.statement = &Commit{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.statement = &Rollback{}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2638
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.explainType = EmptyType
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.explainType = JSONType
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.explainType = TreeType
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.explainType = VitessType
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.explainType = TraditionalType
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.explainType = AnalyzeType
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = yyDollar[1].str
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.str = yyDollar[1].str
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = "'" + string(yyDollar[1].str) + "'"
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.lockType = Read
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.lockType = ReadLocal
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.lockType = Write
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.statement = &RevertMigration{UUID: string(yyDollar[3].str)}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2804
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2812
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2816
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2820
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2824
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.boolean = false
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.boolean = true
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.boolean = true
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = ""
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			setAllowComments(yylex, true)
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.strs = nil
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.boolean = true
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.boolean = false
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.boolean = true
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.str = SQLCacheStr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.boolean = false
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.boolean = true
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.boolean = true
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2970
		{
			yyVAL.selectExprs = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2979
		{
			yyVAL.strs = nil
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2995
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = SQLCacheStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = DistinctStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = DistinctStr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.str = StraightJoinHint
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3045
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3058
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3078
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3126
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3131
		{
			yyVAL.columns = nil
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3168
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3172
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3176
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3180
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3186
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3188
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3192
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3200
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3203
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3223
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.joinType = NormalJoinType
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.joinType = NormalJoinType
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3237
		{
			yyVAL.joinType = NormalJoinType
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.joinType = StraightJoinType
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.joinType = LeftJoinType
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.joinType = LeftJoinType
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.joinType = RightJoinType
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.joinType = RightJoinType
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.indexHints = nil
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3310
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3314
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3318
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3322
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = nil
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3399
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3403
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3433
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3437
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3445
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3475
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3483
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3488
		{
			yyVAL.expr = nil
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3492
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.colTuple = ListArg(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3536
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3540
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3560
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = handleUnaryMinus(yyDollar[2].expr)
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3644
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 737:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 755:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3822
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3862
		{
			yyVAL.matchExprOption = NoOption
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3874
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3918
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literal}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3953
		{
			yyVAL.expr = nil
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3957
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = string("")
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = " separator '" + string(yyDollar[2].str) + "'"
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3982
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3987
		{
			yyVAL.expr = nil
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4005
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.expr = NewArgument(yyDollar[1].str)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = &NullVal{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral("1")
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.expr = NewArgument(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.exprs = nil
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.expr = nil
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4081
		{
			yyVAL.orderBy = nil
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4106
		{
			yyVAL.orderDirection = AscOrder
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.orderDirection = AscOrder
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.orderDirection = DescOrder
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.limit = nil
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4131
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.alterOptions = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4171
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.str = yyDollar[3].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = yyDollar[2].str
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = "cascaded"
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = yyDollar[3].str
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = "'" + string(yyDollar[1].str) + "'@" + string(yyDollar[2].str)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.lock = NoLock
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.lock = ForUpdateLock
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4283
		{
			yyVAL.lock = ShareModeLock
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.selectInto = nil
		}
	case 862:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4292
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4300
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = " header"
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = " manifest on"
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = " manifest off"
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = " overwrite on"
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = " overwrite off"
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].str) + "'"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].str) + "'"
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4390
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].str) + "'"
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].str) + "'"
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = " optionally"
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4438
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4442
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4446
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4464
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.updateExprs = nil
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4473
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4483
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4499
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4535
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.str = "charset"
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].colIdent.String())
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].str)
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &Default{}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4592
		{
			yyVAL.boolean = false
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.boolean = true
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4597
		{
			yyVAL.boolean = false
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.boolean = true
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4602
		{
			yyVAL.boolean = false
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4604
		{
			yyVAL.boolean = true
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4607
		{
			yyVAL.ignore = false
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.ignore = true
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4612
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4625
		{
			yyVAL.exprs = nil
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.indexOptions = nil
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			decNesting(yylex)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			skipToEnd(yylex)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			skipToEnd(yylex)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			skipToEnd(yylex)
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
