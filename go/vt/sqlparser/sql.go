// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const WITHOUT = 57803
const VALIDATION = 57804
const UNUSED = 57805
const ARRAY = 57806
const BYTE = 57807
const CUME_DIST = 57808
const DESCRIPTION = 57809
const DENSE_RANK = 57810
const EMPTY = 57811
const EXCEPT = 57812
const FIRST_VALUE = 57813
const GROUPING = 57814
const GROUPS = 57815
const JSON_TABLE = 57816
const LAG = 57817
const LAST_VALUE = 57818
const LATERAL = 57819
const LEAD = 57820
const NTH_VALUE = 57821
const NTILE = 57822
const OF = 57823
const OVER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const RECURSIVE = 57827
const ROW_NUMBER = 57828
const SYSTEM = 57829
const WINDOW = 57830
const ACTIVE = 57831
const ADMIN = 57832
const AUTOEXTEND_SIZE = 57833
const BUCKETS = 57834
const CLONE = 57835
const COLUMN_FORMAT = 57836
const COMPONENT = 57837
const DEFINITION = 57838
const ENFORCED = 57839
const ENGINE_ATTRIBUTE = 57840
const EXCLUDE = 57841
const FOLLOWING = 57842
const GEOMCOLLECTION = 57843
const GET_MASTER_PUBLIC_KEY = 57844
const HISTOGRAM = 57845
const HISTORY = 57846
const INACTIVE = 57847
const INVISIBLE = 57848
const LOCKED = 57849
const MASTER_COMPRESSION_ALGORITHMS = 57850
const MASTER_PUBLIC_KEY_PATH = 57851
const MASTER_TLS_CIPHERSUITES = 57852
const MASTER_ZSTD_COMPRESSION_LEVEL = 57853
const NESTED = 57854
const NETWORK_NAMESPACE = 57855
const NOWAIT = 57856
const NULLS = 57857
const OJ = 57858
const OLD = 57859
const OPTIONAL = 57860
const ORDINALITY = 57861
const ORGANIZATION = 57862
const OTHERS = 57863
const PARTIAL = 57864
const PATH = 57865
const PERSIST = 57866
const PERSIST_ONLY = 57867
const PRECEDING = 57868
const PRIVILEGE_CHECKS_USER = 57869
const PROCESS = 57870
const RANDOM = 57871
const REFERENCE = 57872
const REQUIRE_ROW_FORMAT = 57873
const RESOURCE = 57874
const RESPECT = 57875
const RESTART = 57876
const RETAIN = 57877
const REUSE = 57878
const ROLE = 57879
const SECONDARY = 57880
const SECONDARY_ENGINE = 57881
const SECONDARY_ENGINE_ATTRIBUTE = 57882
const SECONDARY_LOAD = 57883
const SECONDARY_UNLOAD = 57884
const SIMPLE = 57885
const SKIP = 57886
const SRID = 57887
const THREAD_PRIORITY = 57888
const TIES = 57889
const UNBOUNDED = 57890
const VCPU = 57891
const VISIBLE = 57892
const RETURNING = 57893
const FORMAT = 57894
const TREE = 57895
const VITESS = 57896
const TRADITIONAL = 57897
const LOCAL = 57898
const LOW_PRIORITY = 57899
const NO_WRITE_TO_BINLOG = 57900
const LOGS = 57901
const ERROR = 57902
const GENERAL = 57903
const HOSTS = 57904
const OPTIMIZER_COSTS = 57905
const USER_RESOURCES = 57906
const SLOW = 57907
const CHANNEL = 57908
const RELAY = 57909
const EXPORT = 57910
const CURRENT = 57911
const ROW = 57912
const ROWS = 57913
const AVG_ROW_LENGTH = 57914
const CONNECTION = 57915
const CHECKSUM = 57916
const DELAY_KEY_WRITE = 57917
const ENCRYPTION = 57918
const ENGINE = 57919
const INSERT_METHOD = 57920
const MAX_ROWS = 57921
const MIN_ROWS = 57922
const PACK_KEYS = 57923
const PASSWORD = 57924
const FIXED = 57925
const DYNAMIC = 57926
const COMPRESSED = 57927
const REDUNDANT = 57928
const COMPACT = 57929
const ROW_FORMAT = 57930
const STATS_AUTO_RECALC = 57931
const STATS_PERSISTENT = 57932
const STATS_SAMPLE_PAGES = 57933
const STORAGE = 57934
const MEMORY = 57935
const DISK = 57936
const PARTITIONS = 57937
const LINEAR = 57938
const RANGE = 57939
const LIST = 57940
const SUBPARTITION = 57941
const SUBPARTITIONS = 57942
const HASH = 57943

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	619, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 764,
	-2, 762,
	-1, 114,
	234, 1369,
	-2, 119,
	-1, 116,
	1, 146,
	619, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 720,
	218, 1390,
	-2, 1386,
	-1, 721,
	218, 1391,
	-2, 1387,
	-1, 797,
	59, 832,
	-2, 847,
	-1, 834,
	148, 1806,
	-2, 112,
	-1, 835,
	148, 1643,
	-2, 113,
	-1, 841,
	148, 1727,
	-2, 1363,
	-1, 991,
	148, 1570,
	-2, 1360,
	-1, 1032,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1116,
	1, 554,
	619, 554,
	-2, 153,
	-1, 1364,
	59, 833,
	-2, 852,
	-1, 1365,
	59, 834,
	-2, 853,
	-1, 1418,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1497,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1506,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1821,
	218, 1395,
	-2, 1389,
	-1, 1910,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1917,
	25, 174,
	-2, 176,
	-1, 2178,
	87, 39,
	-2, 888,
	-1, 2234,
	77, 94,
	87, 94,
	-2, 908,
	-1, 2302,
	594, 666,
	-2, 640,
	-1, 2456,
	49, 1330,
	-2, 1324,
	-1, 2695,
	87, 39,
	-2, 889,
	-1, 2733,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 881,
	-1, 3048,
	594, 666,
	-2, 654,
	-1, 3138,
	22, 1729,
	32, 1729,
	174, 1729,
	257, 1729,
	315, 1729,
	316, 1729,
	317, 1729,
	318, 1729,
	319, 1729,
	320, 1729,
	321, 1729,
	323, 1729,
	324, 1729,
	325, 1729,
	326, 1729,
	327, 1729,
	328, 1729,
	329, 1729,
	330, 1729,
	331, 1729,
	332, 1729,
	333, 1729,
	334, 1729,
	336, 1729,
	338, 1729,
	339, 1729,
	340, 1729,
	341, 1729,
	342, 1729,
	343, 1729,
	344, 1729,
	345, 1729,
	346, 1729,
	349, 1729,
	350, 1729,
	351, 1729,
	352, 1729,
	353, 1729,
	354, 1729,
	355, 1729,
	356, 1729,
	357, 1729,
	473, 1729,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45821

var yyAct = [...]int{
	720, 2837, 3210, 2838, 2400, 2836, 3222, 729, 3029, 3116,
	635, 3179, 2809, 722, 3180, 3136, 723, 3081, 1907, 1421,
	2672, 3104, 1841, 2604, 2510, 2517, 1861, 3013, 2567, 2965,
	2558, 3, 2120, 1180, 2572, 3011, 2469, 699, 37, 812,
	2140, 2796, 1843, 2569, 2568, 2566, 2571, 2570, 2472, 622,
	2864, 186, 2587, 2419, 186, 2166, 582, 186, 790, 3001,
	700, 2525, 598, 1977, 186, 2470, 2586, 618, 2473, 2704,
	2399, 2869, 186, 1342, 1348, 2362, 2398, 1379, 697, 2698,
	698, 644, 1865, 2589, 2457, 2724, 2467, 186, 2206, 2193,
	1940, 616, 2690, 1881, 2625, 615, 2267, 1064, 1475, 2229,
	614, 2345, 1945, 2299, 2268, 2609, 2269, 839, 1965, 598,
	2008, 994, 598, 186, 598, 794, 155, 798, 38, 1896,
	813, 36, 2185, 1886, 2199, 792, 2218, 1366, 551, 1128,
	1815, 2168, 1808, 1040, 1781, 815, 2337, 1782, 601, 2024,
	1713, 610, 836, 1723, 1671, 1986, 785, 1522, 141, 1873,
	1157, 1947, 1964, 2261, 1885, 1410, 1022, 1888, 95, 1264,
	1504, 2236, 1388, 96, 627, 1346, 91, 1734, 1622, 1027,
	1690, 1199, 1618, 1511, 998, 1001, 1030, 1962, 1602, 1033,
	1002, 1936, 1028, 1029, 1409, 1393, 1407, 1000, 1778, 1866,
	804, 159, 1231, 1178, 1173, 119, 1627, 117, 800, 1470,
	118, 799, 1496, 124, 98, 125, 1112, 826, 802, 97,
	1833, 76, 1267, 85, 3038, 2292, 605, 89, 3211, 1979,
	1980, 1981, 1271, 2797, 2555, 1979, 3066, 2321, 2320, 2022,
	2290, 801, 77, 2577, 8, 2789, 1587, 7, 6, 120,
	87, 1066, 2752, 585, 87, 554, 820, 90, 825, 3163,
	2353, 126, 3067, 2354, 1082, 1083, 1084, 806, 1087, 1088,
	1089, 1090, 1044, 1069, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 995, 606, 3062, 1020, 2841, 791, 102, 1079, 793,
	87, 2575, 3061, 1678, 2577, 833, 2841, 1677, 840, 1838,
	1839, 1676, 807, 1675, 1693, 1043, 1674, 2574, 120, 1673,
	1019, 814, 1018, 2581, 1017, 1660, 608, 1016, 609, 1665,
	2164, 3157, 2453, 2661, 1070, 1073, 1074, 1200, 104, 105,
	2312, 108, 1818, 2012, 114, 2195, 87, 183, 2423, 1011,
	549, 1006, 1373, 3183, 3233, 3167, 1200, 3165, 3178, 1085,
	3201, 2677, 2575, 2676, 735, 736, 737, 188, 189, 190,
	786, 787, 788, 789, 2010, 2315, 797, 3014, 2141, 1683,
	2840, 3166, 585, 3164, 2581, 2626, 120, 2011, 735, 736,
	737, 2840, 2961, 3062, 2960, 2802, 1068, 78, 2803, 182,
	80, 1067, 3230, 3114, 828, 829, 78, 3146, 3214, 3057,
	78, 3117, 2066, 3192, 2810, 3105, 2005, 3113, 2361, 78,
	3056, 3144, 3141, 121, 1869, 143, 1485, 2643, 2165, 2245,
	3150, 3151, 2244, 3043, 2578, 2246, 164, 2506, 2527, 2528,
	2507, 2508, 2329, 2209, 1210, 3145, 2328, 1902, 1903, 2352,
	1164, 1015, 1166, 1121, 1122, 2882, 586, 1411, 2063, 1412,
	1901, 1176, 1147, 1210, 784, 1135, 783, 153, 2210, 1135,
	1136, 3030, 2293, 142, 1136, 87, 1956, 2064, 1134, 2257,
	1133, 2513, 2701, 1840, 87, 1124, 701, 2388, 87, 585,
	1163, 1165, 1920, 1919, 161, 2578, 162, 87, 2202, 2203,
	585, 1950, 585, 1148, 1141, 1152, 1153, 2606, 2634, 1013,
	701, 2632, 130, 131, 152, 151, 181, 596, 3184, 1664,
	600, 594, 2338, 1608, 1350, 2610, 2514, 2991, 1987, 2992,
	2599, 1869, 2300, 1111, 2324, 2025, 1170, 3213, 2600, 3185,
	2042, 1086, 2043, 1206, 2044, 2526, 1198, 1232, 1603, 1150,
	1151, 1156, 2516, 1666, 1667, 1668, 1117, 2529, 2030, 186,
	2340, 186, 1206, 2791, 186, 2790, 2511, 1175, 2045, 2970,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1240, 1242,
	1243, 2945, 1168, 2527, 2528, 586, 1577, 1161, 1149, 1142,
	2512, 1162, 2607, 598, 598, 598, 1092, 1091, 2029, 2608,
	1154, 1167, 2036, 2033, 2035, 2034, 2037, 2038, 1867, 1868,
	1155, 598, 598, 2031, 2027, 147, 128, 154, 135, 127,
	3158, 148, 149, 2518, 1160, 2787, 1014, 165, 1053, 1051,
	1578, 1990, 1579, 1119, 1353, 1125, 171, 136, 1127, 2845,
	2028, 1882, 1023, 1949, 1192, 2389, 1024, 1024, 1062, 1061,
	37, 139, 137, 132, 133, 134, 138, 1060, 1059, 2529,
	2422, 1058, 3234, 129, 1057, 1056, 1055, 1050, 1489, 1063,
	2064, 1010, 140, 999, 1012, 1619, 1072, 999, 1036, 3190,
	1246, 997, 1035, 1246, 999, 1510, 1071, 3226, 1035, 827,
	2526, 1963, 586, 2341, 1145, 1131, 2016, 1137, 1138, 1139,
	1140, 1615, 2529, 586, 1186, 586, 1075, 1115, 3037, 2291,
	2548, 1042, 2323, 1483, 1021, 1867, 1868, 2169, 2171, 1482,
	1481, 1177, 2310, 1616, 1479, 1249, 1250, 1251, 1252, 1609,
	553, 548, 2259, 1610, 1611, 1257, 1171, 3026, 2786, 1205,
	1202, 1203, 1204, 1209, 1211, 1208, 2739, 1207, 2009, 2344,
	2007, 732, 2720, 156, 2294, 732, 116, 1201, 1205, 1202,
	1203, 1204, 1209, 1211, 1208, 2357, 1207, 2326, 2078, 2702,
	2200, 1015, 2241, 1007, 1054, 1052, 1201, 1247, 1248, 1340,
	1009, 1008, 1042, 1081, 1908, 2205, 2151, 1182, 1183, 1335,
	2336, 1832, 1509, 2335, 186, 2579, 2580, 1607, 598, 598,
	1397, 732, 1316, 1322, 1253, 1126, 1246, 1243, 2583, 2505,
	1158, 2515, 1041, 1628, 186, 1589, 1588, 1590, 1591, 1592,
	3055, 2750, 2751, 809, 1174, 3051, 81, 1065, 3149, 1013,
	150, 2347, 2314, 598, 3119, 2782, 2346, 186, 1130, 1356,
	1354, 2839, 598, 1360, 77, 2714, 111, 1195, 598, 794,
	1193, 1194, 2839, 2026, 1169, 3118, 2579, 2580, 3119, 1015,
	1110, 1042, 1357, 1341, 86, 2065, 1269, 144, 1270, 2583,
	145, 1612, 3148, 86, 1953, 836, 2313, 86, 1413, 3118,
	1273, 2170, 1196, 1041, 2381, 2971, 86, 1735, 2283, 1035,
	1038, 1039, 1042, 999, 1144, 1042, 3193, 1032, 1036, 1123,
	157, 1120, 1132, 3224, 1215, 1146, 3225, 169, 3223, 2878,
	2347, 1402, 1214, 1215, 1954, 2346, 112, 1735, 1031, 2092,
	2757, 2756, 1952, 1994, 1114, 1358, 1519, 1341, 1518, 95,
	1359, 1508, 2004, 2002, 96, 1323, 1324, 1325, 1326, 1327,
	1053, 1116, 2006, 1604, 1051, 1605, 1014, 3235, 1606, 177,
	3186, 1347, 2070, 2071, 2072, 1159, 1955, 1999, 1629, 2740,
	3083, 2519, 1041, 1398, 3228, 2523, 1951, 1216, 1035, 1038,
	1039, 3019, 999, 2522, 3187, 98, 1032, 1036, 2953, 1129,
	1042, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 2952, 1041, 2003, 1080, 1041, 176, 178, 179,
	180, 1045, 1035, 3084, 186, 1999, 1047, 2524, 1471, 1344,
	1048, 1046, 2520, 791, 3020, 1355, 1408, 2521, 1480, 1113,
	1375, 1695, 1378, 793, 1238, 1239, 1241, 1240, 1242, 1243,
	1216, 840, 3236, 2943, 1014, 1696, 1244, 1245, 1694, 3046,
	2083, 598, 2001, 1506, 2829, 2828, 1403, 1404, 2764, 2763,
	2082, 1515, 1216, 1874, 1875, 1517, 1216, 2753, 1520, 1521,
	598, 598, 2109, 598, 2556, 598, 598, 1597, 598, 598,
	598, 598, 598, 598, 1685, 1687, 1688, 1373, 1420, 2544,
	2265, 1041, 1552, 1553, 1739, 598, 1045, 1035, 1740, 186,
	1558, 1047, 2264, 1959, 1361, 1048, 1046, 1216, 1686, 1213,
	1598, 1214, 1215, 1516, 1582, 1581, 186, 1236, 1237, 1238,
	1239, 1241, 1240, 1242, 1243, 2640, 1049, 1580, 1570, 598,
	1216, 186, 1564, 1561, 1216, 831, 1560, 1486, 1487, 1488,
	1551, 1596, 1617, 1554, 2088, 598, 1373, 186, 1234, 1235,
	1236, 1237, 1238, 1239, 1241, 1240, 1242, 1243, 1572, 735,
	736, 737, 1502, 186, 2816, 1559, 2817, 188, 189, 190,
	186, 2747, 1213, 1557, 1214, 1215, 1531, 3045, 1216, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 598, 598,
	598, 1373, 1512, 1512, 1213, 1495, 1214, 1215, 1213, 2101,
	1214, 1215, 3023, 1562, 1563, 1601, 1555, 2383, 3022, 1568,
	1569, 3021, 2948, 3197, 1373, 1595, 2933, 2087, 1524, 186,
	1525, 1514, 1527, 1529, 1382, 1584, 1533, 1535, 1537, 1539,
	1541, 2932, 1478, 1513, 188, 189, 190, 1633, 2248, 1213,
	2877, 1214, 1215, 2875, 1637, 2825, 2761, 2746, 1492, 1493,
	2611, 1491, 1505, 2547, 1624, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1213, 2546, 1214, 1215, 1213, 598, 1214, 1215,
	2274, 2262, 1717, 1721, 1383, 1720, 1720, 2603, 1337, 1594,
	1726, 1718, 1718, 2020, 2019, 1556, 188, 189, 190, 1583,
	1975, 1632, 1864, 1672, 1846, 598, 598, 1661, 1636, 1216,
	1638, 1639, 1640, 1641, 1630, 1631, 1625, 1645, 1691, 1593,
	1213, 1585, 1214, 1215, 1216, 1575, 1620, 1571, 1635, 1484,
	2081, 1659, 1216, 1567, 1566, 1642, 1643, 1644, 120, 1565,
	1384, 1386, 1018, 1811, 1017, 1172, 1736, 1016, 1185, 1216,
	1689, 1373, 1699, 598, 1216, 1698, 2978, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1634, 2191, 3212, 1232, 2977, 2356, 188, 189, 190, 186,
	1819, 188, 189, 190, 598, 1973, 3174, 1373, 1216, 2937,
	1779, 1655, 1656, 1657, 1216, 1658, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1241, 1240, 1242, 1243, 1385, 186, 2187,
	2713, 598, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1218,
	2936, 186, 1692, 1809, 94, 598, 94, 1851, 2207, 1852,
	186, 2808, 186, 1373, 186, 186, 598, 3195, 1373, 598,
	2301, 1213, 2279, 1214, 1215, 1916, 1216, 1835, 2191, 3111,
	598, 1697, 2468, 1779, 1821, 2207, 1213, 1216, 1214, 1215,
	1212, 1819, 101, 2713, 1213, 92, 1214, 1215, 1216, 836,
	1917, 2121, 836, 100, 2715, 99, 93, 3128, 1373, 1823,
	1824, 1213, 2079, 1214, 1215, 1373, 1213, 3079, 1214, 1215,
	3050, 95, 2191, 3091, 2214, 1876, 96, 188, 189, 190,
	2215, 1971, 2191, 3087, 1880, 598, 1883, 3074, 1373, 1672,
	2191, 95, 1966, 1967, 1968, 1820, 96, 1970, 1972, 1974,
	1213, 2215, 1214, 1215, 1857, 1216, 1213, 2713, 1214, 1215,
	3188, 1373, 598, 1884, 2681, 1821, 2191, 3039, 598, 1515,
	3126, 1373, 1515, 1373, 1515, 1926, 1927, 1928, 1929, 2215,
	1998, 3124, 1373, 2657, 721, 1921, 1216, 1922, 1923, 1924,
	1925, 1912, 2535, 1216, 2441, 1911, 2800, 3036, 1845, 2657,
	1373, 1900, 806, 1932, 1933, 1934, 1935, 2079, 1213, 1894,
	1214, 1215, 2956, 1373, 2000, 598, 1988, 598, 92, 1213,
	1942, 1214, 1215, 598, 598, 94, 1879, 2114, 1859, 93,
	1213, 2098, 1214, 1215, 100, 187, 2191, 2944, 187, 3034,
	1877, 187, 1948, 2800, 1373, 2097, 599, 1722, 187, 1915,
	2363, 1899, 1898, 1727, 1728, 840, 187, 1216, 840, 2191,
	2798, 186, 1914, 1913, 1999, 1373, 2718, 1373, 186, 3000,
	1373, 187, 1999, 1985, 1999, 186, 186, 2941, 1982, 186,
	1872, 186, 1216, 1764, 1373, 1958, 1377, 1213, 186, 1214,
	1215, 1212, 1373, 599, 1044, 186, 599, 187, 599, 2114,
	1373, 2537, 2536, 2079, 1512, 1943, 2533, 2534, 1938, 1939,
	1822, 1836, 1216, 1825, 1826, 1957, 1669, 1961, 1213, 1614,
	1214, 1215, 1969, 186, 598, 1213, 2013, 1214, 1215, 1993,
	2533, 2532, 1996, 2365, 1997, 1672, 1405, 1043, 2215, 1373,
	1943, 2783, 2032, 1992, 1995, 1991, 2079, 1373, 796, 2046,
	2047, 2064, 2322, 2051, 1474, 2304, 1856, 2015, 2297, 2298,
	1026, 2014, 2054, 2017, 2018, 2998, 1373, 2191, 2190, 2057,
	1756, 1745, 1746, 1747, 1748, 1758, 1749, 1750, 1751, 1763,
	1759, 1752, 1753, 1760, 1761, 1762, 1754, 1755, 1757, 1213,
	1025, 1214, 1215, 1474, 1473, 2995, 1373, 2060, 87, 2375,
	2374, 2373, 2367, 3154, 2371, 2023, 2366, 3094, 2364, 1419,
	1418, 1216, 2967, 2369, 1213, 1691, 1214, 1215, 1380, 2934,
	2055, 2056, 2368, 1216, 2559, 2058, 87, 188, 189, 190,
	1216, 2889, 2500, 1810, 2059, 2237, 2237, 1812, 1232, 2370,
	2372, 1228, 2064, 1229, 1213, 2781, 1214, 1215, 2075, 2048,
	1232, 2074, 2077, 2076, 730, 1216, 2778, 1230, 1244, 1245,
	1227, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1240,
	1242, 1243, 2759, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1241, 1240, 1242, 1243, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1241, 1240, 1242, 1243, 2266, 2649, 186, 2238, 2238,
	2648, 2062, 1476, 1941, 2601, 186, 2981, 1373, 2240, 2064,
	598, 101, 2175, 2689, 1373, 1720, 598, 2561, 2557, 1692,
	2305, 1718, 100, 2765, 99, 2073, 2161, 598, 1937, 1547,
	1931, 1930, 1600, 94, 1507, 1503, 2179, 2605, 2686, 1373,
	1472, 1216, 113, 1213, 2271, 1214, 1215, 2173, 1115, 2769,
	2968, 186, 1956, 2270, 186, 1213, 1543, 1214, 1215, 2725,
	2726, 2091, 1213, 1849, 1214, 1215, 3207, 3205, 3160, 2247,
	3181, 3060, 2986, 2211, 2766, 2767, 2768, 2728, 2553, 37,
	1548, 1549, 1550, 2552, 2551, 2468, 1216, 1213, 2231, 1214,
	1215, 2107, 1373, 2284, 2731, 1216, 2770, 2771, 2772, 2049,
	1821, 2271, 1662, 1544, 1545, 1546, 2490, 2192, 1232, 2488,
	2492, 2491, 2224, 2225, 2489, 2730, 1216, 598, 2487, 2486,
	1216, 3112, 1863, 186, 2684, 1373, 1381, 1855, 2234, 2719,
	186, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1240,
	1242, 1243, 2446, 2445, 598, 2188, 2859, 3018, 2858, 2458,
	2460, 598, 2868, 2201, 1347, 1515, 1515, 2870, 2461, 810,
	598, 1820, 2163, 2709, 2455, 2258, 2260, 811, 1613, 2734,
	2296, 2255, 2230, 1213, 2706, 1214, 1215, 2319, 2638, 1373,
	782, 2531, 2705, 2184, 2275, 2189, 1077, 2251, 186, 186,
	186, 186, 186, 1216, 2318, 2204, 2857, 2282, 2235, 2146,
	1373, 1076, 2619, 2129, 1373, 1731, 2270, 2273, 2350, 186,
	186, 1184, 2276, 2277, 2311, 1948, 2242, 2239, 1213, 1732,
	1214, 1215, 121, 2089, 2711, 186, 2249, 1213, 94, 1214,
	1215, 3220, 92, 187, 2549, 187, 92, 2052, 187, 94,
	1874, 1875, 2252, 93, 598, 2263, 3133, 93, 1213, 3035,
	1214, 1215, 1213, 2963, 1214, 1215, 2530, 1216, 2272, 2228,
	1860, 2281, 2330, 2331, 2332, 2333, 2334, 599, 599, 599,
	2280, 818, 819, 1216, 2444, 2041, 2687, 2040, 2317, 2285,
	2286, 2287, 2443, 1672, 2343, 599, 599, 1720, 2039, 1720,
	2691, 1495, 1720, 1718, 2068, 1718, 99, 1720, 1718, 2351,
	3006, 3005, 598, 1718, 2989, 1811, 2876, 1811, 2380, 2148,
	2149, 101, 598, 1372, 2874, 2306, 2307, 2873, 2376, 2316,
	1216, 2866, 100, 100, 99, 1213, 2779, 1214, 1215, 2401,
	2359, 2401, 2710, 598, 2401, 101, 2708, 2339, 2358, 2401,
	2659, 2562, 1983, 1490, 2424, 2431, 100, 2699, 186, 817,
	2865, 2207, 598, 2342, 2849, 2406, 2655, 2187, 2403, 2426,
	2407, 3209, 3208, 1216, 2390, 2348, 598, 2099, 2349, 2413,
	2414, 2415, 2416, 598, 598, 1847, 186, 186, 186, 186,
	186, 1399, 1390, 2360, 2377, 1809, 3208, 1809, 186, 1213,
	3209, 1214, 1215, 186, 3024, 186, 2745, 186, 808, 2431,
	186, 186, 186, 2646, 1216, 1213, 2465, 1214, 1215, 103,
	798, 2480, 2394, 106, 107, 88, 1, 2499, 2749, 2471,
	3143, 566, 101, 1837, 2471, 2408, 2409, 2410, 2411, 2412,
	1360, 2474, 1345, 100, 2448, 99, 2545, 2425, 581, 2427,
	1216, 2430, 3182, 3139, 94, 186, 2645, 2449, 3140, 1216,
	1586, 1576, 1213, 2811, 1214, 1215, 1780, 2964, 598, 2436,
	1216, 2565, 1989, 2437, 2438, 2439, 598, 2447, 187, 2777,
	1946, 186, 599, 599, 1034, 146, 2450, 1909, 1216, 1910,
	2440, 2462, 2463, 3107, 186, 110, 992, 2160, 187, 109,
	1037, 800, 2585, 1143, 799, 1213, 2501, 1214, 1215, 2502,
	2482, 2483, 186, 2485, 1984, 186, 2801, 599, 1216, 1624,
	2564, 187, 95, 2493, 2497, 2620, 599, 96, 1216, 2550,
	2503, 2479, 599, 2159, 1216, 2256, 1918, 2509, 2542, 2543,
	2481, 1216, 2158, 2484, 2541, 2540, 1213, 2539, 1214, 1215,
	1425, 1216, 1423, 2157, 1424, 2588, 1422, 1427, 1426, 2100,
	1216, 2593, 2660, 2592, 1216, 1663, 595, 2227, 2597, 184,
	1414, 2144, 1391, 1216, 2673, 1078, 556, 2584, 2538, 2563,
	2021, 1216, 1213, 1948, 1214, 1215, 2613, 562, 598, 2616,
	2596, 1213, 1258, 1214, 1215, 1216, 2442, 2243, 837, 2654,
	830, 2138, 1213, 1848, 1214, 1215, 2177, 2476, 2703, 2454,
	2615, 2137, 598, 186, 2614, 2612, 2456, 2136, 2194, 2623,
	1213, 2459, 1214, 1215, 2135, 2452, 3017, 2622, 2630, 2867,
	2675, 3092, 2627, 2628, 2134, 2629, 2253, 2679, 2631, 1387,
	2633, 2636, 2635, 2133, 2680, 2090, 1733, 2132, 2617, 2618,
	1213, 1889, 1214, 1215, 1216, 2844, 2131, 1684, 620, 619,
	1213, 617, 1214, 1215, 2130, 2180, 1213, 2208, 1214, 1215,
	1219, 186, 724, 1213, 2167, 1214, 1215, 1400, 2124, 2219,
	2217, 2216, 2050, 1213, 1895, 1214, 1215, 2696, 187, 2748,
	2727, 2723, 1213, 3135, 1214, 1215, 1213, 1216, 1214, 1215,
	186, 2692, 2693, 1891, 1887, 1213, 2697, 1214, 1215, 2186,
	628, 2707, 2700, 1213, 621, 1214, 1215, 613, 689, 186,
	2742, 2591, 186, 186, 186, 599, 2712, 1213, 3120, 1214,
	1215, 2325, 598, 598, 1216, 2602, 2327, 2123, 2254, 2722,
	2729, 2598, 2732, 1197, 599, 599, 1363, 599, 607, 599,
	599, 1216, 599, 599, 599, 599, 599, 599, 2784, 2785,
	2737, 2738, 2593, 2735, 2592, 2743, 1005, 2744, 1730, 599,
	2736, 2969, 3041, 187, 2758, 2067, 598, 598, 598, 598,
	2122, 2805, 2806, 2642, 1362, 2760, 1213, 2762, 1214, 1215,
	187, 2754, 2755, 2773, 1743, 1216, 2774, 2775, 2776, 1744,
	3048, 2573, 2795, 599, 2554, 187, 2220, 2223, 2224, 2225,
	2221, 2302, 2222, 2226, 1976, 63, 41, 2119, 3012, 599,
	3080, 187, 688, 1216, 685, 2846, 2847, 1216, 2848, 1213,
	2420, 1214, 1215, 1720, 2118, 1720, 2421, 187, 3063, 1718,
	1216, 1718, 3064, 2788, 187, 2807, 684, 2792, 2793, 2794,
	3065, 1771, 2824, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 599, 599, 599, 186, 1213, 602, 1214, 1215,
	3156, 1188, 824, 1371, 1367, 2401, 32, 2401, 2117, 31,
	30, 2820, 29, 1213, 28, 1214, 1215, 2862, 1368, 598,
	2818, 598, 23, 187, 22, 21, 20, 19, 2833, 25,
	18, 17, 2832, 16, 2576, 3177, 2115, 2842, 3219, 2891,
	2111, 115, 1720, 1853, 1854, 1370, 50, 1369, 1718, 2883,
	47, 45, 123, 2110, 122, 37, 48, 1213, 44, 1214,
	1215, 1118, 42, 2471, 27, 26, 15, 14, 2885, 13,
	12, 599, 11, 2872, 2871, 10, 2474, 2863, 9, 2879,
	2474, 2887, 598, 5, 2881, 1213, 4, 1214, 1215, 1213,
	35, 1214, 1215, 34, 33, 186, 1191, 24, 598, 599,
	599, 2, 1213, 2289, 1214, 1215, 1978, 0, 2942, 0,
	0, 598, 0, 2895, 0, 0, 2220, 2223, 2224, 2225,
	2221, 0, 2222, 2226, 2892, 2893, 2725, 2726, 0, 0,
	0, 0, 0, 0, 0, 1371, 1367, 2954, 2983, 0,
	2984, 0, 0, 2940, 2966, 2939, 2987, 599, 2946, 1720,
	1368, 2938, 0, 2959, 0, 1718, 0, 598, 0, 0,
	2958, 598, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 1364, 1365, 1370, 599, 1369,
	0, 0, 0, 0, 0, 0, 0, 2949, 2950, 2951,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2990, 0, 187, 2988, 2993, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 3010, 187, 3028, 0, 3009, 599,
	3007, 3008, 0, 0, 187, 0, 187, 3027, 187, 187,
	599, 3025, 0, 599, 0, 598, 0, 0, 0, 0,
	3016, 0, 0, 2474, 599, 0, 0, 0, 0, 0,
	186, 3031, 0, 1374, 1376, 0, 0, 0, 0, 0,
	0, 3033, 0, 0, 0, 0, 0, 0, 598, 186,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3044, 0, 3052, 3049, 0, 0, 3047, 599,
	0, 37, 0, 0, 0, 0, 3040, 0, 0, 0,
	0, 0, 0, 0, 585, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 598, 0, 0,
	0, 3069, 599, 0, 3070, 0, 0, 0, 0, 0,
	0, 0, 0, 3053, 0, 0, 3078, 0, 0, 0,
	0, 598, 598, 0, 0, 0, 571, 0, 0, 0,
	0, 3085, 0, 3068, 0, 0, 0, 3093, 0, 3095,
	0, 3090, 0, 37, 2471, 598, 3122, 3098, 0, 599,
	3106, 599, 3121, 3103, 2966, 3108, 0, 599, 599, 186,
	598, 3115, 3100, 3099, 3097, 3102, 3101, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 3131, 0, 0,
	0, 3134, 0, 0, 0, 3152, 568, 3142, 3147, 0,
	0, 0, 0, 0, 0, 187, 0, 3162, 3122, 0,
	0, 0, 187, 598, 3121, 3159, 0, 0, 0, 187,
	187, 0, 0, 187, 0, 187, 0, 0, 0, 0,
	3171, 0, 187, 0, 0, 598, 565, 3176, 0, 187,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 3191, 598, 0, 598, 0, 0, 0, 0,
	576, 3189, 3203, 0, 0, 1720, 0, 187, 599, 0,
	3200, 1718, 3206, 3199, 3204, 3202, 0, 0, 0, 0,
	0, 0, 0, 3215, 3122, 0, 0, 0, 0, 0,
	3121, 0, 3221, 0, 0, 3229, 3227, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3237, 3239,
	3240, 1720, 2984, 3238, 0, 0, 0, 1718, 0, 555,
	0, 557, 572, 0, 588, 0, 587, 561, 0, 559,
	563, 573, 564, 0, 558, 0, 569, 0, 0, 560,
	574, 575, 578, 592, 591, 579, 577, 0, 567, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 0, 2250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 0, 0, 0, 0, 187, 0, 0, 187, 0,
	0, 0, 1737, 0, 0, 0, 1738, 0, 0, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 584, 0, 0, 187, 1374, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 182, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 121,
	171, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 187, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2295, 0, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 0, 121, 0, 143, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 0, 164, 0, 0,
	0, 1960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 142, 0, 599, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	816, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 1498, 1499, 152, 151, 181, 0, 0,
	0, 0, 187, 0, 0, 0, 599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 0, 0, 599, 599, 0,
	187, 187, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 187, 165, 0, 0, 0, 187, 0, 187,
	0, 187, 171, 0, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 1500, 154, 187,
	1497, 0, 148, 149, 157, 0, 0, 0, 165, 0,
	0, 169, 599, 0, 0, 0, 0, 171, 0, 0,
	599, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 187, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 156,
	2084, 2085, 2086, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 2095, 2096, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	2102, 2103, 2104, 2105, 2106, 0, 2108, 0, 0, 0,
	0, 0, 2112, 0, 2113, 0, 0, 0, 2116, 0,
	0, 0, 599, 0, 156, 0, 2125, 2126, 2127, 2128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2139,
	0, 2142, 2143, 0, 0, 0, 599, 187, 2145, 2147,
	0, 0, 0, 0, 0, 0, 2152, 2153, 2154, 2155,
	2156, 78, 39, 40, 80, 0, 0, 1858, 0, 2162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2174,
	0, 84, 0, 0, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 150, 0, 0, 0, 187, 157, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 144, 87,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 177, 187, 187, 187, 0,
	0, 0, 0, 0, 0, 0, 599, 599, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	599, 599, 599, 599, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 1217, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 0, 75, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 1265, 0, 0, 0, 0, 0, 55, 83, 82,
	0, 0, 64, 65, 53, 0, 0, 0, 0, 0,
	73, 74, 0, 599, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 2387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2402, 0, 0, 0, 0, 0,
	57, 58, 0, 59, 60, 61, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2428, 2429, 0, 0, 599, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 0, 2495, 2496, 599, 599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 3175, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2637, 2639, 2641, 0, 0, 0, 0, 0, 599,
	2647, 0, 0, 0, 0, 2651, 2652, 2653, 0, 0,
	0, 599, 2656, 0, 0, 0, 0, 0, 2658, 0,
	0, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 0, 0, 0, 0, 599, 599, 0, 0, 2678,
	0, 0, 0, 0, 2682, 1477, 2683, 2685, 0, 2688,
	0, 0, 0, 0, 2694, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 0, 1430, 0, 0, 0, 0,
	0, 0, 0, 187, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2716,
	2717, 0, 0, 2721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2733, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 1443, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2799, 0, 0, 731, 79, 0, 1456, 1459, 1460, 1461,
	1462, 1463, 1464, 0, 1465, 1466, 1467, 1468, 1469, 1444,
	1445, 1446, 1447, 1428, 1429, 1457, 0, 1431, 0, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 0, 2819,
	1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 0,
	2821, 0, 0, 1679, 1680, 1681, 1682, 0, 0, 0,
	0, 0, 0, 0, 2830, 0, 0, 0, 2831, 0,
	0, 0, 0, 0, 2835, 0, 0, 0, 0, 0,
	0, 795, 0, 79, 0, 0, 2843, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 1724, 1725, 0, 0,
	0, 795, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1004, 1765, 1766,
	1767, 1768, 1769, 1770, 1772, 1776, 1777, 611, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 0, 1807, 0, 1813, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 1458, 0, 0, 0, 0, 1828,
	1829, 1830, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2955,
	0, 0, 0, 0, 0, 0, 0, 0, 2962, 0,
	0, 0, 0, 0, 0, 0, 1870, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 2972, 2973, 2974, 0,
	2975, 2976, 0, 0, 0, 0, 2979, 0, 2980, 0,
	2982, 2985, 0, 0, 1906, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2994, 2996, 2997, 2999,
	3002, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3032, 164,
	0, 0, 0, 1944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3054, 0, 1498, 1499, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 3059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	0, 0, 0, 0, 0, 3075, 0, 0, 0, 0,
	0, 3076, 3077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3123, 3125, 3127, 147, 1500,
	154, 0, 1497, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	3155, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	0, 996, 0, 1003, 0, 0, 0, 0, 0, 3161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 3194, 3196, 3198, 0, 1179, 1179, 1179, 0,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 1265, 3218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	3231, 3232, 0, 795, 1254, 1255, 1256, 0, 1259, 0,
	1260, 1261, 1262, 1263, 0, 1266, 1268, 1268, 0, 1268,
	1272, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 0, 1315, 0, 1317, 1318, 1319, 1320,
	1321, 0, 0, 150, 0, 0, 1272, 1272, 1272, 1272,
	1272, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	1328, 1329, 1330, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 1430, 0, 0,
	144, 0, 0, 145, 0, 2897, 2899, 2898, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 795,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1443, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 0, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 0, 1456, 1459,
	1460, 1461, 1462, 1463, 1464, 0, 1465, 1466, 1467, 1468,
	1469, 1444, 1445, 1446, 1447, 1428, 1429, 1457, 0, 1431,
	0, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	2355, 0, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 0, 0, 0, 0, 0, 0, 0, 2378, 2379,
	0, 0, 0, 2382, 0, 0, 0, 0, 2384, 2385,
	2386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2391, 2392, 2393, 0, 0, 1783, 2395, 0, 2396, 2397,
	0, 0, 0, 2404, 2405, 0, 0, 0, 0, 0,
	0, 1783, 1783, 1783, 1783, 1783, 611, 611, 611, 611,
	0, 0, 0, 0, 0, 0, 0, 2903, 2904, 0,
	0, 0, 838, 838, 838, 0, 0, 0, 2432, 2433,
	2434, 2435, 0, 0, 0, 0, 0, 0, 0, 0,
	1187, 1189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 2466, 645,
	706, 647, 703, 704, 0, 643, 646, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 649, 2896, 2900, 2901, 2902,
	2905, 2906, 2907, 2915, 2917, 673, 2916, 2918, 2919, 2920,
	2923, 2924, 2925, 2926, 2921, 2922, 2927, 2928, 2929, 2930,
	2931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 708, 0, 0, 712, 0,
	0, 0, 714, 713, 2560, 715, 687, 686, 0, 1338,
	709, 710, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 1179, 1179, 0, 87, 0, 0, 0, 0,
	0, 725, 733, 734, 735, 736, 737, 726, 728, 0,
	0, 0, 727, 0, 0, 0, 0, 1351, 1352, 0,
	0, 0, 0, 0, 0, 730, 738, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2644, 0, 0, 0, 0, 0,
	0, 2650, 1395, 2176, 0, 0, 733, 734, 0, 0,
	0, 838, 1719, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 2594, 2595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 0, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2780, 0,
	0, 0, 0, 0, 0, 0, 0, 1890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2804, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 1523,
	1523, 0, 1523, 0, 1523, 1523, 0, 1532, 1523, 1523,
	1523, 1523, 1523, 0, 0, 0, 0, 0, 1004, 2822,
	1338, 2823, 0, 1338, 996, 0, 2826, 2827, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 706,
	2834, 703, 704, 0, 0, 0, 705, 0, 0, 0,
	0, 1004, 0, 0, 0, 0, 0, 0, 1599, 0,
	733, 734, 2851, 0, 0, 2852, 1719, 2853, 2854, 0,
	2855, 0, 0, 0, 1621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2888, 0, 0, 2890,
	0, 0, 0, 0, 0, 0, 0, 838, 838, 838,
	0, 0, 2894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2935, 0, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 1741, 1742, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3015, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 0, 838, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 0, 838, 0,
	0, 0, 3058, 2150, 0, 0, 0, 0, 0, 996,
	611, 0, 0, 0, 0, 0, 3071, 0, 0, 3072,
	0, 3073, 0, 0, 0, 0, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 1003, 2212, 2213, 0, 0, 0,
	0, 0, 0, 0, 2232, 0, 2233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 996, 0, 0, 0, 0, 0, 1003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 996, 3168, 1714, 3169, 0, 3170,
	0, 0, 1714, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3216, 0, 3217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 552, 0, 0, 593, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 823, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1890, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2475, 0, 79, 0, 0, 1890,
	1890, 1890, 1890, 1890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2232, 0, 0, 0,
	1890, 0, 838, 1890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 2181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 725, 733, 734,
	735, 736, 737, 726, 728, 0, 0, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2624, 2278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 2594, 2595,
	2303, 0, 0, 0, 0, 0, 0, 0, 0, 2308,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 1338, 0, 0, 1338, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 552,
	0, 2418, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 0, 0, 1338,
	0, 0, 2478, 1523, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2856, 0, 2860, 2861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 0, 0,
	1338, 0, 0, 0, 0, 1862, 0, 0, 0, 2475,
	0, 79, 0, 2475, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 2947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 2674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1328, 1329, 1330, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 1862, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2812, 2813, 2814, 2815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3089, 0, 0, 0, 0, 79,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 0, 1338, 0, 1339,
	0, 0, 1339, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 1623, 0, 0, 2884, 0,
	2886, 0, 0, 0, 0, 0, 0, 3172, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 552,
	552, 552, 552, 552, 552, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 0, 0, 0, 0, 0, 823,
	823, 0, 0, 0, 0, 1339, 3003, 0, 0, 0,
	3003, 3003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 823, 1623, 823, 823, 823, 823,
	823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 805, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 1623, 0, 552, 0,
	552, 0, 552, 1897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 0, 3086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2674, 0, 3137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 552, 552, 0, 0, 552, 0, 2053,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 552, 552, 552,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	1339, 0, 0, 1339, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1339, 0,
	0, 0, 0, 1339, 552, 552, 552, 552, 552, 0,
	0, 0, 0, 0, 0, 0, 2494, 0, 0, 0,
	0, 552, 0, 1573, 0, 552, 0, 0, 552, 2504,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	552, 552, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 1339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 364, 0, 0, 974,
	959, 470, 0, 902, 977, 871, 890, 987, 893, 896,
	938, 850, 916, 382, 887, 843, 875, 845, 882, 846,
	873, 904, 253, 870, 961, 920, 976, 337, 250, 852,
	876, 396, 892, 197, 940, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 983,
	341, 926, 0, 454, 367, 0, 0, 1573, 906, 965,
	914, 952, 901, 939, 860, 925, 978, 888, 935, 979,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 3109, 0, 3110, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 884, 932, 973,
	885, 934, 248, 296, 255, 247, 474, 984, 964, 849,
	913, 972, 0, 0, 216, 975, 908, 0, 937, 0,
	990, 844, 928, 0, 847, 851, 986, 968, 879, 258,
	0, 0, 0, 0, 0, 0, 0, 905, 915, 949,
	953, 899, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 924, 0, 0, 0, 856, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 859, 0, 878, 950, 0, 842,
	279, 853, 368, 240, 0, 957, 967, 900, 510, 971,
	898, 897, 944, 857, 963, 891, 336, 855, 305, 192,
	212, 0, 889, 378, 421, 431, 962, 874, 883, 238,
	881, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 923, 942, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 1181, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 869, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 958, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 947, 989, 391, 430, 227, 495, 453, 864,
	868, 862, 929, 863, 918, 919, 865, 980, 981, 982,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 951,
	858, 0, 866, 867, 0, 960, 969, 970, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 922, 191, 208, 339, 985, 414, 271,
	525, 504, 500, 198, 210, 861, 245, 872, 880, 0,
	886, 894, 895, 907, 909, 910, 911, 912, 930, 931,
	933, 941, 943, 946, 948, 955, 966, 988, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 921, 927, 350, 264,
	284, 295, 936, 503, 459, 214, 426, 273, 236, 954,
	956, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 917, 945, 346, 471, 472,
	291, 364, 0, 0, 974, 959, 470, 0, 902, 977,
	871, 890, 987, 893, 896, 938, 850, 916, 382, 887,
	843, 875, 845, 882, 846, 873, 904, 253, 870, 961,
	920, 976, 337, 250, 852, 876, 396, 892, 197, 940,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 983, 341, 926, 0, 454, 367,
	0, 0, 0, 906, 965, 914, 952, 901, 939, 860,
	925, 978, 888, 935, 979, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 884, 932, 973, 885, 934, 248, 296, 255,
	247, 474, 984, 964, 849, 913, 972, 0, 0, 216,
	975, 908, 0, 937, 0, 990, 844, 928, 0, 847,
	851, 986, 968, 879, 258, 0, 0, 0, 0, 0,
	0, 0, 905, 915, 949, 953, 899, 0, 0, 0,
	0, 0, 2505, 0, 877, 0, 924, 0, 0, 0,
	856, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 859,
	0, 878, 950, 0, 842, 279, 853, 368, 240, 0,
	957, 967, 900, 510, 971, 898, 897, 944, 857, 963,
	891, 336, 855, 305, 192, 212, 0, 889, 378, 421,
	431, 962, 874, 883, 238, 881, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 923, 942, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 1181, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 869, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 958,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 947, 989, 391,
	430, 227, 495, 453, 864, 868, 862, 929, 863, 918,
	919, 865, 980, 981, 982, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 951, 858, 0, 866, 867, 0,
	960, 969, 970, 547, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 922, 191,
	208, 339, 985, 414, 271, 525, 504, 500, 198, 210,
	861, 245, 872, 880, 0, 886, 894, 895, 907, 909,
	910, 911, 912, 930, 931, 933, 941, 943, 946, 948,
	955, 966, 988, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 921, 927, 350, 264, 284, 295, 936, 503, 459,
	214, 426, 273, 236, 954, 956, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	917, 945, 346, 471, 472, 291, 364, 0, 0, 974,
	959, 470, 0, 902, 977, 871, 890, 987, 893, 896,
	938, 850, 916, 382, 887, 843, 875, 845, 882, 846,
	873, 904, 253, 870, 961, 920, 976, 337, 250, 852,
	876, 396, 892, 197, 940, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 983,
	341, 926, 0, 454, 367, 0, 0, 0, 906, 965,
	914, 952, 901, 939, 860, 925, 978, 888, 935, 979,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 884, 932, 973,
	885, 934, 248, 296, 255, 247, 474, 984, 964, 849,
	913, 972, 0, 0, 216, 975, 908, 0, 937, 0,
	990, 844, 928, 0, 847, 851, 986, 968, 879, 258,
	0, 0, 0, 0, 0, 0, 0, 905, 915, 949,
	953, 899, 0, 0, 0, 0, 0, 2464, 0, 877,
	0, 924, 0, 0, 0, 856, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 859, 0, 878, 950, 0, 842,
	279, 853, 368, 240, 0, 957, 967, 900, 510, 971,
	898, 897, 944, 857, 963, 891, 336, 855, 305, 192,
	212, 0, 889, 378, 421, 431, 962, 874, 883, 238,
	881, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 923, 942, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 1181, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 869, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 958, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 947, 989, 391, 430, 227, 495, 453, 864,
	868, 862, 929, 863, 918, 919, 865, 980, 981, 982,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 951,
	858, 0, 866, 867, 0, 960, 969, 970, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 922, 191, 208, 339, 985, 414, 271,
	525, 504, 500, 198, 210, 861, 245, 872, 880, 0,
	886, 894, 895, 907, 909, 910, 911, 912, 930, 931,
	933, 941, 943, 946, 948, 955, 966, 988, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 921, 927, 350, 264,
	284, 295, 936, 503, 459, 214, 426, 273, 236, 954,
	956, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 917, 945, 346, 471, 472,
	291, 364, 0, 0, 974, 959, 470, 0, 902, 977,
	871, 890, 987, 893, 896, 938, 850, 916, 382, 887,
	843, 875, 845, 882, 846, 873, 904, 253, 870, 961,
	920, 976, 337, 250, 852, 876, 396, 892, 197, 940,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 983, 341, 926, 0, 454, 367,
	0, 0, 0, 906, 965, 914, 952, 901, 939, 860,
	925, 978, 888, 935, 979, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 884, 932, 973, 885, 934, 248, 296, 255,
	247, 474, 984, 964, 849, 913, 972, 0, 0, 216,
	975, 908, 0, 937, 0, 990, 844, 928, 0, 847,
	851, 986, 968, 879, 258, 0, 0, 0, 0, 0,
	0, 0, 905, 915, 949, 953, 899, 0, 0, 0,
	0, 0, 1878, 0, 877, 0, 924, 0, 0, 0,
	856, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 859,
	0, 878, 950, 0, 842, 279, 853, 368, 240, 0,
	957, 967, 900, 510, 971, 898, 897, 944, 857, 963,
	891, 336, 855, 305, 192, 212, 0, 889, 378, 421,
	431, 962, 874, 883, 238, 881, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 923, 942, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 1181, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 869, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 958,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 947, 989, 391,
	430, 227, 495, 453, 864, 868, 862, 929, 863, 918,
	919, 865, 980, 981, 982, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 951, 858, 0, 866, 867, 0,
	960, 969, 970, 547, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 922, 191,
	208, 339, 985, 414, 271, 525, 504, 500, 198, 210,
	861, 245, 872, 880, 0, 886, 894, 895, 907, 909,
	910, 911, 912, 930, 931, 933, 941, 943, 946, 948,
	955, 966, 988, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 921, 927, 350, 264, 284, 295, 936, 503, 459,
	214, 426, 273, 236, 954, 956, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	917, 945, 346, 471, 472, 291, 364, 0, 0, 974,
	959, 470, 0, 902, 977, 871, 890, 987, 893, 896,
	938, 850, 916, 382, 887, 843, 875, 845, 882, 846,
	873, 904, 253, 870, 961, 920, 976, 337, 250, 852,
	876, 396, 892, 197, 940, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 983,
	341, 926, 0, 454, 367, 0, 0, 0, 906, 965,
	914, 952, 901, 939, 860, 925, 978, 888, 935, 979,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 884, 932, 973,
	885, 934, 248, 296, 255, 247, 474, 984, 964, 849,
	913, 972, 0, 0, 216, 975, 908, 0, 937, 0,
	990, 844, 928, 0, 847, 851, 986, 968, 879, 258,
	0, 0, 0, 0, 0, 0, 0, 905, 915, 949,
	953, 899, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 924, 0, 0, 0, 856, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 859, 0, 878, 950, 0, 842,
	279, 853, 368, 240, 0, 957, 967, 900, 510, 971,
	898, 897, 944, 857, 963, 891, 336, 855, 305, 192,
	212, 0, 889, 378, 421, 431, 962, 874, 883, 238,
	881, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 923, 942, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 1181, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 869, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 958, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 947, 989, 391, 430, 227, 495, 453, 864,
	868, 862, 929, 863, 918, 919, 865, 980, 981, 982,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 951,
	858, 0, 866, 867, 0, 960, 969, 970, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 922, 191, 208, 339, 985, 414, 271,
	525, 504, 500, 198, 210, 861, 245, 872, 880, 0,
	886, 894, 895, 907, 909, 910, 911, 912, 930, 931,
	933, 941, 943, 946, 948, 955, 966, 988, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 921, 927, 350, 264,
	284, 295, 936, 503, 459, 214, 426, 273, 236, 954,
	956, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 917, 945, 346, 471, 472,
	291, 364, 0, 0, 974, 959, 470, 0, 902, 977,
	871, 890, 987, 893, 896, 938, 850, 916, 382, 887,
	843, 875, 845, 882, 846, 873, 904, 253, 870, 961,
	920, 976, 337, 250, 852, 876, 396, 892, 197, 940,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 983, 341, 926, 0, 454, 367,
	0, 0, 0, 906, 965, 914, 952, 901, 939, 860,
	925, 978, 888, 935, 979, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 884, 932, 973, 885, 934, 248, 296, 255,
	247, 474, 984, 964, 849, 913, 972, 0, 0, 216,
	975, 908, 0, 937, 0, 990, 844, 928, 0, 847,
	851, 986, 968, 879, 258, 0, 0, 0, 0, 0,
	0, 0, 905, 915, 949, 953, 899, 0, 0, 0,
	0, 0, 0, 0, 877, 0, 924, 0, 0, 0,
	856, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 859,
	0, 878, 950, 0, 842, 279, 853, 368, 240, 0,
	957, 967, 900, 510, 971, 898, 897, 944, 857, 963,
	891, 336, 855, 305, 192, 212, 0, 889, 378, 421,
	431, 962, 874, 883, 238, 881, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 923, 942, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 1181, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 869, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 958,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 947, 989, 391,
	430, 227, 495, 453, 864, 868, 862, 929, 863, 918,
	919, 865, 980, 981, 982, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 951, 858, 0, 866, 867, 0,
	960, 969, 970, 547, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 922, 191,
	208, 339, 985, 414, 271, 525, 504, 500, 198, 210,
	861, 245, 872, 880, 0, 886, 894, 895, 907, 909,
	910, 911, 912, 930, 931, 933, 941, 943, 946, 948,
	955, 966, 988, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 921, 927, 350, 264, 284, 295, 936, 503, 459,
	214, 426, 273, 236, 954, 956, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	917, 945, 346, 471, 472, 291, 364, 0, 0, 974,
	959, 470, 0, 902, 977, 871, 890, 987, 893, 896,
	938, 850, 916, 382, 887, 843, 875, 845, 882, 846,
	873, 904, 253, 870, 961, 920, 976, 337, 250, 852,
	876, 396, 892, 197, 940, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 983,
	341, 926, 0, 454, 367, 0, 0, 0, 906, 965,
	914, 952, 901, 939, 860, 925, 978, 888, 935, 979,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 884, 932, 973,
	885, 934, 248, 296, 255, 247, 474, 984, 964, 849,
	913, 972, 0, 0, 991, 975, 908, 0, 937, 0,
	990, 844, 928, 0, 847, 851, 986, 968, 879, 258,
	0, 0, 0, 0, 0, 0, 0, 905, 915, 949,
	953, 899, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 924, 0, 0, 0, 856, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 859, 0, 878, 950, 0, 842,
	279, 853, 368, 240, 0, 957, 967, 900, 510, 971,
	898, 897, 944, 857, 963, 891, 336, 855, 305, 192,
	212, 0, 889, 378, 421, 431, 962, 874, 883, 238,
	881, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 923, 942, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 854, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 869, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 958, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 841, 835, 834,
	306, 343, 947, 989, 391, 430, 227, 495, 453, 864,
	868, 862, 929, 863, 918, 919, 865, 980, 981, 982,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 951,
	858, 0, 866, 867, 0, 960, 969, 970, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 922, 191, 208, 339, 985, 414, 271,
	525, 504, 500, 198, 210, 861, 245, 872, 880, 0,
	886, 894, 895, 907, 909, 910, 911, 912, 930, 931,
	933, 941, 943, 946, 948, 955, 966, 988, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 921, 927, 350, 264,
	284, 295, 936, 503, 459, 214, 426, 273, 236, 954,
	956, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 917, 945, 346, 471, 472,
	291, 364, 0, 0, 974, 959, 470, 0, 902, 977,
	871, 890, 987, 893, 896, 938, 850, 916, 382, 887,
	843, 875, 845, 882, 846, 873, 904, 253, 870, 961,
	920, 976, 337, 250, 852, 876, 396, 892, 197, 940,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 983, 341, 926, 0, 454, 367,
	0, 0, 0, 906, 965, 914, 952, 901, 939, 860,
	925, 978, 888, 935, 979, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 884, 932, 973, 885, 934, 248, 296, 255,
	247, 474, 984, 964, 849, 913, 972, 0, 0, 991,
	975, 908, 0, 937, 0, 990, 844, 928, 0, 847,
	851, 986, 968, 879, 258, 0, 0, 0, 0, 0,
	0, 0, 905, 915, 949, 953, 899, 0, 0, 0,
	0, 0, 0, 0, 877, 0, 924, 0, 0, 0,
	856, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 0, 859,
	0, 878, 950, 0, 842, 279, 853, 368, 240, 0,
	957, 967, 900, 510, 971, 898, 897, 944, 857, 963,
	891, 336, 855, 305, 192, 212, 0, 889, 378, 421,
	431, 962, 874, 883, 238, 881, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 923, 942, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 1406, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 854, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 869, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 958,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 841, 835, 834, 306, 343, 947, 989, 391,
	430, 227, 495, 453, 864, 868, 862, 929, 863, 918,
	919, 865, 980, 981, 982, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 951, 858, 0, 866, 867, 0,
	960, 969, 970, 547, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 922, 191,
	208, 339, 985, 414, 271, 525, 504, 500, 198, 210,
	861, 245, 872, 880, 0, 886, 894, 895, 907, 909,
	910, 911, 912, 930, 931, 933, 941, 943, 946, 948,
	955, 966, 988, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 921, 927, 350, 264, 284, 295, 936, 503, 459,
	214, 426, 273, 236, 954, 956, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	917, 945, 346, 471, 472, 291, 364, 0, 0, 974,
	959, 470, 0, 902, 977, 871, 890, 987, 893, 896,
	938, 850, 916, 382, 887, 843, 875, 845, 882, 846,
	873, 904, 253, 870, 961, 920, 976, 337, 250, 852,
	876, 396, 892, 197, 940, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 983,
	341, 926, 0, 454, 367, 0, 0, 0, 906, 965,
	914, 952, 901, 939, 860, 925, 978, 888, 935, 979,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 884, 932, 973,
	885, 934, 248, 296, 255, 247, 474, 984, 964, 849,
	913, 972, 0, 0, 991, 975, 908, 0, 937, 0,
	990, 844, 928, 0, 847, 851, 986, 968, 879, 258,
	0, 0, 0, 0, 0, 0, 0, 905, 915, 949,
	953, 899, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 924, 0, 0, 0, 856, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 0, 859, 0, 878, 950, 0, 842,
	279, 853, 368, 240, 0, 957, 967, 900, 510, 971,
	898, 897, 944, 857, 963, 891, 336, 855, 305, 192,
	212, 0, 889, 378, 421, 431, 962, 874, 883, 238,
	881, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 923, 942, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 832, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 854, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 869, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 958, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 841, 835, 834,
	306, 343, 947, 989, 391, 430, 227, 495, 453, 864,
	868, 862, 929, 863, 918, 919, 865, 980, 981, 982,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 951,
	858, 0, 866, 867, 0, 960, 969, 970, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 922, 191, 208, 339, 985, 414, 271,
	525, 504, 500, 198, 210, 861, 245, 872, 880, 0,
	886, 894, 895, 907, 909, 910, 911, 912, 930, 931,
	933, 941, 943, 946, 948, 955, 966, 988, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 921, 927, 350, 264,
	284, 295, 936, 503, 459, 214, 426, 273, 236, 954,
	956, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 917, 945, 346, 471, 472,
	291, 364, 0, 0, 0, 0, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 1816, 0, 629, 0, 0, 0, 253, 634, 0,
	0, 0, 337, 250, 0, 1817, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 641, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 87, 0, 0, 188, 189, 190, 725,
	733, 734, 735, 736, 737, 726, 728, 0, 0, 225,
	727, 232, 652, 654, 653, 663, 664, 665, 666, 667,
	668, 669, 650, 730, 738, 739, 0, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 612, 626, 0,
	640, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 624, 821, 0, 0, 0, 695, 0, 625, 0,
	0, 633, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	694, 0, 0, 510, 0, 0, 692, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 658, 659, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 702, 693, 645, 706, 647, 703,
	704, 642, 643, 646, 705, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 696, 632, 631, 0, 638, 639,
	0, 648, 649, 651, 655, 656, 657, 660, 661, 662,
	670, 672, 673, 671, 674, 675, 676, 679, 680, 681,
	682, 677, 678, 683, 716, 717, 718, 719, 630, 191,
	208, 339, 0, 414, 271, 525, 504, 500, 198, 210,
	707, 245, 708, 0, 0, 712, 0, 0, 0, 714,
	713, 0, 715, 687, 686, 0, 0, 709, 710, 0,
	711, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 732, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 364, 346, 471, 472, 291, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 629, 0, 0, 0, 253, 634, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 641, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 87, 0, 0, 188, 189, 190, 725,
	733, 734, 735, 736, 737, 726, 728, 0, 0, 225,
	727, 232, 652, 654, 653, 663, 664, 665, 666, 667,
	668, 669, 650, 730, 738, 739, 0, 248, 296, 255,
	247, 474, 0, 0, 1773, 1774, 1775, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 612, 626, 0,
	640, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 695, 0, 625, 0,
	0, 633, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	694, 0, 0, 510, 0, 0, 692, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 658, 659, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 702, 693, 645, 706, 647, 703,
	704, 642, 643, 646, 705, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 696, 632, 631, 0, 638, 639,
	0, 648, 649, 651, 655, 656, 657, 660, 661, 662,
	670, 672, 673, 671, 674, 675, 676, 679, 680, 681,
	682, 677, 678, 683, 716, 717, 718, 719, 630, 191,
	208, 339, 0, 414, 271, 525, 504, 500, 198, 210,
	707, 245, 708, 0, 0, 712, 0, 0, 0, 714,
	713, 0, 715, 687, 686, 0, 0, 709, 710, 0,
	711, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 732, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 364, 346, 471, 472, 291, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 629, 0, 0, 0, 253, 634, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 641, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 1904, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 87, 0, 0, 188, 189, 190, 725,
	733, 734, 735, 736, 737, 726, 728, 0, 0, 225,
	727, 232, 652, 654, 653, 663, 664, 665, 666, 667,
	668, 669, 650, 730, 738, 739, 1905, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 612, 626, 0,
	640, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 695, 0, 625, 0,
	0, 633, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	694, 0, 0, 510, 0, 0, 692, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 658, 659, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 702, 693, 645, 706, 647, 703,
	704, 642, 643, 646, 705, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 696, 632, 631, 0, 638, 639,
	0, 648, 649, 651, 655, 656, 657, 660, 661, 662,
	670, 672, 673, 671, 674, 675, 676, 679, 680, 681,
	682, 677, 678, 683, 716, 717, 718, 719, 630, 191,
	208, 339, 0, 414, 271, 525, 504, 500, 198, 210,
	707, 245, 708, 0, 0, 712, 0, 0, 0, 714,
	713, 0, 715, 687, 686, 0, 0, 709, 710, 0,
	711, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 732, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 0, 346, 471, 472, 291, 364, 0, 0, 0,
	78, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 86, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 3096, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	1373, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 821, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 612, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 629, 0,
	0, 0, 253, 634, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 641,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 725, 733, 734, 735, 736, 737,
	726, 728, 0, 0, 225, 727, 232, 652, 654, 653,
	663, 664, 665, 666, 667, 668, 669, 650, 730, 738,
	739, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 626, 0, 640, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 695, 0, 625, 0, 0, 633, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 694, 0, 0, 510, 0,
	0, 692, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 658,
	659, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 702,
	693, 645, 706, 647, 703, 704, 642, 643, 646, 705,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 696,
	632, 631, 0, 638, 639, 0, 648, 649, 651, 655,
	656, 657, 660, 661, 662, 670, 672, 673, 671, 674,
	675, 676, 679, 680, 681, 682, 677, 678, 683, 716,
	717, 718, 719, 630, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 707, 245, 708, 0, 0,
	712, 0, 0, 0, 714, 713, 0, 715, 687, 686,
	0, 0, 709, 710, 0, 711, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 732,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 733, 734, 0, 0, 0,
	0, 1719, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 1042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 1041, 510, 0,
	0, 0, 0, 0, 1038, 1039, 336, 999, 305, 192,
	212, 1032, 1036, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 1392, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 1394, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 1213, 0,
	1214, 1215, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 1334, 1337, 0, 0, 0, 0,
	1333, 1336, 0, 0, 225, 1332, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 0, 346, 471, 472,
	291, 364, 0, 0, 0, 78, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 0, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	524, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 526, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 527, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 528, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	523, 522, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 0, 191,
	208, 339, 86, 414, 271, 525, 504, 500, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 0, 346, 471, 472, 291, 364, 0, 0, 0,
	78, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	1373, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 86, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 1844, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 1842, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 999, 305, 192,
	212, 997, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 1844, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	1373, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 3004, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 1892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 2197, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2182, 0, 0,
	0, 2183, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 1417, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 3130, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 3004, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 1893, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 1670, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1542, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1540, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1538, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1536, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1534, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1530, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1528, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1526, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 1501, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 1401, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 604, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 603, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 550, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 3138, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 2695, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 2178, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 524, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 526, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 527, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 528, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 523, 522, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	525, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 0, 346, 471, 472,
	291,
}

var yyPact = [...]int{
	3973, -1000, -402, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2050, 2255, -1000, -1000,
	-1000, -1000, 2241, -1000, 750, 1796, -1000, 2031, 382, -1000,
	43982, 487, -1000, 42762, 486, 2882, 43982, -1000, 202, -1000,
	193, 43982, 198, 42152, -1000, -1000, -257, 19572, 1976, 73,
	71, 43982, -1000, -1000, -1000, -1000, 2168, 1680, -1000, 392,
	-1000, -1000, -1000, -1000, -1000, -1000, 41542, -1000, -1000, -1000,
	2039, 2054, 2226, 654, 1957, -1000, 2116, 1680, -1000, 19572,
	2170, 2088, 18962, -1000, 18962, 441, -1000, -1000, 14682, -1000,
	-1000, 25072, 43982, 31782, 528, -1000, 2031, -1000, -1000, -1000,
	111, -1000, 366, 1643, -1000, 1613, -1000, 638, 836, 387,
	495, 494, 386, 385, 384, 381, 378, 377, 369, 368,
	394, -1000, 669, 669, -88, -93, 3518, 431, 437, 437,
	459, 2006, 1991, -1000, 748, -1000, 669, 669, 669, 358,
	669, 669, 669, 669, 309, 308, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 616, 2031, 266, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43982, 208,
	43982, -1000, 577, 43982, 813, 813, 87, 813, 813, 813,
	813, 213, 649, 69, -1000, 212, 258, 214, 260, 786,
	206, 268, -1000, -1000, 244, 786, 1222, -1000, 658, 174,
	-1000, 813, 12222, 12222, 12222, -1000, 2019, -1000, -1000, -1000,
	-1000, -1000, -1000, 1228, -1000, 457, -1000, -1000, -1000, -1000,
	43982, 40932, 379, 724, -1000, -1000, -1000, 153, -1000, -1000,
	1343, 1298, 19572, 1234, -1000, 1641, 623, -1000, -1000, -1000,
	-1000, -1000, 547, 20182, 20182, 20182, 20182, -1000, -1000, 1652,
	1652, 1652, 1652, 20182, 1652, -1000, 1652, 1652, 1652, 1652,
	19572, 1652, 1652, 1652, -1000, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, -1000,
	1652, 574, 1652, 1652, 1652, 1652, 1652, -1000, -1000, -1000,
	-1000, 20182, 1652, 1652, 1652, 1652, 1652, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1652, 1652, 1652, 1652,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22622,
	-1000, 17132, 1652, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 43982, -1000, 1652, 216, 43982, 43982, 357,
	2116, 1680, -1000, 2168, 2144, 392, -1000, 2812, 1844, 1536,
	1233, 1680, 1539, 43982, -1000, 1672, -1000, -1000, -1000, 1905,
	1161, 1217, -1000, -1000, -1000, -1000, 1290, 19572, -1000, -1000,
	2208, -1000, 22012, 572, 852, 2207, 40322, -1000, 441, 441,
	1589, 14067, 49, -1000, -1000, -1000, 720, 29342, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2019, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1662, 43982, -1000, -1000, 5303, 1257, -1000, 1794,
	-1000, 1646, -1000, 1756, 19572, 1807, 480, 1257, 475, 474,
	468, -1000, -21, -1000, -1000, -1000, -1000, -1000, -1000, 669,
	669, 669, -1000, 393, 2164, 382, 5005, -1000, -1000, -1000,
	39712, 1789, 1257, -1000, 1788, -1000, 787, 542, 567, 567,
	1257, -1000, -1000, 43982, 1257, 784, 782, 1257, 1257, 43982,
	43982, -1000, 39102, -1000, 38492, 37882, 1061, 43982, 37272, 36662,
	36052, 35442, 34832, -1000, 1865, -1000, 1838, -1000, -1000, -1000,
	43982, 1257, 1257, 43982, 43982, 360, -1000, -1000, 43982, 1257,
	-1000, -1000, 1050, 1021, 1018, 669, 669, 1017, 1216, 1211,
	1210, 669, 669, 1013, 1204, 30562, 1202, 325, 1012, 1000,
	999, 1174, 1198, 205, 1196, 1164, 1026, 995, 43982, 1786,
	43982, -1000, 253, 711, 420, 713, 2031, 1964, 1572, 454,
	479, 1257, 426, 426, 43982, -1000, 12837, -1000, -1000, 1193,
	19572, -1000, 789, 786, 786, -1000, -1000, -1000, -1000, -1000,
	-1000, 813, 43982, 789, -1000, -1000, -1000, 786, 813, 43982,
	813, 813, 813, 813, 786, 786, 786, 813, 43982, 43982,
	43982, 43982, 43982, 43982, 43982, 43982, 43982, 12222, 12222, 12222,
	658, 813, -261, -1000, 1184, -1000, 1866, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 197, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -27, 1569, 34222, -1000,
	-267, -270, -273, -275, -1000, -1000, -1000, -279, -283, -1000,
	-1000, -1000, 19572, 19572, 19572, 19572, -129, -1000, 948, 20182,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 869, 20182,
	20182, 20182, 20182, 20182, 20182, 20182, 20182, 20182, 20182, 20182,
	20182, 20182, 20182, 20182, -1000, -1000, 27512, 6167, 6167, 623,
	623, 623, 623, -1000, 18962, 19572, 19572, 623, -1000, 1257,
	18962, 18962, 19572, 2021, 733, 1298, 43982, -1000, 1233, -1000,
	-1000, -1000, 979, -1000, 43982, 43982, 1292, 19572, 19572, 19572,
	19572, 19572, 19572, 15907, 19572, 19572, 19572, 19572, 19572, 19572,
	19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572,
	19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572,
	1233, 19572, 1678, 19572, 19572, 15297, 12837, 18962, 18962, 18962,
	18962, 18962, 33612, -1000, -1000, -1000, -1000, -1000, 19572, 19572,
	19572, 19572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 563,
	1425, 1413, 1544, 19572, -1000, 1564, -1000, -101, 24462, 19572,
	1181, 2201, 1826, 43982, -1000, -1000, -1000, 2116, -1000, 2116,
	1425, 2680, 1908, 18962, -1000, -1000, 2680, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1367, -1000, 43982, 1539, 2075,
	43982, 1900, 1179, 347, -1000, 19572, 19572, 1533, -1000, 1016,
	43982, -1000, -129, -1000, 33002, -1000, -1000, 11607, -1000, 43982,
	361, 43982, -1000, 26902, 32392, 13452, 49, -1000, 13452, 1454,
	-1000, 51, 36, 16517, 601, -1000, -1000, -1000, 3518, 21402,
	1327, 601, 119, -1000, -1000, -1000, 1756, -1000, 1756, 1756,
	1756, 1756, 347, 347, 347, 347, -1000, -1000, -1000, -1000,
	-1000, 1785, 1784, -1000, 1756, 1756, 1756, 1756, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1782, 1782, 1782, 1757, 1757,
	429, -1000, 19572, 389, 31782, 2053, 988, 1315, 253, 442,
	1815, 1257, 1257, 1257, 442, -1000, 1378, 1262, 1177, -1000,
	-394, 1531, -1000, -1000, 2163, -1000, -1000, 717, 810, 806,
	751, 43982, 223, 351, -1000, 418, -1000, 31782, 1257, 779,
	567, 1257, -1000, 1257, -1000, -1000, -1000, -1000, -1000, 1257,
	-1000, -1000, 1527, -1000, 1525, 908, 799, 860, 798, 1527,
	-1000, -1000, -69, 1527, -1000, 1527, -1000, 1527, -1000, 1527,
	-1000, 1527, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 708, 224, -190, 43982, 223, 27512, -1000, 449, -1000,
	-1000, -1000, 27512, 27512, -1000, -1000, -1000, -1000, 1171, 1170,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -380,
	43982, -1000, 238, 695, 328, 354, 314, 43982, 293, 2105,
	2094, 2092, 242, 280, 43982, 43982, 426, 1863, 43982, 2051,
	43982, -1000, -1000, -1000, -1000, -1000, 1298, 43982, -1000, -1000,
	813, 813, -1000, -1000, 43982, 813, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 813, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 43982, 43982, -1000, -1000, -1000, -1000, -1000, 172,
	48, 380, -1000, -1000, -1000, -1000, -1000, 2112, -1000, 1298,
	764, 755, -1000, 1652, -1000, -1000, 826, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 204, 20182, 20182, 20182, 1653, 500,
	1811, 1664, 967, 934, 934, 849, 849, 627, 627, 627,
	627, 627, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1165, -1000, 1599, -1000, 1275, 953, 1233, 1599, 1599, 1110,
	18962, -1000, -1000, 763, -1000, 19572, 1233, -1000, -1000, 1233,
	1233, 1498, 1484, 2193, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1154, 1315, 1315, 1315, 1315,
	1315, 19572, 1038, -1000, -1000, -1000, 2666, 2653, 1233, 1343,
	1233, 1480, -1000, 2649, 1315, 2621, 2577, 2560, 1354, 2523,
	2480, 2421, 1315, 1315, 1315, 1956, 2407, 2399, 2390, 2386,
	2377, 2367, 2360, 2354, 2344, 1315, -131, 1315, 1233, -1000,
	-1000, -1000, -1000, 2314, 1952, 1233, 18962, 18962, 1460, 1652,
	558, -1000, 1599, 1233, 1233, 1599, 1599, -1000, 2296, 2285,
	2276, 2240, 12837, 1233, -1000, 1544, 43982, -1000, -253, -1000,
	17, 633, 1652, -1000, 30562, 1233, -1000, 5883, -1000, 45202,
	-1000, -1000, -1000, -1000, -1000, 28732, 1365, 2680, -1000, -1000,
	1652, 1620, -1000, -1000, 347, 91, 28122, 586, 586, 130,
	1298, 1298, 19572, -1000, -1000, -1000, -1000, -1000, -1000, 557,
	2176, 401, 1652, -1000, 1432, 2570, -1000, -1000, -1000, 2074,
	23237, -1000, 1652, 43982, 1762, 1761, -1000, 544, -1000, 1454,
	49, 19, -1000, -1000, -1000, -1000, 1298, -1000, 1125, 367,
	3306, -1000, 422, -1000, -1000, -1000, -1000, 1971, 104, -1000,
	-1000, -1000, 240, 347, -1000, -1000, -1000, -1000, -1000, -1000,
	1158, 1158, -1000, -1000, -1000, -1000, -1000, 987, -1000, -1000,
	-1000, 975, -1000, -1000, 1747, 1860, 389, -1000, -1000, 669,
	1157, -1000, -1000, 1985, 669, 669, 43982, -1000, -1000, 1324,
	2053, 238, 43982, 738, 1857, -1000, 1815, 1815, 1815, 43982,
	-1000, -1000, -1000, -1000, -1000, -1000, -382, 81, 376, -1000,
	-1000, -1000, 3583, 43982, 1611, -1000, 226, -1000, 1322, -1000,
	43982, -1000, 1607, 1774, 1257, 1257, -1000, -1000, -1000, 43982,
	1652, -1000, -1000, -1000, -1000, 478, 2023, 299, -1000, -1000,
	-149, -1000, -1000, 223, 226, 601, 1257, -1000, -1000, -1000,
	-1000, -1000, -383, 1604, 466, 230, 343, 43982, 43982, 43982,
	43982, 43982, 556, -1000, -1000, -1000, -1000, 207, -1000, -1000,
	207, -1000, -1000, -1000, -1000, 271, 446, -1000, 43982, 43982,
	652, -1000, -1000, -1000, 786, -1000, -1000, 786, -1000, -1000,
	-1000, -1000, -1000, 2015, 43982, 39, -335, -1000, -330, 19572,
	-1000, -1000, -1000, -1000, 1206, 497, 1811, 20182, 20182, 18962,
	-64, 1416, 1416, 27512, -1000, -1000, -1000, 19572, 19572, 1556,
	727, -1000, 19572, 1042, -1000, -1000, -1000, 19572, 19572, 19572,
	1233, 303, -1000, -1000, -1000, -1000, -1000, 2190, -1000, 19572,
	19572, 19572, -1000, -1000, 19572, 19572, -1000, 19572, 19572, 20792,
	1233, 20792, 19572, 19572, 20792, -1000, -1000, -1000, -1000, 20792,
	19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, 19572, -1000,
	-1000, 31782, 100, -131, 1678, 100, 1678, -1000, 1599, 1599,
	18962, 12837, -1000, -1000, -1000, -1000, -1000, 19572, 19572, 19572,
	19572, -1000, -1000, -1000, -1000, -1000, -1000, 633, -1000, 567,
	567, 567, 43982, -1000, -1000, -1000, -1000, -1000, -1000, 1447,
	2100, -1000, 1926, 1925, 2183, 2176, -1000, 26902, 2680, -1000,
	-1000, 43982, -247, -1000, 1958, 1942, 586, 586, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10992, 2116, 19572, 1849, 43982,
	158, -1000, 23852, 43982, 43982, 26902, 26902, 26902, 26902, 26902,
	-1000, 1893, 1892, -1000, 1883, 1880, 1884, 43982, -1000, 1591,
	1233, 2144, 23237, 19572, 25682, 1695, 26902, -1000, -1000, 26902,
	43982, 10377, -1000, -1000, 27, 26, -1000, -1000, -1000, -1000,
	3518, -1000, -1000, 440, 2071, 1980, -1000, -1000, -1000, -1000,
	-1000, 1583, -1000, 1559, 1445, 1554, 224, -1000, 1803, 2013,
	669, 669, -1000, 974, -1000, 1257, 1150, 1140, -1000, -1000,
	-1000, 464, -1000, 2048, 43982, 1848, 1847, 1842, -1000, -392,
	959, 1772, 1683, 19572, 1771, 2162, 1393, 43982, -1000, -1000,
	43982, -1000, 250, -1000, 389, 43982, -1000, -1000, -1000, 351,
	43982, -1000, 6975, -1000, -1000, -1000, 226, -1000, -1000, -1000,
	-1000, -1000, -1000, 43982, 235, -1000, 1758, 1167, -1000, -1000,
	1800, -1000, -1000, -1000, -1000, 221, 313, 209, 1137, 209,
	-1000, 43982, 573, 1860, 43982, -1000, -1000, -1000, 813, 813,
	-1000, -1000, 2009, -1000, 1257, 1315, 20182, 20182, -1000, 623,
	-1000, 1652, -106, 1756, 1756, -1000, 1756, 1757, -1000, 1756,
	181, 1756, 178, 1756, -1000, -1000, -106, 1233, 1931, 1083,
	-26, -1000, 1298, 19572, 2199, 2156, 1315, -1000, 1754, 1750,
	19572, 1315, 1315, 1315, -1000, 1298, 1354, 2109, 1452, -1000,
	-1000, -1000, -1000, 1436, 1315, 2093, -245, 1233, 1552, 1552,
	1552, 1552, 1552, 1544, 1544, 1544, 1544, 43982, -1000, -131,
	-1000, -1000, -179, -181, -1000, 1233, -131, 1417, -1000, -1000,
	1233, -1000, 1877, 1791, 2029, 1766, -1000, 2108, 2108, 2108,
	1517, 44592, 43982, -1000, -1000, -1000, -1000, 2176, 2171, 1404,
	-1000, -1000, 91, 421, -1000, 1967, 1942, -1000, 2157, 1954,
	2153, -1000, -1000, -1000, -1000, -1000, 1298, -1000, 2034, 1346,
	-1000, 687, 1357, -1000, -1000, 18352, 1519, 1912, 524, 1517,
	1410, 2570, 1823, 1841, 2750, -1000, -1000, -1000, -1000, 1889,
	-1000, 1868, -1000, -1000, 1672, -1000, -1000, 1413, 1922, 361,
	26902, 1383, 1383, -1000, 518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 833, 5829, 2224, -1000, 1134, -1000, 1058, 211,
	952, -1000, -1000, 669, 669, -1000, 777, 776, -1000, 43982,
	1726, -1000, 347, 1133, 347, 944, -1000, 943, -1000, -1000,
	-1000, -1000, 1832, 1858, -1000, -1000, -1000, -1000, 43982, -1000,
	-1000, 43982, 43982, 43982, 1710, 2147, -1000, 19572, 1699, 677,
	1593, 43982, 43982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 456, 669, -359, 277, 275, 669,
	669, 669, -393, -1000, -1000, 1512, 1496, -1000, -90, -1000,
	19572, -1000, -1000, -1000, 1044, 1044, -1000, 1672, -1000, -1000,
	-1000, 1313, -1000, -1000, -71, 43982, 43982, 43982, 43982, -1000,
	1049, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 623, 20182, 1233, -1000, -1000, 347, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1233, -1000, 19572, -1000,
	19572, -1000, 2116, 1132, 1298, 19572, 19572, -1000, 940, 939,
	1315, -1000, -1000, -1000, 1233, 20792, -1000, 20792, -1000, 19572,
	254, 1416, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1233, 359, -1000, -1000, -1000, -1000, 2180, -1000,
	1233, 19572, -1000, -1000, 19572, -1000, 19572, 19572, -1000, 19572,
	1652, 1970, 1652, 1652, 25682, -1000, -1000, 2171, 2173, 2142,
	1939, 1945, 1945, 1967, -1000, 2138, 2135, -1000, 1130, 2127,
	1127, 765, -1000, 43982, 19572, 158, -1000, 388, 43982, 158,
	43982, -1000, 2145, -1000, -1000, 19572, 1685, -1000, 19572, -1000,
	-1000, -1000, -1000, -1000, 6167, 2176, 1383, -1000, -1000, 634,
	-1000, 19572, -1000, -1000, -1000, 5380, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1118, 1103, -1000, -1000, 1673, 19572,
	-1000, -1000, -1000, 1302, 1271, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1672, -1000, -1000, -1000, -1000, 351, -388,
	1529, 43982, 928, -1000, 1489, 1393, 298, 158, 1099, 669,
	669, 669, 887, 873, 30562, 1465, -1000, 43982, 397, -1000,
	351, -1000, -95, -97, 1315, -1000, -1000, 2068, -1000, -1000,
	12837, -1000, -1000, 1666, 1813, -1000, -1000, -1000, 400, -1000,
	-1000, -1000, 1315, 1315, 1233, -1000, 1315, 1315, 1256, 1238,
	-1000, -1000, 1452, -1000, 1759, -1000, 254, 1233, 1836, -1000,
	-1000, 6167, -1000, -1000, 2145, 2125, 100, -1000, -1000, 222,
	100, 1298, 1648, 1315, 1618, 1522, 26292, -1000, 2122, 2121,
	31172, 31172, 633, 2173, -138, 19572, 19572, 1933, 885, -1000,
	-1000, -1000, -1000, 1098, 1095, -1000, 1089, -1000, 2222, -1000,
	1298, -1000, 158, -1000, 509, 1357, -1000, 2116, 1298, 43982,
	1298, 93, 2145, -1000, 1315, -1000, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652, 1652,
	1652, 1652, -1000, -1000, 43982, 1491, -1000, -1000, 2064, 1449,
	80, -1000, 1419, -1000, -1000, 154, -1000, 19572, -1000, 30562,
	1064, 936, -1000, -1000, -1000, -1000, -393, -1000, -1000, -1000,
	-1000, -1000, -1000, 392, 1373, -1000, 667, 43982, 43982, 1233,
	337, -77, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19572, -1000, 1233, 1835, -1000, -194, -1000, -362, 19572,
	-131, -1000, -1000, -131, -1000, 19572, -1000, -1000, 19572, -1000,
	19572, 1390, -1000, -1000, -1000, -1000, -1000, 1390, 1390, -1000,
	-138, -1000, 1370, -1000, 43982, 1298, 1343, -1000, 874, -1000,
	-1000, -1000, -1000, -1000, 43982, 1357, 43982, -1000, 1385, 1233,
	1652, 2116, -1000, 1375, -1000, 392, -1000, 1661, 1683, -1000,
	-1000, -1000, 17742, -1000, -1000, -1000, -1000, -1000, 189, -70,
	12837, 9762, 1331, -1000, -1000, 1899, -67, -84, 1354, -1000,
	-294, -1000, -1000, -1000, -1000, 259, -1000, -1000, 1343, -1000,
	-1000, 1434, 1423, 1360, 29952, -1000, -1000, -1000, -1000, -138,
	-1000, -1000, 2061, -1000, -1000, 1293, -1000, -1000, 25682, 43372,
	-1000, -59, 295, -70, 19572, 1657, 1233, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 37, -1000, -1000, -1000, -1000,
	-1000, 1800, -1000, 1846, -1000, 1233, -1000, 283, -338, -170,
	-172, -1000, -1000, -1000, 19572, -1000, 19572, -1000, 19572, -1000,
	-1000, -1000, 43982, 1652, -1000, 1269, -1000, 4431, -192, 1834,
	-1000, -31, -1000, -1000, -1000, 824, 871, -1000, -1000, -1000,
	-1000, -1000, -1000, 1412, 43982, -1000, 424, -1000, -1000, -71,
	-72, -1000, 747, -1000, -1000, -1000, -1000, -1000, 1320, 1106,
	1315, -1000, 43982, -1000, 43372, -186, 601, 6167, -1000, 1831,
	1830, 2189, -1000, -1000, -1000, -1000, -1000, -1000, -399, 1254,
	241, -1000, -78, 283, -1000, 19572, -1000, 19572, -1000, 1233,
	-1000, -1000, 2045, 93, -1000, 2218, -1000, 2213, 645, 645,
	-1000, 859, -399, -1000, -85, -1000, 1315, 1315, -1000, -196,
	-1000, -1000, -1000, -1000, -1000, 405, 906, -1000, -1000, -1000,
	-1000, -1000, -1000, 6167, -1000, -1000, -1000, 265, 265, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2806, 2803, 30, 2, 47, 46, 2801, 37, 121,
	211, 31, 213, 118, 2797, 2796, 2794, 2793, 2790, 2786,
	2783, 238, 237, 234, 2778, 2775, 2772, 2770, 2769, 2767,
	2766, 2765, 2764, 2762, 231, 190, 208, 2761, 2758, 2756,
	148, 202, 104, 106, 205, 2754, 2752, 96, 2751, 2750,
	2746, 200, 197, 195, 746, 2741, 191, 145, 63, 2738,
	2735, 2734, 2733, 2731, 2730, 2729, 2727, 2726, 2725, 2724,
	2722, 2714, 2712, 2710, 2709, 2706, 287, 2702, 2701, 21,
	2700, 101, 2697, 2681, 2680, 2676, 9, 2672, 2668, 20,
	40, 2666, 2660, 53, 2658, 2656, 2655, 2654, 2652, 17,
	2650, 27, 2648, 35, 2646, 2645, 156, 2644, 2641, 2634,
	41, 2632, 2631, 2630, 2629, 2624, 2614, 2613, 171, 2605,
	2602, 2601, 2598, 209, 2596, 2578, 332, 130, 143, 2576,
	2573, 127, 206, 2571, 139, 2568, 2566, 2565, 178, 2561,
	3580, 2558, 2551, 83, 80, 2550, 95, 2548, 10, 91,
	78, 16, 13, 4, 2547, 2544, 81, 100, 2540, 132,
	122, 99, 2539, 154, 123, 2534, 2533, 15, 8, 2523,
	1, 5, 3, 85, 2521, 2520, 144, 2514, 2512, 2511,
	126, 2510, 2509, 74, 2507, 119, 157, 131, 92, 2504,
	55, 88, 2502, 2500, 2497, 2495, 2491, 67, 2489, 2488,
	2487, 170, 73, 188, 2485, 48, 60, 68, 164, 2481,
	49, 103, 2476, 167, 159, 2475, 2474, 79, 50, 58,
	2469, 125, 162, 149, 39, 120, 166, 2466, 2461, 71,
	89, 2459, 2456, 2455, 2451, 192, 2448, 2446, 84, 2439,
	69, 2438, 210, 2437, 26, 2436, 77, 59, 2433, 93,
	147, 86, 36, 2430, 189, 2428, 65, 186, 155, 184,
	2427, 2426, 2422, 207, 335, 2417, 2410, 129, 194, 172,
	177, 110, 2408, 341, 2406, 2405, 107, 1524, 5149, 2404,
	33, 185, 2402, 2400, 6738, 168, 42, 22, 2399, 150,
	2397, 2396, 2395, 216, 193, 140, 1006, 75, 2392, 2389,
	94, 19, 2388, 2387, 2386, 2384, 2382, 2380, 98, 45,
	44, 43, 222, 82, 18, 124, 181, 90, 2366, 2365,
	2346, 153, 111, 2344, 183, 182, 169, 133, 2333, 196,
	173, 160, 2330, 97, 34, 2329, 2326, 2325, 2323, 116,
	2319, 2317, 2315, 2314, 180, 175, 151, 108, 2310, 102,
	152, 179, 174, 66, 2309, 52, 2302, 2301, 28, 203,
	29, 2297, 12, 70, 76, 32, 137, 134, 2296, 0,
	2293, 23, 199, 339, 176, 2291, 2290, 6, 11, 14,
	2288, 2283, 2282, 2278, 2272, 165, 2263, 2261, 2260, 2258,
	25, 61, 24, 7, 136, 105, 2256, 2255, 4743, 2153,
	161, 2249, 212,
}

//line sql.y:7539
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 396, 397, 397, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 369, 369,
	369, 372, 372, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	400, 400, 178, 178, 176, 176, 177, 177, 249, 249,
	24, 25, 25, 259, 259, 258, 258, 258, 260, 260,
	260, 260, 296, 296, 26, 26, 26, 26, 26, 124,
	124, 371, 371, 370, 362, 362, 361, 361, 360, 368,
	368, 367, 367, 366, 38, 39, 48, 48, 48, 48,
	49, 50, 373, 373, 335, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 337, 337, 323, 323, 336, 336, 336, 336, 336,
	336, 336, 322, 322, 135, 135, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 389, 389, 389, 388, 388, 228, 228,
	228, 228, 228, 228, 228, 228, 145, 145, 156, 156,
	156, 156, 156, 143, 143, 144, 142, 142, 142, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 155, 155, 151, 151, 151, 152, 152,
	152, 153, 153, 390, 390, 390, 390, 301, 301, 301,
	301, 304, 304, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 303, 303, 303, 303, 303, 305, 305, 305,
	305, 305, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 307, 307,
	307, 307, 307, 307, 307, 307, 321, 321, 308, 308,
	316, 316, 317, 317, 317, 318, 318, 318, 319, 319,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 315,
	315, 314, 314, 314, 324, 349, 349, 348, 348, 346,
	346, 346, 346, 346, 346, 346, 346, 333, 333, 343,
	343, 343, 343, 343, 332, 332, 328, 328, 328, 329,
	329, 330, 330, 327, 327, 331, 331, 345, 345, 344,
	344, 325, 325, 326, 326, 351, 391, 391, 391, 391,
	391, 392, 392, 352, 380, 382, 382, 382, 381, 381,
	378, 379, 377, 377, 377, 377, 377, 81, 81, 81,
	271, 271, 272, 272, 341, 341, 340, 340, 340, 342,
	342, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 266, 266, 266, 376, 376, 376, 376, 376,
	376, 375, 375, 375, 338, 338, 338, 374, 374, 57,
	57, 211, 211, 394, 394, 395, 395, 395, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 354, 354, 58, 58, 3, 3, 166, 168,
	169, 169, 167, 167, 167, 167, 167, 167, 60, 60,
	59, 59, 171, 170, 172, 172, 172, 1, 1, 2,
	2, 4, 4, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 320, 320, 320, 353, 353,
	355, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 357, 357, 357, 61, 61, 358, 309,
	310, 311, 5, 6, 334, 356, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 383, 383, 265,
	265, 274, 274, 264, 264, 289, 289, 289, 267, 267,
	267, 268, 268, 387, 387, 387, 64, 64, 64, 66,
	66, 67, 68, 68, 291, 291, 292, 292, 69, 70,
	82, 82, 82, 82, 82, 82, 105, 105, 105, 15,
	15, 15, 15, 78, 78, 78, 14, 14, 65, 65,
	72, 384, 384, 385, 386, 386, 386, 386, 73, 75,
	31, 31, 31, 31, 31, 31, 130, 130, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	125, 125, 125, 119, 119, 401, 76, 77, 77, 123,
	123, 123, 116, 116, 116, 122, 122, 122, 16, 16,
	17, 248, 248, 18, 18, 127, 127, 129, 129, 129,
	129, 129, 131, 131, 131, 131, 131, 131, 131, 126,
	126, 128, 128, 128, 128, 282, 282, 282, 281, 281,
	160, 160, 162, 161, 161, 163, 163, 164, 164, 164,
	164, 209, 186, 186, 246, 246, 244, 244, 245, 245,
	247, 247, 247, 247, 250, 250, 165, 165, 165, 165,
	173, 173, 174, 174, 175, 175, 290, 290, 287, 287,
	287, 286, 286, 179, 179, 179, 181, 180, 180, 180,
	180, 182, 182, 184, 184, 183, 183, 185, 190, 190,
	189, 189, 187, 187, 187, 187, 188, 188, 188, 188,
	191, 191, 140, 140, 140, 140, 140, 140, 140, 154,
	154, 154, 154, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 235, 235, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 148, 83, 83, 83, 84, 84, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 86, 141, 141,
	88, 88, 87, 87, 204, 204, 279, 279, 89, 90,
	90, 93, 93, 92, 91, 91, 97, 97, 94, 94,
	96, 96, 95, 98, 98, 99, 100, 100, 262, 262,
	192, 192, 200, 200, 200, 200, 193, 193, 193, 193,
	193, 193, 193, 201, 201, 201, 208, 202, 202, 198,
	198, 198, 198, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 159, 159,
	159, 159, 216, 216, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 298,
	298, 365, 365, 364, 364, 363, 363, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 402, 402,
	312, 312, 312, 312, 199, 199, 199, 199, 199, 121,
	121, 121, 121, 121, 295, 295, 295, 299, 299, 299,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 300, 300, 214, 214, 117,
	117, 212, 212, 213, 215, 215, 210, 210, 210, 195,
	195, 195, 217, 217, 218, 218, 101, 102, 102, 103,
	103, 219, 219, 221, 220, 220, 222, 223, 223, 223,
	224, 224, 225, 225, 225, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 132, 132,
	132, 132, 134, 134, 133, 133, 79, 79, 80, 80,
	80, 138, 138, 139, 139, 139, 136, 136, 137, 137,
	242, 242, 226, 226, 226, 233, 233, 233, 229, 229,
	231, 231, 231, 232, 232, 232, 230, 239, 239, 241,
	241, 240, 240, 236, 236, 237, 237, 238, 238, 238,
	234, 234, 194, 194, 194, 194, 194, 243, 243, 243,
	243, 251, 251, 205, 205, 207, 207, 206, 206, 158,
	252, 252, 256, 253, 253, 257, 257, 257, 257, 257,
	254, 254, 255, 255, 283, 283, 283, 261, 261, 273,
	273, 269, 269, 270, 270, 263, 263, 275, 275, 275,
	74, 203, 203, 350, 350, 347, 278, 278, 280, 280,
	284, 284, 288, 288, 285, 285, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 398, 399, 293, 294, 294, 294,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 2,
	4, 5, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 3, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 7, 7, 6, 2, 2, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 6, 5, 9, 6, 9, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -396, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -398,
	11, 437, 256, 255, 28, -12, 475, 86, -397, 619,
	-242, -226, 22, 33, 29, -225, -221, -123, -226, 20,
	18, 7, -76, -401, -76, -76, 12, 13, -76, -335,
	-337, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -359, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 475, 478, -342, 223, 229, 230,
	438, 123, 122, 75, 225, -339, 361, 508, 589, -56,
	591, 102, 104, 590, 44, 235, 592, 593, 594, 515,
	595, 244, 596, 597, 598, 599, 605, 557, 606, 607,
	608, 124, 7, -76, -288, -284, -369, -277, 89, 90,
	91, 472, 247, 506, 507, 296, 81, 41, 481, 358,
	361, 508, 589, 307, 321, 315, 342, 334, 473, 509,
	482, 299, 248, 284, 583, 332, 132, 591, 302, 510,
	262, 366, 367, 511, 368, 102, 310, 404, 604, 301,
	512, 602, 104, 590, 79, 51, 586, 44, 257, 330,
	231, 326, 592, 285, 513, 484, 278, 123, 120, 611,
	36, 324, 50, 30, 601, 122, 49, 593, 147, 514,
	594, 515, 370, 349, 577, 48, 371, 263, 516, 84,
	268, 477, 305, 585, 372, 325, 373, 295, 600, 228,
	517, 569, 374, 375, 578, 518, 350, 354, 519, 396,
	376, 618, 52, 520, 521, 579, 121, 522, 78, 595,
	80, 319, 320, 523, 293, 246, 398, 346, 450, 457,
	458, 108, 109, 453, 110, 459, 111, 460, 461, 462,
	451, 112, 105, 452, 463, 464, 347, 348, 113, 465,
	107, 106, 454, 456, 114, 466, 244, 35, 377, 474,
	297, 58, 272, 399, 46, 352, 615, 45, 573, 524,
	576, 345, 341, 447, 53, 525, 526, 527, 528, 596,
	344, 318, 340, 610, 4, 290, 597, 62, 230, 356,
	355, 357, 279, 395, 337, 529, 530, 531, 251, 82,
	532, 327, 21, 533, 534, 378, 286, 535, 56, 536,
	537, 402, 260, 538, 54, 598, 39, 539, 265, 612,
	599, 540, 541, 542, 543, 267, 544, 380, 545, 379,
	351, 353, 274, 381, 476, 546, 306, 323, 264, 603,
	547, 252, 467, 468, 469, 470, 584, 266, 271, 259,
	403, 253, 548, 549, 550, 551, 552, 300, 568, 553,
	554, 311, 605, 448, 43, 555, 556, 557, 558, 559,
	294, 289, 397, 406, 61, 83, 363, 560, 561, 582,
	317, 287, 562, 308, 55, 606, 607, 608, 281, 609,
	9, 616, 617, 383, 124, 291, 292, 47, 338, 273,
	563, 303, 564, 328, 329, 343, 316, 339, 309, 570,
	275, 384, 449, 261, 565, 405, 288, 359, 364, 304,
	480, 280, 385, 581, 479, 336, 333, 282, 566, 386,
	236, 276, 277, 567, 571, 387, 388, 298, 389, 390,
	391, 392, 394, 393, 283, 478, 314, 331, 365, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 446, 234, -76,
	234, -183, -284, 234, -254, 367, -274, 369, 382, 377,
	387, 375, -265, 378, 380, 274, -387, 396, 234, 384,
	222, 174, 370, 379, 388, 389, 298, 394, 390, 393,
	283, -383, -369, 594, 609, 132, 335, 374, 372, 397,
	573, 392, 391, -284, 309, -291, 314, -278, -369, -277,
	312, -183, -82, 569, 226, -293, -293, -125, 573, 575,
	-202, -140, 140, -154, -157, -146, -149, -196, -197, -198,
	-199, -155, -210, 163, 164, 171, 141, -208, -158, 26,
	471, 439, 438, 174, 31, -148, 68, 69, 441, 442,
	143, 57, 414, 415, -156, 409, 416, 411, 444, 445,
	115, 446, 105, 107, 106, 447, 448, 449, 347, 348,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 455, 457, 458, 459, 464, 465, 460,
	461, 462, 463, 466, -85, -97, 497, 496, -98, -147,
	-278, -284, 239, 408, 233, 169, 437, -150, -144, -8,
	-206, 217, 407, 412, 413, 417, 410, 483, 485, 500,
	501, 503, 488, 493, 492, 495, 467, 468, 469, 470,
	-369, -277, -152, -151, -192, 92, 98, 103, 99, -393,
	116, -398, 587, 93, 94, 95, 96, 97, 117, 118,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 44, 383, 383, -183, -76, -76, -76, -76,
	-219, -123, -221, -10, -8, -398, 8, -76, -8, -9,
	-13, -34, -36, 502, -35, -284, -226, -242, 12, 159,
	42, 50, -224, -225, -12, -8, -140, 19, 23, 24,
	-128, 165, -140, -284, -77, -128, -263, 238, -76, -76,
	-253, -296, 309, -257, 397, 396, -280, -255, -278, -276,
	-254, 395, 227, 23, 139, 25, 27, 142, 174, 127,
	19, 143, 37, 229, 335, 245, 173, 241, 438, 222,
	72, 483, 409, 411, 407, 414, 440, 441, 408, 369,
	31, 13, 485, 28, 255, 24, 38, 167, 224, 146,
	486, 258, 26, 256, 115, 118, 488, 22, 75, 250,
	14, 243, 40, 16, 489, 490, 17, 239, 238, 159,
	235, 70, 11, 217, 29, 155, 66, 491, 134, 492,
	493, 494, 495, 128, 68, 156, 20, 613, 412, 413,
	33, 574, 471, 269, 169, 73, 59, 575, 140, 410,
	496, 497, 116, 498, 119, 76, 580, 136, 18, 71,
	42, 499, 270, 500, 240, 614, 501, 400, 502, 157,
	225, 437, 69, 158, 587, 503, 588, 233, 382, 8,
	443, 32, 254, 242, 126, 67, 504, 234, 145, 444,
	445, 237, 129, 117, 7, 133, 34, 12, 74, 77,
	415, 416, 417, 57, 125, 475, 144, 15, 505, 401,
	138, 132, -336, 156, -322, -326, -278, 249, -352, 245,
	-183, -345, -344, -278, -398, -124, -273, 235, 243, 242,
	133, -373, 136, 291, 408, 233, -51, -52, -53, -254,
	173, 593, -106, 266, 270, 87, 87, -326, -325, -324,
	-374, 270, 249, -351, -343, 241, 250, -332, 242, 243,
	-327, 235, 134, -374, -327, 240, 250, 245, 249, 270,
	270, 124, 270, 124, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 265, -333, 148, -333, 479, 479, -339,
	-374, 245, 235, -374, -374, 237, 35, 35, -275, -327,
	237, 25, -333, -333, -333, -254, 173, -333, -333, -333,
	-333, 278, 278, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	234, -373, -132, 393, 298, 81, -54, 280, -37, -183,
	-273, 235, 236, -373, 267, -183, 218, -183, -267, 156,
	15, -267, -264, 383, 381, 368, 373, -267, -267, -267,
	-267, 281, 366, -328, 235, 35, 246, 383, 281, 366,
	281, 282, 281, 282, 376, 386, 281, -289, 14, 159,
	408, 371, 375, 274, 234, 275, 236, 385, -369, 576,
	282, -289, 93, -268, 156, 383, 277, -267, -294, -398,
	-280, 335, -294, -294, 32, 90, 237, -278, -78, -278,
	93, -15, -11, -22, -21, -23, 148, -130, 383, -118,
	174, 594, 577, 578, 579, 576, 380, 584, 582, 580,
	281, 581, 87, 136, 138, 139, 4, -140, 155, -193,
	148, 149, 150, 151, 152, 153, 154, 159, 140, 142,
	156, -235, 137, 160, 161, 162, 163, 164, 165, 166,
	168, 167, 169, 170, 157, 158, 173, 220, 221, -149,
	-149, -149, -149, -208, -398, -398, -398, -149, -262, -398,
	-398, -398, -398, -398, -214, -140, -398, -402, -398, -402,
	-402, -312, -398, -312, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, 218, -398, -398, -398,
	-398, -398, -149, -312, -312, -312, -312, -312, -398, -398,
	-398, -398, 103, 98, 92, -210, 99, 93, -278, -284,
	-8, -9, -202, -398, -293, -384, -385, -186, -183, -398,
	298, -278, -278, 267, -224, -12, -8, -219, -225, -221,
	-8, -76, -116, -129, 63, 64, -131, 24, 38, 67,
	65, 23, -399, 88, -399, -242, -399, 87, -36, -246,
	86, 61, 43, 93, 93, 87, 21, -220, -222, -140,
	14, -282, 4, -281, 25, -278, 93, 218, 101, 14,
	-184, 29, -183, -263, -263, 87, 309, -257, -296, -259,
	-258, 398, 400, 148, -283, -278, 93, 31, 88, 87,
	-183, -301, -304, -306, -305, -307, -302, -303, 332, 333,
	174, 336, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 349, 32, 257, 328, 329, 330, 331, 350, 351,
	352, 353, 354, 355, 356, 357, 315, 334, 473, 316,
	317, 318, 319, 320, 321, 323, 324, 325, 326, 327,
	-372, -369, 86, 88, 87, -308, 86, -140, -132, 234,
	-369, 235, 235, 235, -76, 437, -333, -333, -333, 265,
	19, -44, -41, -359, 18, -40, -41, 227, 120, 121,
	224, 86, -322, 86, -331, -372, -369, 86, 134, 240,
	133, -330, -327, -330, -331, -369, -210, -369, 134, 134,
	-369, -369, -250, -278, -250, -250, 23, -250, 23, -250,
	23, 95, -278, -250, 23, -250, 23, -250, 23, -250,
	23, -250, 23, 31, 78, 79, 80, 31, 82, 83,
	84, -210, -369, -369, -210, -322, -254, -183, -369, 95,
	95, 95, -333, -333, 95, 93, 93, 93, -333, -333,
	95, 93, -286, -284, 93, 93, -375, 251, 295, 297,
	95, 95, 95, 95, 31, 93, -376, 31, 601, 600,
	602, 603, 604, 93, 95, 31, 95, 31, 95, -278,
	86, -183, -138, 285, 222, 224, 227, 76, 93, 299,
	303, 304, 148, 44, 87, 237, 234, -369, -269, 239,
	-269, -278, -285, -284, -276, 93, -140, -329, 14, 159,
	-289, -289, -267, -183, -329, -289, -267, -183, -267, -267,
	-267, -267, -289, -289, -289, -267, -284, -284, -183, -183,
	-183, -183, -183, -183, -183, -294, -294, -294, -268, -267,
	576, 93, 76, -292, 312, 346, 570, 571, 572, 87,
	475, -176, -183, 576, 576, 576, 576, 576, 576, -140,
	-140, -140, -140, 498, -200, 116, 140, 117, 118, -157,
	-201, -206, -208, 100, 159, 142, 156, -235, -146, -149,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -295, -278, 93, 174, -153, -152, 99,
	-393, -153, -126, -128, -140, -140, -369, -126, -126, -140,
	-122, 24, 38, -212, -213, 144, -210, -399, -399, 95,
	99, -278, -278, -115, -114, 419, 420, 421, 422, 424,
	425, 426, 429, 430, 434, 435, 418, 436, 423, 428,
	431, 432, 433, 427, 331, -140, -140, -140, -140, -140,
	-140, -83, -140, 127, 128, 129, -140, -140, -203, -202,
	-368, -367, -366, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -399, -140, -159, -144,
	95, -369, 99, -140, -140, -127, 24, 38, -126, -280,
	-285, -276, -126, -127, -127, -126, -126, -278, -140, -140,
	-140, -140, 218, -242, -399, -202, 87, -386, 400, 401,
	574, -287, 270, -286, 25, -203, 93, 14, -248, 77,
	-278, -224, -224, 63, 64, 59, -126, -131, -399, -35,
	25, -244, -278, 62, 93, -313, -254, 358, 359, 174,
	-140, -140, 87, -223, 27, 28, -183, -281, 165, -285,
	-183, -249, 270, -183, -161, -163, -164, -165, -186, -209,
	-398, -166, 491, 14, -176, -177, -185, -284, -257, -259,
	87, 399, 401, 402, 76, 119, -140, -314, 173, -341,
	-340, -339, -322, -324, -325, -326, 88, -314, -318, 364,
	363, -308, -308, -308, -308, -308, -313, -313, -313, -313,
	86, 86, -308, -308, -308, -308, -316, 86, -316, -316,
	-317, 86, -317, -352, -140, -349, -348, -346, -347, 244,
	102, 567, 523, 475, 515, 557, 77, -344, -223, 95,
	-399, -138, -270, 239, -350, -347, -369, -369, -369, -270,
	-369, 93, -369, 93, -369, 93, -107, -58, -1, 613,
	614, 615, 87, 19, -323, -322, -57, 295, -355, -356,
	270, -351, -345, -331, 134, -330, -331, -331, -369, 87,
	29, 124, 124, 124, 124, 475, 224, 32, -271, 514,
	140, 567, 523, -322, -57, -295, 237, -295, -295, 93,
	93, -266, 609, -176, -134, 287, 148, 276, 276, 234,
	234, 289, -183, 300, 302, 301, 299, 303, 304, 23,
	23, 23, 288, 290, 292, 278, -183, -183, -269, 76,
	-178, -183, 26, -284, -183, -267, -267, -183, -267, -267,
	-183, -278, -118, 400, 87, 475, 22, -119, 22, -398,
	116, 117, 118, -201, -146, -149, -146, 139, 258, 87,
	-399, 25, 87, 77, -399, -399, -399, 87, 14, -126,
	-215, -213, 146, -140, -399, -399, -399, 87, 87, 14,
	-299, 25, -399, -399, -399, -399, -399, -214, -399, 14,
	87, 87, -399, -399, 87, 87, -399, 87, 87, 87,
	-365, 87, 87, 87, 87, -399, -399, -399, -399, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, -399,
	-90, 499, -399, -399, 87, -399, 87, -399, -126, -126,
	-398, 218, -399, -399, -399, -399, -399, 87, 87, 87,
	87, -280, -399, -385, 573, 401, -190, -189, -187, 74,
	238, 75, -398, -286, -399, -153, 90, -245, 90, -244,
	-195, -278, 95, 99, -226, -160, -162, 14, -131, -208,
	88, 87, -313, -230, -236, -264, -278, 93, 174, -315,
	174, -315, 358, 359, -222, 218, -191, 15, -194, 32,
	57, -11, -398, -398, 32, 87, -179, -181, -180, -182,
	66, 70, 72, 67, 68, 69, 73, -290, 25, -161,
	-9, -8, -398, -398, -183, -176, -400, 14, 77, -400,
	87, 218, -258, -260, 403, 400, 406, -369, 93, -106,
	87, -339, -326, -227, -135, 40, -319, 365, -313, 482,
	-313, -321, 93, -321, 95, 95, 88, -47, -42, -43,
	33, 81, -346, -333, 93, 39, -333, -333, -278, 88,
	-223, -134, -183, 140, 76, -350, -350, -350, -284, -2,
	612, 618, 134, 86, 368, 18, -244, 87, 88, -211,
	296, 88, -108, -278, 88, 86, -331, -331, -278, -398,
	234, 31, 31, 567, 523, 514, -57, -211, -314, -369,
	611, 610, 88, 236, 294, -139, 414, -136, 93, 89,
	-183, -183, -183, -183, -183, 227, 224, -394, 305, -394,
	279, 237, -176, -183, 87, -81, 253, 248, -289, -289,
	33, -183, 400, 585, 583, -140, 139, 258, -157, -149,
	-128, 472, -297, 174, 332, 257, 330, 326, 346, 337,
	363, 328, 364, 325, 324, 323, -297, -295, -140, -140,
	-219, 147, -140, 145, -140, -140, -140, -399, 174, 332,
	14, -140, -140, -140, -366, -140, -140, -140, -364, -363,
	-153, -210, -399, -364, -140, -140, -363, -363, -367, -367,
	-367, -367, -367, -202, -202, -202, -202, -398, -278, -93,
	-92, -91, 550, 238, -90, -159, -93, -159, -399, -399,
	-127, -280, -140, -140, -140, -140, -187, -327, -327, -327,
	-250, 87, -261, 22, 14, 57, 57, -160, -191, -161,
	-131, -278, -233, 569, -239, 46, -237, -238, 47, -234,
	48, 56, -315, -315, 165, -224, -140, -251, 76, -252,
	-256, -210, -205, -207, -206, -398, -243, -399, -278, -250,
	-252, -163, -164, -164, -163, -164, 66, 66, 66, 71,
	66, 71, 66, -180, -284, -399, -399, -9, -140, -287,
	77, -161, -161, -185, -284, 165, 400, 404, 405, -339,
	-392, 116, 140, 31, 76, 361, 102, -390, 173, 511,
	562, 567, 523, 515, 557, -391, 240, 133, 134, 252,
	25, 41, 88, 87, 88, 87, 88, 87, -272, -271,
	-43, -42, -333, -333, 95, -369, 93, 93, 236, 26,
	-183, 76, 76, 76, -109, 616, 95, 86, -3, 81,
	-140, 86, 19, -322, -210, -357, -309, -358, -310, -311,
	-5, -6, -334, -112, 57, 102, -61, 44, 235, 596,
	597, 124, -398, 609, -349, -244, -353, -355, -183, -143,
	-398, -142, -144, -150, 163, 164, -211, -183, -133, 285,
	293, 86, -137, 90, -371, 77, 276, 361, 276, -395,
	306, 93, -395, -183, -81, -47, -183, -267, -267, 33,
	-369, -399, -157, -149, -398, -300, 481, -308, -308, -308,
	-317, -308, 320, -308, 320, -308, -300, -399, 87, -399,
	22, -399, -117, 443, -140, 87, 87, -399, 86, 86,
	-140, -399, -399, -399, -365, 87, -399, 87, -399, 87,
	-298, 568, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -89, -279, -278, -90, 532, 532, -399, -90,
	-216, 87, -399, -399, 87, -399, 87, 87, -399, 87,
	-188, 22, -188, -188, -399, 90, -183, -191, -217, 16,
	-230, 51, 338, -241, -240, 55, 47, -238, 19, 49,
	19, 30, -251, 87, 148, 87, -399, -399, 87, 57,
	218, -399, -191, -174, -173, 76, 77, -175, 76, -173,
	66, 66, -246, -399, 87, -249, -161, -191, -191, 218,
	116, -398, -145, -156, -143, 12, 93, 93, -369, -389,
	600, 601, 31, 95, -333, -333, 134, 134, -183, 86,
	-313, 93, -313, 95, 95, 31, 82, 83, 84, 31,
	78, 79, 80, -183, -183, -183, -183, -354, 86, 19,
	-140, 86, 148, 88, -244, -244, 272, 159, -333, 594,
	278, 278, -333, -333, -333, -111, -110, 616, 88, -399,
	87, -320, 475, 478, -140, -151, -151, -246, 88, -362,
	475, -370, -278, -278, -278, -278, 95, 97, -146, -399,
	-313, -399, -140, -140, -224, 93, -140, -140, 95, 95,
	-399, -399, -364, -363, -140, -399, -171, -170, -172, 577,
	116, 31, -297, -399, -204, 270, -96, -95, -94, 14,
	-399, -140, -140, -140, -140, -140, -398, 66, 18, 16,
	-398, -398, -287, -217, -218, 17, 19, -231, 53, -229,
	52, -229, -240, 19, 19, 93, 19, 93, 134, -256,
	-140, -207, 57, -11, -278, -205, -278, -219, -140, 86,
	-140, -153, -191, -191, -140, -197, 446, 105, 107, 106,
	447, 448, 449, 347, 348, 450, 451, 452, 108, 109,
	110, 111, 112, 113, 114, 453, 456, 454, 457, 458,
	459, 464, 465, 460, 461, 462, 463, 466, 467, 468,
	469, 470, 93, 93, 86, -140, 88, 88, -246, -353,
	-58, 88, -244, 95, 88, 273, -206, -398, 93, -333,
	-333, -333, 95, 95, -286, -399, 87, -278, -391, -355,
	479, 479, -399, 25, -361, -360, -280, 86, 77, -121,
	159, 475, -399, -399, -399, -399, -399, 88, 88, -399,
	-399, 87, -399, -170, -172, -399, 76, -153, -219, 19,
	-93, 295, 297, -93, -399, 87, -399, -399, 87, -399,
	87, -247, -399, -278, 240, 19, 19, -247, -247, -190,
	-218, -103, -102, -101, 505, -140, -202, -232, 54, 76,
	119, 93, 93, 93, 12, -205, 218, -224, -244, -168,
	368, -219, -399, -244, 88, 25, 88, 618, 134, 88,
	-206, -120, -398, 269, -286, 93, 93, -110, -113, -11,
	87, 148, -244, -183, -399, 473, 73, 476, -140, -399,
	76, 486, 577, -88, -87, -84, 588, 614, -202, -90,
	-90, -140, -140, -140, 87, -399, -399, -399, -103, 87,
	-100, -99, -278, 76, 119, -252, -278, 88, -399, -398,
	-224, 88, -228, -11, 86, -3, 269, -309, -358, -310,
	-311, -5, -6, -334, -79, 475, -360, -338, -280, 93,
	95, 88, 62, 474, 477, -365, -86, 142, 586, 565,
	-141, -151, -148, -399, 87, -399, 87, -399, 87, -278,
	240, -101, 87, 25, -287, -169, -167, -278, 529, -381,
	-380, 471, -392, -388, 116, 140, 102, -390, 567, 523,
	125, 126, -79, -140, 86, -399, -80, 284, 573, -371,
	62, -399, -86, 587, 543, 517, 543, 517, -140, -140,
	-140, -99, -398, -399, 87, 22, -301, -60, 540, -378,
	-379, 76, -382, 374, 539, 560, 116, 93, 88, -244,
	245, -362, 475, 139, -399, 87, -399, 87, -399, -89,
	-167, 536, -314, -153, -379, 76, -378, 76, 13, 12,
	-4, 617, 88, 286, 476, -86, -140, -140, -399, -59,
	26, -168, -377, 253, 248, 251, 32, -377, 95, -4,
	477, -399, -399, 540, 247, 31, 116, -153, -171, -170,
	-170,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 825,
	825, 825, 0, 825, 0, 0, 825, -2, -2, 825,
	1392, 0, 825, 0, 0, -2, 757, 759, 0, 761,
	-2, 0, 0, 770, 1904, 1904, 820, 0, 0, 0,
	0, 0, 825, 825, 825, 825, 1251, 48, 825, 0,
	83, 84, 776, 777, 778, 63, 0, 1902, 1, 3,
	69, 73, 0, 0, 0, 56, 1260, 0, 76, 0,
	0, 829, 0, 827, 0, 1375, 825, 825, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1377, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1278, 153, 1393, 1390, 1391, 38, 39,
	40, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 0, 1369,
	0, 686, 925, 0, 748, 748, 0, 748, 748, 748,
	748, 0, 0, 0, 698, 0, 0, 0, 0, 745,
	0, 0, 717, 719, 0, 745, 0, 727, 751, 0,
	732, 748, 1905, 1905, 1905, 1360, 0, 742, 740, 754,
	755, 737, 738, 756, 760, 0, 765, 768, 1386, 1387,
	0, 783, 47, 1635, 775, 788, 789, 0, 821, 822,
	43, 1067, 0, 947, 952, 963, 978, 979, 980, 981,
	982, 984, 985, 0, 0, 0, 0, 990, 991, 0,
	0, 0, 0, 0, 1048, 999, 0, 0, 0, 0,
	1227, 0, 1188, 1188, 1084, 1188, 1190, 1190, 0, 0,
	0, 1901, 1676, 1684, 1685, 1707, 1797, 1846, 1680, 1681,
	1662, 1674, 1677, 1665, 1666, 1668, 1670, 1675, 1682, 1688,
	1667, 1687, 1686, 0, 1663, 1664, 1669, 1679, 1683, 1671,
	1672, 1673, 1678, 1689, 0, 0, 0, 0, 0, 1137,
	1236, 0, 0, 0, 0, 0, 0, 273, 274, 1066,
	1349, 0, 1190, 1190, 1190, 1190, 1190, 1008, 1009, 1010,
	1011, 1012, 1036, 1037, 1043, 1044, 1776, 1777, 1778, 1779,
	-2, -2, 219, 220, 221, 222, 223, 224, 225, 0,
	215, 0, 0, 278, 279, 275, 276, 277, 1050, 1051,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 1904, 0, 798, 0, 0, 0, 0, 0,
	1260, 0, 1252, 1251, 61, 0, 825, -2, 0, 0,
	0, 0, 45, 0, 50, 884, 75, 74, 1300, 0,
	0, 0, 57, 1261, 65, 67, 1262, 0, 830, 831,
	0, 861, 865, 0, 826, 0, 0, 1376, 1375, 1375,
	100, 0, 1842, 1353, -2, -2, 0, 0, 1388, 1389,
	1362, -2, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, -2, 0, 0, 165, 166, 0, 41, 404, 0,
	161, 0, 397, 338, 0, 1278, 0, 0, 0, 0,
	0, 825, 0, 1370, 142, 143, 150, 151, 152, 377,
	377, 377, 549, 0, 0, 153, 153, 508, 509, 510,
	0, 0, -2, 402, 0, 488, 0, 0, 391, 391,
	395, 393, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 0, 378, 0, 547, 548, 440,
	0, 0, 0, 0, 0, 0, 524, 525, 0, 0,
	1378, 1379, 0, 0, 0, 377, 377, 0, 0, 0,
	0, 377, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1291, 0, 0, 0, -2, 0, 678, 0,
	0, 0, 1371, 1371, 0, 685, 0, 687, 688, 0,
	0, 689, 0, 745, 745, 743, 744, 691, 692, 693,
	694, 748, 0, 0, 386, 387, 388, 745, 748, 0,
	748, 748, 748, 748, 745, 745, 745, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 1905, 1905,
	751, 748, 0, 728, 0, 729, 730, 733, 734, 1906,
	1907, 1408, 735, 736, 1361, 758, 766, 769, 786, 784,
	785, 787, 779, 780, 781, 782, 0, 800, 801, 806,
	0, 0, 0, 0, 812, 813, 814, 0, 0, 817,
	818, 819, 0, 0, 0, 0, 0, 945, 0, 0,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 964, 965, 0, 0, 0, 986,
	987, 988, 989, 992, 0, 0, 0, 997, 998, 0,
	0, 0, 0, 835, 0, 1228, 0, 1082, 0, 1083,
	1085, 1086, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 0, 0, 845, 845,
	0, 0, 0, 208, 209, 210, 211, 212, 0, 0,
	0, 0, 226, 227, 228, 229, 230, 280, 1236, 0,
	1066, 0, 0, 0, 44, 790, 791, 0, 908, 1381,
	0, 0, 841, 0, 55, 64, 66, 1260, 59, 1260,
	0, 847, 0, 0, -2, -2, 848, 854, 855, 856,
	857, 858, 52, 1903, 53, 0, 72, 0, 46, 0,
	0, 0, 0, 350, 1303, 0, 0, 1253, 1254, 1257,
	0, 862, 1718, 866, 0, 868, 869, 0, 828, 0,
	98, 0, 924, 0, 0, 0, 1842, 1359, 0, 102,
	103, 0, 0, 0, 361, 1364, 1365, 1366, -2, 384,
	0, 361, 345, 288, 289, 290, 338, 292, 338, 338,
	338, 338, 350, 350, 350, 350, 321, 322, 323, 324,
	325, 0, 0, 307, 338, 338, 338, 338, 328, 329,
	330, 331, 332, 333, 334, 335, 293, 294, 295, 296,
	297, 298, 299, 300, 301, 340, 340, 340, 342, 342,
	0, 42, 0, 365, 0, 1257, 0, 0, 1291, 1373,
	1383, 0, 0, 0, 1373, 120, 0, 0, 0, 550,
	584, 502, 538, 551, 0, 505, 506, -2, 0, 0,
	487, 0, 489, 0, 385, 0, -2, 0, 395, 0,
	391, 395, 392, 395, 383, 396, 528, 529, 530, 0,
	532, 533, 614, 894, 0, 0, 0, 0, 0, 620,
	621, 622, 0, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 489, 0, 535, 0, 441,
	442, 443, 0, 0, 446, 447, 448, 449, 0, 0,
	452, 453, 454, 911, 912, 455, 456, 481, 482, 483,
	457, 458, 459, 460, 461, 462, 463, 475, 476, 477,
	478, 479, 480, 464, 465, 466, 467, 468, 469, 472,
	0, 135, 1282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1371, 0, 0, 0,
	0, 844, 926, 1394, 1395, 749, 750, 0, 389, 390,
	748, 748, 695, 718, 0, 748, 699, 720, 700, 702,
	701, 703, 722, 723, 748, 706, 746, 747, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 724, 725,
	726, 752, 0, 0, 767, 771, 772, 773, 774, 0,
	0, 803, 94, 808, 809, 810, 811, 823, 816, 1068,
	942, 943, 944, 0, 946, 949, 0, 1052, 1054, 951,
	953, 1063, 1064, 1065, 0, 0, 0, 0, 0, 957,
	961, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 983, 1204, 1205, 1206, 1000, 281, 282,
	0, 1001, 0, 859, 0, 0, 0, 0, 0, 0,
	0, 836, 837, 1234, 1231, 0, 0, 1189, 1191, 0,
	0, 0, 0, 0, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1207, 0, 0, 0, 0,
	0, 1227, 0, 1003, 1004, 1005, 0, 0, 0, 1382,
	0, 130, 131, 0, 0, 0, 0, 0, 1161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1138,
	1139, 1140, 1141, 0, 0, 0, 0, 0, 846, 1237,
	0, -2, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 793, 794, 796,
	0, 928, 0, 909, 0, 0, 799, 0, 840, 0,
	843, 58, 60, 852, 853, 0, 870, 849, 54, 49,
	0, 0, 886, 1301, 350, 1323, 0, 359, 359, 356,
	1263, 1264, 0, 1256, 1258, 1259, 77, 867, 863, 0,
	940, 0, 0, 923, 0, 873, 875, 876, 877, 906,
	0, 880, 0, 0, 0, 0, 96, 925, 1354, 101,
	0, 0, 106, 107, 1355, 1356, 1357, 1358, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1265, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1257, 1282, 0, 0, 0, 1384, 1383, 1383, 1383, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1279, 1280, 1281, 0, 0, 679, 0, 0,
	427, 92, 1372, 684, 745, 705, 721, 745, 697, 704,
	731, 763, 807, 0, 0, 0, 0, 815, 0, 0,
	950, 1053, 1055, 954, 0, 958, 962, 0, 0, 0,
	0, 0, 0, 0, 1049, 1073, 1074, 0, 0, 1251,
	0, 1232, 0, 0, 1081, 1192, 1193, 0, 0, 0,
	0, 0, 1092, 1093, 1094, 1095, 1096, 0, 1098, 0,
	0, 0, 1102, 1103, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 1117, 1118, 1119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1130,
	1131, 0, 1031, 0, 0, 1031, 0, 1069, 0, 0,
	845, 0, 1194, 1195, 1196, 1197, 1198, 0, 0, 0,
	0, 1237, 1348, 792, 795, 797, 882, 929, 930, 0,
	0, 0, 0, 910, 1380, 838, 839, 842, -2, 0,
	0, 1239, 0, 0, 870, 940, 871, 0, 850, 51,
	885, 0, 1305, 1304, 1317, 1330, 359, 359, 353, 354,
	360, 355, 357, 358, 1255, 0, 1260, 0, 1341, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	913, 0, 0, 916, 0, 0, 0, 0, 907, 0,
	0, 0, 0, 0, -2, 0, 0, 90, 91, 0,
	0, 0, 104, 105, 0, 0, 111, 362, 363, 144,
	153, 438, 168, 411, 0, 0, 287, 349, 312, 313,
	314, 0, 336, 0, 0, 0, 432, 116, 1269, 1268,
	377, 377, 368, 0, 371, 0, 0, 0, 1385, 339,
	400, 0, 134, 0, 0, 0, 0, 0, 140, 579,
	0, 0, 586, 0, 0, 0, 500, 0, 511, 512,
	0, 613, -2, 675, 365, 0, 379, 382, 895, 0,
	0, 513, 0, 516, 517, 431, 491, 522, 523, 536,
	473, 474, 471, 0, 0, 1292, 1293, 1298, 1296, 1297,
	121, 557, 559, 558, 562, 0, 0, 495, 0, 495,
	555, 0, 427, 1265, 0, 683, 428, 429, 748, 748,
	802, 95, 0, 805, 0, 0, 0, 0, 955, 959,
	860, 0, 1225, 338, 338, 1212, 338, 342, 1215, 338,
	1217, 338, 1220, 338, 1223, 1224, 1225, 0, 0, 0,
	1229, 1080, 1235, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 132, 133, 1161, 0, 0, 1163,
	1165, 1166, 1108, 1162, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 1030, 0,
	1032, 1033, 0, 0, 1133, 0, 0, 1142, 1070, 1071,
	0, 1238, 0, 0, 0, 0, 931, 936, 936, 936,
	0, 0, 0, 1367, 1368, 1240, 1241, 940, 1242, 872,
	851, 887, 1323, 0, 1316, 0, -2, 1325, 0, 0,
	0, 1331, 351, 352, 864, 78, 941, 81, 0, 1341,
	1350, 0, 1332, 1343, 1345, 0, 0, 0, 1337, 0,
	940, 874, 902, 904, 0, 899, 914, 915, 917, 0,
	919, 0, 921, 922, 884, 879, 881, 0, 0, 98,
	0, 940, 940, 97, 0, 927, 108, 109, 110, 437,
	172, 177, 0, 0, 0, 182, 0, 184, 0, 0,
	0, 189, 190, 377, 377, 412, 0, 284, 286, 0,
	0, 175, 350, 0, 350, 0, 343, 0, 413, 433,
	1266, 1267, 0, 0, 370, 374, 375, 376, 0, 1374,
	136, 0, 0, 0, 582, 0, 610, 0, 0, 0,
	0, 0, 0, 164, 492, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 0, 377, 0, 0, 0, 377,
	377, 377, 0, 667, 364, 0, 0, 638, 635, 514,
	0, 213, 214, 216, 0, 0, 521, 884, 1283, 1284,
	1285, 0, 1295, 1299, 124, 0, 0, 0, 0, 569,
	0, 494, 570, 680, 681, 682, 93, 690, 696, 804,
	824, 948, 956, 960, 0, 0, 1226, 1210, 350, 1213,
	1214, 1216, 1218, 1219, 1221, 1222, 0, 996, 0, 1076,
	0, 1078, 1260, 0, 1233, 0, 0, 1090, 0, 0,
	0, 1099, 1100, 1101, 0, 0, 1107, 0, 1109, 0,
	0, 0, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 0, 1024, 1027, 1132, 1034, 1035, 1040, 1135,
	0, 0, 1072, 1144, 0, 1149, 0, 0, 1155, 0,
	0, 0, 0, 0, 908, -2, 62, 1242, 1244, 0,
	1310, 1308, 1308, 1318, 1319, 0, 0, 1326, 0, 0,
	0, 0, 82, 0, 0, 0, 1346, 0, 0, 0,
	0, 99, 1251, 896, 903, 0, 0, 897, 0, 898,
	918, 920, 878, -2, 0, 940, 940, 88, 89, 0,
	178, 0, 180, 206, 207, 0, 183, 185, 186, 187,
	193, 194, 195, 188, 0, 0, 283, 285, 0, 0,
	326, 337, 327, 0, 0, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 884, 137, 138, 139, 574, 0, 584,
	0, 0, 0, 577, 0, 503, 0, 0, 0, 377,
	377, 377, 0, 0, 0, 0, 652, 0, 0, 615,
	0, 623, 0, 0, 0, 217, 218, 0, 1294, 556,
	0, 122, 123, 0, 0, 561, 496, 497, 1199, 994,
	1211, 995, 0, 0, 0, 1230, 0, 0, 0, 0,
	1097, 1105, 0, 1164, 0, 1112, 0, 0, 0, 604,
	605, 0, 1160, 1029, 1251, 0, 1031, 1041, 1042, 0,
	1031, 1143, 0, 0, 0, 0, 0, 937, 0, 0,
	0, 0, 928, 1244, 1249, 0, 0, 1313, 0, 1306,
	1309, 1307, 1320, 0, 0, 1327, 0, 1329, 0, 1351,
	1352, 1344, 0, 1336, 1339, 1335, 1338, 1260, 900, 0,
	905, 0, 1251, 87, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 0, 0, 341, 344, 0, 0,
	0, 575, 0, 587, 578, 0, 665, 0, 669, 0,
	0, 0, 672, 673, 674, 651, 0, 655, 405, 639,
	636, 637, 515, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 1075, 1077, 1079, 1088, 1089, 1208, 1209, 1106,
	1110, 0, 1113, 0, 0, 1114, 0, 606, 1020, 0,
	0, 1038, 1039, 0, 1145, 0, 1150, 1151, 0, 1156,
	0, 0, 933, 890, 891, 938, 939, 0, 0, 883,
	1249, 80, 1250, 1247, 0, 1245, 1243, 1302, 0, 1311,
	1312, 1321, 1322, 1328, 0, 1334, 0, 85, 0, 0,
	0, 1260, 179, 0, 198, 0, 583, 0, 586, 576,
	663, 664, 0, 676, 668, 670, 671, 653, -2, 1286,
	0, 0, 0, 563, 993, 0, 0, 0, 1161, 1115,
	0, 602, 603, 1028, 1021, 0, 1006, 1007, 1025, 1134,
	1136, 0, 0, 0, 0, 932, 934, 935, 79, 0,
	1246, 1046, 0, 1314, 1315, 1342, 1340, 901, 908, 0,
	86, 418, 411, 1286, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 553, 1288, 127, 128, 484, 485,
	486, 121, 1200, 0, 1203, 0, 1022, 0, 0, 0,
	0, 1018, 1019, 1146, 0, 1152, 0, 1157, 0, 892,
	893, 1248, 0, 0, 588, 0, 590, 0, -2, 406,
	419, 0, 173, 199, 200, 0, 0, 203, 204, 205,
	196, 197, 117, 0, 0, 677, 0, 1289, 1290, 124,
	1201, 1111, 0, 1013, 1014, 1015, 1016, 1017, 0, 0,
	0, 1047, 1026, 589, 0, 0, 361, 0, 599, 407,
	408, 0, 414, 415, 416, 417, 201, 202, 611, 0,
	0, 560, 0, 0, 1147, 0, 1153, 0, 1158, 0,
	591, 592, 600, 0, 409, 0, 410, 0, 0, 0,
	580, 0, 611, 1287, 0, 1023, 0, 0, 1045, 0,
	601, 597, 420, 422, 423, 0, 0, 421, 612, 581,
	1202, 1148, 1154, 0, 424, 425, 426, 593, 594, 595,
	596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 619,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:573
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:578
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:583
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:619
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:638
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:654
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:660
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:664
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:673
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:683
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:689
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:892
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:896
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:902
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:930
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:940
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:944
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:950
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:963
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:985
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:995
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:999
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1003
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1009
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1013
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1017
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1021
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1027
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1031
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1037
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1043
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1050
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1094
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1099
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1105
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1125
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1131
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1147
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1154
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1161
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1166
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1171
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1176
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1183
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1190
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1201
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1212
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1218
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1222
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1226
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1254
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1258
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1284
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1288
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1294
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1309
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1318
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1342
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1351
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1360
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1432
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1437
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1449
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1459
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1463
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1467
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1473
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1477
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1594
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1804
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1808
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1818
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1822
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1826
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1832
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1836
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1843
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1847
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1851
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1855
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2092
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2101
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2119
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2135
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2215
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2224
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2230
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2240
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2244
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2249
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2253
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2257
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2261
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2265
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2269
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2285
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2289
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2293
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2297
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2301
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2369
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2379
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2383
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2389
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2393
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2399
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2403
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2409
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2415
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2419
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2423
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2427
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2431
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2440
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2446
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2452
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2458
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2462
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2466
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2481
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2487
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2493
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2497
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2501
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2505
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2509
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2550
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2556
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2570
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2764
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2782
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2786
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2795
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2799
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2803
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2811
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2817
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2831
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2913
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2917
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3021
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3080
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3195
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3204
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3212
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3221
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3228
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3240
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3249
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3264
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3282
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3288
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3294
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3300
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3310
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3314
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3320
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3326
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3332
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3338
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3362
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3368
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3374
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3378
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3382
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3388
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3392
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3397
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3401
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3406
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3410
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3464
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3468
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3472
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3476
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3480
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3484
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3488
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3492
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3496
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3500
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3520
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3530
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3535
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3539
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3544
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3559
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3564
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3587
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3593
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3603
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3608
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3612
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3632
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3651
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3658
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3665
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3683
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3689
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3695
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3701
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3707
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3713
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3725
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3747
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3751
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4026
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4064
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4068
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4078
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4084
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4160
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4164
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4168
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4172
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4176
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4180
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = yyDollar[1].str
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4257
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4261
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4267
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4273
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4277
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4281
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4285
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4291
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4303
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4388
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4392
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			setAllowComments(yylex, true)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4420
		{
			yyVAL.strs = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = SQLCacheStr
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4486
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4495
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4510
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4514
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.strs = nil
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4535
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = SQLCacheStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = DistinctStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = DistinctStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = StraightJoinHint
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4571
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4581
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4585
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4589
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4593
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4618
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4622
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4628
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4634
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4648
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4652
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4656
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4660
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4666
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4672
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4676
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4685
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4691
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4701
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4711
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4715
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4729
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4733
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4746
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4750
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4754
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4758
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4766
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4770
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4807
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4811
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4815
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4821
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4827
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4831
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4835
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4839
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4845
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4849
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4888
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4894
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4904
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4908
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4912
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4916
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4921
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4925
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4929
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4933
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5215
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5219
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5223
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5229
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5233
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5240
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5244
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5248
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5252
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5256
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5262
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5266
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5270
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5274
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5278
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5297
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5303
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5307
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5316
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5321
		{
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5324
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5330
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5336
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5340
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5352
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5358
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5362
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5368
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5372
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5378
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5382
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5394
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5400
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5404
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5410
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5416
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5420
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5436
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5440
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5447
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5451
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5455
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5459
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5465
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5469
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5473
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5477
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5481
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5485
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5489
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5495
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5499
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5503
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5510
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5516
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5919
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5928
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5934
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5938
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5944
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5948
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5954
		{
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5956
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5960
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5964
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5968
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5972
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5976
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5980
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5984
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5988
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5992
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5996
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6002
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6006
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6010
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6014
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6018
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6022
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6026
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6030
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6034
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6089
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6093
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6097
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6101
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6105
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6139
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6147
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6161
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6165
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6169
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6173
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6177
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6181
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6185
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6189
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6193
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6197
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6207
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = string("")
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6225
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6231
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6235
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6241
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6256
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6260
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6264
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6293
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6308
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6314
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6318
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6327
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6336
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6342
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6348
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6352
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6358
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6363
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6367
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6371
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6380
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6386
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6390
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6394
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6403
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6407
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6411
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6415
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6422
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6426
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6430
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6434
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6440
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6444
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6448
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6452
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6457
		{
			yyVAL.str = ""
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6461
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6465
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6469
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = ""
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6478
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6488
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6493
		{
			yyVAL.str = ""
		}
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6497
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = "cascaded"
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6519
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6525
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6531
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6537
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6546
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6550
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = ""
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6565
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6569
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6575
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6579
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6583
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6588
		{
			yyVAL.str = ""
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6592
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = ""
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = " header"
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6610
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6614
		{
			yyVAL.str = " manifest on"
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6618
		{
			yyVAL.str = " manifest off"
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6623
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6627
		{
			yyVAL.str = " overwrite on"
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6631
		{
			yyVAL.str = " overwrite off"
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6637
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6656
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6666
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6671
		{
			yyVAL.str = ""
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6675
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6681
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6685
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = ""
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " optionally"
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6721
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6725
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6729
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6733
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6737
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6743
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6747
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6751
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6755
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6764
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6770
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6774
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6780
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6784
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6790
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6794
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6809
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6813
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6819
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6825
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6829
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6835
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6839
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6843
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6847
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6851
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = "charset"
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6873
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6888
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6901
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6906
		{
			yyVAL.empty = struct{}{}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6908
		{
			yyVAL.empty = struct{}{}
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6910
		{
			yyVAL.empty = struct{}{}
		}
	case 1380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6914
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6923
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6930
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6934
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6940
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6944
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6951
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6957
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6961
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6967
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6971
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6978
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7509
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7518
		{
			decNesting(yylex)
		}
	case 1904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7523
		{
			skipToEnd(yylex)
		}
	case 1905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			skipToEnd(yylex)
		}
	case 1906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7532
		{
			skipToEnd(yylex)
		}
	case 1907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7536
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
