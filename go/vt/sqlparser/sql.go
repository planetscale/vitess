// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const CLEANUP = 57566
const BEGIN = 57567
const START = 57568
const TRANSACTION = 57569
const COMMIT = 57570
const ROLLBACK = 57571
const SAVEPOINT = 57572
const RELEASE = 57573
const WORK = 57574
const BIT = 57575
const TINYINT = 57576
const SMALLINT = 57577
const MEDIUMINT = 57578
const INT = 57579
const INTEGER = 57580
const BIGINT = 57581
const INTNUM = 57582
const REAL = 57583
const DOUBLE = 57584
const FLOAT_TYPE = 57585
const DECIMAL = 57586
const NUMERIC = 57587
const TIME = 57588
const TIMESTAMP = 57589
const DATETIME = 57590
const YEAR = 57591
const CHAR = 57592
const VARCHAR = 57593
const BOOL = 57594
const CHARACTER = 57595
const VARBINARY = 57596
const NCHAR = 57597
const TEXT = 57598
const TINYTEXT = 57599
const MEDIUMTEXT = 57600
const LONGTEXT = 57601
const BLOB = 57602
const TINYBLOB = 57603
const MEDIUMBLOB = 57604
const LONGBLOB = 57605
const JSON = 57606
const ENUM = 57607
const GEOMETRY = 57608
const POINT = 57609
const LINESTRING = 57610
const POLYGON = 57611
const GEOMETRYCOLLECTION = 57612
const MULTIPOINT = 57613
const MULTILINESTRING = 57614
const MULTIPOLYGON = 57615
const NULLX = 57616
const AUTO_INCREMENT = 57617
const APPROXNUM = 57618
const SIGNED = 57619
const UNSIGNED = 57620
const ZEROFILL = 57621
const CODE = 57622
const COLLATION = 57623
const COLUMNS = 57624
const DATABASES = 57625
const ENGINES = 57626
const EVENT = 57627
const EXTENDED = 57628
const FIELDS = 57629
const FULL = 57630
const FUNCTION = 57631
const GTID_EXECUTED = 57632
const KEYSPACES = 57633
const OPEN = 57634
const PLUGINS = 57635
const PRIVILEGES = 57636
const PROCESSLIST = 57637
const SCHEMAS = 57638
const TABLES = 57639
const TRIGGERS = 57640
const USER = 57641
const VGTID_EXECUTED = 57642
const VITESS_KEYSPACES = 57643
const VITESS_METADATA = 57644
const VITESS_MIGRATIONS = 57645
const VITESS_REPLICATION_STATUS = 57646
const VITESS_SHARDS = 57647
const VITESS_TABLETS = 57648
const VSCHEMA = 57649
const NAMES = 57650
const GLOBAL = 57651
const SESSION = 57652
const ISOLATION = 57653
const LEVEL = 57654
const READ = 57655
const WRITE = 57656
const ONLY = 57657
const REPEATABLE = 57658
const COMMITTED = 57659
const UNCOMMITTED = 57660
const SERIALIZABLE = 57661
const CURRENT_TIMESTAMP = 57662
const DATABASE = 57663
const CURRENT_DATE = 57664
const CURRENT_TIME = 57665
const LOCALTIME = 57666
const LOCALTIMESTAMP = 57667
const CURRENT_USER = 57668
const UTC_DATE = 57669
const UTC_TIME = 57670
const UTC_TIMESTAMP = 57671
const DAY = 57672
const DAY_HOUR = 57673
const DAY_MICROSECOND = 57674
const DAY_MINUTE = 57675
const DAY_SECOND = 57676
const HOUR = 57677
const HOUR_MICROSECOND = 57678
const HOUR_MINUTE = 57679
const HOUR_SECOND = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MINUTE_MICROSECOND = 57683
const MINUTE_SECOND = 57684
const MONTH = 57685
const QUARTER = 57686
const SECOND = 57687
const SECOND_MICROSECOND = 57688
const YEAR_MONTH = 57689
const WEEK = 57690
const REPLACE = 57691
const CONVERT = 57692
const CAST = 57693
const SUBSTR = 57694
const SUBSTRING = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const MATCH = 57700
const AGAINST = 57701
const BOOLEAN = 57702
const LANGUAGE = 57703
const WITH = 57704
const QUERY = 57705
const EXPANSION = 57706
const WITHOUT = 57707
const VALIDATION = 57708
const UNUSED = 57709
const ARRAY = 57710
const CUME_DIST = 57711
const DESCRIPTION = 57712
const DENSE_RANK = 57713
const EMPTY = 57714
const EXCEPT = 57715
const FIRST_VALUE = 57716
const GROUPING = 57717
const GROUPS = 57718
const JSON_TABLE = 57719
const LAG = 57720
const LAST_VALUE = 57721
const LATERAL = 57722
const LEAD = 57723
const MEMBER = 57724
const NTH_VALUE = 57725
const NTILE = 57726
const OF = 57727
const OVER = 57728
const PERCENT_RANK = 57729
const RANK = 57730
const RECURSIVE = 57731
const ROW_NUMBER = 57732
const SYSTEM = 57733
const WINDOW = 57734
const ACTIVE = 57735
const ADMIN = 57736
const BUCKETS = 57737
const CLONE = 57738
const COMPONENT = 57739
const DEFINITION = 57740
const ENFORCED = 57741
const EXCLUDE = 57742
const FOLLOWING = 57743
const GEOMCOLLECTION = 57744
const GET_MASTER_PUBLIC_KEY = 57745
const HISTOGRAM = 57746
const HISTORY = 57747
const INACTIVE = 57748
const INVISIBLE = 57749
const LOCKED = 57750
const MASTER_COMPRESSION_ALGORITHMS = 57751
const MASTER_PUBLIC_KEY_PATH = 57752
const MASTER_TLS_CIPHERSUITES = 57753
const MASTER_ZSTD_COMPRESSION_LEVEL = 57754
const NESTED = 57755
const NETWORK_NAMESPACE = 57756
const NOWAIT = 57757
const NULLS = 57758
const OJ = 57759
const OLD = 57760
const OPTIONAL = 57761
const ORDINALITY = 57762
const ORGANIZATION = 57763
const OTHERS = 57764
const PATH = 57765
const PERSIST = 57766
const PERSIST_ONLY = 57767
const PRECEDING = 57768
const PRIVILEGE_CHECKS_USER = 57769
const PROCESS = 57770
const RANDOM = 57771
const REFERENCE = 57772
const REQUIRE_ROW_FORMAT = 57773
const RESOURCE = 57774
const RESPECT = 57775
const RESTART = 57776
const RETAIN = 57777
const REUSE = 57778
const ROLE = 57779
const SECONDARY = 57780
const SECONDARY_ENGINE = 57781
const SECONDARY_LOAD = 57782
const SECONDARY_UNLOAD = 57783
const SKIP = 57784
const SRID = 57785
const THREAD_PRIORITY = 57786
const TIES = 57787
const UNBOUNDED = 57788
const VCPU = 57789
const VISIBLE = 57790
const FORMAT = 57791
const TREE = 57792
const VITESS = 57793
const TRADITIONAL = 57794
const LOCAL = 57795
const LOW_PRIORITY = 57796
const NO_WRITE_TO_BINLOG = 57797
const LOGS = 57798
const ERROR = 57799
const GENERAL = 57800
const HOSTS = 57801
const OPTIMIZER_COSTS = 57802
const USER_RESOURCES = 57803
const SLOW = 57804
const CHANNEL = 57805
const RELAY = 57806
const EXPORT = 57807
const AVG_ROW_LENGTH = 57808
const CONNECTION = 57809
const CHECKSUM = 57810
const DELAY_KEY_WRITE = 57811
const ENCRYPTION = 57812
const ENGINE = 57813
const INSERT_METHOD = 57814
const MAX_ROWS = 57815
const MIN_ROWS = 57816
const PACK_KEYS = 57817
const PASSWORD = 57818
const FIXED = 57819
const DYNAMIC = 57820
const COMPRESSED = 57821
const REDUNDANT = 57822
const COMPACT = 57823
const ROW_FORMAT = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const MEMORY = 57829
const DISK = 57830
const PARTITIONS = 57831
const LINEAR = 57832
const RANGE = 57833
const LIST = 57834
const SUBPARTITION = 57835
const SUBPARTITIONS = 57836
const HASH = 57837

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	513, 137,
	-2, 143,
	-1, 45,
	115, 143,
	154, 143,
	270, 143,
	-2, 366,
	-1, 52,
	33, 538,
	176, 538,
	187, 538,
	220, 552,
	221, 552,
	-2, 540,
	-1, 57,
	178, 562,
	-2, 560,
	-1, 108,
	175, 1028,
	-2, 116,
	-1, 110,
	1, 138,
	513, 138,
	-2, 143,
	-1, 120,
	116, 269,
	181, 269,
	-2, 360,
	-1, 139,
	115, 143,
	154, 143,
	270, 143,
	-2, 375,
	-1, 609,
	161, 1049,
	-2, 1045,
	-1, 610,
	161, 1050,
	-2, 1046,
	-1, 624,
	57, 630,
	-2, 638,
	-1, 661,
	129, 1407,
	-2, 109,
	-1, 662,
	129, 1285,
	-2, 110,
	-1, 668,
	129, 1338,
	-2, 1022,
	-1, 811,
	129, 1218,
	-2, 1019,
	-1, 847,
	186, 38,
	191, 38,
	-2, 280,
	-1, 924,
	1, 413,
	513, 413,
	-2, 143,
	-1, 1123,
	57, 631,
	-2, 643,
	-1, 1124,
	57, 632,
	-2, 644,
	-1, 1176,
	115, 143,
	154, 143,
	270, 143,
	-2, 310,
	-1, 1179,
	23, 162,
	-2, 164,
	-1, 1252,
	116, 269,
	181, 269,
	-2, 360,
	-1, 1261,
	186, 39,
	191, 39,
	-2, 281,
	-1, 1473,
	161, 1054,
	-2, 1048,
	-1, 1591,
	115, 143,
	154, 143,
	270, 143,
	-2, 311,
	-1, 1832,
	75, 91,
	84, 91,
	-2, 696,
	-1, 2005,
	47, 990,
	-2, 984,
	-1, 2183,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 671,
}

const yyPrivate = 57344

const yyLast = 32249

var yyAct = [...]int{
	609, 2448, 2397, 649, 2334, 2364, 2336, 2419, 2224, 2189,
	2383, 2094, 2298, 1547, 2105, 2370, 639, 1852, 1859, 3,
	90, 2095, 1105, 2020, 580, 617, 1860, 2019, 550, 2016,
	2250, 987, 1777, 1805, 1138, 2017, 2148, 2154, 566, 1530,
	2174, 2014, 2255, 2006, 1564, 1943, 1623, 1881, 176, 1797,
	935, 176, 1904, 513, 176, 548, 2242, 581, 34, 529,
	1882, 176, 1883, 1277, 1828, 1588, 1628, 1577, 542, 176,
	1643, 148, 1817, 33, 1125, 1569, 640, 814, 1458, 1551,
	666, 176, 877, 35, 1789, 1466, 1568, 541, 1656, 1962,
	1737, 619, 964, 1417, 1368, 1642, 1689, 643, 1630, 1470,
	1259, 134, 1875, 529, 842, 1168, 529, 176, 529, 1571,
	1147, 89, 1834, 1108, 1435, 552, 85, 1005, 818, 1365,
	821, 1532, 1489, 1640, 848, 1351, 1556, 843, 1266, 621,
	1619, 625, 844, 1167, 663, 855, 1165, 822, 631, 845,
	1151, 985, 980, 1373, 1228, 1251, 117, 626, 1233, 642,
	118, 92, 151, 1552, 111, 112, 920, 627, 629, 653,
	91, 536, 70, 1078, 2432, 8, 79, 628, 71, 7,
	1081, 6, 2280, 83, 1523, 2449, 2191, 2192, 2193, 2191,
	2365, 2337, 1923, 1922, 1687, 830, 1799, 1951, 1952, 1527,
	1528, 119, 178, 179, 180, 825, 647, 113, 652, 1424,
	1423, 633, 1422, 1421, 1420, 1337, 486, 1419, 84, 1406,
	815, 882, 539, 1411, 540, 1775, 2411, 2002, 2075, 879,
	2202, 2295, 1469, 2294, 537, 881, 2220, 880, 603, 2221,
	2442, 618, 893, 894, 620, 897, 898, 899, 900, 660,
	1727, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 667, 859, 641, 96,
	634, 858, 2393, 113, 72, 836, 835, 837, 1635, 2437,
	2352, 2427, 2225, 2384, 1675, 2392, 72, 2351, 1979, 74,
	883, 884, 885, 890, 1006, 72, 2137, 1242, 1930, 1776,
	1843, 1633, 1929, 1842, 1583, 1584, 1844, 98, 99, 2052,
	102, 2053, 2054, 108, 1725, 895, 173, 1950, 1724, 481,
	2307, 1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1032, 1517, 829, 1042, 831, 113, 1582, 616,
	1529, 1169, 624, 1170, 2268, 923, 959, 960, 983, 954,
	614, 81, 834, 613, 929, 930, 2282, 72, 971, 1016,
	973, 942, 955, 81, 1868, 516, 943, 172, 942, 919,
	655, 656, 81, 943, 941, 948, 940, 2107, 1900, 1603,
	1602, 1808, 2151, 178, 179, 180, 2128, 527, 1632, 2126,
	1410, 114, 834, 136, 826, 531, 970, 972, 1006, 1905,
	525, 828, 827, 1112, 156, 1657, 1809, 1327, 832, 1412,
	1413, 1414, 516, 1357, 1509, 1498, 1499, 1500, 1501, 1511,
	1502, 1503, 1504, 1516, 1512, 1505, 1506, 1513, 1514, 1515,
	1507, 1508, 1510, 961, 81, 146, 1690, 1926, 2436, 956,
	135, 834, 918, 962, 1695, 516, 982, 516, 832, 1328,
	1012, 1329, 949, 1004, 2108, 1703, 1352, 1704, 1963, 1705,
	153, 977, 154, 1016, 1701, 1698, 1700, 1699, 1253, 1254,
	145, 144, 171, 2412, 593, 963, 599, 600, 597, 598,
	2101, 596, 595, 594, 896, 968, 838, 1706, 2102, 969,
	925, 176, 902, 176, 957, 958, 176, 1696, 901, 974,
	1938, 1965, 2109, 1692, 922, 2291, 1694, 2215, 866, 864,
	601, 602, 839, 1659, 975, 1565, 833, 1848, 875, 874,
	517, 967, 873, 2074, 529, 529, 529, 140, 1255, 147,
	872, 1252, 1864, 141, 142, 871, 870, 869, 157, 2423,
	1245, 2433, 529, 529, 868, 863, 1693, 162, 938, 876,
	944, 945, 946, 947, 1012, 1928, 833, 819, 1023, 2425,
	2308, 1358, 851, 998, 1967, 819, 1971, 517, 1966, 2431,
	1964, 857, 2283, 984, 1265, 1969, 819, 2279, 545, 850,
	817, 1366, 1634, 952, 1968, 1641, 654, 1725, 1939, 976,
	1681, 921, 1362, 2350, 1942, 892, 992, 1970, 1972, 886,
	517, 34, 517, 2082, 1076, 833, 2152, 867, 865, 1726,
	978, 1925, 1011, 1008, 1009, 1010, 1015, 1017, 1014, 2376,
	1013, 1989, 1988, 2374, 176, 542, 1987, 1007, 1778, 1780,
	856, 1240, 2378, 2379, 857, 860, 850, 1862, 1863, 1264,
	1239, 176, 2375, 1238, 1113, 861, 75, 80, 1915, 1363,
	1236, 619, 1118, 485, 149, 480, 1116, 110, 1148, 80,
	529, 1677, 1937, 862, 176, 1936, 989, 990, 80, 529,
	1755, 2051, 2329, 1052, 2188, 529, 2170, 931, 1589, 1103,
	1339, 1338, 1340, 1341, 1342, 939, 1115, 928, 857, 857,
	1119, 1752, 1945, 856, 1839, 1104, 621, 1944, 2421, 1945,
	663, 2422, 1861, 2420, 1944, 1804, 1104, 1746, 1117, 1001,
	1667, 71, 89, 999, 1864, 1000, 1011, 1008, 1009, 1010,
	1015, 1017, 1014, 1356, 1013, 1155, 951, 1066, 857, 143,
	80, 1007, 1042, 1109, 933, 1779, 636, 953, 1053, 1054,
	105, 137, 1032, 1855, 138, 1042, 981, 856, 856, 1442,
	891, 937, 92, 850, 853, 854, 1022, 819, 2363, 2346,
	965, 847, 851, 1440, 1441, 1439, 2164, 1080, 1083, 1085,
	1087, 1088, 1090, 1092, 1093, 1084, 1086, 878, 1089, 1091,
	846, 1094, 1374, 1691, 1106, 1359, 1490, 856, 1856, 1021,
	1019, 618, 860, 850, 106, 1114, 1171, 1676, 1019, 1137,
	1002, 620, 861, 178, 179, 180, 1022, 1460, 1981, 1894,
	2264, 1134, 1858, 1353, 1022, 1354, 1853, 1490, 1355, 1762,
	1053, 1054, 667, 2062, 176, 1161, 1162, 2061, 1229, 1663,
	1862, 1863, 924, 1276, 1669, 1854, 1275, 1237, 1263, 857,
	1674, 1053, 1054, 1672, 866, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 529, 864, 1261, 2355,
	1673, 167, 168, 169, 170, 1166, 1270, 178, 179, 180,
	1274, 1801, 1461, 529, 529, 936, 529, 1669, 529, 529,
	2322, 529, 529, 529, 529, 529, 529, 966, 2434, 2405,
	2356, 2057, 1156, 1120, 2451, 1861, 529, 1271, 856, 2396,
	176, 1310, 81, 1671, 850, 853, 854, 1864, 819, 1375,
	2366, 2323, 847, 851, 2406, 1438, 176, 1557, 1558, 1430,
	1432, 1433, 1305, 1306, 1730, 1731, 1732, 529, 2201, 176,
	1243, 1244, 2200, 1257, 1751, 1346, 1802, 1279, 1431, 1280,
	1364, 1282, 1284, 2080, 176, 1288, 1290, 1292, 1294, 1296,
	1344, 1372, 1879, 1250, 1035, 1036, 1037, 1038, 1039, 1032,
	176, 2435, 1042, 1334, 1878, 1638, 1269, 176, 658, 1347,
	178, 179, 180, 1307, 1846, 1332, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 529, 529, 529, 1313, 1314,
	1331, 1235, 1330, 1268, 1319, 1320, 1247, 1248, 1345, 1267,
	1267, 1246, 1260, 1141, 1321, 1315, 1857, 2446, 1312, 1378,
	1020, 1021, 1019, 1343, 2326, 176, 1382, 1311, 1384, 1385,
	1386, 1387, 1286, 2325, 1370, 1391, 1333, 2324, 1022, 1020,
	1021, 1019, 1425, 1426, 1427, 1428, 1750, 1323, 2263, 1405,
	1020, 1021, 1019, 1376, 1377, 1749, 2261, 1022, 2239, 2198,
	1308, 2104, 1142, 1459, 178, 179, 180, 1381, 1022, 2060,
	1436, 1367, 1462, 1132, 1388, 1389, 1390, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1032, 529, 1888, 1042, 1876, 1020,
	1021, 1019, 1685, 1476, 1477, 1684, 1550, 113, 1536, 836,
	835, 1020, 1021, 1019, 1020, 1021, 1019, 1022, 1407, 1983,
	1241, 178, 179, 180, 1380, 1651, 529, 529, 1471, 1022,
	1478, 1481, 1022, 178, 179, 180, 1491, 1649, 1371, 1463,
	1464, 176, 1335, 1322, 1318, 542, 1401, 1402, 1403, 1317,
	1404, 2394, 1055, 1056, 1057, 1058, 1059, 1316, 1060, 1061,
	1062, 1063, 1064, 1537, 1535, 1538, 1143, 176, 979, 88,
	529, 1437, 1795, 2450, 2218, 2430, 2163, 1473, 1553, 1554,
	176, 1795, 2416, 529, 1020, 1021, 1019, 95, 176, 94,
	176, 1472, 176, 176, 529, 86, 86, 529, 94, 2289,
	93, 2288, 1022, 88, 2223, 1587, 87, 87, 529, 88,
	89, 95, 1795, 2400, 1145, 1519, 1520, 1471, 1795, 2390,
	1795, 2359, 94, 1906, 93, 663, 89, 1132, 663, 1891,
	1543, 1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1032, 1795, 2340, 1042, 1040, 1041, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1032, 1567, 1744, 1042, 2046,
	1132, 1132, 1806, 529, 1627, 1806, 1473, 1132, 1725, 1644,
	1645, 1646, 2312, 1132, 1648, 1650, 2218, 1132, 1592, 1144,
	1562, 633, 2015, 2367, 1813, 1593, 1575, 529, 1795, 2216,
	1738, 1132, 2163, 529, 1270, 1669, 1132, 1270, 1597, 1270,
	1609, 1610, 1611, 1612, 1625, 1545, 2165, 1668, 1132, 1018,
	1658, 2345, 1596, 1020, 1021, 1019, 1020, 1021, 1019, 1670,
	1474, 1475, 1795, 1560, 1480, 1483, 1484, 1880, 1580, 1814,
	1579, 1022, 1631, 1814, 1022, 1595, 2163, 529, 1814, 1459,
	1594, 1020, 1021, 1019, 1459, 1459, 2070, 667, 2168, 1132,
	667, 1518, 2072, 2071, 1521, 1522, 2068, 2069, 1581, 1022,
	1020, 1021, 1019, 1604, 1655, 1605, 1606, 1607, 1608, 2068,
	2067, 1814, 1132, 1744, 1132, 1542, 1669, 1626, 1022, 1767,
	176, 1615, 1616, 1617, 1618, 1621, 1622, 176, 1766, 2140,
	1637, 1639, 176, 176, 1662, 1647, 176, 1665, 176, 1666,
	1636, 1725, 1924, 1835, 176, 1232, 1908, 1902, 1903, 1626,
	1744, 176, 1791, 1661, 1678, 1660, 1669, 1680, 1835, 1795,
	1794, 859, 1682, 1683, 1664, 858, 1679, 88, 610, 1018,
	1132, 1267, 1232, 1231, 1177, 1176, 1652, 1555, 1136, 176,
	529, 2203, 1525, 1415, 1361, 1031, 1030, 1040, 1041, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1032, 1716, 1717, 1042,
	1163, 841, 1719, 840, 569, 568, 1836, 571, 572, 573,
	574, 1720, 2445, 1688, 570, 1838, 177, 575, 1301, 177,
	623, 1836, 177, 1132, 1744, 2398, 2440, 530, 2362, 177,
	1725, 2204, 2205, 2206, 1436, 2335, 81, 177, 1030, 1040,
	1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 177,
	2339, 1042, 2333, 1709, 2300, 1139, 2275, 2195, 1234, 1624,
	2103, 2064, 1909, 1620, 1763, 1614, 1613, 1349, 1302, 1303,
	1304, 530, 1884, 1262, 530, 177, 530, 2285, 1031, 1030,
	1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032,
	1258, 1230, 1042, 107, 1885, 923, 176, 81, 2175, 2176,
	2207, 2106, 1298, 1723, 176, 2301, 1635, 1819, 1822, 1823,
	1824, 1820, 529, 1821, 1825, 2181, 2402, 2175, 2176, 1885,
	2371, 2178, 2087, 1800, 1733, 1437, 2086, 2085, 2015, 1148,
	1895, 1710, 1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1032, 176, 176, 1042, 2208, 2209, 1299,
	1300, 1408, 2180, 2034, 1810, 1819, 1822, 1823, 1824, 1820,
	1845, 1821, 1825, 1434, 2033, 2414, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1761, 2037, 2039, 2035, 1823, 1824, 2038, 1792, 2036,
	2391, 1549, 34, 1140, 1541, 2007, 2009, 2169, 2091, 1995,
	1796, 1830, 1994, 2321, 2010, 1109, 529, 2156, 2254, 1774,
	2256, 176, 637, 2159, 2004, 2155, 1360, 1829, 176, 612,
	638, 1493, 1866, 1600, 529, 1782, 1889, 1486, 888, 1788,
	529, 887, 1793, 1850, 1270, 1270, 1803, 1901, 1833, 86,
	529, 1487, 86, 2116, 1884, 1871, 1872, 1873, 1874, 88,
	87, 1948, 1921, 87, 991, 1869, 1870, 1840, 1917, 1837,
	1742, 1743, 95, 176, 176, 176, 176, 176, 1851, 1912,
	1631, 1916, 114, 94, 2161, 93, 1557, 1558, 1759, 88,
	176, 176, 2083, 1713, 88, 1887, 2342, 1877, 2296, 1130,
	1126, 93, 1865, 1827, 1546, 1993, 176, 1702, 1886, 1130,
	1126, 1729, 1919, 1992, 1127, 2399, 1892, 645, 646, 95,
	1896, 1897, 1898, 2262, 1127, 2260, 1920, 529, 1473, 2259,
	94, 1459, 93, 2252, 1250, 2160, 2158, 2088, 2055, 1539,
	1540, 1129, 1472, 1128, 1910, 1911, 1982, 1918, 1653, 1123,
	1124, 1129, 1986, 1128, 644, 95, 94, 2251, 1961, 2149,
	619, 1806, 529, 2404, 2403, 1980, 94, 1791, 1768, 1756,
	1753, 1157, 176, 1149, 100, 101, 529, 2404, 2327, 2059,
	635, 97, 82, 1940, 1, 529, 2373, 498, 1946, 1526,
	2013, 1947, 529, 529, 1107, 176, 176, 176, 176, 176,
	512, 2369, 2012, 1997, 1336, 1953, 1326, 176, 2226, 1973,
	2297, 1960, 176, 176, 2021, 176, 1961, 2018, 176, 176,
	176, 1974, 2018, 2027, 1959, 1990, 1629, 849, 139, 1590,
	1591, 2386, 104, 812, 103, 852, 1998, 950, 1654, 2219,
	1867, 1601, 1183, 1181, 1182, 176, 578, 1999, 1180, 625,
	1185, 1184, 2045, 1996, 1179, 1409, 2026, 526, 1826, 177,
	174, 177, 1172, 1150, 177, 626, 889, 488, 2073, 1119,
	2081, 2029, 2030, 1686, 2032, 627, 176, 494, 2040, 2047,
	1050, 2028, 2048, 529, 2031, 2044, 2049, 89, 1991, 1841,
	529, 664, 530, 530, 530, 657, 176, 2023, 2153, 2003,
	1370, 2056, 2005, 2093, 1798, 528, 176, 2008, 2001, 2320,
	530, 530, 2253, 2341, 2090, 2065, 2066, 1598, 1146, 1760,
	176, 1075, 1488, 176, 2077, 2076, 1572, 551, 1534, 1429,
	567, 564, 565, 2117, 1784, 1807, 1024, 549, 543, 1158,
	1818, 1816, 1815, 1711, 1576, 2177, 2173, 2078, 2079, 665,
	1570, 2098, 816, 2097, 823, 2092, 2139, 1790, 1599, 1631,
	2089, 1927, 2100, 1003, 1122, 538, 2111, 2138, 824, 2112,
	1485, 2306, 176, 1728, 2136, 1121, 1496, 2114, 2115, 1497,
	2281, 1847, 60, 38, 533, 2410, 994, 651, 32, 1734,
	1735, 1736, 177, 31, 2124, 30, 29, 28, 23, 22,
	21, 20, 19, 25, 18, 17, 542, 16, 109, 177,
	2147, 47, 1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1032, 44, 42, 1042, 176, 530, 2157,
	116, 2150, 177, 115, 45, 41, 926, 530, 2162, 39,
	27, 2172, 26, 530, 15, 14, 13, 12, 11, 10,
	9, 5, 2179, 4, 997, 24, 2182, 2, 2190, 0,
	0, 2186, 2187, 176, 0, 0, 176, 176, 176, 529,
	2184, 0, 0, 0, 0, 0, 0, 0, 2194, 0,
	0, 0, 2214, 0, 0, 0, 0, 529, 529, 529,
	529, 2185, 2121, 2122, 0, 2123, 0, 0, 2125, 0,
	2127, 0, 0, 2232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 1954, 0, 0, 0,
	0, 0, 0, 529, 529, 529, 176, 2197, 0, 2199,
	0, 0, 0, 2238, 0, 0, 1031, 1030, 1040, 1041,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 2266, 529,
	1042, 529, 0, 0, 0, 0, 0, 0, 0, 2274,
	0, 0, 2276, 0, 2249, 2248, 0, 2269, 0, 2267,
	2021, 2258, 2018, 619, 2021, 2257, 529, 2271, 2273, 2265,
	2246, 2247, 2231, 0, 0, 0, 0, 1739, 0, 2284,
	0, 0, 177, 0, 0, 0, 0, 0, 2277, 2278,
	0, 0, 0, 0, 0, 34, 529, 1031, 1030, 1040,
	1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 0,
	2293, 1042, 0, 2292, 530, 2290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2318, 542, 2299, 0, 0,
	0, 530, 530, 2286, 530, 2287, 530, 530, 0, 530,
	530, 530, 530, 530, 530, 2319, 529, 0, 0, 0,
	2317, 2316, 0, 0, 530, 0, 2338, 0, 177, 2331,
	2330, 0, 0, 2021, 0, 0, 2328, 0, 619, 0,
	0, 529, 176, 2332, 177, 0, 0, 1955, 1956, 0,
	0, 0, 0, 529, 2347, 530, 2344, 177, 0, 0,
	0, 1975, 1976, 0, 1977, 1978, 0, 0, 0, 0,
	529, 0, 177, 0, 0, 1984, 1985, 2361, 0, 0,
	529, 0, 0, 0, 2134, 0, 529, 529, 177, 2360,
	0, 0, 0, 2368, 34, 177, 2018, 2357, 2385, 2372,
	2377, 0, 2380, 529, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 530, 530, 530, 2395, 2299, 2387, 0,
	665, 665, 665, 0, 0, 2401, 0, 0, 0, 0,
	0, 2407, 0, 0, 0, 0, 0, 0, 993, 995,
	34, 2415, 0, 177, 0, 2413, 0, 0, 0, 2418,
	2417, 0, 2424, 0, 0, 0, 0, 0, 0, 0,
	0, 2428, 2426, 2429, 2058, 0, 0, 0, 0, 0,
	0, 2438, 0, 0, 0, 2439, 0, 2441, 0, 0,
	0, 0, 2443, 0, 2444, 0, 529, 1131, 0, 0,
	0, 0, 2452, 0, 0, 178, 179, 180, 0, 2447,
	0, 0, 0, 530, 1031, 1030, 1040, 1041, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1032, 0, 0, 1042, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 530, 1031, 1030, 1040, 1041,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032, 0, 177,
	1042, 0, 0, 0, 0, 0, 1153, 0, 0, 0,
	2133, 0, 0, 2118, 503, 665, 0, 0, 0, 0,
	0, 1173, 0, 502, 0, 177, 0, 0, 530, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 177, 0,
	0, 530, 0, 0, 0, 0, 177, 0, 177, 0,
	177, 177, 530, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 1029, 0, 0, 0, 0, 508, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 0, 1027, 1028, 1025, 1031, 1030,
	1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1032,
	0, 530, 1042, 2196, 0, 0, 0, 0, 0, 517,
	1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1032, 0, 0, 1042, 530, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 487, 0, 489,
	504, 0, 519, 0, 518, 493, 0, 491, 495, 505,
	496, 0, 490, 0, 501, 0, 0, 492, 506, 507,
	509, 523, 522, 510, 0, 499, 520, 0, 0, 0,
	2233, 2234, 2235, 2236, 2237, 530, 0, 0, 2240, 2241,
	0, 0, 816, 0, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 1278,
	1278, 0, 1278, 0, 1278, 1278, 0, 1287, 1278, 1278,
	1278, 1278, 1278, 0, 0, 0, 0, 0, 177, 0,
	1272, 1272, 816, 0, 0, 177, 0, 0, 0, 0,
	177, 177, 0, 0, 177, 0, 177, 175, 0, 0,
	484, 0, 177, 524, 0, 0, 0, 0, 0, 177,
	484, 0, 0, 1348, 0, 0, 172, 0, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 177, 530, 0,
	114, 0, 136, 0, 0, 0, 650, 0, 650, 0,
	0, 0, 0, 156, 0, 0, 484, 0, 0, 0,
	0, 611, 73, 0, 0, 0, 0, 0, 0, 521,
	0, 665, 665, 665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 514, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 0, 0, 123, 124, 145,
	144, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 73, 0, 0, 0, 0,
	0, 0, 2381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 177, 0, 0, 0, 0, 0,
	0, 1465, 177, 665, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 1272, 0, 140, 121, 147, 128,
	120, 0, 141, 142, 0, 0, 0, 157, 0, 0,
	0, 0, 1494, 1495, 0, 0, 162, 129, 0, 0,
	0, 0, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 132, 130, 125, 126, 127, 131, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 1548, 0, 0, 0,
	2132, 0, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	665, 0, 0, 665, 530, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 816, 0, 177, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 149, 1133, 1135, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 177, 177, 177, 177, 0, 0, 0, 823,
	114, 0, 0, 0, 0, 0, 0, 0, 177, 177,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 816, 177, 0, 0, 0, 0, 823,
	1031, 1030, 1040, 1041, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1032, 0, 0, 1042, 530, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	137, 0, 0, 138, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 816, 0, 0, 0, 0, 0, 0,
	530, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	484, 0, 484, 530, 0, 484, 0, 0, 0, 0,
	530, 530, 0, 177, 177, 177, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	177, 177, 0, 177, 0, 0, 177, 177, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 177, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 2131, 1722, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 177, 0,
	0, 177, 0, 0, 0, 986, 986, 986, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 1051, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 1031, 1030, 1040, 1041, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1032, 0, 1785, 1042,
	1065, 0, 0, 0, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 0, 1077, 1079, 1082, 1082, 1082, 1079, 1082,
	1082, 1079, 1082, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 0, 0, 0, 0, 177, 0, 1111, 0, 0,
	622, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 177, 177, 177, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 0, 530, 530, 530, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 0, 0, 1907, 1492, 0, 0,
	1492, 0, 0, 484, 665, 0, 1913, 0, 0, 0,
	0, 530, 530, 530, 177, 0, 0, 0, 0, 0,
	1110, 0, 1133, 1524, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 530, 0, 530,
	167, 168, 169, 170, 0, 0, 0, 0, 1273, 0,
	0, 0, 1544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 483, 0, 1273, 1273, 0, 0, 0, 0, 484,
	0, 532, 0, 665, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 530, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 1369, 0, 0, 0, 820, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 484,
	0, 665, 0, 0, 530, 1272, 484, 0, 2025, 1278,
	1272, 0, 0, 0, 0, 1392, 1393, 484, 484, 484,
	484, 484, 484, 484, 0, 0, 0, 0, 0, 530,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 530, 0,
	0, 0, 0, 0, 530, 530, 0, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 530, 136, 0, 0, 0, 0, 0, 0, 816,
	0, 0, 1272, 156, 0, 0, 1548, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 1369, 650, 650, 0,
	0, 650, 650, 650, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 146, 0, 986, 986, 986, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 650,
	650, 650, 650, 0, 0, 0, 0, 0, 0, 153,
	1324, 154, 0, 0, 0, 0, 0, 1253, 1254, 145,
	144, 171, 650, 0, 530, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 114, 0, 0, 0, 1369, 0, 484, 0, 484,
	0, 484, 1578, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 1255, 147, 0,
	1252, 0, 141, 142, 0, 0, 0, 157, 0, 0,
	1740, 0, 0, 0, 1741, 0, 162, 0, 0, 0,
	0, 0, 1747, 1748, 0, 0, 0, 0, 1754, 0,
	0, 1757, 1758, 0, 0, 0, 0, 0, 0, 1764,
	153, 1765, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 1770, 1771, 1772,
	1773, 1544, 0, 2227, 2228, 2229, 2230, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2244,
	2244, 2244, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 149, 0, 0, 0, 162, 0, 0,
	1272, 927, 0, 932, 0, 2270, 934, 2272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 0, 0, 484, 72, 36, 37,
	74, 484, 484, 0, 0, 484, 0, 1714, 0, 0,
	0, 0, 665, 484, 0, 0, 0, 78, 143, 0,
	484, 40, 66, 67, 0, 64, 68, 0, 0, 0,
	137, 0, 0, 138, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 1548, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2353,
	0, 0, 0, 0, 0, 0, 0, 650, 650, 0,
	1957, 1958, 0, 0, 1272, 0, 2358, 0, 0, 0,
	0, 0, 0, 0, 1160, 650, 1548, 0, 0, 0,
	0, 0, 665, 665, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 1548,
	167, 168, 169, 170, 0, 43, 46, 49, 48, 51,
	0, 63, 0, 0, 69, 484, 0, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 52, 77, 76, 0,
	0, 61, 62, 50, 0, 0, 2042, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 54, 55, 0, 56, 57, 58, 59,
	0, 0, 0, 0, 0, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 0, 0, 0, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 0, 0, 1781, 1178, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 1811, 1812, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 2119, 0,
	2120, 0, 484, 484, 484, 484, 484, 0, 0, 0,
	0, 2129, 2130, 0, 0, 0, 0, 0, 0, 484,
	484, 0, 0, 0, 2141, 0, 0, 75, 2145, 0,
	1309, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 650, 0, 0, 0, 1350,
	2166, 2167, 0, 0, 2171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2183, 0, 0, 0, 0, 0, 0, 0,
	1379, 0, 1914, 0, 0, 0, 0, 1383, 0, 0,
	0, 484, 0, 0, 0, 0, 0, 0, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 0, 0, 0, 1273, 0,
	0, 0, 0, 1273, 484, 484, 484, 484, 484, 1200,
	0, 0, 2217, 0, 0, 0, 2041, 0, 0, 0,
	0, 484, 1324, 0, 484, 1418, 0, 484, 2050, 1369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	0, 0, 0, 1573, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	0, 2022, 0, 73, 0, 484, 1573, 1573, 1573, 1573,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 484, 1831, 1188, 0, 1573, 0, 0, 1573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2302, 2303, 2304, 2305, 0, 2309, 0, 2310, 2311,
	2313, 0, 0, 0, 2314, 2315, 0, 0, 0, 0,
	1559, 0, 0, 0, 0, 0, 0, 1201, 1563, 0,
	1566, 484, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2349, 0, 0, 0, 0, 1214,
	1217, 1218, 1219, 1220, 1221, 1222, 484, 1223, 1224, 1225,
	1226, 1227, 1202, 1203, 1204, 1205, 1186, 1187, 1215, 0,
	1189, 0, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	0, 0, 484, 0, 0, 484, 484, 484, 0, 0,
	0, 2135, 0, 0, 0, 0, 0, 0, 0, 2142,
	2143, 2144, 0, 0, 0, 0, 0, 0, 0, 2408,
	2409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 0,
	0, 0, 0, 1273, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 1707, 1708, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 0, 73,
	0, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2343, 0, 1832, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1931, 1932, 1933, 1934, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 2113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2210, 0, 0, 2211, 2212, 2213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 780, 408,
	0, 727, 797, 697, 715, 807, 718, 721, 762, 676,
	740, 331, 712, 0, 701, 672, 707, 673, 699, 729,
	236, 696, 782, 744, 796, 288, 233, 678, 702, 345,
	717, 187, 764, 384, 221, 298, 295, 415, 247, 239,
	235, 220, 272, 304, 343, 402, 337, 803, 292, 751,
	0, 393, 316, 0, 0, 0, 731, 786, 738, 776,
	726, 763, 686, 750, 798, 713, 759, 799, 278, 219,
	186, 328, 394, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 2388, 0, 2389, 0, 0, 0, 0, 0,
	210, 0, 217, 709, 756, 793, 710, 758, 231, 276,
	238, 230, 412, 804, 785, 0, 0, 202, 795, 733,
	761, 810, 671, 753, 0, 674, 677, 806, 789, 705,
	241, 0, 0, 0, 0, 0, 0, 0, 730, 739,
	773, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 749, 0, 0, 0, 682, 675, 0, 0,
	0, 0, 728, 0, 0, 0, 685, 0, 704, 774,
	0, 669, 259, 679, 317, 0, 778, 788, 725, 444,
	792, 723, 722, 768, 683, 784, 716, 287, 681, 284,
	182, 198, 2348, 714, 327, 367, 373, 783, 700, 708,
	222, 706, 371, 341, 429, 206, 249, 364, 346, 369,
	748, 766, 370, 293, 417, 359, 427, 445, 446, 229,
	321, 435, 406, 441, 457, 199, 226, 335, 399, 432,
	390, 314, 413, 414, 283, 389, 257, 185, 291, 451,
	197, 379, 214, 204, 190, 401, 425, 211, 382, 0,
	0, 459, 192, 423, 398, 311, 280, 281, 191, 0,
	363, 234, 255, 224, 330, 420, 421, 223, 460, 201,
	440, 194, 988, 439, 323, 416, 424, 312, 303, 193,
	422, 310, 302, 286, 245, 266, 357, 296, 358, 267,
	319, 318, 320, 0, 188, 0, 395, 433, 461, 207,
	208, 209, 695, 244, 248, 254, 256, 262, 263, 270,
	289, 334, 356, 354, 360, 779, 411, 428, 436, 443,
	449, 450, 452, 453, 454, 455, 456, 322, 269, 391,
	285, 294, 771, 809, 340, 372, 212, 431, 392, 690,
	694, 688, 689, 742, 743, 691, 800, 801, 802, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 775, 684,
	0, 692, 693, 0, 781, 790, 791, 747, 181, 195,
	290, 805, 361, 252, 458, 438, 434, 670, 687, 228,
	698, 0, 0, 711, 719, 720, 732, 734, 735, 736,
	737, 746, 754, 755, 757, 765, 767, 770, 772, 777,
	787, 808, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 349, 350, 351, 352, 353, 355, 362, 366,
	374, 375, 376, 377, 378, 380, 381, 385, 386, 387,
	388, 396, 400, 418, 419, 430, 442, 447, 261, 426,
	448, 0, 299, 745, 752, 301, 246, 264, 275, 760,
	437, 397, 200, 368, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 315, 344, 348, 258, 237, 216, 365,
	213, 383, 403, 404, 405, 407, 313, 232, 347, 741,
	769, 297, 409, 410, 271, 794, 780, 408, 0, 727,
	797, 697, 715, 807, 718, 721, 762, 676, 740, 331,
	712, 0, 701, 672, 707, 673, 699, 729, 236, 696,
	782, 744, 796, 288, 233, 678, 702, 345, 717, 187,
	764, 384, 221, 298, 295, 415, 247, 239, 235, 220,
	272, 304, 343, 402, 337, 803, 292, 751, 0, 393,
	316, 0, 0, 0, 731, 786, 738, 776, 726, 763,
	686, 750, 798, 713, 759, 799, 278, 219, 186, 328,
	394, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 709, 756, 793, 710, 758, 231, 276, 238, 230,
	412, 804, 785, 0, 0, 202, 795, 733, 761, 810,
	671, 753, 0, 674, 677, 806, 789, 705, 241, 0,
	0, 0, 0, 0, 0, 0, 730, 739, 773, 724,
	0, 0, 0, 0, 0, 0, 2051, 0, 703, 0,
	749, 0, 0, 0, 682, 675, 0, 0, 0, 0,
	728, 0, 0, 0, 685, 0, 704, 774, 0, 669,
	259, 679, 317, 0, 778, 788, 725, 444, 792, 723,
	722, 768, 683, 784, 716, 287, 681, 284, 182, 198,
	0, 714, 327, 367, 373, 783, 700, 708, 222, 706,
	371, 341, 429, 206, 249, 364, 346, 369, 748, 766,
	370, 293, 417, 359, 427, 445, 446, 229, 321, 435,
	406, 441, 457, 199, 226, 335, 399, 432, 390, 314,
	413, 414, 283, 389, 257, 185, 291, 451, 197, 379,
	214, 204, 190, 401, 425, 211, 382, 0, 0, 459,
	192, 423, 398, 311, 280, 281, 191, 0, 363, 234,
	255, 224, 330, 420, 421, 223, 460, 201, 440, 194,
	988, 439, 323, 416, 424, 312, 303, 193, 422, 310,
	302, 286, 245, 266, 357, 296, 358, 267, 319, 318,
	320, 0, 188, 0, 395, 433, 461, 207, 208, 209,
	695, 244, 248, 254, 256, 262, 263, 270, 289, 334,
	356, 354, 360, 779, 411, 428, 436, 443, 449, 450,
	452, 453, 454, 455, 456, 322, 269, 391, 285, 294,
	771, 809, 340, 372, 212, 431, 392, 690, 694, 688,
	689, 742, 743, 691, 800, 801, 802, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 775, 684, 0, 692,
	693, 0, 781, 790, 791, 747, 181, 195, 290, 805,
	361, 252, 458, 438, 434, 670, 687, 228, 698, 0,
	0, 711, 719, 720, 732, 734, 735, 736, 737, 746,
	754, 755, 757, 765, 767, 770, 772, 777, 787, 808,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	349, 350, 351, 352, 353, 355, 362, 366, 374, 375,
	376, 377, 378, 380, 381, 385, 386, 387, 388, 396,
	400, 418, 419, 430, 442, 447, 261, 426, 448, 0,
	299, 745, 752, 301, 246, 264, 275, 760, 437, 397,
	200, 368, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 315, 344, 348, 258, 237, 216, 365, 213, 383,
	403, 404, 405, 407, 313, 232, 347, 741, 769, 297,
	409, 410, 271, 794, 780, 408, 0, 727, 797, 697,
	715, 807, 718, 721, 762, 676, 740, 331, 712, 0,
	701, 672, 707, 673, 699, 729, 236, 696, 782, 744,
	796, 288, 233, 678, 702, 345, 717, 187, 764, 384,
	221, 298, 295, 415, 247, 239, 235, 220, 272, 304,
	343, 402, 337, 803, 292, 751, 0, 393, 316, 0,
	0, 0, 731, 786, 738, 776, 726, 763, 686, 750,
	798, 713, 759, 799, 278, 219, 186, 328, 394, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 709,
	756, 793, 710, 758, 231, 276, 238, 230, 412, 804,
	785, 0, 0, 202, 795, 733, 761, 810, 671, 753,
	0, 674, 677, 806, 789, 705, 241, 0, 0, 0,
	0, 0, 0, 0, 730, 739, 773, 724, 0, 0,
	0, 0, 0, 0, 2011, 0, 703, 0, 749, 0,
	0, 0, 682, 675, 0, 0, 0, 0, 728, 0,
	0, 0, 685, 0, 704, 774, 0, 669, 259, 679,
	317, 0, 778, 788, 725, 444, 792, 723, 722, 768,
	683, 784, 716, 287, 681, 284, 182, 198, 0, 714,
	327, 367, 373, 783, 700, 708, 222, 706, 371, 341,
	429, 206, 249, 364, 346, 369, 748, 766, 370, 293,
	417, 359, 427, 445, 446, 229, 321, 435, 406, 441,
	457, 199, 226, 335, 399, 432, 390, 314, 413, 414,
	283, 389, 257, 185, 291, 451, 197, 379, 214, 204,
	190, 401, 425, 211, 382, 0, 0, 459, 192, 423,
	398, 311, 280, 281, 191, 0, 363, 234, 255, 224,
	330, 420, 421, 223, 460, 201, 440, 194, 988, 439,
	323, 416, 424, 312, 303, 193, 422, 310, 302, 286,
	245, 266, 357, 296, 358, 267, 319, 318, 320, 0,
	188, 0, 395, 433, 461, 207, 208, 209, 695, 244,
	248, 254, 256, 262, 263, 270, 289, 334, 356, 354,
	360, 779, 411, 428, 436, 443, 449, 450, 452, 453,
	454, 455, 456, 322, 269, 391, 285, 294, 771, 809,
	340, 372, 212, 431, 392, 690, 694, 688, 689, 742,
	743, 691, 800, 801, 802, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 775, 684, 0, 692, 693, 0,
	781, 790, 791, 747, 181, 195, 290, 805, 361, 252,
	458, 438, 434, 670, 687, 228, 698, 0, 0, 711,
	719, 720, 732, 734, 735, 736, 737, 746, 754, 755,
	757, 765, 767, 770, 772, 777, 787, 808, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 349, 350,
	351, 352, 353, 355, 362, 366, 374, 375, 376, 377,
	378, 380, 381, 385, 386, 387, 388, 396, 400, 418,
	419, 430, 442, 447, 261, 426, 448, 0, 299, 745,
	752, 301, 246, 264, 275, 760, 437, 397, 200, 368,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 315,
	344, 348, 258, 237, 216, 365, 213, 383, 403, 404,
	405, 407, 313, 232, 347, 741, 769, 297, 409, 410,
	271, 794, 780, 408, 0, 727, 797, 697, 715, 807,
	718, 721, 762, 676, 740, 331, 712, 0, 701, 672,
	707, 673, 699, 729, 236, 696, 782, 744, 796, 288,
	233, 678, 702, 345, 717, 187, 764, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 803, 292, 751, 0, 393, 316, 0, 0, 0,
	731, 786, 738, 776, 726, 763, 686, 750, 798, 713,
	759, 799, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 709, 756, 793,
	710, 758, 231, 276, 238, 230, 412, 804, 785, 0,
	0, 202, 795, 733, 761, 810, 671, 753, 0, 674,
	677, 806, 789, 705, 241, 0, 0, 0, 0, 0,
	0, 0, 730, 739, 773, 724, 0, 0, 0, 0,
	0, 0, 1561, 0, 703, 0, 749, 0, 0, 0,
	682, 675, 0, 0, 0, 0, 728, 0, 0, 0,
	685, 0, 704, 774, 0, 669, 259, 679, 317, 0,
	778, 788, 725, 444, 792, 723, 722, 768, 683, 784,
	716, 287, 681, 284, 182, 198, 0, 714, 327, 367,
	373, 783, 700, 708, 222, 706, 371, 341, 429, 206,
	249, 364, 346, 369, 748, 766, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 988, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 695, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 779,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 771, 809, 340, 372,
	212, 431, 392, 690, 694, 688, 689, 742, 743, 691,
	800, 801, 802, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 775, 684, 0, 692, 693, 0, 781, 790,
	791, 747, 181, 195, 290, 805, 361, 252, 458, 438,
	434, 670, 687, 228, 698, 0, 0, 711, 719, 720,
	732, 734, 735, 736, 737, 746, 754, 755, 757, 765,
	767, 770, 772, 777, 787, 808, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 745, 752, 301,
	246, 264, 275, 760, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 741, 769, 297, 409, 410, 271, 794,
	780, 408, 0, 727, 797, 697, 715, 807, 718, 721,
	762, 676, 740, 331, 712, 0, 701, 672, 707, 673,
	699, 729, 236, 696, 782, 744, 796, 288, 233, 678,
	702, 345, 717, 187, 764, 384, 221, 298, 295, 415,
	247, 239, 235, 220, 272, 304, 343, 402, 337, 803,
	292, 751, 0, 393, 316, 0, 0, 0, 731, 786,
	738, 776, 726, 763, 686, 750, 798, 713, 759, 799,
	278, 219, 186, 328, 394, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 709, 756, 793, 710, 758,
	231, 276, 238, 230, 412, 804, 785, 0, 0, 202,
	795, 733, 761, 810, 671, 753, 0, 674, 677, 806,
	789, 705, 241, 0, 0, 0, 0, 0, 0, 0,
	730, 739, 773, 724, 0, 0, 0, 0, 0, 0,
	0, 0, 703, 0, 749, 0, 0, 0, 682, 675,
	0, 0, 0, 0, 728, 0, 0, 0, 685, 0,
	704, 774, 0, 669, 259, 679, 317, 0, 778, 788,
	725, 444, 792, 723, 722, 768, 683, 784, 716, 287,
	681, 284, 182, 198, 0, 714, 327, 367, 373, 783,
	700, 708, 222, 706, 371, 341, 429, 206, 249, 364,
	346, 369, 748, 766, 370, 293, 417, 359, 427, 445,
	446, 229, 321, 435, 406, 441, 457, 199, 226, 335,
	399, 432, 390, 314, 413, 414, 283, 389, 257, 185,
	291, 451, 197, 379, 214, 204, 190, 401, 425, 211,
	382, 0, 0, 459, 192, 423, 398, 311, 280, 281,
	191, 0, 363, 234, 255, 224, 330, 420, 421, 223,
	460, 201, 440, 194, 988, 439, 323, 416, 424, 312,
	303, 193, 422, 310, 302, 286, 245, 266, 357, 296,
	358, 267, 319, 318, 320, 0, 188, 0, 395, 433,
	461, 207, 208, 209, 695, 244, 248, 254, 256, 262,
	263, 270, 289, 334, 356, 354, 360, 779, 411, 428,
	436, 443, 449, 450, 452, 453, 454, 455, 456, 322,
	269, 391, 285, 294, 771, 809, 340, 372, 212, 431,
	392, 690, 694, 688, 689, 742, 743, 691, 800, 801,
	802, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	775, 684, 0, 692, 693, 0, 781, 790, 791, 747,
	181, 195, 290, 805, 361, 252, 458, 438, 434, 670,
	687, 228, 698, 0, 0, 711, 719, 720, 732, 734,
	735, 736, 737, 746, 754, 755, 757, 765, 767, 770,
	772, 777, 787, 808, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 324, 325, 326, 329, 332, 333,
	336, 338, 339, 342, 349, 350, 351, 352, 353, 355,
	362, 366, 374, 375, 376, 377, 378, 380, 381, 385,
	386, 387, 388, 396, 400, 418, 419, 430, 442, 447,
	261, 426, 448, 0, 299, 745, 752, 301, 246, 264,
	275, 760, 437, 397, 200, 368, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 315, 344, 348, 258, 237,
	216, 365, 213, 383, 403, 404, 405, 407, 313, 232,
	347, 741, 769, 297, 409, 410, 271, 794, 780, 408,
	0, 727, 797, 697, 715, 807, 718, 721, 762, 676,
	740, 331, 712, 0, 701, 672, 707, 673, 699, 729,
	236, 696, 782, 744, 796, 288, 233, 678, 702, 345,
	717, 187, 764, 384, 221, 298, 295, 415, 247, 239,
	235, 220, 272, 304, 343, 402, 337, 803, 292, 751,
	0, 393, 316, 0, 0, 0, 731, 786, 738, 776,
	726, 763, 686, 750, 798, 713, 759, 799, 278, 219,
	186, 328, 394, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 709, 756, 793, 710, 758, 231, 276,
	238, 230, 412, 804, 785, 0, 0, 202, 795, 733,
	761, 810, 671, 753, 0, 674, 677, 806, 789, 705,
	241, 0, 0, 0, 0, 0, 0, 0, 730, 739,
	773, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 749, 0, 0, 0, 682, 675, 0, 0,
	0, 0, 728, 0, 0, 0, 685, 0, 704, 774,
	0, 669, 259, 679, 317, 0, 778, 788, 725, 444,
	792, 723, 722, 768, 683, 784, 716, 287, 681, 284,
	182, 198, 0, 714, 327, 367, 373, 783, 700, 708,
	222, 706, 371, 341, 429, 206, 249, 364, 346, 369,
	748, 766, 370, 293, 417, 359, 427, 445, 446, 229,
	321, 435, 406, 441, 457, 199, 226, 335, 399, 432,
	390, 314, 413, 414, 283, 389, 257, 185, 291, 451,
	197, 379, 214, 204, 190, 401, 425, 211, 382, 0,
	0, 459, 192, 423, 398, 311, 280, 281, 191, 0,
	363, 234, 255, 224, 330, 420, 421, 223, 460, 201,
	440, 194, 988, 439, 323, 416, 424, 312, 303, 193,
	422, 310, 302, 286, 245, 266, 357, 296, 358, 267,
	319, 318, 320, 0, 188, 0, 395, 433, 461, 207,
	208, 209, 695, 244, 248, 254, 256, 262, 263, 270,
	289, 334, 356, 354, 360, 779, 411, 428, 436, 443,
	449, 450, 452, 453, 454, 455, 456, 322, 269, 391,
	285, 294, 771, 809, 340, 372, 212, 431, 392, 690,
	694, 688, 689, 742, 743, 691, 800, 801, 802, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 775, 684,
	0, 692, 693, 0, 781, 790, 791, 747, 181, 195,
	290, 805, 361, 252, 458, 438, 434, 670, 687, 228,
	698, 0, 0, 711, 719, 720, 732, 734, 735, 736,
	737, 746, 754, 755, 757, 765, 767, 770, 772, 777,
	787, 808, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 349, 350, 351, 352, 353, 355, 362, 366,
	374, 375, 376, 377, 378, 380, 381, 385, 386, 387,
	388, 396, 400, 418, 419, 430, 442, 447, 261, 426,
	448, 0, 299, 745, 752, 301, 246, 264, 275, 760,
	437, 397, 200, 368, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 315, 344, 348, 258, 237, 216, 365,
	213, 383, 403, 404, 405, 407, 313, 232, 347, 741,
	769, 297, 409, 410, 271, 794, 780, 408, 0, 727,
	797, 697, 715, 807, 718, 721, 762, 676, 740, 331,
	712, 0, 701, 672, 707, 673, 699, 729, 236, 696,
	782, 744, 796, 288, 233, 678, 702, 345, 717, 187,
	764, 384, 221, 298, 295, 415, 247, 239, 235, 220,
	272, 304, 343, 402, 337, 803, 292, 751, 0, 393,
	316, 0, 0, 0, 731, 786, 738, 776, 726, 763,
	686, 750, 798, 713, 759, 799, 278, 219, 186, 328,
	394, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 709, 756, 793, 710, 758, 231, 276, 238, 230,
	412, 804, 785, 0, 0, 811, 795, 733, 761, 810,
	671, 753, 0, 674, 677, 806, 789, 705, 241, 0,
	0, 0, 0, 0, 0, 0, 730, 739, 773, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 0,
	749, 0, 0, 0, 682, 675, 0, 0, 0, 0,
	728, 0, 0, 0, 685, 0, 704, 774, 0, 669,
	259, 679, 317, 0, 778, 788, 725, 444, 792, 723,
	722, 768, 683, 784, 716, 287, 681, 284, 182, 198,
	0, 714, 327, 367, 373, 783, 700, 708, 222, 706,
	371, 341, 429, 206, 249, 364, 346, 369, 748, 766,
	370, 293, 417, 359, 427, 445, 446, 229, 321, 435,
	406, 441, 457, 199, 226, 335, 399, 432, 390, 314,
	413, 414, 283, 389, 257, 185, 291, 451, 197, 379,
	214, 204, 190, 401, 425, 211, 382, 0, 0, 459,
	192, 423, 398, 311, 280, 281, 191, 0, 363, 234,
	255, 224, 330, 420, 421, 223, 460, 201, 440, 194,
	680, 439, 323, 416, 424, 312, 303, 193, 422, 310,
	302, 286, 245, 266, 357, 296, 358, 267, 319, 318,
	320, 0, 188, 0, 395, 433, 461, 207, 208, 209,
	695, 244, 248, 254, 256, 262, 263, 270, 289, 334,
	356, 354, 360, 779, 411, 428, 436, 443, 449, 450,
	452, 453, 454, 455, 456, 668, 662, 661, 285, 294,
	771, 809, 340, 372, 212, 431, 392, 690, 694, 688,
	689, 742, 743, 691, 800, 801, 802, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 0, 775, 684, 0, 692,
	693, 0, 781, 790, 791, 747, 181, 195, 290, 805,
	361, 252, 458, 438, 434, 670, 687, 228, 698, 0,
	0, 711, 719, 720, 732, 734, 735, 736, 737, 746,
	754, 755, 757, 765, 767, 770, 772, 777, 787, 808,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	349, 350, 351, 352, 353, 355, 362, 366, 374, 375,
	376, 377, 378, 380, 381, 385, 386, 387, 388, 396,
	400, 418, 419, 430, 442, 447, 261, 426, 448, 0,
	299, 745, 752, 301, 246, 264, 275, 760, 437, 397,
	200, 368, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 315, 344, 348, 258, 237, 216, 365, 213, 383,
	403, 404, 405, 407, 313, 232, 347, 741, 769, 297,
	409, 410, 271, 794, 780, 408, 0, 727, 797, 697,
	715, 807, 718, 721, 762, 676, 740, 331, 712, 0,
	701, 672, 707, 673, 699, 729, 236, 696, 782, 744,
	796, 288, 233, 678, 702, 345, 717, 187, 764, 384,
	221, 298, 295, 415, 247, 239, 235, 220, 272, 304,
	343, 402, 337, 803, 292, 751, 0, 393, 316, 0,
	0, 0, 731, 786, 738, 776, 726, 763, 686, 750,
	798, 713, 759, 799, 278, 219, 186, 328, 394, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 709,
	756, 793, 710, 758, 231, 276, 238, 230, 412, 804,
	785, 0, 0, 811, 795, 733, 761, 810, 671, 753,
	0, 674, 677, 806, 789, 705, 241, 0, 0, 0,
	0, 0, 0, 0, 730, 739, 773, 724, 0, 0,
	0, 0, 0, 0, 0, 0, 703, 0, 749, 0,
	0, 0, 682, 675, 0, 0, 0, 0, 728, 0,
	0, 0, 685, 0, 704, 774, 0, 669, 259, 679,
	317, 0, 778, 788, 725, 444, 792, 723, 722, 768,
	683, 784, 716, 287, 681, 284, 182, 198, 0, 714,
	327, 367, 373, 783, 700, 708, 222, 706, 371, 341,
	429, 206, 249, 364, 346, 369, 748, 766, 370, 293,
	417, 359, 427, 445, 446, 229, 321, 435, 406, 441,
	457, 199, 226, 335, 399, 432, 390, 314, 413, 414,
	283, 389, 257, 185, 291, 451, 197, 379, 214, 204,
	190, 401, 1164, 211, 382, 0, 0, 459, 192, 423,
	398, 311, 280, 281, 191, 0, 363, 234, 255, 224,
	330, 420, 421, 223, 460, 201, 440, 194, 680, 439,
	323, 416, 424, 312, 303, 193, 422, 310, 302, 286,
	245, 266, 357, 296, 358, 267, 319, 318, 320, 0,
	188, 0, 395, 433, 461, 207, 208, 209, 695, 244,
	248, 254, 256, 262, 263, 270, 289, 334, 356, 354,
	360, 779, 411, 428, 436, 443, 449, 450, 452, 453,
	454, 455, 456, 668, 662, 661, 285, 294, 771, 809,
	340, 372, 212, 431, 392, 690, 694, 688, 689, 742,
	743, 691, 800, 801, 802, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 0, 775, 684, 0, 692, 693, 0,
	781, 790, 791, 747, 181, 195, 290, 805, 361, 252,
	458, 438, 434, 670, 687, 228, 698, 0, 0, 711,
	719, 720, 732, 734, 735, 736, 737, 746, 754, 755,
	757, 765, 767, 770, 772, 777, 787, 808, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 349, 350,
	351, 352, 353, 355, 362, 366, 374, 375, 376, 377,
	378, 380, 381, 385, 386, 387, 388, 396, 400, 418,
	419, 430, 442, 447, 261, 426, 448, 0, 299, 745,
	752, 301, 246, 264, 275, 760, 437, 397, 200, 368,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 315,
	344, 348, 258, 237, 216, 365, 213, 383, 403, 404,
	405, 407, 313, 232, 347, 741, 769, 297, 409, 410,
	271, 794, 780, 408, 0, 727, 797, 697, 715, 807,
	718, 721, 762, 676, 740, 331, 712, 0, 701, 672,
	707, 673, 699, 729, 236, 696, 782, 744, 796, 288,
	233, 678, 702, 345, 717, 187, 764, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 803, 292, 751, 0, 393, 316, 0, 0, 0,
	731, 786, 738, 776, 726, 763, 686, 750, 798, 713,
	759, 799, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 709, 756, 793,
	710, 758, 231, 276, 238, 230, 412, 804, 785, 0,
	0, 811, 795, 733, 761, 810, 671, 753, 0, 674,
	677, 806, 789, 705, 241, 0, 0, 0, 0, 0,
	0, 0, 730, 739, 773, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 0, 749, 0, 0, 0,
	682, 675, 0, 0, 0, 0, 728, 0, 0, 0,
	685, 0, 704, 774, 0, 669, 259, 679, 317, 0,
	778, 788, 725, 444, 792, 723, 722, 768, 683, 784,
	716, 287, 681, 284, 182, 198, 0, 714, 327, 367,
	373, 783, 700, 708, 222, 706, 371, 341, 429, 206,
	249, 364, 346, 369, 748, 766, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	659, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 680, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 695, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 779,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 668, 662, 661, 285, 294, 771, 809, 340, 372,
	212, 431, 392, 690, 694, 688, 689, 742, 743, 691,
	800, 801, 802, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 775, 684, 0, 692, 693, 0, 781, 790,
	791, 747, 181, 195, 290, 805, 361, 252, 458, 438,
	434, 670, 687, 228, 698, 0, 0, 711, 719, 720,
	732, 734, 735, 736, 737, 746, 754, 755, 757, 765,
	767, 770, 772, 777, 787, 808, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 745, 752, 301,
	246, 264, 275, 760, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 741, 769, 297, 409, 410, 271, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 1467, 0, 547, 0, 0, 0,
	236, 546, 0, 0, 0, 288, 233, 0, 1468, 345,
	0, 187, 0, 384, 221, 298, 295, 415, 247, 239,
	235, 220, 272, 304, 343, 402, 337, 591, 292, 0,
	0, 393, 316, 0, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 328, 394, 251, 0, 81, 0, 0, 178, 179,
	180, 569, 568, 558, 571, 572, 573, 574, 0, 0,
	210, 570, 217, 603, 575, 576, 577, 0, 231, 276,
	238, 230, 412, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 544, 562, 0, 590, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 560, 648, 0,
	0, 0, 607, 0, 561, 0, 0, 553, 554, 556,
	555, 557, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 317, 0, 606, 0, 0, 444,
	0, 0, 604, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 327, 367, 373, 0, 0, 0,
	222, 0, 371, 341, 429, 206, 249, 364, 346, 369,
	0, 0, 370, 293, 417, 359, 427, 445, 446, 229,
	321, 435, 406, 441, 457, 199, 226, 335, 399, 432,
	390, 314, 413, 414, 283, 389, 257, 185, 291, 451,
	197, 379, 214, 204, 190, 401, 425, 211, 382, 0,
	0, 459, 192, 423, 398, 311, 280, 281, 191, 0,
	363, 234, 255, 224, 330, 420, 421, 223, 460, 201,
	440, 194, 0, 439, 323, 416, 424, 312, 303, 193,
	422, 310, 302, 286, 245, 266, 357, 296, 358, 267,
	319, 318, 320, 0, 188, 0, 395, 433, 461, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 334, 356, 354, 360, 0, 411, 428, 436, 443,
	449, 450, 452, 453, 454, 455, 456, 322, 269, 391,
	285, 294, 0, 0, 340, 372, 212, 431, 392, 593,
	605, 599, 600, 597, 598, 592, 596, 595, 594, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 608, 584,
	585, 586, 587, 589, 0, 601, 602, 588, 181, 195,
	290, 0, 361, 252, 458, 438, 434, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 349, 350, 351, 352, 353, 355, 362, 366,
	374, 375, 376, 377, 378, 380, 381, 385, 386, 387,
	388, 396, 400, 418, 419, 430, 442, 447, 261, 426,
	448, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	437, 397, 200, 368, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 315, 344, 348, 258, 237, 216, 365,
	213, 383, 403, 404, 405, 407, 313, 232, 347, 408,
	0, 297, 409, 410, 271, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 547, 0, 0, 0,
	236, 546, 0, 0, 0, 288, 233, 0, 0, 345,
	0, 187, 0, 384, 221, 298, 295, 415, 247, 239,
	235, 220, 272, 304, 343, 402, 337, 591, 292, 0,
	0, 393, 316, 0, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 0, 0, 1585, 0, 278, 219,
	186, 328, 394, 251, 0, 81, 0, 0, 178, 179,
	180, 569, 568, 558, 571, 572, 573, 574, 0, 0,
	210, 570, 217, 603, 575, 576, 577, 1586, 231, 276,
	238, 230, 412, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 544, 562, 0, 590, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 560, 0, 0,
	0, 0, 607, 0, 561, 0, 0, 553, 554, 556,
	555, 557, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 317, 0, 606, 0, 0, 444,
	0, 0, 604, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 327, 367, 373, 0, 0, 0,
	222, 0, 371, 341, 429, 206, 249, 364, 346, 369,
	0, 0, 370, 293, 417, 359, 427, 445, 446, 229,
	321, 435, 406, 441, 457, 199, 226, 335, 399, 432,
	390, 314, 413, 414, 283, 389, 257, 185, 291, 451,
	197, 379, 214, 204, 190, 401, 425, 211, 382, 0,
	0, 459, 192, 423, 398, 311, 280, 281, 191, 0,
	363, 234, 255, 224, 330, 420, 421, 223, 460, 201,
	440, 194, 0, 439, 323, 416, 424, 312, 303, 193,
	422, 310, 302, 286, 245, 266, 357, 296, 358, 267,
	319, 318, 320, 0, 188, 0, 395, 433, 461, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 334, 356, 354, 360, 0, 411, 428, 436, 443,
	449, 450, 452, 453, 454, 455, 456, 322, 269, 391,
	285, 294, 0, 0, 340, 372, 212, 431, 392, 593,
	605, 599, 600, 597, 598, 592, 596, 595, 594, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 0, 608, 584,
	585, 586, 587, 589, 0, 601, 602, 588, 181, 195,
	290, 0, 361, 252, 458, 438, 434, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 349, 350, 351, 352, 353, 355, 362, 366,
	374, 375, 376, 377, 378, 380, 381, 385, 386, 387,
	388, 396, 400, 418, 419, 430, 442, 447, 261, 426,
	448, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	437, 397, 200, 368, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 315, 344, 348, 258, 237, 216, 365,
	213, 383, 403, 404, 405, 407, 313, 232, 347, 72,
	408, 297, 409, 410, 271, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 80, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 1132, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 648,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 1482, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 648,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 1479, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 648,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 547, 0, 0,
	0, 236, 546, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 544, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 2382, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 1132, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 591, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 81, 0, 0, 178,
	179, 180, 569, 568, 558, 571, 572, 573, 574, 0,
	0, 210, 570, 217, 603, 575, 576, 577, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 562, 0, 590, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 607, 0, 561, 0, 0, 553, 554,
	556, 555, 557, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 606, 0, 0,
	444, 0, 0, 604, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	593, 605, 599, 600, 597, 598, 592, 596, 595, 594,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 608,
	584, 585, 586, 587, 589, 0, 601, 602, 588, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 0, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1031, 1030, 1040, 1041, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1032, 0, 0, 1042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 0, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 0, 0, 856,
	444, 0, 0, 0, 0, 0, 853, 854, 287, 819,
	284, 182, 198, 847, 851, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	408, 0, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 1152, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	345, 0, 187, 0, 384, 221, 298, 295, 415, 247,
	239, 235, 220, 272, 304, 343, 402, 337, 0, 292,
	0, 0, 393, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 328, 394, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 412, 0, 0, 0, 0, 202, 0,
	0, 1020, 1021, 1019, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 317, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 327, 367, 373, 0, 0,
	0, 222, 0, 371, 341, 429, 206, 249, 364, 346,
	369, 0, 0, 370, 293, 417, 359, 427, 445, 446,
	229, 321, 435, 406, 441, 457, 199, 226, 335, 399,
	432, 390, 314, 413, 414, 283, 389, 257, 185, 291,
	451, 197, 379, 214, 204, 190, 401, 425, 211, 382,
	0, 0, 459, 192, 423, 398, 311, 280, 281, 191,
	0, 363, 234, 255, 224, 330, 420, 421, 223, 460,
	201, 440, 194, 0, 439, 323, 416, 424, 312, 303,
	193, 422, 310, 302, 286, 245, 266, 357, 296, 358,
	267, 319, 318, 320, 0, 188, 0, 395, 433, 461,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 334, 356, 354, 360, 0, 411, 428, 436,
	443, 449, 450, 452, 453, 454, 455, 456, 322, 269,
	391, 285, 294, 0, 0, 340, 372, 212, 431, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 361, 252, 458, 438, 434, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 349, 350, 351, 352, 353, 355, 362,
	366, 374, 375, 376, 377, 378, 380, 381, 385, 386,
	387, 388, 396, 400, 418, 419, 430, 442, 447, 261,
	426, 448, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 437, 397, 200, 368, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 315, 344, 348, 258, 237, 216,
	365, 213, 383, 403, 404, 405, 407, 313, 232, 347,
	72, 408, 297, 409, 410, 271, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 345, 0, 187, 0, 384, 221, 298, 295, 415,
	247, 239, 235, 220, 272, 304, 343, 402, 337, 0,
	292, 0, 0, 393, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 328, 394, 251, 0, 81, 0, 1132,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 412, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 317, 0, 0, 0,
	0, 444, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 327, 367, 373, 0,
	0, 0, 222, 0, 371, 341, 429, 206, 249, 364,
	346, 369, 0, 0, 370, 293, 417, 359, 427, 445,
	446, 229, 321, 435, 406, 441, 457, 199, 226, 335,
	399, 432, 390, 314, 413, 414, 283, 389, 257, 185,
	291, 451, 197, 379, 214, 204, 190, 401, 425, 211,
	382, 0, 0, 459, 192, 423, 398, 311, 280, 281,
	191, 0, 363, 234, 255, 224, 330, 420, 421, 223,
	460, 201, 440, 194, 0, 439, 323, 416, 424, 312,
	303, 193, 422, 310, 302, 286, 245, 266, 357, 296,
	358, 267, 319, 318, 320, 0, 188, 0, 395, 433,
	461, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 334, 356, 354, 360, 0, 411, 428,
	436, 443, 449, 450, 452, 453, 454, 455, 456, 322,
	269, 391, 285, 294, 0, 0, 340, 372, 212, 431,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 80, 361, 252, 458, 438, 434, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 324, 325, 326, 329, 332, 333,
	336, 338, 339, 342, 349, 350, 351, 352, 353, 355,
	362, 366, 374, 375, 376, 377, 378, 380, 381, 385,
	386, 387, 388, 396, 400, 418, 419, 430, 442, 447,
	261, 426, 448, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 437, 397, 200, 368, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 315, 344, 348, 258, 237,
	216, 365, 213, 383, 403, 404, 405, 407, 313, 232,
	347, 72, 408, 297, 409, 410, 271, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 81, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 80, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 1533, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 1531, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 819, 284, 182, 198, 817, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 1533, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	1132, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 2245, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 1786, 0, 0,
	1787, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 1175, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 2354, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 2245, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 81, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 408, 0, 297, 409, 410, 271, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 345, 0, 187, 0, 384, 221, 298, 295,
	415, 247, 239, 235, 220, 272, 304, 343, 402, 337,
	0, 292, 0, 0, 393, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 328, 394, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 412, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 317, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 327, 367, 373,
	0, 0, 0, 222, 0, 371, 341, 429, 206, 249,
	364, 346, 369, 0, 0, 370, 293, 417, 359, 427,
	445, 446, 229, 321, 435, 406, 441, 457, 199, 226,
	335, 399, 432, 390, 314, 413, 414, 283, 389, 257,
	185, 291, 451, 197, 379, 214, 204, 190, 401, 425,
	211, 382, 0, 0, 459, 192, 423, 398, 311, 280,
	281, 191, 0, 363, 234, 255, 224, 330, 420, 421,
	223, 460, 201, 440, 194, 0, 439, 323, 416, 424,
	312, 303, 193, 422, 310, 302, 286, 245, 266, 357,
	296, 358, 267, 319, 318, 320, 0, 188, 0, 395,
	433, 461, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 334, 356, 354, 360, 0, 411,
	428, 436, 443, 449, 450, 452, 453, 454, 455, 456,
	322, 269, 391, 285, 294, 0, 0, 340, 372, 212,
	431, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 361, 252, 458, 438, 434,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 349, 350, 351, 352, 353,
	355, 362, 366, 374, 375, 376, 377, 378, 380, 381,
	385, 386, 387, 388, 396, 400, 418, 419, 430, 442,
	447, 261, 426, 448, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 437, 397, 200, 368, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 315, 344, 348, 258,
	237, 216, 365, 213, 383, 403, 404, 405, 407, 313,
	232, 347, 0, 408, 297, 409, 410, 271, 1574, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 1154, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 1416, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1297, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1295, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1293, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1291, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1289, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1285, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1283, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 1281, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 1256,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 1159, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 996, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 534, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 482, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 408, 0, 297, 409, 410, 271, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 345, 0, 187, 0, 384, 221, 298,
	295, 415, 247, 239, 235, 220, 272, 304, 343, 402,
	337, 0, 292, 0, 0, 393, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 328, 394, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 412, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 317, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 327, 367,
	373, 0, 0, 0, 222, 0, 371, 341, 429, 206,
	249, 364, 346, 369, 0, 0, 370, 293, 417, 359,
	427, 445, 446, 229, 321, 435, 406, 441, 457, 199,
	226, 335, 399, 432, 390, 314, 413, 414, 283, 389,
	257, 185, 291, 451, 197, 379, 214, 204, 190, 401,
	425, 211, 382, 0, 0, 459, 192, 423, 398, 311,
	280, 281, 191, 0, 363, 234, 255, 224, 330, 420,
	421, 223, 460, 201, 440, 194, 0, 439, 323, 416,
	424, 312, 303, 193, 422, 310, 302, 286, 245, 266,
	357, 296, 358, 267, 319, 318, 320, 0, 188, 0,
	395, 433, 461, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 334, 356, 354, 360, 0,
	411, 428, 436, 443, 449, 450, 452, 453, 454, 455,
	456, 322, 269, 391, 285, 294, 0, 0, 340, 372,
	212, 431, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 361, 252, 458, 438,
	434, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 349, 350, 351, 352,
	353, 355, 362, 366, 374, 375, 376, 377, 378, 380,
	381, 385, 386, 387, 388, 396, 400, 418, 419, 430,
	442, 447, 261, 426, 448, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 437, 397, 200, 368, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 315, 344, 348,
	258, 237, 216, 365, 213, 383, 403, 404, 405, 407,
	313, 232, 347, 0, 0, 297, 409, 410, 271,
}

var yyPact = [...]int{
	4071, -1000, -340, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1652, 1687, -1000, -1000, -1000, -1000, 1784,
	-1000, 647, 1440, -1000, 1673, 2781, -1000, 31736, 470, -1000,
	31236, 468, 2369, 31736, -1000, 146, -1000, 128, 31736, 138,
	30736, -1000, -1000, -258, 13733, 1607, 29, 26, 31736, -1000,
	1770, 1444, -1000, 258, -1000, -1000, -1000, -1000, -1000, -1000,
	30236, -1000, -1000, -1000, 1682, 1649, 1790, 587, 1602, -1000,
	1703, 1444, -1000, 13733, 1757, 1716, 12233, -1000, 12233, 397,
	-1000, -1000, 9726, -1000, -1000, 18735, 31736, 31736, 208, -1000,
	1673, -1000, -1000, 322, -1000, 295, 1349, -1000, 1347, -1000,
	561, 444, 326, 389, 388, 325, 318, 317, 316, 311,
	303, 300, 299, 333, -1000, 638, 638, -156, -158, 3842,
	387, 387, 387, 411, 1628, 1625, -1000, 562, -1000, 638,
	638, 320, 638, 638, 638, 638, 271, 265, 638, 638,
	638, 638, 638, 638, 638, 638, 638, 638, 638, 638,
	638, 638, 638, 257, 1673, 261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31736, 168, 31736, -1000, 563, 31736, 728, 728, 52, 728,
	728, 728, 728, 145, 540, 25, -1000, 132, 264, 116,
	245, 738, 173, 106, -1000, -1000, 230, 738, 1048, 599,
	122, -1000, 728, 7694, 7694, 7694, -1000, 1654, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 408, -1000, -1000, -1000,
	-1000, 31736, 29736, 270, 661, -1000, -1000, -1000, 129, -1000,
	-1000, 1195, 966, -1000, 13733, 2478, 1383, 1383, -1000, -1000,
	566, -1000, -1000, 15233, 15233, 15233, 15233, 15233, -1000, 15233,
	15233, 15233, 15233, 15233, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1383, 556,
	-1000, -1000, 1383, 1383, 1383, 1383, 1383, 1383, 1383, 1383,
	13733, 1383, 1383, 1383, 1383, 1383, 1383, 1383, 1383, 1383,
	1383, 1383, 1383, 1383, 1383, 1383, 1383, 1383, 1383, -1000,
	-1000, 11233, -1000, 31736, -1000, 1383, 156, 1703, 1444, -1000,
	1770, 1734, 258, -1000, 1708, 1152, 1146, 968, 1444, 1324,
	31736, -1000, 1402, -1000, -1000, -1000, 1564, 952, 1046, -1000,
	-1000, -1000, -1000, 1165, 13733, -1000, -1000, 1781, -1000, 16733,
	554, 785, 1779, 29236, -1000, 397, 397, 1346, 9218, 3,
	-1000, -1000, -1000, 657, 20735, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1654, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1320, 31736, -1000, -1000, 4509, 958, -1000, 1438,
	-1000, 1318, -1000, 1405, 1447, 465, 958, 457, 454, 445,
	-1000, -79, -1000, -1000, -1000, -1000, -1000, 638, 638, 324,
	2781, 3731, -1000, -1000, -1000, 28736, 1437, 958, -1000, 1420,
	-1000, 711, 448, 507, 507, 958, -1000, -1000, 31736, 958,
	709, 706, 31736, 31736, -1000, 28236, -1000, 27736, 27236, 920,
	31736, 26736, 26236, 25736, 25236, 24736, -1000, 1503, -1000, 1419,
	-1000, -1000, -1000, 31736, 31736, 31736, 240, -1000, -1000, 31736,
	958, -1000, -1000, 915, 906, 638, 638, 903, 1037, 1029,
	1024, 638, 638, 902, 1023, 22735, 205, 890, 888, 873,
	924, 1022, 176, 911, 896, 867, 31736, 1414, 31736, -1000,
	222, 639, 313, 646, 1673, 1604, 1330, 404, 464, 958,
	391, 391, -1000, 8202, -1000, -1000, 1018, 13733, -1000, 760,
	738, 738, -1000, -1000, -1000, -1000, -1000, -1000, 728, 31736,
	760, -1000, -1000, -1000, 738, 728, 31736, 728, 728, 728,
	728, 738, 738, 738, 728, 31736, 31736, 31736, 31736, 31736,
	31736, 31736, 31736, 31736, 7694, 7694, 7694, 599, 728, -264,
	-1000, 998, -1000, 1507, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -68, 1329, 24236, -1000, -266, -269, -270, -271,
	-1000, -1000, -1000, -273, -274, -1000, -1000, -1000, 13733, 13733,
	13733, 13733, 807, 610, 15233, 809, 616, 15233, 15233, 15233,
	15233, 15233, 15233, 15233, 15233, 15233, 15233, 15233, 15233, 15233,
	15233, 15233, 707, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 958, -1000, 1345, 1345, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 15733, 10232, 8202, 12233, 12233, 13733,
	13733, 13233, 12733, 12233, 1635, 651, 966, 31736, -1000, 968,
	-1000, -1000, 14733, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31736, 31736, 57, 12233, 12233,
	12233, 12233, 12233, 1176, 1145, 1315, -1000, 1328, -1000, -141,
	18235, 13733, 988, -1000, -1000, -1000, 1703, -1000, 1703, 1176,
	1698, 1567, 12233, -1000, -1000, 1698, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1112, -1000, 31736, 1324, 1701, 31736,
	1561, 986, 240, -1000, 13733, 13733, 1323, -1000, 882, 31736,
	-1000, -1000, 23736, -1000, -1000, 7186, -1000, 31736, 296, 31736,
	-1000, 22235, 23236, 8710, 3, -1000, 8710, 1244, -1000, -1,
	-37, 10732, 514, -1000, -1000, -1000, 3842, 16233, 1183, 1615,
	75, -1000, -1000, -1000, 1405, -1000, 1405, 1405, 1405, 1405,
	240, 240, 240, 240, -1000, -1000, -1000, -1000, -1000, 1413,
	1412, -1000, 1405, 1405, 1405, 1405, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1410, 1410, 1410, 1406, 1406, 369, -1000,
	13733, 193, 31736, 1681, 863, 222, 395, 1461, 958, 958,
	958, 395, -1000, 1017, 1005, -1000, 1322, -1000, -1000, 1751,
	-1000, -1000, 712, 737, 724, 601, 31736, 161, 294, -1000,
	361, -1000, 31736, 958, 702, 507, 958, -1000, 958, -1000,
	-1000, -1000, -1000, 539, -1000, -1000, 958, 1302, -1000, 1262,
	783, 723, 740, 720, 1302, -1000, -1000, -105, 1302, -1000,
	1302, -1000, 1302, -1000, 1302, -1000, 1302, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 621, 31736, 161, 707, -1000,
	402, -1000, -1000, 707, 707, -1000, -1000, -1000, -1000, 985,
	982, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -319, 31736,
	-1000, 200, 644, 278, 321, 259, 31736, 216, 1706, 218,
	260, 31736, 31736, 391, 1487, 31736, 1689, 31736, -1000, -1000,
	-1000, -1000, 966, 31736, -1000, -1000, 728, 728, -1000, -1000,
	31736, 728, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	728, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31736, 31736,
	-1000, -1000, -1000, -1000, -1000, 233, -22, 220, -1000, -1000,
	-1000, -1000, -1000, 1711, -1000, 966, 610, 660, 668, -1000,
	-1000, 812, -1000, -1000, 2356, -1000, -1000, -1000, -1000, 809,
	15233, 15233, 15233, 1061, 2356, 2087, 1074, 1327, 568, 798,
	798, 581, 581, 581, 581, 581, 913, 913, -1000, -1000,
	-1000, -1000, 968, -1000, -1000, -1000, 968, 12233, 12233, 1296,
	-1000, 1383, 536, -1000, 1259, 1259, 951, 901, 669, 1778,
	1259, 648, 1777, 1259, 1259, 12233, -1000, -1000, 682, -1000,
	13733, 968, -1000, 1368, 1274, 1265, 1776, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1259, 968,
	968, 1259, 1259, 968, -1000, 31736, -1000, -255, -1000, -42,
	546, 1383, -1000, 22735, 968, 1195, -1000, -1000, -1000, -1000,
	-1000, 20235, 1370, 1698, -1000, -1000, 1383, 1305, -1000, -1000,
	240, 59, 771, 966, 966, 13733, -1000, -1000, -1000, -1000,
	-1000, -1000, 534, 1768, 341, 1383, -1000, 1224, 1521, -1000,
	-1000, -1000, 1700, 17735, 31736, 1376, 1361, -1000, 523, -1000,
	1244, 3, -40, -1000, -1000, -1000, -1000, 966, -1000, 874,
	298, 3071, -1000, 380, -1000, -1000, -1000, -1000, 704, 1699,
	1613, 58, -1000, -1000, -1000, 240, 240, -1000, -1000, 514,
	514, 514, 514, 978, 978, -1000, -1000, -1000, -1000, -1000,
	862, -1000, -1000, -1000, 850, -1000, -1000, 1212, 1471, 193,
	-1000, -1000, 638, 976, 1619, 31736, -1000, -1000, 1114, 200,
	31736, 678, 1486, -1000, 1461, 1461, 1461, 31736, -1000, -1000,
	-1000, -1000, 352, 31736, 1293, -1000, 154, -1000, 1108, 31736,
	-1000, 1291, 1409, 958, 958, -1000, -1000, 8202, -1000, 31736,
	1383, -1000, -1000, -1000, -1000, 463, 1672, 1659, 161, 154,
	514, 958, -1000, -1000, -1000, -1000, -1000, -322, 1287, 424,
	194, 202, 31736, 31736, 31736, 31736, 31736, 486, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 272, 400, -1000, 31736,
	31736, 500, -1000, -1000, -1000, 738, -1000, -1000, 738, -1000,
	-1000, -1000, -1000, -1000, 1650, 31736, -23, -295, -1000, -292,
	-1000, -1000, -1000, -1000, 1061, 2356, 2016, -1000, 15233, 15233,
	-1000, -1000, 1259, 1259, 12233, 12233, 8202, -1000, -1000, 293,
	707, 293, 15233, 15233, -1000, 15233, 15233, -1000, -98, 1143,
	670, -1000, 13733, 963, -1000, -1000, 15233, 15233, 13733, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 440, 436,
	435, 31736, -1000, -1000, 1713, -1000, 1577, 1574, 1775, 1768,
	-1000, 22235, 1698, -1000, -1000, 31736, -249, -1000, 1600, 1580,
	-1000, -1000, -1000, -1000, 6678, 1703, 13733, 1484, 31736, 1383,
	-1000, 17234, 31736, 31736, 22235, 22235, 22235, 22235, 22235, -1000,
	1530, 1519, -1000, 1550, 1548, 1549, 31736, -1000, 1257, 968,
	1734, 17735, 19235, 1154, 22235, -1000, -1000, 22235, 31736, 6170,
	-1000, -1000, -31, -33, -1000, -1000, -1000, -1000, 1741, 3842,
	-1000, -1000, -1000, -1000, 779, 15233, 1789, -1000, 959, -1000,
	-1000, 700, 696, -1000, 31736, 1408, -1000, -1000, -1000, 514,
	514, -1000, -1000, -1000, -1000, 1255, -1000, 1242, 1232, 1238,
	97, -1000, 1446, 1643, 638, 638, -1000, 841, -1000, 958,
	-1000, -1000, 416, -1000, 1688, 31736, 1483, 1482, 1478, -1000,
	1740, 1208, 31736, -1000, -1000, 31736, -1000, 1573, 193, 31736,
	-1000, -1000, -1000, -1000, 294, 31736, -1000, 1345, 154, -1000,
	-1000, -1000, -1000, -1000, -1000, 31736, 246, -1000, 1407, 954,
	-1000, 1456, -1000, -1000, -1000, -1000, 152, 277, -1000, 31736,
	493, 1471, 31736, -1000, -1000, -1000, 728, 728, -1000, -1000,
	1642, -1000, 958, -1000, 15233, 2356, 2356, -1000, -1000, -1000,
	968, -1000, 968, 1405, 1405, -1000, 1405, 1406, -1000, 1405,
	124, 1405, 121, 968, 968, 3255, 2990, 2500, 2324, 1383,
	-86, -1000, 966, 13733, 1892, 1275, 1193, 1383, 1383, 1383,
	1181, 31736, -1000, -1000, -1000, -1000, 1768, 1765, 1215, -1000,
	-1000, 59, 323, -1000, 1592, 1580, -1000, 1739, 1596, 1738,
	-1000, -1000, -1000, 966, -1000, 1676, 1178, -1000, 627, 1192,
	-1000, -1000, 11733, 1234, 1572, 505, 1181, 1222, 1521, 1454,
	1477, 1473, -1000, -1000, -1000, -1000, 1518, -1000, 1481, -1000,
	-1000, 1402, -1000, -1000, 1145, 296, 22235, 1219, 1219, -1000,
	503, -1000, -1000, -1000, -1000, -331, -1000, -1000, 2356, 127,
	-1000, -1000, -1000, 1404, 15233, -1000, -1000, 240, 949, 240,
	830, -1000, 826, -1000, -1000, -196, -1000, -1000, 1382, 1501,
	-1000, -1000, 31736, -1000, -1000, 31736, 31736, 31736, 31736, -1000,
	-1000, 286, -1000, 1174, 1162, -1000, -153, -1000, -1000, 1402,
	-1000, -1000, -1000, 1089, -1000, -107, 31736, 31736, 31736, 31736,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2356, -1000,
	-1000, -1000, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15233, 15233, 15233, 15233, 15233, 1703, 948, 966, 15233,
	15233, -1000, 19735, 21735, 21735, 19235, -1000, 1765, 1762, 1736,
	1587, 1590, 1590, 1592, -1000, 1732, 1728, -1000, 946, 1726,
	938, 683, -1000, 31736, 13733, 1383, -1000, 279, 31736, 1383,
	31736, -1000, 1760, -1000, -1000, 13733, 1403, -1000, 13733, -1000,
	-1000, -1000, -1000, -1000, 1768, 1219, -1000, -1000, 515, 55,
	263, -1000, -1000, -1000, -1000, 31736, 1422, 514, -1000, 514,
	1086, 1084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1402, -1000, -1000, -1000, 1208, 283, 329, -1000, 294, -1000,
	-160, -162, 1695, -1000, -1000, 8202, -1000, -1000, 1401, 1460,
	-1000, -1000, -1000, 1368, 1368, 1368, 1368, 171, 968, -1000,
	1368, 1368, 1158, -1000, -1000, -1000, 1158, 1158, 546, 1762,
	-1000, 13733, 13733, 1581, 796, -1000, -1000, -1000, -1000, 927,
	923, -1000, 914, -1000, 1788, -1000, 966, -1000, 1383, -1000,
	501, 1192, -1000, 1703, 966, 31736, 966, 1760, -1000, 1399,
	1387, -325, 13733, 1397, 1129, -1000, -1000, -1000, -1000, -1000,
	1693, 1383, -1000, -1000, -1000, -1000, 258, 1197, -1000, 620,
	31736, 31736, -1000, -1000, -1000, -1000, 968, 206, -110, -1000,
	-1000, -1000, 21235, -1000, -1000, -1000, -1000, -1000, 966, 1195,
	-1000, 775, -1000, -1000, -1000, -1000, -1000, 31736, 1192, 31736,
	-1000, 1106, 1703, 13733, 1375, 619, -330, 808, 1168, 31736,
	1476, 511, 258, 14233, -106, 8202, 5662, 1104, -1000, -1000,
	1560, -103, -119, -1000, -1000, -1000, -1000, 1062, -1000, -1000,
	-1000, 1036, 31736, 797, 1372, 1718, -1000, -1000, 1098, 1472,
	-1000, 1773, -1000, -1000, -1000, 777, 814, -1000, -1000, -1000,
	-106, 1368, 968, -1000, -7, -1000, -1000, -1000, -1000, -1000,
	1456, -1000, 1535, -1000, -325, 1067, -1000, -1000, 294, -328,
	-1000, -1000, 1787, 499, 499, -1000, -1000, -1000, -1000, -1000,
	363, -1000, -1000, -107, -108, -330, -325, 1060, 47, -1000,
	-1000, -1000, 343, 849, -1000, 203, -1000, -111, 1372, -330,
	-1000, 1373, 1387, -1000, -1000, -1000, -1000, -151, -1000, 1372,
	13733, 1359, -1000, -1000, 912, 31736, -336, 1058, -1000, 792,
	-336, -1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2078, 6, 1, 4, 2077, 57, 73, 162,
	19, 166, 83, 2075, 2074, 2073, 2071, 171, 169, 165,
	2070, 2069, 2068, 2067, 2066, 2065, 2064, 2062, 2060, 2059,
	167, 138, 158, 2056, 2055, 2054, 101, 145, 60, 62,
	150, 2053, 2050, 47, 2045, 2044, 2031, 155, 154, 647,
	2028, 152, 88, 2027, 2025, 2024, 2023, 2022, 2021, 2020,
	2019, 2018, 2017, 2016, 2015, 2013, 2008, 259, 2007, 2006,
	10, 2005, 45, 2004, 2003, 2002, 2001, 2000, 5, 1999,
	1996, 1995, 1994, 117, 1993, 1991, 1990, 160, 1988, 1985,
	90, 222, 85, 99, 1984, 1983, 74, 156, 1982, 96,
	125, 1981, 1978, 3, 84, 64, 1977, 86, 75, 1970,
	40, 1966, 1965, 93, 1964, 1963, 1962, 72, 1961, 1960,
	3550, 1959, 67, 109, 32, 33, 1958, 1957, 1956, 1955,
	55, 568, 1954, 1952, 38, 1951, 1950, 170, 1949, 114,
	22, 1948, 27, 24, 23, 1947, 115, 1946, 28, 52,
	1942, 122, 1941, 1939, 36, 30, 25, 1938, 20, 110,
	126, 16, 76, 116, 1937, 1933, 42, 49, 1932, 1929,
	1928, 1927, 1924, 1922, 43, 1919, 37, 1918, 174, 1917,
	13, 34, 56, 44, 63, 41, 29, 1915, 153, 1911,
	35, 136, 105, 133, 1909, 1908, 1900, 159, 186, 1897,
	1893, 50, 142, 119, 123, 1888, 195, 1887, 1886, 80,
	1398, 1866, 31, 140, 1883, 1882, 2719, 94, 121, 39,
	1880, 92, 1878, 1877, 1875, 161, 141, 78, 855, 89,
	1874, 1871, 1870, 1868, 1864, 1863, 1862, 148, 79, 65,
	130, 46, 1861, 1860, 1859, 102, 77, 1858, 132, 127,
	104, 135, 1857, 143, 128, 100, 1855, 82, 1854, 1853,
	1852, 1851, 71, 1850, 1849, 1848, 1847, 137, 120, 98,
	70, 1846, 66, 95, 124, 118, 11, 2, 21, 146,
	12, 1830, 8, 0, 1828, 14, 144, 185, 139, 1826,
	1824, 7, 1821, 15, 1820, 1814, 113, 1809, 1807, 1806,
	18, 26, 17, 1804, 1802, 2831, 2447, 112, 1801, 163,
}

//line sql.y:5755
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 303, 304, 304, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 283, 283, 283, 286, 286,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 307, 307, 115,
	115, 113, 113, 114, 114, 183, 183, 20, 21, 21,
	193, 193, 192, 192, 192, 194, 194, 194, 194, 228,
	228, 22, 22, 22, 22, 22, 88, 88, 285, 285,
	284, 282, 282, 281, 281, 280, 34, 35, 44, 44,
	44, 44, 45, 46, 287, 287, 258, 50, 50, 49,
	49, 49, 49, 51, 51, 48, 48, 47, 47, 260,
	260, 247, 247, 259, 259, 259, 259, 259, 259, 259,
	246, 246, 102, 102, 164, 164, 164, 164, 164, 164,
	164, 164, 299, 299, 165, 165, 165, 165, 165, 165,
	300, 300, 300, 300, 230, 230, 230, 230, 233, 233,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 232,
	232, 232, 232, 232, 234, 234, 234, 234, 234, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 236, 236, 236, 236, 236, 236,
	236, 236, 245, 245, 237, 237, 240, 240, 241, 241,
	241, 242, 242, 242, 243, 243, 238, 238, 238, 238,
	239, 239, 239, 248, 272, 272, 271, 271, 269, 269,
	269, 269, 257, 257, 266, 266, 266, 266, 266, 256,
	256, 252, 252, 252, 253, 253, 254, 254, 251, 251,
	255, 255, 268, 268, 267, 249, 249, 250, 250, 274,
	301, 301, 301, 301, 302, 302, 275, 292, 293, 291,
	291, 291, 291, 291, 72, 72, 72, 205, 205, 205,
	264, 264, 263, 263, 263, 265, 265, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 200, 200, 200, 290, 290,
	290, 290, 290, 290, 289, 289, 289, 261, 261, 261,
	288, 288, 52, 52, 149, 149, 41, 41, 41, 41,
	41, 41, 40, 40, 40, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 42, 42, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 76, 76,
	76, 76, 78, 78, 78, 277, 277, 1, 1, 5,
	5, 2, 2, 77, 77, 3, 3, 4, 4, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 244, 244, 244, 276, 276, 278, 278, 24, 33,
	33, 25, 25, 25, 25, 26, 26, 53, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 294, 294, 199, 199,
	207, 207, 198, 198, 221, 221, 221, 201, 201, 201,
	202, 202, 298, 298, 298, 55, 55, 57, 57, 58,
	59, 59, 223, 223, 224, 224, 60, 61, 73, 73,
	73, 73, 73, 73, 75, 75, 75, 14, 14, 14,
	14, 69, 69, 69, 13, 13, 56, 56, 63, 295,
	295, 296, 297, 297, 297, 297, 64, 66, 27, 27,
	27, 27, 27, 27, 95, 95, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 89, 89,
	89, 84, 84, 308, 67, 68, 68, 87, 87, 87,
	81, 81, 81, 86, 86, 86, 92, 92, 94, 94,
	94, 94, 94, 96, 96, 96, 96, 96, 96, 96,
	91, 91, 93, 93, 93, 93, 214, 214, 214, 213,
	213, 104, 104, 106, 105, 105, 107, 107, 108, 108,
	108, 147, 123, 123, 181, 181, 180, 180, 182, 182,
	182, 182, 184, 184, 109, 109, 109, 109, 110, 110,
	111, 111, 112, 112, 222, 222, 219, 219, 219, 218,
	218, 116, 116, 116, 118, 117, 117, 117, 117, 119,
	119, 121, 121, 120, 120, 122, 124, 124, 124, 124,
	124, 125, 125, 103, 103, 103, 103, 103, 103, 103,
	103, 196, 196, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 138, 138, 138, 138, 138,
	138, 128, 128, 128, 128, 128, 128, 128, 90, 90,
	139, 139, 139, 146, 140, 140, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 135, 135, 135, 135, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 309, 309, 137,
	136, 136, 136, 136, 136, 136, 136, 85, 85, 85,
	85, 85, 227, 227, 227, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 152, 152,
	82, 82, 150, 150, 151, 153, 153, 148, 148, 148,
	130, 130, 130, 130, 130, 130, 130, 130, 132, 132,
	132, 154, 154, 155, 155, 156, 156, 158, 157, 157,
	159, 160, 160, 160, 161, 161, 162, 162, 162, 43,
	43, 43, 43, 43, 38, 38, 38, 38, 39, 39,
	39, 97, 97, 97, 97, 99, 99, 98, 98, 70,
	70, 71, 71, 71, 100, 100, 101, 101, 101, 101,
	178, 178, 163, 163, 163, 170, 170, 170, 166, 166,
	168, 168, 168, 169, 169, 169, 167, 175, 175, 177,
	177, 176, 176, 172, 172, 173, 173, 174, 174, 174,
	171, 171, 129, 129, 129, 129, 129, 179, 179, 179,
	179, 185, 185, 142, 142, 144, 144, 143, 145, 186,
	186, 190, 187, 187, 191, 191, 191, 191, 191, 188,
	188, 189, 189, 215, 215, 215, 195, 195, 206, 206,
	203, 203, 204, 204, 197, 197, 208, 208, 208, 65,
	141, 141, 273, 273, 270, 211, 211, 212, 212, 216,
	216, 220, 220, 217, 217, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 305, 306, 225, 226,
	226, 226,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 3, 4, 2,
	3, 2, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 10,
	11, 7, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 1, 1, 3, 4, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 8, 8, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 2,
	4, 5, 4, 4, 4, 4, 4, 3, 3, 3,
	5, 2, 3, 3, 3, 3, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 3, 3, 7, 0, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -303, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 164, -45, -35, 165, -46, 167, 166,
	202, 168, 195, 72, 242, 243, 245, 246, 247, 248,
	-75, 200, 201, 170, 34, 43, 31, 32, 35, 173,
	-9, -30, 6, -305, 9, 366, 197, 196, 26, -11,
	379, 83, -304, 513, -178, -163, 20, 31, 27, -162,
	-158, -87, -163, 18, 16, 5, -67, -308, -67, -67,
	10, 11, -67, -258, -260, 83, 137, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -279, -40, -37,
	169, 166, 210, 106, 107, 202, 203, 204, 168, 186,
	201, 205, 200, 219, -36, 78, 31, 379, 382, -265,
	165, 171, 172, 367, 109, 108, 73, 167, -262, 292,
	483, -51, 485, 98, 100, 484, 42, 176, 486, 487,
	488, 489, 185, 490, 491, 492, 493, 499, 500, 501,
	502, 110, 5, -67, -220, -216, -283, -210, 86, 87,
	88, 376, 188, 410, 411, 235, 78, 39, 292, 483,
	242, 256, 250, 277, 269, 377, 412, 238, 189, 223,
	480, 267, 115, 485, 241, 413, 203, 297, 298, 299,
	98, 245, 334, 498, 240, 414, 496, 100, 484, 77,
	49, 42, 198, 265, 261, 486, 224, 415, 387, 217,
	109, 106, 505, 34, 259, 48, 28, 495, 108, 47,
	487, 128, 416, 488, 301, 282, 474, 46, 302, 204,
	417, 81, 381, 482, 303, 260, 304, 234, 494, 170,
	418, 466, 305, 306, 475, 419, 283, 287, 420, 326,
	307, 512, 50, 421, 422, 476, 107, 423, 76, 489,
	254, 255, 424, 232, 187, 328, 281, 185, 33, 308,
	378, 236, 56, 211, 329, 44, 285, 509, 43, 470,
	425, 473, 280, 276, 51, 426, 427, 428, 429, 490,
	279, 253, 275, 504, 229, 491, 60, 172, 289, 288,
	290, 218, 325, 272, 430, 431, 432, 192, 79, 433,
	262, 19, 434, 435, 309, 225, 436, 54, 437, 438,
	332, 201, 439, 52, 492, 37, 206, 506, 493, 440,
	441, 442, 443, 444, 311, 445, 310, 284, 286, 213,
	312, 380, 446, 258, 205, 497, 447, 193, 481, 207,
	210, 200, 333, 194, 448, 449, 450, 451, 452, 239,
	453, 454, 246, 499, 41, 455, 456, 457, 458, 233,
	228, 327, 336, 59, 80, 294, 459, 479, 252, 226,
	460, 243, 53, 500, 501, 502, 220, 503, 7, 510,
	511, 314, 110, 230, 231, 45, 273, 212, 461, 462,
	263, 264, 278, 251, 274, 244, 467, 214, 315, 202,
	463, 335, 227, 295, 384, 219, 316, 478, 383, 271,
	268, 221, 464, 317, 177, 215, 216, 465, 468, 318,
	319, 237, 320, 321, 322, 323, 324, 222, 382, 249,
	266, 296, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	175, -67, 175, -120, -216, 175, -188, 298, -207, 300,
	313, 308, 318, 306, -199, 309, 311, 213, -298, 326,
	175, 315, 164, 155, 301, 310, 319, 320, 237, 321,
	324, 222, -294, -283, 488, 503, 115, 270, 305, 303,
	327, 470, 323, 322, -216, 244, -223, 249, -211, -283,
	-210, 247, -120, -73, 466, 168, -225, -225, -89, 470,
	472, -140, -103, -126, 121, -131, 29, 24, -130, -127,
	-148, -145, -146, 155, 156, 158, 157, 159, 91, 144,
	145, 152, 122, 160, -135, -133, -134, -136, 90, 89,
	99, 92, 93, 94, 95, 102, 103, 104, -211, -216,
	-143, -7, 66, 67, 367, 368, 369, 370, 375, 371,
	124, 55, 343, 337, 346, 345, 344, 341, 342, 339,
	340, 373, 374, 101, 180, 338, 174, 150, 366, -283,
	-210, -305, 42, 314, 314, -120, -67, -156, -87, -158,
	-9, -7, -305, 6, -67, -7, -8, -12, -30, -32,
	406, -31, -216, -163, -178, 10, 139, 40, 48, -161,
	-162, -11, -7, -103, 17, 21, 22, -93, 146, -103,
	-216, -68, -93, -197, 179, -67, -67, -187, -228, 244,
	-191, 327, 326, -212, -189, -211, -209, -188, 325, 169,
	385, 120, 23, 25, 123, 155, 17, 124, 35, 171,
	270, 186, 154, 182, 367, 164, 70, 386, 339, 340,
	337, 343, 369, 370, 338, 300, 29, 11, 388, 26,
	196, 22, 36, 148, 166, 127, 199, 24, 197, 101,
	104, 391, 20, 73, 191, 12, 184, 38, 14, 392,
	393, 15, 180, 179, 139, 176, 68, 9, 160, 27,
	136, 64, 394, 117, 395, 396, 397, 398, 66, 137,
	18, 507, 341, 342, 31, 471, 399, 375, 208, 150,
	71, 57, 472, 121, 400, 401, 102, 402, 105, 74,
	477, 118, 16, 69, 40, 403, 209, 404, 181, 508,
	405, 330, 406, 138, 167, 366, 67, 407, 174, 313,
	6, 372, 30, 195, 183, 112, 65, 408, 175, 126,
	373, 374, 178, 103, 5, 116, 32, 10, 72, 75,
	344, 345, 346, 55, 111, 379, 125, 13, 409, 331,
	119, 115, -259, 137, -246, -250, -211, 190, -275, 186,
	-120, -268, -267, -211, -88, -206, 176, 184, 183, 116,
	-287, 118, 230, 338, 174, -47, -48, -188, 154, 207,
	84, 84, -250, -249, -248, -288, 209, 190, -274, -266,
	182, 191, -256, 183, 184, -251, 176, 117, -288, -251,
	181, 191, 209, 209, 110, 209, 110, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 206, -257, 129, -257,
	383, 383, -262, -288, -288, -288, 178, 33, 33, -208,
	-251, 178, 23, -257, -257, -188, 154, -257, -257, -257,
	-257, 217, 217, -257, -257, -257, -257, -257, -257, -257,
	-257, -257, -257, -257, -257, -257, -257, -257, 175, -287,
	-97, 324, 237, 78, -49, 219, -33, -120, -206, 176,
	177, -287, -120, 161, -120, -201, 137, 13, -201, -198,
	314, 312, 299, 304, -201, -201, -201, -201, 220, 297,
	-252, 176, 33, 187, 314, 220, 297, 220, 221, 220,
	221, 307, 317, 220, -221, 12, 139, 338, 302, 306,
	213, 175, 214, 177, 316, -283, 473, 221, -221, 90,
	-202, 137, 314, 216, -201, -226, -305, -212, 270, -226,
	-226, 30, 178, -211, -69, -211, 90, -14, -10, -18,
	-17, -19, 129, -95, 314, -83, 155, 488, 474, 475,
	476, 473, 311, 481, 479, 477, 220, 478, 84, 120,
	118, 119, 136, -103, -128, 139, 121, 137, 138, 123,
	141, 140, 151, 144, 145, 146, 147, 148, 149, 150,
	142, 143, 154, 129, 130, 131, 132, 133, 134, 135,
	-196, -305, -146, 162, 163, -131, -131, -131, -131, -131,
	-131, -131, -131, -131, -131, -305, 161, -305, -305, -305,
	-305, -305, -305, -305, -305, -152, -103, -305, -309, -305,
	-309, -137, -305, -309, -137, -309, -137, -309, -309, -137,
	-309, -137, -309, -309, -137, -305, -305, -305, -305, -305,
	-305, -305, -305, -7, -8, -140, -225, -295, -296, -123,
	-120, -305, 237, -161, -11, -7, -156, -162, -158, -7,
	-67, -81, -94, 61, 62, -96, 22, 36, 65, 63,
	21, -306, 85, -306, -178, -306, 84, -32, -181, 83,
	59, 41, 90, 90, 84, 19, -157, -159, -103, 12,
	-214, -213, 23, -211, 90, 161, 97, 12, -121, 27,
	-120, -197, -197, 84, 244, -191, -228, -193, -192, 328,
	330, 129, -215, -211, 90, 29, 85, 84, -120, -230,
	-233, -235, -234, -236, -231, -232, 267, 268, 155, 271,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	30, 198, 263, 264, 265, 266, 283, 284, 285, 286,
	287, 288, 289, 290, 250, 269, 377, 251, 252, 253,
	254, 255, 256, 258, 259, 260, 261, 262, -286, -283,
	83, 85, 84, -237, 83, -97, 175, -283, 176, 176,
	176, -67, 366, -257, -257, 206, -40, -37, -279, 16,
	-36, -37, 169, 106, 107, 166, 83, -246, 83, -255,
	-286, -283, 83, 117, 181, 116, -254, -251, -254, -255,
	-283, -148, -211, -216, -283, 117, 117, -184, -211, -184,
	-184, 21, -184, 21, -184, 21, 92, -211, -184, 21,
	-184, 21, -184, 21, -184, 21, -184, 21, 29, 76,
	77, 29, 79, 80, 81, -148, -148, -246, -188, -120,
	-283, 92, 92, -257, -257, 92, 90, 90, 90, -257,
	-257, 92, 90, -218, -216, 90, -289, 192, 234, 236,
	92, 92, 92, 92, 29, 90, -290, 29, 495, 494,
	496, 497, 498, 92, 29, 92, 29, 92, -211, 83,
	-120, -100, 224, 164, 166, 169, 74, 90, 238, 129,
	42, 84, 178, 175, -283, -203, 180, -203, -217, -216,
	-209, 90, -103, -253, 12, 139, -221, -221, -201, -120,
	-253, -221, -201, -120, -201, -201, -201, -201, -221, -221,
	-221, -201, -216, -216, -120, -120, -120, -120, -120, -120,
	-120, -226, -226, -226, -202, -201, 473, 90, 74, -224,
	247, 281, 467, 468, 469, 84, 379, -113, -120, 473,
	473, 473, 473, 473, 473, -103, -103, -103, -103, -138,
	102, 121, 103, 104, -131, -139, -143, -146, 96, 139,
	137, 138, 123, -131, -131, -131, -131, -131, -131, -131,
	-131, -131, -131, -131, -131, -131, -131, -131, -227, -283,
	90, 155, -283, -130, -130, -211, -92, 22, 36, -91,
	-93, -212, -217, -209, -91, -91, -103, -103, -148, 90,
	-91, -148, 90, -91, -91, -86, 22, 36, -150, -151,
	125, -148, -306, -131, -211, -211, -80, -79, 348, 349,
	350, 351, 353, 354, 355, 358, 359, 363, 364, 347,
	365, 352, 357, 360, 361, 362, 356, 266, -91, -92,
	-92, -91, -91, -178, -306, 84, -297, 330, 331, 471,
	-219, 209, -218, 23, -141, -140, 90, -161, -161, 61,
	62, 57, -91, -96, -306, -31, 23, -180, -211, 60,
	90, -238, -188, -103, -103, 84, -160, 25, 26, -120,
	-213, 146, -217, -120, -183, 209, -120, -105, -107, -108,
	-109, -123, -147, -305, 12, -113, -114, -122, -216, -191,
	-193, 84, 329, 331, 332, 74, 105, -103, -239, 154,
	-264, -263, -262, -246, -248, -249, -250, 85, -164, -102,
	38, -242, 295, 294, -237, -237, -237, -237, -237, -238,
	-238, -238, -238, 83, 83, -237, -237, -237, -237, -240,
	83, -240, -240, -241, 83, -241, -275, -103, -272, -271,
	-269, -270, 185, 98, 379, 75, -267, -160, 92, -100,
	-204, 180, -273, -270, -283, -283, -283, -204, -283, 90,
	-283, 90, 84, 17, -247, -246, -52, 234, -278, 209,
	-274, -268, -255, 117, -254, -255, -255, 161, -283, 84,
	27, 110, 110, 110, 110, 379, 166, 30, -246, -52,
	-227, 178, -227, -227, 90, 90, -200, 503, -113, -99,
	226, 129, 215, 215, 175, 175, 228, -120, 239, 241,
	240, 238, 21, 227, 229, 231, 217, -120, -120, -203,
	74, -115, -120, 24, -216, -120, -201, -201, -120, -201,
	-201, -120, -211, -83, 330, 84, 379, 20, -84, 20,
	102, 103, 104, -139, -131, -131, -131, -90, 199, 120,
	-306, -306, -91, -91, 84, -305, 161, -306, -306, 84,
	75, 23, 12, 12, -306, 12, 12, -306, -306, -91,
	-153, -151, 127, -103, -306, -306, 84, 84, 12, -306,
	-306, -306, -306, -306, -296, 470, 331, -124, 72, 179,
	73, -305, -218, -306, -132, -211, 92, 95, -163, -104,
	-106, 12, -96, -146, 85, 84, -238, -167, -172, -198,
	-283, 90, 155, -159, 161, -125, 13, -129, 30, 55,
	-10, -305, -305, 30, 84, -116, -118, -117, -119, 64,
	68, 70, 65, 66, 67, 71, -222, 23, -105, -8,
	-7, -305, -120, -113, -307, 12, 75, -307, 84, 161,
	-192, -194, 333, 330, 336, -283, 90, -76, 209, 84,
	-262, -250, -302, 102, 121, 29, 74, 292, 98, -300,
	-301, 181, 116, 117, 193, 23, 39, -243, 296, -238,
	-238, -239, -239, -239, -239, -245, 90, -245, 92, 92,
	85, -43, -38, -39, 31, 78, -269, -257, 90, 37,
	-211, 85, -99, -120, 121, 74, -273, -273, -273, -216,
	16, -180, 84, 85, -149, 235, 85, -211, 85, 83,
	-255, -255, -212, -211, -305, 175, 29, 29, -52, -149,
	-239, -283, 505, 504, 85, 177, 233, -101, 343, 90,
	86, -120, -120, -120, -120, -120, 169, 166, 218, 178,
	-113, -120, 84, -72, 194, 189, -221, -221, 31, -120,
	330, 482, 480, -90, 120, -131, -131, -306, -306, -93,
	-92, -212, -229, 155, 267, 198, 265, 261, 281, 272,
	294, 263, 295, -227, -229, -131, -131, -131, -131, 376,
	-156, 128, -103, 126, -131, -131, -103, 176, 176, 176,
	-184, -195, 20, 12, 55, 55, -104, -125, -105, -96,
	-211, -170, 466, -175, 44, -173, -174, 45, -171, 46,
	54, 146, -161, -103, -185, 74, -186, -190, -148, -142,
	-144, -143, -305, -179, -306, -211, -184, -186, -107, -108,
	-108, -107, -108, 64, 64, 64, 69, 64, 69, 64,
	-117, -216, -306, -306, -8, -219, 75, -105, -105, -122,
	-216, 146, 330, 334, 335, 17, -262, 102, -131, 10,
	90, 117, 117, -120, 83, -239, -239, 85, 84, 85,
	84, 85, 84, -205, 416, 121, -39, -38, -257, -257,
	92, -283, 177, 24, -120, 74, 74, 74, 17, -246,
	-148, 55, -272, -180, -276, -278, -120, -130, -149, -120,
	-98, 224, 232, 83, 87, -285, 75, 215, 292, 215,
	-120, -72, -43, -120, -201, -201, 31, -283, -131, -306,
	-306, -237, -237, -237, -241, -237, 255, -237, 255, -306,
	-306, 20, 20, 20, 20, -305, -82, 372, -103, 84,
	84, -306, -305, -305, -305, -306, -120, -125, -154, 14,
	-167, 49, 273, -177, -176, 53, 45, -174, 17, 47,
	17, 28, -185, 84, 129, 84, -306, -306, 84, 55,
	161, -306, -125, -111, -110, 74, 75, -112, 74, -110,
	64, 64, -181, -306, -183, -105, -125, -125, 161, -1,
	-2, 507, 508, 509, -134, 83, -131, -238, 90, -238,
	92, 92, 416, 29, 79, 80, 81, 29, 76, 77,
	-120, -120, -120, -120, -180, 211, 85, -306, 84, -244,
	379, 382, -181, 85, -282, 379, -284, -211, -211, -211,
	-211, -238, -283, -131, -131, -131, -131, -131, -161, 90,
	-131, -131, -182, -306, -211, 181, -182, -182, -219, -154,
	-155, 15, 17, -168, 51, -166, 50, -166, -176, 17,
	17, 90, 17, 90, 117, -190, -103, -144, 55, -10,
	-211, -142, -211, -156, -103, 83, -103, -125, -125, 512,
	117, -77, 83, 299, -180, 85, -239, -239, 85, 85,
	-181, 212, -301, -278, 383, 383, 23, -281, -280, -212,
	83, 75, -306, -306, -306, -306, -85, 139, 379, -306,
	-306, -306, 84, -306, -306, -306, -124, -155, -103, -140,
	-169, 52, 74, 105, 90, 90, 90, 10, -142, 161,
	-161, -180, -156, 83, -5, 78, -3, 506, -103, 83,
	85, -165, 23, -305, -10, 84, 129, -180, -120, -306,
	377, 71, 380, -211, 181, 74, 105, -186, -211, 85,
	-161, -103, 83, 129, -78, 510, 92, 85, -180, -292,
	-293, 74, -302, -299, 102, 121, 98, -300, 111, 112,
	-10, -131, 208, -70, 379, -280, -261, -212, 90, 92,
	85, 60, 378, 381, 85, -180, 92, -277, 83, 17,
	85, -293, 74, 11, 10, 102, 90, -70, -306, -306,
	-71, 223, 470, -285, 60, -3, 85, -276, -1, -291,
	194, 189, 192, 30, -291, 186, -282, 379, -78, -3,
	85, 512, 117, 188, 29, 102, 225, 380, -277, -78,
	83, -5, 381, -277, -103, 83, 85, -180, -4, 511,
	85, 92, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 623, 623, 623, 0,
	623, 0, 0, 623, -2, -2, 623, 1051, 0, 623,
	0, 0, -2, 556, 557, 0, 559, -2, 0, 0,
	568, 1498, 1498, 618, 0, 0, 0, 0, 0, 623,
	915, 45, 623, 0, 80, 81, 574, 575, 576, 60,
	0, 1496, 1, 3, 66, 70, 0, 0, 0, 53,
	924, 0, 73, 0, 0, 627, 0, 625, 0, 1034,
	623, 623, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 408, 369, 411, 367, 397,
	-2, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 262, 262, 0, 0, -2,
	360, 360, 360, 0, 0, 0, 394, 1036, 315, 262,
	262, 0, 262, 262, 262, 262, 0, 0, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 941, 143, 1052, 1049, 1050, 35, 36,
	37, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	0, 1028, 0, 486, 713, 0, 547, 547, 0, 547,
	547, 547, 547, 0, 0, 0, 498, 0, 0, 0,
	0, 544, 0, 0, 517, 519, 0, 544, 0, 550,
	0, 531, 547, 1499, 1499, 1499, 1019, 0, 541, 539,
	553, 554, 536, 537, 555, 558, 0, 563, 566, 1045,
	1046, 0, 581, 44, 1277, 573, 586, 587, 0, 619,
	620, 40, 764, 723, 0, 729, 731, 0, 766, 767,
	768, 769, 770, 0, 0, 0, 0, 0, 791, 0,
	0, 0, 0, 0, 797, 798, 799, 800, 900, 901,
	902, 903, 904, 905, 906, 907, 733, 734, 897, 0,
	1008, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 857, 857, 857, 857, 857, 857, 857, 857,
	857, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 1498, 0, 596, 0, 0, 924, 0, 916,
	915, 58, 0, 623, -2, 0, 0, 0, 0, 42,
	0, 47, 674, 72, 71, 960, 0, 0, 0, 54,
	925, 62, 64, 926, 0, 628, 629, 0, 652, 656,
	0, 624, 0, 0, 1035, 1034, 1034, 97, 0, 1441,
	1012, -2, -2, 0, 0, 1047, 1048, 1021, -2, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, -2, 0, 0, 153, 154, 0, 38, 288, 0,
	149, 0, 282, 234, 941, 0, 0, 0, 0, 0,
	623, 0, 1029, 134, 135, 141, 142, 262, 262, 0,
	143, 143, 376, 377, 378, 0, 0, -2, 286, 0,
	361, 0, 0, 276, 276, 280, 278, 279, 0, 0,
	0, 0, 0, 0, 388, 0, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 263, 0,
	406, 407, 316, 0, 0, 0, 0, 386, 387, 0,
	0, 1037, 1038, 0, 0, 262, 262, 0, 0, 0,
	0, 262, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	954, 0, 0, 0, -2, 0, 478, 0, 0, 0,
	1030, 1030, 485, 0, 487, 488, 0, 0, 489, 0,
	544, 544, 542, 543, 491, 492, 493, 494, 547, 0,
	0, 271, 272, 273, 544, 547, 0, 547, 547, 547,
	547, 544, 544, 544, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 1499, 1499, 550, 547, 0,
	527, 0, 528, 529, 532, 533, 1500, 1501, 1066, 534,
	535, 1020, 564, 567, 584, 582, 583, 585, 577, 578,
	579, 580, 0, 598, 599, 604, 0, 0, 0, 0,
	610, 611, 612, 0, 0, 615, 616, 617, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 752, 753, 754, 755, 756, 757,
	730, 0, 744, 0, 0, 786, 787, 788, 789, 790,
	792, 793, 794, 795, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 889, 0, 818, 0,
	819, 827, 0, 820, 828, 821, 829, 822, 823, 830,
	824, 831, 825, 826, 832, 0, 0, 0, 0, 636,
	636, 0, 0, 763, 0, 0, 41, 588, 589, 0,
	696, 1040, 0, 52, 61, 63, 924, 56, 924, 0,
	638, 0, 0, -2, -2, 639, 645, 646, 647, 648,
	649, 49, 1497, 50, 0, 69, 0, 43, 0, 0,
	0, 0, 246, 963, 0, 0, 917, 918, 921, 0,
	653, 657, 0, 659, 660, 0, 626, 0, 95, 0,
	712, 0, 0, 0, 1441, 1018, 0, 99, 100, 0,
	0, 0, 250, 1023, 1024, 1025, -2, 269, 0, -2,
	241, 185, 186, 187, 234, 189, 234, 234, 234, 234,
	246, 246, 246, 246, 217, 218, 219, 220, 221, 0,
	0, 204, 234, 234, 234, 234, 224, 225, 226, 227,
	228, 229, 230, 231, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 236, 236, 236, 238, 238, 0, 39,
	0, 254, 0, 921, 0, 954, 1032, 1042, 0, 0,
	0, 1032, 117, 0, 0, 409, 370, 398, 410, 0,
	373, 374, -2, 0, 0, 360, 0, 362, 0, 270,
	0, -2, 0, 280, 0, 276, 280, 277, 280, 268,
	281, 390, 897, 0, 391, 392, 0, 450, 682, 0,
	0, 0, 0, 0, 456, 457, 458, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 399, 400,
	401, 402, 403, 404, 405, 0, 0, 362, 0, 395,
	0, 317, 318, 0, 0, 321, 322, 323, 324, 0,
	0, 327, 328, 329, 699, 700, 330, 354, 355, 356,
	331, 332, 333, 334, 335, 336, 337, 348, 349, 350,
	351, 352, 353, 338, 339, 340, 341, 342, 345, 0,
	127, 945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 714, 1053,
	1054, 548, 549, 0, 274, 275, 547, 547, 495, 518,
	0, 547, 499, 520, 500, 502, 501, 503, 522, 523,
	547, 506, 545, 546, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 524, 525, 526, 551, 0, 0,
	565, 569, 570, 571, 572, 0, 0, 601, 91, 606,
	607, 608, 609, 621, 614, 765, 724, 725, 726, 728,
	745, 0, 747, 749, 735, 736, 760, 761, 762, 0,
	0, 0, 0, 758, 740, 0, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 785, 872,
	873, 874, 0, 783, 784, 796, 0, 0, 0, 637,
	650, 898, 0, -2, 0, 0, 0, 0, 768, 900,
	0, 768, 900, 0, 0, 0, 634, 635, 895, 892,
	0, 0, 858, 0, 0, 0, 0, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 0, 0,
	0, 0, 0, 0, 1007, 0, 591, 592, 594, 0,
	716, 0, 697, 0, 0, 1041, 597, 55, 57, 643,
	644, 0, 661, 640, 51, 46, 0, 0, 676, 961,
	246, 983, 0, 927, 928, 0, 920, 922, 923, 74,
	658, 654, 0, 721, 0, 0, 711, 0, 664, 666,
	667, 668, 694, 0, 0, 0, 0, 93, 713, 1013,
	98, 0, 0, 103, 104, 1014, 1015, 1016, 1017, 0,
	428, -2, 312, 155, 157, 158, 159, 150, 294, 0,
	0, 244, 242, 243, 188, 246, 246, 211, 212, 250,
	250, 250, 250, 0, 0, 205, 206, 207, 208, 199,
	0, 200, 201, 202, 0, 203, 287, 0, 929, 255,
	256, 258, 262, 0, 0, 0, 283, 284, 0, 945,
	0, 0, 0, 1043, 1042, 1042, 1042, 0, 145, 146,
	147, 148, 143, 0, 0, 151, 364, 363, 0, 0,
	285, 0, 0, 280, 280, 265, 266, 0, 393, 0,
	0, 452, 453, 454, 455, 0, 0, 0, 362, 364,
	250, 0, 319, 320, 325, 326, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 424,
	425, 426, 427, 942, 943, 944, 0, 0, 479, 0,
	0, 304, 89, 1031, 484, 544, 505, 521, 544, 497,
	504, 530, 561, 605, 0, 0, 0, 0, 613, 0,
	746, 748, 750, 737, 758, 741, 0, 738, 0, 0,
	732, 801, 0, 0, 0, 636, 0, 805, 806, 0,
	0, 0, 0, 0, 865, 0, 0, 866, 0, 915,
	0, 893, 0, 0, 817, 859, 0, 0, 0, 860,
	861, 862, 863, 864, 590, 593, 595, 672, 0, 0,
	0, 0, 698, 1039, 0, 908, 0, 0, 661, 721,
	662, 0, 641, 48, 675, 0, 965, 964, 977, 990,
	247, 248, 249, 919, 0, 924, 0, 1001, 0, 0,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 0, 704, 0, 0, 0, 0, 695, 0, 0,
	0, 0, -2, 0, 0, 87, 88, 0, 0, 0,
	101, 102, 0, 0, 108, 251, 252, 136, 0, 143,
	314, 156, 160, 165, 0, 0, 0, 169, 0, 171,
	295, 0, 181, 183, 0, 0, 163, 184, 245, 250,
	250, 213, 214, 215, 216, 0, 232, 0, 0, 0,
	307, 113, 933, 932, 262, 262, 257, 0, 260, 0,
	1044, 235, 0, 126, 0, 0, 0, 0, 0, 132,
	0, 368, 0, 379, 380, 0, 449, 0, 254, 0,
	264, 267, 898, 683, 0, 0, 381, 0, 364, 384,
	385, 396, 346, 347, 344, 0, 0, 955, 956, 0,
	959, 118, 416, 418, 417, 421, 0, 0, 414, 0,
	304, 929, 0, 483, 305, 306, 547, 547, 600, 92,
	0, 603, 0, 739, 0, 759, 742, 802, 803, 651,
	0, 899, 0, 234, 234, 878, 234, 238, 881, 234,
	883, 234, 886, 0, 0, 0, 0, 0, 0, 0,
	890, 816, 896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1026, 1027, 909, 910, 721, 911, 663, 642,
	677, 983, 0, 976, 0, -2, 985, 0, 0, 0,
	991, 655, 75, 722, 78, 0, 1001, 1009, 0, 992,
	1003, 1005, 0, 0, 0, 997, 0, 721, 665, 690,
	692, 0, 687, 702, 703, 705, 0, 707, 0, 709,
	710, 674, 670, 671, 0, 95, 0, 721, 721, 94,
	0, 715, 105, 106, 107, 437, 313, 166, 167, 0,
	170, 180, 182, 0, 0, 209, 210, 246, 0, 246,
	0, 239, 0, 296, 308, 0, 930, 931, 0, 0,
	259, 261, 0, 1033, 128, 0, 0, 0, 0, 152,
	365, 0, 253, 0, 0, 474, 471, 382, 383, 674,
	946, 947, 948, 0, 958, 121, 0, 0, 0, 0,
	480, 481, 482, 90, 490, 496, 602, 622, 743, 804,
	807, 875, 246, 879, 880, 882, 884, 885, 887, 809,
	808, 0, 0, 0, 0, 0, 924, 0, 894, 0,
	0, 835, 0, 0, 0, 696, 59, 911, 913, 0,
	970, 968, 968, 978, 979, 0, 0, 986, 0, 0,
	0, 0, 79, 0, 0, 0, 1006, 0, 0, 0,
	0, 96, 915, 684, 691, 0, 0, 685, 0, 686,
	706, 708, 669, -2, 721, 721, 85, 86, 0, 0,
	0, 438, 441, 442, 168, 0, 0, 250, 233, 250,
	0, 0, 309, 934, 935, 936, 937, 938, 939, 940,
	674, 129, 130, 131, 371, 0, 0, 451, 0, 459,
	0, 0, 0, 957, 415, 0, 119, 120, 0, 0,
	420, 876, 877, 0, 0, 0, 0, 867, 0, 891,
	0, 0, 0, 718, 678, 679, 0, 0, 716, 913,
	77, 0, 0, 973, 0, 966, 969, 967, 980, 0,
	0, 987, 0, 989, 0, 1010, 1011, 1004, 0, 996,
	999, 995, 998, 924, 688, 0, 693, 915, 84, 0,
	439, 445, 0, 0, 0, 174, 222, 223, 237, 240,
	0, 0, 289, 475, 472, 473, 0, 122, 123, 0,
	0, 0, 810, 812, 811, 813, 0, 0, 0, 815,
	833, 834, 0, 717, 719, 720, 673, 76, 914, 912,
	962, 0, 971, 972, 981, 982, 988, 0, 994, 0,
	82, 0, 924, 0, 0, 0, 432, 0, 0, 0,
	290, 294, 0, 0, 949, 0, 0, 0, 422, 814,
	0, 0, 0, 680, 681, 974, 975, 1002, 1000, 689,
	83, 0, 0, 0, 435, 0, 446, 443, 0, 291,
	292, 0, 161, 175, 176, 0, 0, 179, 172, 173,
	949, 0, 0, 412, 951, 124, 125, 357, 358, 359,
	118, 868, 0, 871, 445, 0, 440, 431, 0, 437,
	444, 293, 0, 0, 0, 177, 178, 114, 476, 477,
	0, 952, 953, 121, 869, 432, 445, 0, 0, 297,
	299, 300, 0, 0, 298, 0, 419, 0, 435, 432,
	436, 0, 439, 301, 302, 303, 950, 0, 429, 435,
	0, 0, 870, 430, 0, 0, 447, 0, 433, 0,
	447, 448, 434,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 122, 3, 3, 3, 149, 141, 3,
	83, 85, 146, 144, 84, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 513,
	130, 129, 131, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 123, 124, 125,
	126, 127, 128, 132, 133, 134, 135, 136, 137, 138,
	139, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:460
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:465
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:470
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:509
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:532
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:538
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:544
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:548
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:557
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:563
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:567
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:573
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:579
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:616
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:621
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:634
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:647
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:726
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:732
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:752
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:764
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:776
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:780
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:800
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:814
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:824
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:834
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:847
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:869
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:879
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:883
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:887
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:893
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:897
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:901
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:905
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:911
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:915
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:954
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:958
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:963
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:978
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:983
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:989
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1006
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1013
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1020
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1025
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1030
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1035
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1042
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1049
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1077
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1081
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1109
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1115
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1119
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1126
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1130
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1136
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1146
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1151
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1160
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1179
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1185
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1206
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1210
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1216
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1222
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1249
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1253
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1262
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1291
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1295
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1299
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1303
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1534
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1543
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1561
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1582
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1623
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1638
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1648
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1652
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1657
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1661
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1677
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1681
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1685
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1689
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1693
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = "key"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = ""
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1761
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1771
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1777
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1781
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1787
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1791
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1797
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1803
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1807
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1811
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1815
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1824
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1830
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1836
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1842
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1848
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1852
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1856
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1860
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1864
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1886
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1899
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1905
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1919
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1961
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1965
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1993
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1997
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2025
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2029
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2033
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2037
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2088
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2092
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2101
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2110
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2114
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2118
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2126
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2132
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2140
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2150
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2154
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2158
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2198
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2202
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2206
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2210
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2214
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2218
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2222
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2226
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2230
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2236
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2246
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2250
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2254
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2258
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2262
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2266
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2270
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2274
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2278
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2284
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2290
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2297
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2304
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2310
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2314
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2321
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2340
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2350
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2354
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2358
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2371
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2381
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2385
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2396
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2403
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2410
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2417
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2424
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2436
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2448
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2461
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2476
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2485
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2500
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = ""
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2534
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2538
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = ""
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2562
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2566
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2570
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2574
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2578
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2582
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2586
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2590
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2594
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2598
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2602
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2606
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2610
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2614
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2618
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2622
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2626
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2630
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2634
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2638
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2642
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2646
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2666
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 476:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2676
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2680
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2686
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2692
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2696
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 481:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2702
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2706
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2725
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2828
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2840
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2889
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2893
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2902
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2933
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2941
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = "extended "
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2987
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3005
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3009
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3019
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3025
		{
			yyVAL.empty = struct{}{}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.empty = struct{}{}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.empty = struct{}{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3043
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3053
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3065
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3074
		{
			yyVAL.empty = struct{}{}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.empty = struct{}{}
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3079
		{
			yyVAL.empty = struct{}{}
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.empty = struct{}{}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3097
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3101
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3105
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3109
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3113
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3117
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = yyDollar[1].str
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = yyDollar[1].str
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = ""
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3194
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3204
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3210
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3214
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3218
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3222
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3280
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3347
		{
			setAllowComments(yylex, true)
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3357
		{
			yyVAL.strs = nil
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = ""
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = SQLCacheStr
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3393
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3397
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3410
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3415
		{
			yyVAL.strs = nil
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3431
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = SQLCacheStr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = DistinctStr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = DistinctStr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = StraightJoinHint
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3467
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3477
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3481
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3485
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3489
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3494
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3514
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3518
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3524
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3530
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3548
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3552
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3558
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3564
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3568
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3577
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3583
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3593
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3597
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3605
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3611
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3628
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3632
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3636
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3640
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3648
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3658
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3663
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.empty = struct{}{}
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3668
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3676
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3689
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3693
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3697
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3703
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3709
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3713
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3717
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3721
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3727
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3731
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3766
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3770
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3774
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3778
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3782
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3797
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3801
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3805
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3813
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3817
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3821
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3825
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3841
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3845
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3851
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3855
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3859
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3863
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3867
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3893
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3897
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3901
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3905
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3909
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3913
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3919
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3923
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3927
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3931
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3935
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3939
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3943
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3958
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3962
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3966
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3973
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3979
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3983
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3989
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3993
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3997
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4001
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4005
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4009
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4013
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4017
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4021
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4025
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4029
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4033
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4037
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4041
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4045
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4053
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4057
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4061
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4065
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4069
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4073
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4085
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4093
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4097
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4127
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4131
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4135
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4139
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4149
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4153
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4157
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4165
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4169
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4173
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4177
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4181
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4201
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4211
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4215
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4219
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4234
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4245
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4263
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4268
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4277
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4281
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4293
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4297
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4301
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4305
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4309
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4313
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4317
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4321
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4325
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4329
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4333
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4339
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4343
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4347
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4351
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4355
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4359
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4363
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4367
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4371
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4415
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4421
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4425
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4429
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4433
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4437
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4457
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4461
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4465
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4469
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4473
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4477
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4483
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4487
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4491
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4495
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4499
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4503
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4507
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4516
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = string("")
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4531
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4541
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4550
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4556
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4560
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4564
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4570
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4574
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4578
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4618
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4628
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4646
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4652
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4658
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4662
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4668
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4673
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4677
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4681
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4690
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4696
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4700
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4704
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4713
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4717
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4721
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4725
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4732
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4736
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4740
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4744
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4750
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4754
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4758
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4784
		{
			yyVAL.str = yyDollar[3].str
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = ""
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = yyDollar[2].str
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = "cascaded"
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = ""
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = yyDollar[3].str
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4849
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4853
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4859
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4863
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4867
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = ""
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = ""
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = " header"
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.str = " manifest on"
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = " manifest off"
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4907
		{
			yyVAL.str = ""
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = " overwrite on"
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4915
		{
			yyVAL.str = " overwrite off"
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4926
		{
			yyVAL.str = ""
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.str = yyDollar[1].str
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4955
		{
			yyVAL.str = ""
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = yyDollar[1].str
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4988
		{
			yyVAL.str = ""
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.str = " optionally"
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5005
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5009
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5013
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5017
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5021
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5027
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5031
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5035
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5039
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5048
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5054
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5064
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5068
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5074
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5090
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5094
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5100
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5106
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5110
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5116
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5120
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5124
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5128
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5132
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.str = "charset"
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5174
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5187
		{
			yyVAL.empty = struct{}{}
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.empty = struct{}{}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5191
		{
			yyVAL.empty = struct{}{}
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5195
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5204
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5211
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5215
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5238
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5242
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5248
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5252
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			decNesting(yylex)
		}
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			skipToEnd(yylex)
		}
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			skipToEnd(yylex)
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5748
		{
			skipToEnd(yylex)
		}
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5752
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
