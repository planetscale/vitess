// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
	columnTypeOptions      *ColumnTypeOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPORARY = 57544
const TEMPTABLE = 57545
const INVOKER = 57546
const SECURITY = 57547
const FIRST = 57548
const AFTER = 57549
const LAST = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const RELEASE = 57557
const WORK = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const TIME = 57572
const TIMESTAMP = 57573
const DATETIME = 57574
const YEAR = 57575
const CHAR = 57576
const VARCHAR = 57577
const BOOL = 57578
const CHARACTER = 57579
const VARBINARY = 57580
const NCHAR = 57581
const TEXT = 57582
const TINYTEXT = 57583
const MEDIUMTEXT = 57584
const LONGTEXT = 57585
const BLOB = 57586
const TINYBLOB = 57587
const MEDIUMBLOB = 57588
const LONGBLOB = 57589
const JSON = 57590
const ENUM = 57591
const GEOMETRY = 57592
const POINT = 57593
const LINESTRING = 57594
const POLYGON = 57595
const GEOMETRYCOLLECTION = 57596
const MULTIPOINT = 57597
const MULTILINESTRING = 57598
const MULTIPOLYGON = 57599
const NULLX = 57600
const AUTO_INCREMENT = 57601
const APPROXNUM = 57602
const SIGNED = 57603
const UNSIGNED = 57604
const ZEROFILL = 57605
const COLLATION = 57606
const DATABASES = 57607
const SCHEMAS = 57608
const TABLES = 57609
const VITESS_METADATA = 57610
const VSCHEMA = 57611
const FULL = 57612
const PROCESSLIST = 57613
const COLUMNS = 57614
const FIELDS = 57615
const ENGINES = 57616
const PLUGINS = 57617
const EXTENDED = 57618
const KEYSPACES = 57619
const VITESS_KEYSPACES = 57620
const VITESS_SHARDS = 57621
const VITESS_TABLETS = 57622
const VITESS_MIGRATIONS = 57623
const CODE = 57624
const PRIVILEGES = 57625
const FUNCTION = 57626
const OPEN = 57627
const TRIGGERS = 57628
const EVENT = 57629
const USER = 57630
const NAMES = 57631
const CHARSET = 57632
const GLOBAL = 57633
const SESSION = 57634
const ISOLATION = 57635
const LEVEL = 57636
const READ = 57637
const WRITE = 57638
const ONLY = 57639
const REPEATABLE = 57640
const COMMITTED = 57641
const UNCOMMITTED = 57642
const SERIALIZABLE = 57643
const CURRENT_TIMESTAMP = 57644
const DATABASE = 57645
const CURRENT_DATE = 57646
const CURRENT_TIME = 57647
const LOCALTIME = 57648
const LOCALTIMESTAMP = 57649
const CURRENT_USER = 57650
const UTC_DATE = 57651
const UTC_TIME = 57652
const UTC_TIMESTAMP = 57653
const REPLACE = 57654
const CONVERT = 57655
const CAST = 57656
const SUBSTR = 57657
const SUBSTRING = 57658
const GROUP_CONCAT = 57659
const SEPARATOR = 57660
const TIMESTAMPADD = 57661
const TIMESTAMPDIFF = 57662
const MATCH = 57663
const AGAINST = 57664
const BOOLEAN = 57665
const LANGUAGE = 57666
const WITH = 57667
const QUERY = 57668
const EXPANSION = 57669
const WITHOUT = 57670
const VALIDATION = 57671
const UNUSED = 57672
const ARRAY = 57673
const CUME_DIST = 57674
const DESCRIPTION = 57675
const DENSE_RANK = 57676
const EMPTY = 57677
const EXCEPT = 57678
const FIRST_VALUE = 57679
const GROUPING = 57680
const GROUPS = 57681
const JSON_TABLE = 57682
const LAG = 57683
const LAST_VALUE = 57684
const LATERAL = 57685
const LEAD = 57686
const MEMBER = 57687
const NTH_VALUE = 57688
const NTILE = 57689
const OF = 57690
const OVER = 57691
const PERCENT_RANK = 57692
const RANK = 57693
const RECURSIVE = 57694
const ROW_NUMBER = 57695
const SYSTEM = 57696
const WINDOW = 57697
const ACTIVE = 57698
const ADMIN = 57699
const BUCKETS = 57700
const CLONE = 57701
const COMPONENT = 57702
const DEFINITION = 57703
const ENFORCED = 57704
const EXCLUDE = 57705
const FOLLOWING = 57706
const GEOMCOLLECTION = 57707
const GET_MASTER_PUBLIC_KEY = 57708
const HISTOGRAM = 57709
const HISTORY = 57710
const INACTIVE = 57711
const INVISIBLE = 57712
const LOCKED = 57713
const MASTER_COMPRESSION_ALGORITHMS = 57714
const MASTER_PUBLIC_KEY_PATH = 57715
const MASTER_TLS_CIPHERSUITES = 57716
const MASTER_ZSTD_COMPRESSION_LEVEL = 57717
const NESTED = 57718
const NETWORK_NAMESPACE = 57719
const NOWAIT = 57720
const NULLS = 57721
const OJ = 57722
const OLD = 57723
const OPTIONAL = 57724
const ORDINALITY = 57725
const ORGANIZATION = 57726
const OTHERS = 57727
const PATH = 57728
const PERSIST = 57729
const PERSIST_ONLY = 57730
const PRECEDING = 57731
const PRIVILEGE_CHECKS_USER = 57732
const PROCESS = 57733
const RANDOM = 57734
const REFERENCE = 57735
const REQUIRE_ROW_FORMAT = 57736
const RESOURCE = 57737
const RESPECT = 57738
const RESTART = 57739
const RETAIN = 57740
const REUSE = 57741
const ROLE = 57742
const SECONDARY = 57743
const SECONDARY_ENGINE = 57744
const SECONDARY_LOAD = 57745
const SECONDARY_UNLOAD = 57746
const SKIP = 57747
const SRID = 57748
const THREAD_PRIORITY = 57749
const TIES = 57750
const UNBOUNDED = 57751
const VCPU = 57752
const VISIBLE = 57753
const FORMAT = 57754
const TREE = 57755
const VITESS = 57756
const TRADITIONAL = 57757
const LOCAL = 57758
const LOW_PRIORITY = 57759
const NO_WRITE_TO_BINLOG = 57760
const LOGS = 57761
const ERROR = 57762
const GENERAL = 57763
const HOSTS = 57764
const OPTIMIZER_COSTS = 57765
const USER_RESOURCES = 57766
const SLOW = 57767
const CHANNEL = 57768
const RELAY = 57769
const EXPORT = 57770
const AVG_ROW_LENGTH = 57771
const CONNECTION = 57772
const CHECKSUM = 57773
const DELAY_KEY_WRITE = 57774
const ENCRYPTION = 57775
const ENGINE = 57776
const INSERT_METHOD = 57777
const MAX_ROWS = 57778
const MIN_ROWS = 57779
const PACK_KEYS = 57780
const PASSWORD = 57781
const FIXED = 57782
const DYNAMIC = 57783
const COMPRESSED = 57784
const REDUNDANT = 57785
const COMPACT = 57786
const ROW_FORMAT = 57787
const STATS_AUTO_RECALC = 57788
const STATS_PERSISTENT = 57789
const STATS_SAMPLE_PAGES = 57790
const STORAGE = 57791
const MEMORY = 57792
const DISK = 57793

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	163, 925,
	-2, 90,
	-1, 44,
	1, 111,
	469, 111,
	-2, 117,
	-1, 45,
	143, 117,
	254, 117,
	307, 117,
	-2, 324,
	-1, 52,
	34, 466,
	164, 466,
	176, 466,
	209, 480,
	210, 480,
	-2, 468,
	-1, 57,
	166, 490,
	-2, 488,
	-1, 82,
	56, 557,
	-2, 565,
	-1, 107,
	1, 112,
	469, 112,
	-2, 117,
	-1, 117,
	169, 229,
	170, 229,
	-2, 318,
	-1, 136,
	143, 117,
	254, 117,
	307, 117,
	-2, 333,
	-1, 572,
	150, 946,
	-2, 942,
	-1, 573,
	150, 947,
	-2, 943,
	-1, 591,
	56, 558,
	-2, 570,
	-1, 592,
	56, 559,
	-2, 571,
	-1, 613,
	118, 1285,
	-2, 83,
	-1, 614,
	118, 1168,
	-2, 84,
	-1, 620,
	118, 1218,
	-2, 919,
	-1, 757,
	118, 1106,
	-2, 916,
	-1, 792,
	175, 37,
	180, 37,
	-2, 240,
	-1, 871,
	1, 371,
	469, 371,
	-2, 117,
	-1, 1108,
	1, 267,
	469, 267,
	-2, 117,
	-1, 1186,
	169, 229,
	170, 229,
	-2, 318,
	-1, 1195,
	175, 38,
	180, 38,
	-2, 241,
	-1, 1404,
	150, 949,
	-2, 945,
	-1, 1496,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1517,
	1, 268,
	469, 268,
	-2, 117,
	-1, 1925,
	5, 813,
	18, 813,
	20, 813,
	32, 813,
	83, 813,
	-2, 597,
	-1, 2137,
	46, 887,
	-2, 885,
}

const yyPrivate = 57344

const yyLast = 27874

var yyAct = [...]int{
	572, 2218, 2205, 1977, 2137, 1838, 1807, 2146, 1728, 2088,
	2066, 2182, 81, 3, 1695, 1905, 1514, 1441, 545, 930,
	1906, 1974, 1580, 531, 584, 1729, 1902, 1011, 1532, 1547,
	1811, 1792, 1493, 1063, 883, 1056, 1170, 514, 1552, 1793,
	1715, 1917, 1864, 1655, 516, 1791, 1304, 131, 176, 1630,
	145, 188, 1554, 479, 188, 1785, 1193, 787, 1100, 495,
	1390, 188, 1398, 1093, 1475, 761, 79, 1083, 1482, 188,
	1061, 910, 1578, 1066, 1443, 1086, 1049, 947, 1424, 1200,
	578, 518, 1367, 1090, 800, 768, 765, 32, 618, 1084,
	495, 793, 507, 495, 188, 495, 1169, 1283, 773, 769,
	1458, 1099, 593, 790, 1543, 788, 789, 1498, 1097, 615,
	1073, 77, 877, 1309, 777, 928, 114, 1165, 1185, 108,
	109, 1533, 115, 864, 8, 7, 502, 6, 1830, 1829,
	1609, 76, 1270, 2090, 1852, 175, 1853, 1211, 1356, 82,
	948, 1355, 822, 148, 1024, 1438, 1439, 177, 178, 179,
	762, 1025, 177, 178, 179, 1354, 1353, 1352, 600, 604,
	1351, 1344, 1401, 511, 116, 579, 948, 505, 2174, 506,
	1693, 188, 2134, 2045, 454, 84, 85, 86, 87, 88,
	89, 188, 1951, 876, 2112, 2111, 188, 827, 110, 503,
	2061, 826, 557, 2062, 563, 564, 561, 562, 612, 560,
	559, 558, 825, 804, 2224, 958, 2179, 471, 2217, 565,
	566, 619, 78, 1645, 2157, 1171, 470, 2208, 1978, 1597,
	2178, 2156, 803, 1881, 2009, 1694, 468, 781, 780, 835,
	779, 958, 782, 1616, 1932, 1933, 1557, 1615, 1509, 1510,
	1931, 828, 829, 830, 174, 34, 1851, 1643, 70, 38,
	39, 110, 1508, 1101, 1759, 1102, 105, 1758, 182, 183,
	1760, 177, 178, 179, 926, 465, 1776, 1440, 483, 902,
	840, 890, 891, 576, 477, 1499, 824, 575, 903, 841,
	946, 1526, 783, 2000, 917, 1998, 919, 493, 2159, 838,
	839, 1343, 842, 843, 844, 845, 954, 879, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 103, 896, 1556, 497, 483, 491, 110,
	69, 482, 954, 916, 918, 1260, 1345, 1346, 1347, 105,
	170, 1812, 1579, 1840, 888, 1612, 2207, 102, 889, 890,
	891, 1289, 1284, 925, 455, 457, 458, 865, 474, 476,
	484, 907, 908, 923, 472, 473, 485, 459, 460, 489,
	488, 475, 909, 464, 461, 463, 469, 1261, 904, 1262,
	482, 467, 486, 2124, 973, 972, 982, 983, 975, 976,
	977, 978, 979, 980, 981, 974, 1773, 1768, 984, 2175,
	483, 872, 105, 483, 97, 1290, 905, 906, 1834, 100,
	1842, 1843, 99, 98, 897, 1841, 1835, 1292, 1624, 1293,
	847, 1294, 846, 1286, 104, 1288, 2108, 2056, 811, 809,
	1581, 1476, 915, 802, 820, 914, 920, 819, 784, 818,
	1769, 483, 953, 950, 951, 952, 957, 959, 956, 817,
	955, 913, 816, 482, 815, 814, 482, 949, 813, 103,
	1179, 1950, 1771, 173, 188, 1766, 1287, 808, 953, 950,
	951, 952, 957, 959, 956, 821, 955, 1767, 2222, 2057,
	766, 2225, 921, 949, 1614, 796, 2194, 766, 795, 1865,
	495, 495, 495, 1558, 482, 766, 900, 104, 878, 764,
	886, 2155, 892, 893, 894, 895, 487, 2160, 495, 495,
	778, 802, 107, 1499, 922, 1844, 1629, 1199, 1198, 606,
	812, 810, 940, 927, 480, 1603, 1297, 934, 831, 1801,
	1611, 1822, 1867, 1890, 1889, 837, 1774, 1772, 1888, 481,
	802, 802, 776, 1696, 1698, 1644, 802, 775, 774, 875,
	772, 453, 180, 1623, 1515, 1599, 1622, 924, 2141, 2147,
	104, 996, 997, 2029, 1930, 1720, 1663, 1589, 801, 1272,
	1271, 1273, 1274, 1275, 869, 795, 798, 799, 71, 766,
	1504, 984, 1077, 792, 796, 1009, 188, 881, 974, 1755,
	1869, 984, 1873, 802, 1868, 1454, 1866, 2125, 1674, 961,
	887, 1871, 791, 1054, 1339, 994, 931, 932, 1671, 1632,
	1870, 911, 1632, 495, 1631, 964, 188, 1631, 188, 188,
	1310, 495, 1053, 1872, 1874, 2220, 899, 495, 2221, 964,
	2219, 2116, 885, 823, 943, 941, 1915, 942, 901, 1697,
	615, 963, 961, 1770, 1012, 1285, 801, 177, 178, 179,
	1082, 1392, 805, 795, 866, 1103, 867, 944, 964, 868,
	92, 1050, 806, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 801, 801, 984, 836, 1598,
	807, 801, 795, 798, 799, 870, 766, 1883, 871, 1425,
	792, 796, 1176, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1596, 588, 93, 1067, 1393, 1425, 1591,
	1681, 1047, 1594, 1027, 1029, 1031, 1033, 1035, 1037, 1038,
	1028, 1030, 1656, 1034, 1036, 1374, 1039, 912, 801, 811,
	809, 1055, 1935, 1595, 805, 795, 1311, 996, 997, 1372,
	1373, 1371, 619, 1070, 806, 884, 2209, 996, 997, 2199,
	973, 972, 982, 983, 975, 976, 977, 978, 979, 980,
	981, 974, 2212, 1065, 984, 977, 978, 979, 980, 981,
	974, 188, 172, 984, 2210, 1161, 1591, 2200, 2044, 2043,
	177, 178, 179, 1790, 1279, 1172, 1173, 1174, 1175, 972,
	982, 983, 975, 976, 977, 978, 979, 980, 981, 974,
	1593, 495, 984, 1195, 1648, 1649, 1650, 962, 963, 961,
	2226, 1204, 1277, 1956, 1669, 1208, 1459, 1460, 495, 495,
	1267, 495, 1668, 495, 495, 964, 495, 495, 495, 495,
	495, 495, 975, 976, 977, 978, 979, 980, 981, 974,
	1781, 495, 984, 1278, 1184, 188, 1244, 962, 963, 961,
	573, 962, 963, 961, 1892, 962, 963, 961, 1205, 1885,
	1789, 1257, 1362, 1364, 1365, 964, 1191, 1203, 771, 964,
	69, 1276, 495, 964, 1363, 1788, 1561, 1280, 2227, 1266,
	188, 1265, 1370, 1239, 1240, 1264, 1456, 1263, 188, 1202,
	1303, 1255, 188, 1201, 1201, 1098, 1249, 1168, 962, 963,
	961, 189, 1893, 1670, 189, 1167, 1241, 1246, 188, 496,
	1160, 189, 1182, 1245, 1181, 188, 964, 1220, 1180, 189,
	2211, 2201, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 495, 495, 495, 2190, 1177, 1178, 2079, 1194, 2041,
	496, 1314, 2017, 496, 189, 496, 1938, 1894, 1318, 1455,
	1320, 1321, 1322, 1323, 605, 1325, 1213, 188, 1214, 2012,
	1216, 1218, 1798, 1242, 1222, 1224, 1226, 1228, 1230, 1340,
	1312, 1313, 1786, 1639, 962, 963, 961, 177, 178, 179,
	1306, 1762, 1607, 1606, 1317, 610, 1307, 962, 963, 961,
	1268, 1324, 964, 1247, 1248, 1391, 1368, 1256, 1298, 1253,
	1254, 781, 780, 1252, 1394, 964, 973, 972, 982, 983,
	975, 976, 977, 978, 979, 980, 981, 974, 495, 1251,
	984, 189, 1316, 1250, 1837, 110, 177, 178, 179, 588,
	1573, 189, 78, 177, 178, 179, 189, 1571, 2106, 1402,
	1350, 2105, 607, 608, 1395, 1396, 1335, 1336, 1337, 1963,
	2193, 495, 495, 177, 178, 179, 1408, 1258, 1976, 1369,
	1963, 2153, 188, 177, 178, 179, 1403, 1963, 2142, 1963,
	588, 1500, 1413, 1416, 1814, 495, 1963, 2114, 1426, 2059,
	588, 1800, 188, 1591, 588, 495, 2027, 588, 1449, 188,
	1448, 188, 1716, 1012, 1963, 1968, 1948, 1947, 1461, 188,
	188, 1944, 1945, 1944, 1943, 1716, 495, 1402, 1404, 495,
	588, 1494, 1467, 588, 1499, 1831, 1432, 1433, 1164, 1816,
	495, 1809, 1810, 1479, 588, 615, 960, 588, 615, 1164,
	1163, 1749, 1405, 1501, 1473, 1500, 1109, 1108, 80, 1499,
	1366, 1503, 1468, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1903, 1523,
	1914, 1479, 1534, 1535, 1536, 1592, 1478, 1914, 34, 1518,
	2024, 960, 2115, 1963, 1914, 495, 1404, 1522, 1946, 188,
	1469, 34, 495, 1497, 2011, 1519, 1409, 1410, 1570, 1572,
	1415, 1418, 1419, 1723, 1479, 1471, 1507, 1501, 1686, 1549,
	1428, 495, 34, 1685, 1467, 1499, 1467, 495, 1506, 1502,
	1555, 1204, 1467, 1204, 1505, 1431, 1724, 1479, 1434, 1435,
	1591, 1590, 1591, 1574, 2006, 1521, 1520, 619, 1457, 2095,
	619, 973, 972, 982, 983, 975, 976, 977, 978, 979,
	980, 981, 974, 69, 1527, 984, 1528, 1529, 1530, 1531,
	581, 495, 1436, 1391, 1348, 1296, 69, 1550, 1391, 1391,
	1095, 786, 1539, 1540, 1541, 1542, 1577, 1587, 785, 1588,
	2145, 1545, 1546, 2046, 1559, 1562, 1560, 69, 69, 1566,
	1567, 1568, 2068, 1975, 804, 1795, 2035, 1166, 1548, 1586,
	1836, 1550, 1583, 188, 1201, 1584, 1582, 188, 188, 188,
	188, 188, 1544, 803, 189, 1538, 1537, 188, 188, 188,
	188, 1235, 1282, 1602, 1196, 1192, 1600, 1162, 1604, 1605,
	188, 2047, 2048, 2049, 1601, 69, 94, 188, 1794, 174,
	496, 496, 496, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 2050, 1839, 984, 496, 496,
	1918, 1919, 188, 495, 2069, 1924, 1171, 1634, 1635, 1236,
	1237, 1238, 1637, 534, 533, 536, 537, 538, 539, 1638,
	2214, 1232, 535, 1795, 540, 2206, 1610, 1484, 1487, 1488,
	1489, 1485, 1921, 1486, 1490, 968, 1903, 971, 1923, 1805,
	2051, 2052, 1627, 985, 986, 987, 988, 989, 990, 991,
	1368, 969, 970, 967, 973, 972, 982, 983, 975, 976,
	977, 978, 979, 980, 981, 974, 1233, 1234, 984, 1804,
	1803, 1484, 1487, 1488, 1489, 1485, 189, 1486, 1490, 1564,
	1341, 1918, 1919, 1299, 1740, 1738, 1642, 1737, 1736, 1741,
	1739, 2196, 1705, 1665, 598, 594, 1742, 188, 1488, 1489,
	2177, 1895, 1064, 496, 2028, 188, 189, 1966, 189, 189,
	595, 496, 1714, 1369, 1651, 1713, 2165, 496, 982, 983,
	975, 976, 977, 978, 979, 980, 981, 974, 2162, 188,
	984, 2198, 2181, 1068, 1069, 597, 2183, 596, 2189, 101,
	188, 188, 188, 188, 188, 1702, 1664, 1703, 1725, 96,
	2188, 2138, 188, 579, 2136, 1704, 188, 1709, 1295, 188,
	188, 1718, 1680, 188, 188, 188, 574, 1799, 1747, 1421,
	833, 832, 1050, 1692, 1987, 1721, 1761, 1794, 1057, 1700,
	1850, 933, 1824, 1730, 1422, 1823, 171, 111, 1708, 184,
	1058, 1750, 2093, 1940, 1780, 1752, 1652, 1653, 1654, 181,
	1939, 1717, 1585, 1210, 1209, 1197, 2022, 1731, 1452, 1779,
	1734, 1782, 1783, 1784, 1459, 1460, 1569, 1777, 1778, 1743,
	1302, 1748, 1660, 1661, 2107, 188, 1756, 1753, 1764, 2063,
	1732, 1733, 1719, 1735, 1492, 1647, 495, 1765, 582, 583,
	1712, 585, 495, 1678, 2203, 495, 2202, 1204, 1711, 2186,
	1555, 1817, 495, 1306, 1787, 2166, 2021, 1962, 598, 594,
	1575, 189, 586, 80, 1828, 2020, 1796, 1898, 1716, 1819,
	2216, 2215, 188, 1427, 595, 1675, 1672, 1078, 1071, 1827,
	2216, 2139, 1184, 1937, 1813, 1453, 581, 78, 83, 75,
	188, 496, 1826, 1, 466, 1437, 1403, 591, 592, 597,
	1048, 596, 478, 1818, 2204, 1269, 1259, 1979, 496, 496,
	2065, 496, 1969, 496, 496, 1553, 496, 496, 496, 496,
	496, 496, 794, 136, 495, 1516, 1517, 2149, 91, 759,
	1391, 496, 90, 1825, 1846, 189, 797, 1845, 1404, 898,
	544, 1576, 2060, 1861, 1775, 1525, 1115, 1113, 1114, 1112,
	1117, 1116, 1111, 1342, 492, 587, 1854, 1491, 1862, 1797,
	495, 1863, 496, 1104, 1072, 1848, 834, 456, 1849, 1949,
	189, 188, 1882, 1876, 1338, 1608, 462, 992, 189, 1710,
	1757, 495, 189, 616, 609, 1860, 1909, 495, 495, 2187,
	1875, 187, 1904, 2163, 490, 2161, 2135, 2089, 189, 2164,
	1861, 187, 2133, 1907, 2197, 189, 1901, 2180, 1524, 187,
	188, 1451, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 496, 496, 496, 1060, 603, 603, 2019, 1730, 1913,
	1897, 1679, 1021, 1423, 187, 1087, 1922, 517, 1447, 1361,
	532, 529, 1927, 530, 1462, 1722, 966, 189, 515, 1926,
	509, 1928, 1079, 1929, 1941, 1942, 1483, 1481, 1480, 1300,
	1957, 1091, 188, 1920, 188, 188, 188, 1916, 1085, 1466,
	495, 1613, 1833, 945, 1934, 590, 504, 95, 1420, 2123,
	1856, 1857, 1646, 188, 2008, 1953, 589, 60, 37, 499,
	2173, 936, 1952, 599, 31, 1877, 1878, 1891, 1879, 1880,
	1980, 495, 495, 495, 1970, 188, 30, 29, 496, 1886,
	1887, 187, 28, 1555, 1988, 1967, 1973, 1965, 23, 22,
	21, 187, 1972, 20, 19, 1912, 187, 25, 18, 17,
	16, 106, 47, 44, 42, 1964, 113, 112, 45, 41,
	873, 496, 496, 1985, 1986, 27, 26, 1991, 15, 14,
	13, 12, 189, 11, 10, 9, 5, 4, 939, 1996,
	24, 1010, 2, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 496, 0, 0, 0, 189,
	0, 189, 2018, 0, 0, 0, 0, 0, 0, 189,
	189, 2023, 1936, 0, 0, 0, 496, 1954, 1955, 496,
	2032, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	2037, 2039, 0, 495, 495, 0, 0, 0, 2038, 2054,
	0, 0, 2040, 0, 2042, 2005, 495, 0, 0, 495,
	2053, 0, 2064, 1993, 1994, 0, 1995, 0, 0, 1997,
	0, 1999, 0, 0, 0, 2072, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 189,
	0, 0, 496, 0, 495, 495, 495, 188, 0, 1989,
	2082, 2084, 2085, 2071, 0, 0, 0, 2070, 495, 0,
	495, 496, 0, 2078, 2086, 0, 495, 496, 0, 2096,
	0, 0, 2101, 1907, 2098, 2094, 2087, 1907, 0, 2092,
	0, 0, 0, 0, 0, 0, 2100, 2103, 188, 2104,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 495,
	188, 0, 0, 0, 0, 2117, 2113, 0, 0, 0,
	0, 496, 2110, 0, 973, 972, 982, 983, 975, 976,
	977, 978, 979, 980, 981, 974, 0, 0, 984, 0,
	0, 2132, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 2140, 0, 0, 1907, 0, 495, 495, 0, 0,
	2143, 0, 0, 189, 0, 0, 2148, 189, 189, 189,
	189, 189, 0, 0, 187, 2067, 2150, 189, 189, 189,
	189, 0, 495, 2158, 0, 0, 495, 0, 2167, 0,
	189, 2169, 2172, 0, 0, 0, 0, 189, 0, 2176,
	169, 0, 0, 0, 0, 0, 2185, 2073, 2074, 2075,
	2076, 2077, 2184, 0, 0, 2080, 2081, 0, 0, 0,
	2195, 2003, 189, 496, 1730, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2223, 973,
	972, 982, 983, 975, 976, 977, 978, 979, 980, 981,
	974, 0, 0, 984, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 151, 0, 0, 0, 187, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 543, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 189, 187, 0, 187, 1094,
	973, 972, 982, 983, 975, 976, 977, 978, 979, 980,
	981, 974, 0, 0, 984, 0, 0, 0, 2170, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	189, 189, 189, 189, 189, 0, 0, 0, 0, 159,
	0, 1855, 189, 494, 0, 0, 189, 0, 0, 189,
	189, 0, 0, 189, 189, 189, 0, 0, 0, 0,
	602, 973, 972, 982, 983, 975, 976, 977, 978, 979,
	980, 981, 974, 0, 617, 984, 1657, 763, 0, 770,
	0, 973, 972, 982, 983, 975, 976, 977, 978, 979,
	980, 981, 974, 0, 169, 984, 973, 972, 982, 983,
	975, 976, 977, 978, 979, 980, 981, 974, 0, 0,
	984, 0, 0, 0, 0, 189, 0, 0, 0, 111,
	0, 0, 0, 0, 0, 508, 496, 0, 0, 0,
	153, 0, 496, 0, 0, 496, 0, 0, 0, 0,
	0, 146, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 150, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 1207, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 1207,
	1207, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	187, 189, 0, 159, 0, 0, 0, 0, 187, 0,
	0, 496, 1305, 0, 0, 0, 0, 496, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	189, 0, 1326, 1327, 187, 187, 187, 187, 187, 187,
	187, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 0, 0, 0, 0, 0, 164, 165, 166,
	167, 0, 0, 0, 1406, 1407, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 189, 189, 189, 0, 0, 0,
	496, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 1450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 496, 496, 0, 189, 0, 0, 0, 603,
	1305, 0, 0, 0, 603, 603, 0, 0, 603, 603,
	603, 0, 0, 0, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 603, 603, 603, 603, 603, 0, 0,
	0, 0, 1445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 617, 617, 617, 0, 1305, 187,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 0, 935, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 496,
	0, 0, 0, 0, 0, 147, 152, 149, 155, 156,
	157, 158, 160, 161, 162, 163, 0, 0, 0, 0,
	0, 164, 165, 166, 167, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 496, 496, 496, 189, 0, 0,
	0, 965, 0, 0, 0, 0, 0, 0, 496, 0,
	496, 0, 0, 0, 0, 0, 496, 1075, 0, 0,
	0, 0, 1051, 0, 0, 617, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 0, 0, 508, 189, 0,
	0, 0, 0, 0, 0, 0, 1022, 0, 0, 496,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 1059, 1062, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 577, 0, 0, 0, 0, 496, 496, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 187, 187, 187,
	187, 187, 0, 0, 0, 0, 767, 187, 187, 187,
	187, 0, 496, 0, 0, 0, 496, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 1666, 1667, 0, 0, 0, 0, 1673,
	0, 0, 1676, 1677, 0, 0, 0, 0, 0, 0,
	1683, 0, 1684, 0, 0, 1687, 1688, 1689, 1690, 1691,
	0, 0, 0, 863, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 874, 0, 763, 0, 0, 880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	603, 603, 1212, 1212, 0, 1212, 0, 1212, 1212, 0,
	1221, 1212, 1212, 1212, 1212, 1212, 546, 33, 0, 0,
	0, 603, 0, 1206, 1206, 763, 0, 1745, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 0, 0, 0,
	33, 0, 0, 0, 0, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	187, 187, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 1744, 0, 580, 0, 187, 0, 0, 187,
	187, 0, 0, 187, 1754, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 617, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1308, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 1858, 1859, 0, 0, 0, 0,
	0, 0, 1397, 0, 617, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 1357, 1358, 1359, 1360, 1429, 1430, 0, 0, 0,
	0, 0, 0, 0, 1132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 0, 1463,
	1910, 0, 0, 603, 0, 0, 0, 0, 0, 1075,
	0, 0, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 1411, 1412, 0, 0,
	617, 0, 0, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 1120, 0, 770,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 763, 0, 0, 0, 0,
	0, 770, 0, 0, 1990, 0, 0, 0, 1992, 0,
	1133, 0, 187, 0, 187, 187, 187, 0, 1081, 2001,
	2002, 1092, 0, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 1551, 0, 763, 0, 0, 0, 0,
	0, 0, 2025, 2026, 0, 187, 2030, 1146, 1149, 1150,
	1151, 1152, 1153, 1154, 0, 1155, 1156, 1157, 1158, 1159,
	1134, 1135, 1136, 1137, 1118, 1119, 1147, 0, 1121, 0,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 929, 929, 0,
	0, 0, 0, 2058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1207, 33, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 993,
	995, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 0, 0,
	1008, 0, 0, 1110, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 0, 1023, 1026, 1026, 1026, 1032, 1026, 1026,
	1032, 1026, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 0,
	0, 0, 0, 0, 1052, 0, 0, 33, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2119, 2120, 2121,
	2122, 0, 2126, 0, 2127, 2128, 2129, 1445, 2130, 2131,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2154, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 1291, 1206, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 0, 0, 0,
	1315, 0, 0, 0, 2191, 2192, 0, 1319, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 0, 0, 0, 1706, 1707, 1062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 1206, 0, 1815, 0, 0, 1808,
	0, 0, 0, 0, 617, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1470, 143, 0, 0, 0, 0,
	132, 1474, 0, 1477, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 1212, 0, 0, 0, 150, 0,
	151, 0, 0, 0, 0, 120, 121, 142, 141, 168,
	0, 0, 0, 0, 0, 617, 0, 0, 1206, 0,
	0, 1911, 1212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 929, 929, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 137, 118, 144,
	125, 117, 0, 138, 139, 0, 0, 154, 0, 0,
	0, 1563, 0, 0, 0, 0, 0, 159, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 129, 127, 122, 123, 124, 128, 0, 0,
	0, 0, 119, 0, 763, 0, 0, 1206, 0, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1981, 1982, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 1092, 0, 0, 0, 1617,
	1618, 1619, 1620, 1621, 0, 0, 0, 0, 0, 1625,
	1626, 1092, 1628, 0, 0, 1495, 0, 0, 0, 1206,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1640, 134, 0, 0, 135, 0,
	0, 0, 0, 111, 0, 133, 2010, 1808, 2055, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	1808, 0, 0, 617, 0, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 2033, 0, 0, 2034,
	0, 0, 2036, 0, 0, 143, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 1808, 1808,
	1808, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	151, 0, 2097, 0, 2099, 1187, 1188, 142, 141, 168,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	152, 149, 155, 156, 157, 158, 160, 161, 162, 163,
	0, 0, 0, 1808, 0, 164, 165, 166, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 1189, 144,
	0, 1186, 0, 138, 139, 0, 0, 154, 0, 169,
	0, 2091, 508, 0, 0, 0, 0, 159, 0, 0,
	1183, 0, 1751, 0, 0, 0, 0, 0, 0, 0,
	617, 617, 0, 0, 111, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 2168, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 151, 0, 0, 0, 0, 1187, 1188, 142, 141,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 1662,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 137, 1189,
	144, 0, 1186, 0, 138, 139, 0, 0, 154, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 159, 1699,
	0, 0, 0, 0, 0, 134, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 0,
	0, 0, 1726, 1727, 0, 0, 1088, 1088, 1088, 1088,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 1896, 0, 1088, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	152, 149, 155, 156, 157, 158, 160, 161, 162, 163,
	0, 0, 0, 0, 0, 164, 165, 166, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 1959, 1960, 1961, 1821,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1971, 134, 0, 0, 135,
	34, 35, 36, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	74, 0, 0, 0, 0, 40, 66, 67, 0, 64,
	68, 0, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 1908, 0, 33, 0, 0, 164, 165, 166, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 46, 49,
	48, 51, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 73,
	72, 0, 0, 61, 62, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 55, 0, 56, 57, 58, 59, 0, 0, 0,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1908, 0, 33, 0, 1908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 741, 728, 33, 2144, 677, 744, 648, 666,
	753, 668, 671, 711, 628, 690, 331, 663, 0, 652,
	624, 659, 625, 650, 679, 241, 683, 647, 730, 693,
	743, 289, 0, 630, 653, 345, 713, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 750, 293, 700, 0, 391, 316, 0, 0, 0,
	681, 733, 688, 724, 676, 712, 637, 699, 745, 664,
	708, 746, 279, 225, 195, 328, 392, 255, 0, 0,
	0, 177, 178, 179, 0, 2151, 2152, 0, 0, 0,
	0, 0, 217, 0, 223, 705, 740, 661, 707, 237,
	277, 243, 236, 407, 710, 756, 623, 702, 0, 626,
	629, 752, 736, 656, 657, 0, 0, 0, 0, 0,
	0, 0, 680, 689, 721, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 698, 0, 0, 0,
	633, 627, 0, 0, 0, 0, 678, 0, 0, 0,
	636, 0, 655, 722, 0, 621, 263, 631, 317, 726,
	735, 675, 438, 739, 673, 672, 742, 717, 634, 732,
	667, 288, 632, 285, 191, 205, 0, 665, 327, 366,
	372, 731, 651, 660, 228, 658, 370, 341, 424, 213,
	253, 363, 346, 368, 697, 715, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 646,
	727, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 719,
	755, 340, 371, 219, 426, 390, 641, 645, 639, 640,
	691, 692, 642, 747, 748, 749, 723, 635, 0, 643,
	644, 0, 729, 737, 738, 696, 190, 203, 291, 751,
	360, 256, 450, 433, 429, 622, 638, 234, 649, 0,
	0, 662, 669, 670, 682, 684, 685, 686, 687, 695,
	703, 704, 706, 714, 716, 718, 720, 725, 734, 754,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 694, 701, 301, 250, 267, 276, 709, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 741, 728, 0, 0,
	677, 744, 648, 666, 753, 668, 671, 711, 628, 690,
	331, 663, 0, 652, 624, 659, 625, 650, 679, 241,
	683, 647, 730, 693, 743, 289, 0, 630, 653, 345,
	713, 382, 227, 298, 296, 410, 251, 244, 240, 226,
	273, 304, 343, 400, 337, 750, 293, 700, 0, 391,
	316, 0, 0, 0, 681, 733, 688, 724, 676, 712,
	637, 699, 745, 664, 708, 746, 279, 225, 195, 328,
	392, 255, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 705,
	740, 661, 707, 237, 277, 243, 236, 407, 710, 756,
	623, 702, 0, 626, 629, 752, 736, 656, 657, 0,
	0, 0, 0, 0, 0, 0, 680, 689, 721, 674,
	0, 0, 0, 0, 0, 0, 1900, 0, 654, 0,
	698, 0, 0, 0, 633, 627, 0, 0, 0, 0,
	678, 0, 0, 0, 636, 0, 655, 722, 0, 621,
	263, 631, 317, 726, 735, 675, 438, 739, 673, 672,
	742, 717, 634, 732, 667, 288, 632, 285, 191, 205,
	0, 665, 327, 366, 372, 731, 651, 660, 228, 658,
	370, 341, 424, 213, 253, 363, 346, 368, 697, 715,
	369, 294, 412, 358, 422, 439, 440, 235, 321, 430,
	404, 436, 449, 206, 232, 335, 397, 427, 388, 314,
	408, 409, 284, 387, 261, 194, 292, 198, 399, 420,
	218, 380, 0, 0, 0, 200, 418, 396, 311, 281,
	282, 199, 0, 362, 239, 259, 230, 330, 415, 416,
	229, 451, 208, 435, 202, 209, 434, 323, 411, 419,
	312, 303, 201, 417, 310, 302, 287, 249, 269, 356,
	297, 357, 270, 319, 318, 320, 0, 196, 0, 393,
	428, 452, 215, 646, 727, 406, 444, 448, 0, 359,
	216, 260, 248, 355, 258, 290, 443, 445, 446, 447,
	214, 353, 266, 334, 423, 252, 431, 322, 210, 272,
	389, 286, 295, 719, 755, 340, 371, 219, 426, 390,
	641, 645, 639, 640, 691, 692, 642, 747, 748, 749,
	723, 635, 0, 643, 644, 0, 729, 737, 738, 696,
	190, 203, 291, 751, 360, 256, 450, 433, 429, 622,
	638, 234, 649, 0, 0, 662, 669, 670, 682, 684,
	685, 686, 687, 695, 703, 704, 706, 714, 716, 718,
	720, 725, 734, 754, 192, 193, 204, 212, 221, 233,
	246, 254, 264, 268, 271, 274, 275, 278, 283, 300,
	305, 306, 307, 308, 324, 325, 326, 329, 332, 333,
	336, 338, 339, 342, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 378, 379, 383,
	384, 385, 386, 394, 398, 413, 414, 425, 437, 441,
	265, 421, 442, 0, 299, 694, 701, 301, 250, 267,
	276, 709, 432, 395, 207, 367, 257, 197, 224, 211,
	231, 245, 247, 280, 309, 315, 344, 347, 262, 242,
	222, 364, 220, 381, 401, 402, 403, 405, 313, 238,
	741, 728, 0, 0, 677, 744, 648, 666, 753, 668,
	671, 711, 628, 690, 331, 663, 0, 652, 624, 659,
	625, 650, 679, 241, 683, 647, 730, 693, 743, 289,
	0, 630, 653, 345, 713, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 750,
	293, 700, 0, 391, 316, 0, 0, 0, 681, 733,
	688, 724, 676, 712, 637, 699, 745, 664, 708, 746,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 705, 740, 661, 707, 237, 277, 243,
	236, 407, 710, 756, 623, 702, 0, 626, 629, 752,
	736, 656, 657, 0, 0, 0, 0, 0, 0, 0,
	680, 689, 721, 674, 0, 0, 0, 0, 0, 0,
	1755, 0, 654, 0, 698, 0, 0, 0, 633, 627,
	0, 0, 0, 0, 678, 0, 0, 0, 636, 0,
	655, 722, 0, 621, 263, 631, 317, 726, 735, 675,
	438, 739, 673, 672, 742, 717, 634, 732, 667, 288,
	632, 285, 191, 205, 0, 665, 327, 366, 372, 731,
	651, 660, 228, 658, 370, 341, 424, 213, 253, 363,
	346, 368, 697, 715, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 646, 727, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 719, 755, 340,
	371, 219, 426, 390, 641, 645, 639, 640, 691, 692,
	642, 747, 748, 749, 723, 635, 0, 643, 644, 0,
	729, 737, 738, 696, 190, 203, 291, 751, 360, 256,
	450, 433, 429, 622, 638, 234, 649, 0, 0, 662,
	669, 670, 682, 684, 685, 686, 687, 695, 703, 704,
	706, 714, 716, 718, 720, 725, 734, 754, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 694,
	701, 301, 250, 267, 276, 709, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 741, 728, 0, 0, 677, 744,
	648, 666, 753, 668, 671, 711, 628, 690, 331, 663,
	0, 652, 624, 659, 625, 650, 679, 241, 683, 647,
	730, 693, 743, 289, 0, 630, 653, 345, 713, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 750, 293, 700, 0, 391, 316, 0,
	0, 0, 681, 733, 688, 724, 676, 712, 637, 699,
	745, 664, 708, 746, 279, 225, 195, 328, 392, 255,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 705, 740, 661,
	707, 237, 277, 243, 236, 407, 710, 756, 623, 702,
	0, 626, 629, 752, 736, 656, 657, 0, 0, 0,
	0, 0, 0, 0, 680, 689, 721, 674, 0, 0,
	0, 0, 0, 0, 1472, 0, 654, 0, 698, 0,
	0, 0, 633, 627, 0, 0, 0, 0, 678, 0,
	0, 0, 636, 0, 655, 722, 0, 621, 263, 631,
	317, 726, 735, 675, 438, 739, 673, 672, 742, 717,
	634, 732, 667, 288, 632, 285, 191, 205, 0, 665,
	327, 366, 372, 731, 651, 660, 228, 658, 370, 341,
	424, 213, 253, 363, 346, 368, 697, 715, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 646, 727, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 719, 755, 340, 371, 219, 426, 390, 641, 645,
	639, 640, 691, 692, 642, 747, 748, 749, 723, 635,
	0, 643, 644, 0, 729, 737, 738, 696, 190, 203,
	291, 751, 360, 256, 450, 433, 429, 622, 638, 234,
	649, 0, 0, 662, 669, 670, 682, 684, 685, 686,
	687, 695, 703, 704, 706, 714, 716, 718, 720, 725,
	734, 754, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 694, 701, 301, 250, 267, 276, 709,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 741, 728,
	0, 0, 677, 744, 648, 666, 753, 668, 671, 711,
	628, 690, 331, 663, 0, 652, 624, 659, 625, 650,
	679, 241, 683, 647, 730, 693, 743, 289, 0, 630,
	653, 345, 713, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 750, 293, 700,
	0, 391, 316, 0, 0, 0, 681, 733, 688, 724,
	676, 712, 637, 699, 745, 664, 708, 746, 279, 225,
	195, 328, 392, 255, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 705, 740, 661, 707, 237, 277, 243, 236, 407,
	710, 756, 623, 702, 0, 626, 629, 752, 736, 656,
	657, 0, 0, 0, 0, 0, 0, 0, 680, 689,
	721, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 698, 0, 0, 0, 633, 627, 0, 0,
	0, 0, 678, 0, 0, 0, 636, 0, 655, 722,
	0, 621, 263, 631, 317, 726, 735, 675, 438, 739,
	673, 672, 742, 717, 634, 732, 667, 288, 632, 285,
	191, 205, 0, 665, 327, 366, 372, 731, 651, 660,
	228, 658, 370, 341, 424, 213, 253, 363, 346, 368,
	697, 715, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 646, 727, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 719, 755, 340, 371, 219,
	426, 390, 641, 645, 639, 640, 691, 692, 642, 747,
	748, 749, 723, 635, 0, 643, 644, 0, 729, 737,
	738, 696, 190, 203, 291, 751, 360, 256, 450, 433,
	429, 622, 638, 234, 649, 0, 0, 662, 669, 670,
	682, 684, 685, 686, 687, 695, 703, 704, 706, 714,
	716, 718, 720, 725, 734, 754, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 694, 701, 301,
	250, 267, 276, 709, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 741, 728, 0, 0, 677, 744, 648, 666,
	753, 668, 671, 711, 628, 690, 331, 663, 0, 652,
	624, 659, 625, 650, 679, 241, 683, 647, 730, 693,
	743, 289, 0, 630, 653, 345, 713, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 750, 293, 700, 0, 391, 316, 0, 0, 0,
	681, 733, 688, 724, 676, 712, 637, 699, 745, 664,
	708, 746, 279, 225, 195, 328, 392, 255, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 705, 740, 661, 707, 237,
	277, 243, 236, 407, 710, 756, 623, 702, 0, 626,
	629, 752, 736, 656, 657, 0, 0, 0, 0, 0,
	0, 0, 680, 689, 721, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 698, 0, 0, 0,
	633, 627, 0, 0, 0, 0, 678, 0, 0, 0,
	636, 0, 655, 722, 0, 621, 263, 631, 317, 726,
	735, 675, 438, 739, 673, 672, 742, 717, 634, 732,
	667, 288, 632, 285, 191, 205, 0, 665, 327, 366,
	372, 731, 651, 660, 228, 658, 370, 341, 424, 213,
	253, 363, 346, 368, 697, 715, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 646,
	727, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 719,
	755, 340, 371, 219, 426, 390, 641, 645, 639, 640,
	691, 692, 642, 747, 748, 749, 723, 635, 0, 643,
	644, 0, 729, 737, 738, 696, 190, 203, 291, 751,
	360, 256, 450, 433, 429, 622, 638, 234, 649, 0,
	0, 662, 669, 670, 682, 684, 685, 686, 687, 695,
	703, 704, 706, 714, 716, 718, 720, 725, 734, 754,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 694, 701, 301, 250, 267, 276, 709, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 741, 728, 0, 0,
	677, 744, 648, 666, 753, 668, 671, 711, 628, 690,
	331, 663, 0, 652, 624, 659, 625, 650, 679, 241,
	683, 647, 730, 693, 743, 289, 0, 630, 653, 345,
	713, 382, 227, 298, 296, 410, 251, 244, 240, 226,
	273, 304, 343, 400, 337, 750, 293, 700, 0, 391,
	316, 0, 0, 0, 681, 733, 688, 724, 676, 712,
	637, 699, 745, 664, 708, 746, 279, 225, 195, 328,
	392, 255, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 705,
	740, 661, 707, 237, 277, 243, 236, 407, 710, 756,
	623, 702, 0, 626, 629, 752, 736, 656, 657, 0,
	0, 0, 0, 0, 0, 0, 680, 689, 721, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	698, 0, 0, 0, 633, 627, 0, 0, 0, 0,
	678, 0, 0, 0, 636, 0, 655, 722, 0, 621,
	263, 631, 317, 726, 735, 675, 438, 739, 673, 672,
	742, 717, 634, 732, 667, 288, 632, 285, 191, 205,
	0, 665, 327, 366, 372, 731, 651, 660, 228, 658,
	370, 341, 424, 213, 253, 363, 346, 368, 697, 715,
	369, 294, 412, 358, 422, 439, 440, 235, 321, 430,
	404, 436, 449, 206, 232, 335, 397, 427, 388, 314,
	408, 409, 284, 387, 261, 194, 292, 198, 399, 420,
	218, 380, 0, 0, 0, 200, 418, 396, 311, 281,
	282, 199, 0, 362, 239, 259, 230, 330, 415, 416,
	229, 451, 208, 435, 202, 758, 434, 323, 411, 419,
	312, 303, 201, 417, 310, 302, 287, 249, 269, 356,
	297, 357, 270, 319, 318, 320, 0, 196, 0, 393,
	428, 452, 215, 646, 727, 406, 444, 448, 0, 359,
	216, 260, 248, 355, 258, 290, 443, 445, 446, 447,
	214, 353, 266, 334, 423, 252, 431, 620, 757, 614,
	613, 286, 295, 719, 755, 340, 371, 219, 426, 390,
	641, 645, 639, 640, 691, 692, 642, 747, 748, 749,
	723, 635, 0, 643, 644, 0, 729, 737, 738, 696,
	190, 203, 291, 751, 360, 256, 450, 433, 429, 622,
	638, 234, 649, 0, 0, 662, 669, 670, 682, 684,
	685, 686, 687, 695, 703, 704, 706, 714, 716, 718,
	720, 725, 734, 754, 192, 193, 204, 212, 221, 233,
	246, 254, 264, 268, 271, 274, 275, 278, 283, 300,
	305, 306, 307, 308, 324, 325, 326, 329, 332, 333,
	336, 338, 339, 342, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 378, 379, 383,
	384, 385, 386, 394, 398, 413, 414, 425, 437, 441,
	265, 421, 442, 0, 299, 694, 701, 301, 250, 267,
	276, 709, 432, 395, 207, 367, 257, 197, 224, 211,
	231, 245, 247, 280, 309, 315, 344, 347, 262, 242,
	222, 364, 220, 381, 401, 402, 403, 405, 313, 238,
	741, 728, 0, 0, 677, 744, 648, 666, 753, 668,
	671, 711, 628, 690, 331, 663, 0, 652, 624, 659,
	625, 650, 679, 241, 683, 647, 730, 693, 743, 289,
	0, 630, 653, 345, 713, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 750,
	293, 700, 0, 391, 316, 0, 0, 0, 681, 733,
	688, 724, 676, 712, 637, 699, 745, 664, 708, 746,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 705, 740, 661, 707, 237, 277, 243,
	236, 407, 710, 756, 623, 702, 0, 626, 629, 752,
	736, 656, 657, 0, 0, 0, 0, 0, 0, 0,
	680, 689, 721, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 698, 0, 0, 0, 633, 627,
	0, 0, 0, 0, 678, 0, 0, 0, 636, 0,
	655, 722, 0, 621, 263, 631, 317, 726, 735, 675,
	438, 739, 673, 672, 742, 717, 634, 732, 667, 288,
	632, 285, 191, 205, 0, 665, 327, 366, 372, 731,
	651, 660, 228, 658, 370, 341, 424, 213, 253, 363,
	346, 368, 697, 715, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 1096, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 758,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 646, 727, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 620, 757, 614, 613, 286, 295, 719, 755, 340,
	371, 219, 426, 390, 641, 645, 639, 640, 691, 692,
	642, 747, 748, 749, 723, 635, 0, 643, 644, 0,
	729, 737, 738, 696, 190, 203, 291, 751, 360, 256,
	450, 433, 429, 622, 638, 234, 649, 0, 0, 662,
	669, 670, 682, 684, 685, 686, 687, 695, 703, 704,
	706, 714, 716, 718, 720, 725, 734, 754, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 694,
	701, 301, 250, 267, 276, 709, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 741, 728, 0, 0, 677, 744,
	648, 666, 753, 668, 671, 711, 628, 690, 331, 663,
	0, 652, 624, 659, 625, 650, 679, 241, 683, 647,
	730, 693, 743, 289, 0, 630, 653, 345, 713, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 750, 293, 700, 0, 391, 316, 0,
	0, 0, 681, 733, 688, 724, 676, 712, 637, 699,
	745, 664, 708, 746, 279, 225, 195, 328, 392, 255,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 705, 740, 661,
	707, 237, 277, 243, 236, 407, 710, 756, 623, 702,
	0, 626, 629, 752, 736, 656, 657, 0, 0, 0,
	0, 0, 0, 0, 680, 689, 721, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 698, 0,
	0, 0, 633, 627, 0, 0, 0, 0, 678, 0,
	0, 0, 636, 0, 655, 722, 0, 621, 263, 631,
	317, 726, 735, 675, 438, 739, 673, 672, 742, 717,
	634, 732, 667, 288, 632, 285, 191, 205, 0, 665,
	327, 366, 372, 731, 651, 660, 228, 658, 370, 341,
	424, 213, 253, 363, 346, 368, 697, 715, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 611, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 758, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 646, 727, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 620, 757, 614, 613, 286,
	295, 719, 755, 340, 371, 219, 426, 390, 641, 645,
	639, 640, 691, 692, 642, 747, 748, 749, 723, 635,
	0, 643, 644, 0, 729, 737, 738, 696, 190, 203,
	291, 751, 360, 256, 450, 433, 429, 622, 638, 234,
	649, 0, 0, 662, 669, 670, 682, 684, 685, 686,
	687, 695, 703, 704, 706, 714, 716, 718, 720, 725,
	734, 754, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 694, 701, 301, 250, 267, 276, 709,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 1399, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 1400, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 0, 177, 178, 179, 534, 533, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	0, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 601, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 0, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 0, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 1511, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 0, 177, 178, 179, 534, 533, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	1512, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 0, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 0, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 588, 177, 178, 179, 534, 533, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	0, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 0, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 0, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 0, 177, 178, 179, 534, 533, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	0, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 601, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 0, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 0, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 0, 177, 178, 179, 534, 1417, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	0, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 601, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 331, 0,
	0, 0, 0, 513, 0, 0, 0, 241, 0, 512,
	0, 0, 0, 289, 0, 0, 0, 345, 0, 382,
	227, 298, 296, 410, 251, 244, 240, 226, 273, 304,
	343, 400, 337, 556, 293, 0, 0, 391, 316, 0,
	0, 0, 0, 0, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 225, 195, 328, 392, 255,
	69, 0, 0, 177, 178, 179, 534, 1414, 536, 537,
	538, 539, 0, 0, 217, 535, 223, 540, 541, 542,
	0, 237, 277, 243, 236, 407, 0, 0, 0, 510,
	527, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 525, 601, 0, 0, 0, 570, 0,
	526, 0, 0, 519, 520, 522, 521, 523, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	317, 569, 0, 0, 438, 0, 0, 567, 0, 0,
	0, 0, 0, 288, 0, 285, 191, 205, 0, 0,
	327, 366, 372, 0, 0, 0, 228, 0, 370, 341,
	424, 213, 253, 363, 346, 368, 0, 0, 369, 294,
	412, 358, 422, 439, 440, 235, 321, 430, 404, 436,
	449, 206, 232, 335, 397, 427, 388, 314, 408, 409,
	284, 387, 261, 194, 292, 198, 399, 420, 218, 380,
	0, 0, 0, 200, 418, 396, 311, 281, 282, 199,
	0, 362, 239, 259, 230, 330, 415, 416, 229, 451,
	208, 435, 202, 209, 434, 323, 411, 419, 312, 303,
	201, 417, 310, 302, 287, 249, 269, 356, 297, 357,
	270, 319, 318, 320, 0, 196, 0, 393, 428, 452,
	215, 0, 0, 406, 444, 448, 0, 359, 216, 260,
	248, 355, 258, 290, 443, 445, 446, 447, 214, 353,
	266, 334, 423, 252, 431, 322, 210, 272, 389, 286,
	295, 0, 0, 340, 371, 219, 426, 390, 557, 568,
	563, 564, 561, 562, 0, 560, 559, 558, 571, 549,
	550, 551, 552, 554, 0, 565, 566, 553, 190, 203,
	291, 0, 360, 256, 450, 433, 429, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 254,
	264, 268, 271, 274, 275, 278, 283, 300, 305, 306,
	307, 308, 324, 325, 326, 329, 332, 333, 336, 338,
	339, 342, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 378, 379, 383, 384, 385,
	386, 394, 398, 413, 414, 425, 437, 441, 265, 421,
	442, 0, 299, 0, 0, 301, 250, 267, 276, 0,
	432, 395, 207, 367, 257, 197, 224, 211, 231, 245,
	247, 280, 309, 315, 344, 347, 262, 242, 222, 364,
	220, 381, 401, 402, 403, 405, 313, 238, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 513, 0, 0, 0,
	241, 0, 512, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 556, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 69, 0, 0, 177, 178, 179, 534,
	533, 536, 537, 538, 539, 0, 0, 217, 535, 223,
	540, 541, 542, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 510, 527, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 570, 0, 526, 0, 0, 519, 520, 522, 521,
	523, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 569, 0, 0, 438, 0, 0,
	567, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 557, 568, 563, 564, 561, 562, 0, 560, 559,
	558, 571, 549, 550, 551, 552, 554, 0, 565, 566,
	553, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 513, 0, 0, 0,
	241, 0, 512, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 556, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 69, 0, 0, 177, 178, 179, 534,
	533, 536, 537, 538, 539, 0, 0, 217, 535, 223,
	540, 541, 542, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 510, 527, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 570, 0, 526, 0, 0, 519, 520, 522, 521,
	523, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 569, 0, 0, 438, 0, 0,
	567, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 557, 568, 563, 564, 561, 562, 0, 560, 559,
	558, 571, 549, 550, 551, 552, 554, 0, 565, 566,
	553, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 556, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 69, 0, 0, 177, 178, 179, 534,
	533, 536, 537, 538, 539, 0, 0, 217, 535, 223,
	540, 541, 542, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 0, 527, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 570, 0, 526, 0, 0, 519, 520, 522, 521,
	523, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 569, 0, 0, 438, 0, 0,
	567, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 2171,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 557, 568, 563, 564, 561, 562, 0, 560, 559,
	558, 571, 549, 550, 551, 552, 554, 0, 565, 566,
	553, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 556, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 69, 0, 588, 177, 178, 179, 534,
	533, 536, 537, 538, 539, 0, 0, 217, 535, 223,
	540, 541, 542, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 0, 527, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 570, 0, 526, 0, 0, 519, 520, 522, 521,
	523, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 569, 0, 0, 438, 0, 0,
	567, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 557, 568, 563, 564, 561, 562, 0, 560, 559,
	558, 571, 549, 550, 551, 552, 554, 0, 565, 566,
	553, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 556, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 69, 0, 0, 177, 178, 179, 534,
	533, 536, 537, 538, 539, 0, 0, 217, 535, 223,
	540, 541, 542, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 0, 527, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 570, 0, 526, 0, 0, 519, 520, 522, 521,
	523, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 569, 0, 0, 438, 0, 0,
	567, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 557, 568, 563, 564, 561, 562, 0, 560, 559,
	558, 571, 549, 550, 551, 552, 554, 0, 565, 566,
	553, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 0, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 972, 982, 983, 975, 976, 977, 978, 979,
	980, 981, 974, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 802, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 0, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 277, 243, 236, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 0, 0, 801, 438, 0, 0,
	0, 0, 0, 0, 798, 799, 288, 766, 285, 191,
	205, 792, 796, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 331, 0, 0, 0, 1074, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	345, 0, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 0, 293, 0, 0,
	391, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 225, 195,
	328, 392, 255, 0, 0, 0, 177, 178, 179, 0,
	1076, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 277, 243, 236, 407, 962,
	963, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 317, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 191,
	205, 0, 0, 327, 366, 372, 0, 0, 0, 228,
	0, 370, 341, 424, 213, 253, 363, 346, 368, 0,
	0, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 0, 0, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 0, 0, 340, 371, 219, 426,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 291, 0, 360, 256, 450, 433, 429,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 0, 0, 301, 250,
	267, 276, 0, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 69, 0, 588, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 1444, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 1446, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 1442, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	766, 285, 191, 205, 764, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 1444, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 1446, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 69,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 1464, 0, 0,
	1465, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 1107, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 1106, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 588, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 69,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 1446, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 1076, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	1349, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1231,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1229,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1227,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1225,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1223,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1219,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1217,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 1215,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 345, 0, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 0, 293, 0, 0, 391, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 225, 195, 328, 392, 255, 1190,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 277, 243, 236, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 317,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 191, 205, 0, 0, 327,
	366, 372, 0, 0, 0, 228, 0, 370, 341, 424,
	213, 253, 363, 346, 368, 0, 0, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	0, 0, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	0, 0, 340, 371, 219, 426, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 291,
	0, 360, 256, 450, 433, 429, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 0, 0, 301, 250, 267, 276, 0, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 1089, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 1080, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 938, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 500, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 185, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 345, 0, 382, 227, 298, 296, 410,
	251, 244, 240, 226, 273, 304, 343, 400, 337, 0,
	293, 0, 0, 391, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 225, 195, 328, 392, 255, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 277, 243,
	236, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 317, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 191, 205, 0, 0, 327, 366, 372, 0,
	0, 0, 228, 0, 370, 341, 424, 213, 253, 363,
	346, 368, 0, 0, 369, 294, 412, 358, 422, 439,
	440, 235, 321, 430, 404, 436, 449, 206, 232, 335,
	397, 427, 388, 314, 408, 409, 284, 387, 261, 194,
	292, 198, 399, 420, 218, 380, 0, 0, 0, 200,
	418, 396, 311, 281, 282, 199, 0, 362, 239, 259,
	230, 330, 415, 416, 229, 451, 208, 435, 202, 209,
	434, 323, 411, 419, 312, 303, 201, 417, 310, 302,
	287, 249, 269, 356, 297, 357, 270, 319, 318, 320,
	0, 196, 0, 393, 428, 452, 215, 0, 0, 406,
	444, 448, 0, 359, 216, 260, 248, 355, 258, 290,
	443, 445, 446, 447, 214, 353, 266, 334, 423, 252,
	431, 322, 210, 272, 389, 286, 295, 0, 0, 340,
	371, 219, 426, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 291, 0, 360, 256,
	450, 433, 429, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 254, 264, 268, 271, 274,
	275, 278, 283, 300, 305, 306, 307, 308, 324, 325,
	326, 329, 332, 333, 336, 338, 339, 342, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 378, 379, 383, 384, 385, 386, 394, 398, 413,
	414, 425, 437, 441, 265, 421, 442, 0, 299, 0,
	0, 301, 250, 267, 276, 0, 432, 395, 207, 367,
	257, 197, 224, 211, 231, 245, 247, 280, 309, 315,
	344, 347, 262, 242, 222, 364, 220, 381, 401, 402,
	403, 405, 313, 238,
}

var yyPact = [...]int{
	4704, -1000, -338, 1622, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1587, 1186, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 569, 1235, 230, 1497, 3883, 167, 969, 379, 94,
	26955, 378, 63, 27405, -1000, 90, -1000, 54, 27405, 85,
	26505, -1000, -1000, -266, 12522, 1465, -7, -11, 27405, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1234, 1557, 1563,
	1585, 1017, 1577, -1000, 10709, 10709, 342, 342, 342, 8909,
	-1000, -1000, 16585, 27405, 27405, 1242, 377, 969, 374, 373,
	368, 332, -99, -1000, -1000, -1000, -1000, 1497, -1000, -1000,
	139, -1000, 232, 1176, -1000, 1169, -1000, 394, 472, 259,
	313, 312, 250, 247, 246, 244, 241, 231, 229, 226,
	270, -1000, 505, 505, -144, -155, 2379, 307, 307, 307,
	352, 1477, 1476, -1000, 502, -1000, 505, 505, 136, 505,
	505, 505, 505, 206, 204, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	27405, -1000, 134, 491, 557, 1497, 183, -1000, -1000, -1000,
	27405, 376, 969, 320, 320, 27405, -1000, 427, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27405, 609, 609, 50, 609, 609, 609,
	609, 105, 452, -15, -1000, 69, 187, 142, 153, 589,
	121, 68, -1000, -1000, 143, 589, 59, -1000, 609, 7053,
	7053, 7053, -1000, 1490, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 351, -1000, -1000, -1000, -1000, 27405, 26055, 239,
	529, -1000, -1000, -1000, -4, -1000, -1000, 1079, 738, -1000,
	12522, 1265, 1187, 1187, -1000, -1000, 400, -1000, -1000, 13872,
	13872, 13872, 13872, 13872, 13872, 13872, 13872, 13872, 13872, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1187, 425, -1000, 12072, 1187, 1187, 1187,
	1187, 1187, 1187, 1187, 1187, 12522, 1187, 1187, 1187, 1187,
	1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187, 1187,
	1187, 1187, -1000, -1000, -1000, 27405, -1000, 1187, 1587, -1000,
	1186, -1000, -1000, -1000, 1498, 12522, 12522, 1587, -1000, 1386,
	10709, -1000, -1000, 1413, -1000, -1000, -1000, -1000, -1000, 639,
	1606, -1000, 15222, 422, 1605, 25605, -1000, 19298, 25155, 1168,
	8445, -57, -1000, -1000, -1000, 527, 18398, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1490, 1044,
	27405, -1000, -1000, 3293, 969, -1000, 1226, -1000, 1037, -1000,
	1196, 134, 332, 1272, 969, 969, 969, 969, 572, -1000,
	-1000, -1000, 505, 505, 255, 3883, 4364, -1000, -1000, -1000,
	24698, 1224, 969, -1000, 1223, -1000, 1516, 338, 507, 507,
	969, -1000, -1000, 27405, 969, 1515, 1514, 27405, 27405, -1000,
	24248, -1000, 23798, 23348, 818, 27405, 22898, 22448, 21998, 21548,
	21098, -1000, 1331, -1000, 1271, -1000, -1000, -1000, 27405, 27405,
	27405, 14, -1000, -1000, 27405, 969, -1000, -1000, 814, 808,
	505, 505, 797, 925, 921, 905, 505, 505, 792, 899,
	959, 144, 788, 786, 782, 780, 892, 102, 772, 744,
	778, 27405, 1221, -1000, 127, 517, 209, 252, 178, 27405,
	191, 1497, 1457, 1163, 350, 320, 1350, 27405, 1536, 969,
	-1000, 7517, -1000, -1000, 888, 12522, -1000, 598, 589, 589,
	-1000, -1000, -1000, -1000, -1000, -1000, 609, 27405, 598, -1000,
	-1000, -1000, 589, 609, 27405, 609, 609, 609, 609, 589,
	609, 27405, 27405, 27405, 27405, 27405, 27405, 27405, 27405, 27405,
	7053, 7053, 7053, 468, 609, -1000, 1347, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 60, -1000, -1000, -1000, -1000, -1000,
	1622, -1000, -1000, -1000, -104, 1162, 20648, -1000, -276, -279,
	-280, -281, -1000, -1000, -1000, -295, -298, -1000, -1000, -1000,
	12522, 12522, 12522, 12522, 754, 494, 13872, 779, 603, 13872,
	13872, 13872, 13872, 13872, 13872, 13872, 13872, 13872, 13872, 13872,
	13872, 13872, 13872, 13872, 553, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 969, -1000, 1620, 1266, 1266, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 14322, 9359, 7517,
	1017, 1034, 1587, 10709, 10709, 12522, 12522, 11609, 11159, 10709,
	1487, 565, 738, 27405, -1000, -1000, 13422, -1000, -1000, -1000,
	-1000, -1000, 936, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27405, 27405, 10709, 10709, 10709, 10709, 10709, -1000, 1160, -1000,
	-167, 16135, 12522, 1563, 1017, 1413, 1521, 1615, 457, 857,
	1136, -1000, 781, 1563, 17948, 1120, -1000, 1413, -1000, -1000,
	-1000, 27405, -1000, -1000, 20198, -1000, -1000, 6589, 27405, 223,
	27405, -1000, 1125, 1304, -1000, -1000, -1000, 1551, 17498, 27405,
	1113, 1049, -1000, -1000, 420, 7981, -57, -1000, 7981, 1104,
	-1000, -59, -75, 9809, 401, -1000, -1000, -1000, 2379, 14772,
	1066, -1000, 2, -1000, -1000, -1000, 1196, -1000, 1196, 1196,
	1196, 1196, 14, 14, 14, 14, -1000, -1000, -1000, -1000,
	-1000, 1215, 1214, -1000, 1196, 1196, 1196, 1196, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1211, 1211, 1211, 1197, 1197,
	302, -1000, 12522, 141, 27405, 1529, 777, 127, 27405, 1346,
	-1000, 27405, 1272, 1272, 1272, -1000, 1532, 939, 932, -1000,
	1131, -1000, -1000, 1583, -1000, -1000, 501, 614, 613, 554,
	27405, 109, 222, -1000, 295, -1000, 27405, 1204, 1513, 507,
	969, -1000, 969, -1000, -1000, -1000, -1000, 407, -1000, -1000,
	969, 1130, -1000, 1128, 684, 596, 617, 587, 1130, -1000,
	-1000, -123, 1130, -1000, 1130, -1000, 1130, -1000, 1130, -1000,
	1130, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 514,
	27405, 109, 553, -1000, 349, -1000, -1000, 553, 553, -1000,
	-1000, -1000, -1000, 885, 884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -336, 27405, 355, 113, 149, 27405, 27405, 27405, 27405,
	27405, 388, -1000, -1000, -1000, 202, 27405, 27405, 27405, 27405,
	424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 738, 27405,
	-1000, -1000, 609, 609, -1000, -1000, 27405, 609, -1000, -1000,
	-1000, -1000, -1000, -1000, 609, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 875,
	-1000, 27405, 27405, -1000, -1000, -1000, -1000, -1000, 22, -65,
	193, -1000, -1000, -1000, -1000, 1555, -1000, 738, 494, 523,
	480, -1000, -1000, 696, -1000, -1000, 2242, -1000, -1000, -1000,
	-1000, 779, 13872, 13872, 13872, 524, 2242, 2257, 1327, 649,
	428, 620, 620, 438, 438, 438, 438, 438, 689, 689,
	-1000, -1000, -1000, -1000, 936, -1000, -1000, -1000, 936, 10709,
	10709, 1114, 1187, 406, -1000, 1234, -1000, -1000, 1563, 1020,
	1020, 730, 870, 586, 1604, 1020, 576, 1603, 1020, 1020,
	10709, -1000, -1000, 584, -1000, 12522, 936, -1000, 611, 1111,
	1106, 1020, 936, 936, 1020, 1020, 27405, -1000, -263, -1000,
	-88, 462, 1187, -1000, 19748, -1000, -1000, 936, 1079, 1498,
	-1000, -1000, 1448, -1000, 1374, 12522, 12522, 12522, -1000, -1000,
	-1000, 1498, 1568, -1000, 1401, 1398, 1595, 10709, 19298, 1413,
	-1000, -1000, -1000, 405, 1595, 1152, 1187, -1000, 27405, 19298,
	19298, 19298, 19298, 19298, -1000, 1365, 1364, -1000, 1362, 1361,
	1373, 27405, -1000, 1031, 1017, 17498, 223, 1047, 19298, 27405,
	-1000, -1000, 19298, 27405, 6125, -1000, 1104, -57, -58, -1000,
	-1000, -1000, -1000, 738, -1000, 883, -1000, 2155, -1000, 310,
	-1000, -1000, -1000, -1000, 357, -14, -1000, -1000, 14, 14,
	-1000, -1000, 401, 686, 401, 401, 401, 874, 874, -1000,
	-1000, -1000, -1000, -1000, 776, -1000, -1000, -1000, 761, -1000,
	-1000, 690, 1286, 141, -1000, -1000, 505, 864, 1469, -1000,
	-1000, 988, 354, -1000, 27405, -1000, 1337, 1336, 1306, -1000,
	-1000, -1000, -1000, -1000, 4203, 27405, 1029, -1000, 107, 27405,
	981, 27405, -1000, 1026, 27405, -1000, 969, -1000, -1000, 7517,
	-1000, 27405, 1187, -1000, -1000, -1000, -1000, 358, 1495, 1492,
	109, 107, 401, 969, -1000, -1000, -1000, -1000, -1000, -339,
	1022, 27405, 185, -1000, 1199, 929, -1000, 1262, -1000, -1000,
	-1000, -1000, 129, 196, 194, 339, -1000, 421, 1286, 27405,
	-1000, -1000, -1000, 589, -1000, -1000, 589, -1000, -1000, -1000,
	-1000, -1000, -1000, 1488, -66, -311, -1000, -307, -1000, -1000,
	-1000, -1000, 524, 2242, 2222, -1000, 13872, 13872, -1000, -1000,
	1020, 1020, 10709, 7517, 1587, 1498, -1000, -1000, 335, 553,
	335, 13872, 13872, -1000, 13872, 13872, -1000, -116, 1112, 560,
	-1000, 12522, 734, -1000, -1000, 13872, 13872, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 364, 360, 359, 27405,
	-1000, -1000, -1000, 804, 849, 1382, 738, 738, -1000, -1000,
	27405, -1000, -1000, -1000, -1000, 1593, 12522, -1000, 1102, -1000,
	5661, 1563, 1303, 27405, 1187, 1622, 15685, 27405, 1082, -1000,
	508, 1304, 1267, 1299, 1348, -1000, -1000, -1000, -1000, 1315,
	-1000, 1282, -1000, -1000, -1000, -1000, -1000, 1017, 1595, 19298,
	1069, -1000, 1069, -1000, 404, -1000, -1000, -1000, -72, -82,
	-1000, -1000, -1000, 2379, -1000, -1000, -1000, 624, 13872, 1613,
	-1000, 848, 1511, -1000, 1504, -1000, -1000, 401, 401, -1000,
	-1000, -1000, -1000, -1000, -1000, 1011, -1000, 1009, 1086, 1004,
	72, -1000, 1198, 1485, 505, 505, -1000, 714, -1000, 969,
	-1000, 27405, -1000, 27405, 27405, 27405, 1580, 1081, -1000, 27405,
	-1000, -1000, 27405, -1000, -1000, 1393, 141, 1002, -1000, -1000,
	-1000, 222, 27405, -1000, 1266, 107, -1000, -1000, -1000, -1000,
	-1000, -1000, 1192, -1000, -1000, -1000, 965, -1000, -124, 969,
	27405, 27405, 27405, -1000, 27405, -1000, -1000, -1000, 609, 609,
	-1000, 1482, -1000, 969, -1000, 13872, 2242, 2242, -1000, -1000,
	936, -1000, 1563, -1000, 936, 1196, 1196, -1000, 1196, 1197,
	-1000, 1196, 46, 1196, 44, 936, 936, 2161, 2090, 1955,
	1194, 1187, -111, -1000, 738, 12522, 1092, 867, 1187, 1187,
	1187, 991, 844, 14, -1000, -1000, -1000, 1590, 1579, 738,
	-1000, -1000, -1000, 1518, 1075, 1078, -1000, -1000, 10259, 994,
	1390, 403, 991, 1587, 27405, 12522, -1000, -1000, 12522, 1195,
	-1000, 12522, -1000, -1000, -1000, 1587, 1587, 1069, -1000, -1000,
	444, -1000, -1000, -1000, -1000, -1000, 2242, -127, -1000, -1000,
	-1000, -1000, -1000, 14, 841, 14, 680, -1000, 679, -1000,
	-1000, -206, -1000, -1000, 1233, 1305, -1000, -1000, 1192, -1000,
	-1000, -1000, 27405, 27405, -1000, -1000, 217, -1000, 287, 987,
	-1000, -152, -1000, -1000, 1546, 27405, -1000, -1000, 7517, -1000,
	-1000, 1191, 1270, -1000, -1000, -1000, -1000, -1000, -1000, 2242,
	-1000, 1498, -1000, -1000, 177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13872, 13872, 13872, 13872, 13872, 1563, 839,
	738, 13872, 13872, 18848, 27405, 27405, 17035, 14, -18, -1000,
	12522, 12522, 1503, -1000, 1187, -1000, 1165, 27405, 1187, 27405,
	-1000, 1563, -1000, 738, 738, 27405, 738, 1563, -1000, -1000,
	401, -1000, 401, 948, 945, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1541, 1081, -1000, 215, 27405, -1000, 222,
	-1000, -161, -162, 1186, 984, 1080, -1000, 503, 27405, 27405,
	-1000, -1000, -1000, 611, 611, 611, 611, 245, 936, -1000,
	611, 611, 977, -1000, 977, 977, 462, -257, -1000, 1451,
	1447, 738, 1079, 1611, -1000, 1187, 1622, 398, 1078, -1000,
	-1000, 975, -1000, -1000, -1000, -1000, -1000, 1186, 1187, 1179,
	-1000, -1000, -1000, 207, -1000, 7517, 5197, 968, -1000, -1000,
	-1000, -1000, -1000, 936, 151, -129, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -18, 240, -1000, 1416, 1403, 1578, 27405,
	1078, 27405, -1000, 207, 12972, 27405, -1000, -44, -1000, -1000,
	-1000, -1000, -1000, 1262, -1000, 1381, -121, -138, 1422, 1427,
	1427, 1447, 1572, 1445, 1432, -1000, 836, 1068, -1000, -1000,
	611, 936, 957, 301, -1000, -1000, -124, -1000, 1372, -1000,
	1420, 666, -1000, -1000, -1000, -1000, 823, -1000, 1569, 1567,
	-1000, -1000, -1000, 1292, 122, -1000, -125, -1000, 663, -1000,
	-1000, -1000, 822, 664, 1287, -1000, 1600, -1000, -135, -1000,
	-1000, -1000, -1000, -1000, 1610, 437, 437, -140, -1000, -1000,
	-1000, 294, 770, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1902, 1901, 12, 87, 80, 1900, 1898, 1897, 1896,
	127, 125, 124, 1895, 1894, 1893, 1891, 1890, 1889, 1888,
	1886, 1885, 1880, 1879, 1878, 47, 118, 31, 39, 122,
	1877, 1876, 45, 1874, 1873, 1872, 120, 119, 502, 1871,
	143, 1870, 1869, 1868, 1867, 1864, 1863, 1860, 1859, 1858,
	1852, 1847, 1846, 1834, 139, 1833, 1831, 7, 1830, 49,
	1829, 1828, 1827, 1826, 1824, 77, 1822, 1819, 1818, 111,
	1817, 1816, 43, 162, 62, 73, 1815, 1813, 102, 762,
	1812, 97, 123, 1811, 2350, 1809, 32, 67, 89, 1808,
	41, 1807, 1803, 83, 1801, 1799, 1798, 68, 1797, 1796,
	2882, 1792, 63, 75, 14, 40, 1790, 1788, 1786, 1785,
	37, 163, 1784, 1783, 23, 1781, 1780, 151, 1779, 82,
	27, 1778, 15, 18, 20, 1777, 81, 1775, 44, 72,
	30, 1773, 78, 1772, 1771, 1770, 1767, 33, 1764, 70,
	100, 24, 1751, 1748, 11, 9, 1747, 1744, 1742, 1739,
	1737, 1736, 4, 1735, 1733, 1729, 35, 1726, 6, 21,
	64, 137, 26, 8, 1724, 121, 1723, 25, 108, 58,
	101, 1720, 1719, 1717, 944, 71, 133, 1716, 1715, 34,
	1714, 112, 114, 1709, 1489, 1707, 1706, 88, 840, 2274,
	19, 110, 1704, 1703, 1680, 46, 74, 17, 1697, 1694,
	1693, 126, 115, 60, 885, 42, 1692, 1691, 1690, 1689,
	1688, 1687, 1686, 117, 28, 16, 104, 29, 1685, 1684,
	1682, 55, 65, 1681, 106, 105, 57, 84, 1679, 113,
	79, 56, 1676, 142, 1672, 1669, 1668, 1667, 50, 1666,
	1665, 1663, 1662, 99, 85, 52, 36, 1655, 38, 96,
	91, 86, 1652, 22, 116, 10, 1650, 3, 0, 1647,
	5, 135, 1479, 103, 1646, 1645, 1, 1644, 2, 1642,
	1640, 76, 1635, 1634, 1633, 1629, 3096, 1613, 107, 1628,
	144,
}

var yyR1 = [...]int{
	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 258, 258, 258, 261, 261, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 278, 278, 95, 95, 93, 93, 94, 94, 160,
	160, 13, 14, 14, 170, 170, 169, 169, 169, 171,
	171, 171, 171, 204, 204, 15, 15, 15, 15, 15,
	70, 70, 260, 260, 259, 257, 257, 256, 256, 255,
	23, 24, 33, 33, 33, 33, 34, 35, 262, 262,
	234, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 236, 236, 223, 223, 235, 235, 235,
	235, 235, 235, 235, 222, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 206, 206, 206, 206,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 210, 210, 210, 210,
	210, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 221, 221, 213, 213, 216, 216,
	217, 217, 217, 218, 218, 219, 219, 214, 214, 214,
	215, 215, 215, 224, 248, 248, 247, 247, 245, 245,
	245, 245, 233, 233, 242, 242, 242, 242, 242, 232,
	232, 228, 228, 228, 229, 229, 230, 230, 227, 227,
	231, 231, 244, 244, 243, 225, 225, 226, 226, 250,
	250, 250, 250, 251, 267, 268, 266, 266, 266, 266,
	266, 59, 59, 59, 183, 183, 183, 240, 240, 239,
	239, 239, 241, 241, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 178, 178, 178, 265, 265, 265, 265,
	265, 265, 264, 264, 264, 237, 237, 237, 263, 263,
	129, 129, 130, 130, 30, 30, 30, 30, 30, 30,
	29, 29, 29, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 31, 31, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 220, 220, 220, 252, 252, 253, 253,
	17, 22, 22, 18, 18, 18, 18, 19, 19, 41,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 269, 269, 177, 177, 185, 185,
	176, 176, 175, 175, 175, 179, 179, 179, 180, 180,
	273, 273, 273, 43, 43, 45, 45, 46, 47, 47,
	199, 199, 200, 200, 48, 49, 60, 60, 60, 60,
	60, 60, 62, 62, 62, 7, 7, 7, 7, 56,
	56, 56, 6, 6, 44, 44, 51, 270, 270, 271,
	272, 272, 272, 272, 52, 20, 20, 20, 20, 20,
	20, 77, 77, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 71, 71, 71, 66, 66,
	279, 54, 55, 55, 69, 69, 69, 63, 63, 63,
	68, 68, 68, 74, 74, 76, 76, 76, 76, 76,
	78, 78, 78, 78, 78, 78, 78, 73, 73, 75,
	75, 75, 75, 192, 192, 192, 191, 191, 85, 85,
	86, 86, 87, 87, 88, 88, 88, 127, 103, 103,
	159, 159, 158, 158, 161, 161, 89, 89, 89, 89,
	90, 90, 91, 91, 92, 92, 198, 198, 197, 197,
	197, 196, 196, 96, 96, 96, 98, 97, 97, 97,
	97, 99, 99, 101, 101, 100, 100, 102, 104, 104,
	104, 104, 104, 105, 105, 84, 84, 84, 84, 84,
	84, 84, 84, 173, 173, 107, 107, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 118, 118, 118,
	118, 118, 118, 108, 108, 108, 108, 108, 108, 108,
	72, 72, 119, 119, 119, 126, 120, 120, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 115, 115, 115, 115, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 280, 280, 117, 116, 116,
	116, 116, 116, 116, 116, 67, 67, 67, 67, 67,
	203, 203, 203, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 133, 133, 64, 64,
	131, 131, 132, 134, 134, 128, 128, 128, 110, 110,
	110, 110, 110, 110, 110, 110, 112, 112, 112, 135,
	135, 136, 136, 137, 137, 138, 138, 139, 140, 140,
	140, 141, 141, 141, 141, 32, 32, 32, 32, 32,
	27, 27, 27, 27, 28, 28, 28, 79, 79, 79,
	79, 81, 81, 80, 80, 57, 57, 58, 58, 58,
	82, 82, 83, 83, 83, 83, 156, 156, 156, 142,
	142, 142, 142, 148, 148, 148, 144, 144, 146, 146,
	146, 147, 147, 147, 145, 151, 151, 153, 153, 152,
	152, 150, 150, 155, 155, 154, 154, 149, 149, 109,
	109, 109, 109, 109, 157, 157, 157, 157, 162, 162,
	122, 122, 124, 124, 123, 125, 163, 163, 167, 164,
	164, 168, 168, 168, 168, 168, 165, 165, 166, 166,
	193, 193, 193, 172, 172, 184, 184, 181, 181, 182,
	182, 174, 174, 186, 186, 186, 53, 121, 121, 249,
	249, 246, 189, 189, 190, 190, 194, 194, 195, 195,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 276,
	277, 201, 202, 202, 202,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	5, 3, 6, 7, 7, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 3, 0, 2, 3, 3, 4,
	2, 3, 3, 2, 3, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 3, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 10,
	11, 11, 12, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 0, 1, 2, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 4, 4, 2,
	10, 3, 6, 7, 5, 5, 5, 12, 7, 5,
	9, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 8, 8,
	3, 3, 5, 6, 6, 5, 4, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 2,
	1, 3, 1, 1, 1, 3, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 5,
	4, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 4, 5, 5, 6, 4, 4, 6, 6,
	6, 8, 8, 8, 8, 9, 8, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 4, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -274, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -276, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 226, 227, 229, 230, 231, 232,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 329, 186, 185, 26, -275, 469, -69, 5, -137,
	16, -3, -54, -279, -54, -54, -54, -54, -54, -54,
	-234, -236, 81, 126, 81, -70, -184, 164, 173, 172,
	169, -262, 107, 219, 320, 162, -39, -38, -37, -36,
	-40, 30, -30, -31, -254, -29, -26, 158, 155, 199,
	102, 103, 191, 192, 193, 157, 175, 190, 194, 189,
	208, -25, 77, 32, 342, 345, -241, 154, 160, 161,
	330, 105, 104, 72, 156, -238, 276, 446, -40, 448,
	95, 97, 447, 41, 164, 449, 450, 451, 452, 174,
	453, 454, 455, 456, 462, 463, 464, 465, 106, 5,
	163, -262, -79, 286, 77, -261, -258, 84, 85, 86,
	163, -184, 164, 165, -262, 163, -100, -194, -258, -188,
	339, 177, 373, 374, 224, 77, 276, 446, 226, 240,
	234, 261, 253, 340, 375, 178, 212, 443, 251, 254,
	307, 448, 376, 192, 299, 281, 289, 95, 229, 316,
	461, 377, 459, 97, 447, 76, 48, 41, 187, 249,
	245, 449, 213, 378, 350, 206, 105, 102, 468, 243,
	47, 28, 458, 104, 46, 450, 379, 451, 291, 266,
	437, 45, 304, 193, 380, 80, 344, 445, 293, 244,
	290, 223, 457, 159, 381, 429, 301, 438, 382, 267,
	271, 383, 308, 49, 384, 385, 439, 103, 386, 75,
	452, 238, 239, 387, 221, 176, 310, 265, 174, 34,
	294, 341, 225, 55, 200, 311, 43, 269, 42, 433,
	388, 436, 264, 260, 50, 389, 390, 391, 392, 453,
	263, 237, 259, 467, 218, 454, 59, 161, 273, 272,
	274, 207, 306, 256, 393, 394, 395, 181, 78, 396,
	246, 19, 397, 398, 302, 214, 399, 53, 400, 401,
	314, 190, 402, 51, 455, 38, 195, 456, 403, 404,
	405, 406, 407, 300, 408, 292, 268, 270, 202, 288,
	343, 409, 242, 194, 460, 410, 182, 444, 196, 199,
	189, 315, 183, 411, 412, 413, 414, 415, 416, 417,
	230, 462, 40, 418, 419, 420, 421, 222, 217, 309,
	318, 58, 79, 278, 422, 442, 236, 215, 423, 227,
	52, 463, 464, 465, 209, 466, 284, 106, 219, 220,
	44, 257, 201, 424, 425, 247, 248, 262, 235, 258,
	228, 430, 203, 303, 191, 426, 317, 216, 279, 347,
	208, 305, 441, 346, 255, 252, 210, 427, 165, 204,
	205, 428, 431, 295, 285, 296, 297, 298, 286, 211,
	345, 250, 280, 163, -165, 281, -185, 282, 283, 294,
	295, 301, -177, 302, 300, 202, -273, 308, 163, 303,
	153, 144, 291, 292, 285, 298, 286, 211, -269, -258,
	451, 466, 307, 254, 287, 293, 309, 433, 297, 296,
	-194, 228, -199, 233, -189, -258, -188, 231, -100, -60,
	429, 157, -201, -201, -71, 433, 435, -120, -84, -106,
	110, -111, 30, 24, -110, -107, -128, -125, -126, 144,
	145, 147, 146, 148, 133, 134, 141, 111, 149, -115,
	-113, -114, -116, 88, 87, 96, 89, 90, 91, 92,
	98, 99, 100, -189, -194, -123, -276, 65, 66, 330,
	331, 332, 333, 338, 334, 113, 54, 319, 328, 327,
	326, 323, 324, 321, 322, 336, 337, 168, 320, 162,
	139, 329, -258, -188, 41, 284, 284, -100, -5, -4,
	-276, 6, 21, 22, -141, 18, 17, -277, 83, -63,
	-76, 60, 61, -78, 22, 37, 64, 62, 21, -55,
	-75, 135, -84, -194, -75, -174, 167, -174, -174, -164,
	-204, 228, -168, 309, 308, -190, -166, -189, -187, -165,
	306, 158, 348, 109, 23, 25, 112, 144, 17, 113,
	36, 160, 175, 143, 171, 330, 153, 69, 349, 321,
	322, 319, 325, 332, 333, 320, 282, 30, 11, 351,
	26, 185, 22, 37, 137, 155, 116, 117, 188, 24,
	186, 100, 354, 20, 72, 180, 12, 173, 14, 355,
	356, 15, 168, 167, 128, 164, 67, 9, 149, 27,
	125, 63, 357, 29, 358, 359, 360, 361, 65, 126,
	18, 323, 324, 32, 434, 362, 338, 197, 139, 70,
	56, 435, 110, 363, 364, 98, 365, 101, 73, 440,
	107, 16, 68, 39, 366, 198, 367, 170, 368, 312,
	369, 127, 156, 329, 66, 370, 162, 283, 6, 335,
	31, 184, 172, 64, 371, 163, 115, 336, 337, 166,
	99, 5, 169, 33, 10, 71, 74, 326, 327, 328,
	54, 342, 114, 13, 372, 313, 108, 307, 254, -235,
	126, -222, -226, -189, 179, -251, 175, -100, -244, -243,
	-189, -79, 163, -258, 164, 164, 164, -182, 168, 329,
	-36, -37, -165, 143, 196, 82, 82, -226, -225, -224,
	-263, 198, 179, -250, -242, 171, 180, -232, 172, 173,
	-227, 164, 29, -263, -227, 170, 180, 198, 198, 106,
	198, 106, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 195, -233, 118, -233, 346, 346, -238, -263, -263,
	-263, 166, 34, 34, -186, -227, 166, 23, -233, -233,
	-165, 143, -233, -233, -233, -233, 206, 206, -233, -233,
	-233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
	-233, -233, -233, -100, -82, 213, 153, 155, 158, 73,
	118, -38, 208, -22, -100, 163, -258, -181, 168, -181,
	-100, 150, -100, -179, 126, 13, -179, -176, 284, 288,
	289, 290, -179, -179, -179, -179, 209, 299, -228, 164,
	34, 176, 284, 209, 299, 209, 210, 209, 210, 209,
	-175, 12, 128, 320, 304, 301, 202, 163, 203, 165,
	305, -258, 436, 210, -175, 284, 205, -179, -202, -276,
	-190, -202, -202, 31, 166, -189, -56, -189, 88, -7,
	-3, -11, -10, -12, 118, -77, 284, -65, 144, 451,
	437, 438, 439, 436, 300, 444, 442, 440, 209, 441,
	82, 109, 107, 108, 125, -84, -108, 128, 110, 126,
	127, 112, 130, 129, 140, 133, 134, 135, 136, 137,
	138, 139, 131, 132, 143, 118, 119, 120, 121, 122,
	123, 124, -173, -276, -126, -276, 151, 152, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -276, 150,
	-2, -120, -4, -276, -276, -276, -276, -276, -276, -276,
	-276, -133, -84, -276, -280, -117, -276, -280, -117, -280,
	-117, -280, -276, -280, -117, -280, -117, -280, -280, -117,
	-276, -276, -276, -276, -276, -276, -276, -201, -270, -271,
	-103, -100, -276, -137, -3, -54, -156, 20, 32, -84,
	-138, -139, -84, -137, 56, -73, -75, -78, 60, 61,
	94, 12, -192, -191, 23, -189, 88, 150, 12, -101,
	27, -100, -86, -87, -88, -89, -103, -127, -276, 12,
	-93, -94, -100, -102, -194, 82, 228, -168, -204, -170,
	-169, 310, 312, 118, -193, -189, 88, 30, 83, 82,
	-100, -206, -209, -211, -210, -212, -207, -208, 251, 252,
	144, 255, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 31, 187, 247, 248, 249, 250, 267, 268,
	269, 270, 271, 272, 273, 274, 234, 253, 340, 235,
	236, 237, 238, 239, 240, 242, 243, 244, 245, 246,
	-261, -258, 81, 83, 82, -213, 81, -82, -182, -249,
	-246, 74, -258, -258, -258, -258, 110, -233, -233, 195,
	-29, -26, -254, 16, -25, -26, 158, 102, 103, 155,
	81, -222, 81, -231, -261, -258, 81, 29, 170, 169,
	-230, -227, -230, -231, -258, -128, -189, -194, -258, 29,
	29, -161, -189, -161, -161, 21, -161, 21, -161, 21,
	89, -189, -161, 21, -161, 21, -161, 21, -161, 21,
	-161, 21, 30, 75, 76, 30, 78, 79, 80, -128,
	-128, -222, -165, -100, -258, 89, 89, -233, -233, 89,
	88, 88, 88, -233, -233, 89, 88, -258, 88, -264,
	181, 223, 225, 89, 89, 89, 89, 30, 88, -265,
	30, 458, 457, 459, 460, 461, 89, 30, 89, 30,
	89, -189, 81, -81, 215, 118, 204, 204, 163, 163,
	217, -100, 216, 218, 220, 41, 82, 166, -181, 73,
	-95, -100, 24, -258, -195, -194, -187, 88, -84, -229,
	12, 128, -175, -175, -179, -100, -229, -175, -179, -100,
	-179, -179, -179, -179, -175, -179, -194, -194, -100, -100,
	-100, -100, -100, -100, -100, -202, -202, -202, -180, 126,
	-179, 73, -200, 231, 265, 430, 431, 432, 82, 342,
	-93, 436, 436, 436, 436, 436, 436, -84, -84, -84,
	-84, -118, 98, 110, 99, 100, -111, -119, -123, -126,
	93, 128, 126, 127, 112, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-203, -258, 88, 144, -258, -110, -110, -189, -74, 22,
	37, -73, -190, -195, -187, -69, -277, -277, -137, -73,
	-73, -84, -84, -128, 88, -73, -128, 88, -73, -73,
	-68, 22, 37, -131, -132, 114, -128, -277, -111, -189,
	-189, -73, -74, -74, -73, -73, 82, -272, 312, 313,
	434, -197, 198, -196, 23, -194, 88, -121, -120, -141,
	-277, -142, 27, 10, 128, 82, 19, 82, -140, 25,
	26, -141, -112, -189, 89, 92, -85, 82, 12, -78,
	-100, -191, 135, -195, -100, -160, 198, -100, 31, 82,
	-96, -98, -97, -99, 63, 67, 69, 64, 65, 66,
	70, -198, 23, -86, -3, -276, -100, -93, -278, 82,
	12, 74, -278, 82, 150, -168, -170, 82, 311, 313,
	314, 73, 101, -84, -215, 143, -240, -239, -238, -222,
	-224, -225, -226, 83, -143, -218, 279, -213, -213, -213,
	-213, -213, -214, -165, -214, -214, -214, 81, 81, -213,
	-213, -213, -213, -216, 81, -216, -216, -217, 81, -217,
	-251, -84, -248, -247, -245, -246, 174, 95, 342, -243,
	-140, 89, -81, -100, 73, -189, -249, -249, -249, 24,
	-258, 88, -258, 88, 82, 17, -223, -222, -129, 223,
	-253, 198, -250, -244, 81, 29, -230, -231, -231, 150,
	-258, 82, 27, 106, 106, 106, 106, 342, 155, 31,
	-222, -129, -203, 166, -203, -203, 88, 88, -178, 466,
	-93, 165, 222, -83, 325, 88, 84, -100, -100, -100,
	-100, -100, 158, 155, 206, -100, -100, -93, -100, 82,
	-59, 183, 178, -100, -179, -179, -100, -179, -179, 88,
	-100, -189, -65, 312, 342, 20, -66, 20, 98, 99,
	100, -119, -111, -111, -111, -72, 188, 109, -277, -277,
	-73, -73, -276, 150, -5, -141, -277, -277, 82, 74,
	23, 12, 12, -277, 12, 12, -277, -277, -73, -134,
	-132, 116, -84, -277, -277, 82, 82, -277, -277, -277,
	-277, -277, -271, 433, 313, -104, 71, 167, 72, -276,
	-196, -277, -156, 39, 47, 58, -84, -84, -139, -156,
	-172, 20, 12, 54, 54, -105, 13, -75, -86, -78,
	150, -105, -109, 31, 54, -3, -276, -276, -163, -167,
	-128, -87, -88, -88, -87, -88, 63, 63, 63, 68,
	63, 68, 63, -97, -194, -277, -277, -3, -160, 74,
	-86, -100, -86, -102, -194, 135, -169, -171, 315, 312,
	318, -258, 88, 82, -238, -226, 98, 110, 30, 73,
	276, 95, 170, 29, 169, -219, 280, -214, -214, -215,
	-258, 144, -215, -215, -215, -221, 88, -221, 89, 89,
	83, -32, -27, -28, 32, 77, -245, -233, 88, 38,
	83, 165, -100, 73, 73, 73, 16, -158, -189, 82,
	83, -130, 224, -128, 83, -189, 83, -158, -231, -190,
	-189, -276, 163, 30, 30, -129, -130, -215, -258, 468,
	467, 83, -100, -80, 213, 221, 81, 85, -260, 74,
	204, 276, 204, 207, 166, -59, -32, -100, -175, -175,
	32, 312, 445, 443, -72, 109, -111, -111, -277, -277,
	-74, -190, -137, -156, -205, 144, 251, 187, 249, 245,
	265, 256, 278, 247, 279, -203, -205, -111, -111, -111,
	-111, 339, -137, 117, -84, 115, -111, -111, 164, 164,
	164, -161, 40, 88, 88, 59, -100, -135, 14, -84,
	135, -141, -162, 73, -163, -122, -124, -123, -276, -157,
	-277, -189, -161, -105, 82, 118, -91, -90, 73, 74,
	-92, 73, -90, 63, 63, -277, -105, -86, -105, -105,
	150, 312, 316, 317, -238, 98, -111, 10, 88, 29,
	29, -215, -215, 83, 82, 83, 82, 83, 82, -183,
	379, 110, -28, -27, -233, -233, 89, -258, -100, -100,
	-100, -100, 17, 82, -222, -128, 54, -248, 83, -252,
	-253, -100, -110, -130, -159, 81, 83, -257, 342, -259,
	-258, -189, -189, -189, -100, -179, -179, 32, -258, -111,
	-277, -141, -277, -213, -213, -213, -217, -213, 239, -213,
	239, -277, -277, 20, 20, 20, 20, -276, -64, 335,
	-84, 82, 82, -276, -276, -276, -277, 88, -214, -136,
	15, 17, 28, -162, 82, -277, -277, 82, 54, 150,
	-277, -137, -167, -84, -84, 81, -84, -137, -105, -114,
	-214, 88, -214, 89, 89, 379, 30, 78, 79, 80,
	30, 75, 76, -159, -158, -189, 200, 182, -277, 82,
	-220, 342, 345, 23, -158, -256, -255, -190, 81, 74,
	-156, -214, -258, -111, -111, -111, -111, -111, -141, 88,
	-111, -111, -158, -277, -158, -158, -197, -214, -145, -150,
	-176, -84, -120, 29, -124, 54, -3, -189, -122, -189,
	-141, -158, -141, -215, -215, 83, 83, 23, 201, -100,
	-253, 346, 346, -3, 83, 82, 118, -158, -100, -277,
	-277, -277, -277, -67, 128, 342, -277, -277, -277, -277,
	-277, -277, -104, -148, 429, -151, 43, -152, 44, 10,
	-122, 150, 83, -3, -276, 81, -57, 342, -255, -237,
	-190, 88, 89, 83, -277, 340, 70, 343, -145, 48,
	257, -153, 52, -154, -149, 53, 17, -163, -189, -57,
	-111, 197, -158, -58, 212, 433, -260, 59, 341, 344,
	-146, 50, -144, 49, -144, -152, 17, -155, 45, 46,
	88, -277, -277, 83, 175, -257, 59, -147, 51, 73,
	101, 88, 17, 17, -267, -268, 73, 214, 342, 73,
	101, 88, 88, -268, 73, 11, 10, 343, -266, 183,
	178, 181, 31, -266, 344, 177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 813, 0, 550, 550, 550, 550, 550, 550,
	550, 0, 0, -2, -2, -2, 837, 37, 0, 925,
	0, 0, -2, 484, 485, 0, 487, -2, 0, 0,
	496, 1351, 1351, 545, 0, 0, 0, 0, 0, 1349,
	54, 55, 502, 503, 504, 1, 3, 0, 554, 821,
	0, 0, -2, 552, 0, 0, 931, 931, 931, 0,
	85, 86, 0, 0, 0, 837, 0, 0, 0, 0,
	0, 929, 0, 926, 108, 109, 89, -2, 113, 114,
	0, 118, 366, 327, 369, 325, 355, -2, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 222, 222, 0, 0, -2, 318, 318, 318,
	0, 0, 0, 352, 933, 272, 222, 222, 0, 222,
	222, 222, 222, 0, 0, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	0, 107, 850, 0, 0, 117, 38, 34, 35, 36,
	0, 0, 0, 927, 927, 0, 418, 635, 946, 947,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 0, 475, 475, 0, 475, 475, 475,
	475, 0, 0, 0, 430, 0, 0, 0, 0, 472,
	0, 0, 449, 451, 0, 472, 0, 459, 475, 1352,
	1352, 1352, 916, 0, 469, 467, 481, 482, 464, 465,
	483, 486, 0, 491, 494, 942, 943, 0, 509, 0,
	1161, 501, 514, 515, 0, 546, 547, 39, 686, 645,
	0, 651, 653, 0, 688, 689, 690, 691, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	719, 720, 721, 798, 799, 800, 801, 802, 803, 804,
	805, 655, 656, 795, 0, 905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 786, 0, 755, 755, 755,
	755, 755, 755, 755, 755, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 1351, 0, 524, 0, 813, 50,
	0, 550, 555, 556, 856, 0, 0, 813, 1350, 0,
	0, -2, -2, 566, 572, 573, 574, 575, 576, 551,
	0, 579, 583, 0, 0, 0, 932, 0, 0, 71,
	0, 1316, 909, -2, -2, 0, 0, 944, 945, 918,
	-2, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, -2, 1105, 0,
	0, 127, 128, 0, 37, 248, 0, 123, 0, 242,
	196, 850, 929, 939, 0, 0, 0, 0, 0, 91,
	115, 116, 222, 222, 0, 117, 117, 334, 335, 336,
	0, 0, -2, 246, 0, 319, 0, 0, 236, 236,
	240, 238, 239, 0, 0, 0, 0, 0, 0, 346,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 0, 223, 0, 364, 365, 273, 0, 0,
	0, 0, 344, 345, 0, 0, 934, 935, 0, 0,
	222, 222, 0, 0, 0, 0, 222, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 841, 0, 0, 0, 0, 0,
	0, -2, 0, 410, 0, 927, 0, 0, 0, 0,
	417, 0, 419, 420, 0, 0, 421, 0, 472, 472,
	470, 471, 423, 424, 425, 426, 475, 0, 0, 231,
	232, 233, 472, 475, 0, 475, 475, 475, 475, 472,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 1352, 478, 475, 456, 457, 460, 461, 1353,
	1354, 462, 463, 917, 492, 495, 512, 510, 511, 513,
	505, 506, 507, 508, 0, 525, 526, 531, 0, 0,
	0, 0, 537, 538, 539, 0, 0, 542, 543, 544,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 673, 674, 675, 676, 677,
	678, 679, 652, 0, 666, 0, 0, 0, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 0, 563, 0,
	0, 0, 813, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 787, 0, 739, 747, 0, 740, 748, 741,
	749, 742, 0, 743, 750, 744, 751, 745, 746, 752,
	0, 0, 0, 563, 563, 0, 0, 40, 516, 517,
	0, 618, 937, 821, 0, 565, 859, 0, 0, 822,
	814, 815, 818, 821, 0, 588, 577, 567, 570, 571,
	553, 0, 580, 584, 0, 586, 587, 0, 0, 69,
	0, 634, 0, 590, 592, 593, 594, 616, 0, 0,
	0, 0, 65, 67, 635, 0, 1316, 915, 0, 73,
	74, 0, 0, 0, 210, 920, 921, 922, -2, 229,
	0, 135, 203, 147, 148, 149, 196, 151, 196, 196,
	196, 196, 207, 207, 207, 207, 179, 180, 181, 182,
	183, 0, 0, 166, 196, 196, 196, 196, 186, 187,
	188, 189, 190, 191, 192, 193, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 198, 198, 198, 200, 200,
	0, 38, 0, 214, 0, 818, 0, 841, 0, 0,
	940, 0, 939, 939, 939, 106, 0, 0, 0, 367,
	328, 356, 368, 0, 331, 332, -2, 0, 0, 318,
	0, 320, 0, 230, 0, -2, 0, 0, 0, 236,
	240, 237, 240, 228, 241, 348, 795, 0, 349, 350,
	0, 382, 604, 0, 0, 0, 0, 0, 388, 389,
	390, 0, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 357, 358, 359, 360, 361, 362, 363, 0,
	0, 320, 0, 353, 0, 274, 275, 0, 0, 278,
	279, 280, 281, 0, 0, 284, 285, 286, 287, 288,
	312, 313, 314, 289, 290, 291, 292, 293, 294, 295,
	306, 307, 308, 309, 310, 311, 296, 297, 298, 299,
	300, 303, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 838, 839, 840, 0, 0, 0, 0, 0,
	261, 63, 928, 416, 636, 948, 949, 476, 477, 0,
	234, 235, 475, 475, 427, 450, 0, 475, 431, 452,
	432, 434, 433, 435, 475, 438, 473, 474, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 454, 0,
	455, 0, 0, 493, 497, 498, 499, 500, 0, 0,
	528, 533, 534, 535, 536, 548, 541, 687, 646, 647,
	648, 650, 667, 0, 669, 671, 657, 658, 682, 683,
	684, 0, 0, 0, 0, 680, 662, 0, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	707, 770, 771, 772, 0, 705, 706, 717, 0, 0,
	0, 564, 796, 0, -2, 0, 685, 904, 821, 0,
	0, 0, 0, 690, 798, 0, 690, 798, 0, 0,
	0, 561, 562, 793, 790, 0, 0, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 522,
	0, 638, 0, 619, 0, 621, 622, 0, 938, 856,
	51, 41, 0, 857, 0, 0, 0, 0, 817, 819,
	820, 856, 0, 806, 0, 0, 643, 0, 0, 568,
	47, 585, 581, 0, 643, 0, 0, 633, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 626, 0, 0,
	0, 0, 617, 0, 0, 0, -2, 0, 0, 0,
	61, 62, 0, 0, 0, 910, 72, 0, 0, 77,
	78, 911, 912, 913, 914, 0, 110, -2, 269, 129,
	131, 132, 133, 124, 134, 205, 204, 150, 207, 207,
	173, 174, 210, 0, 210, 210, 210, 0, 0, 167,
	168, 169, 170, 161, 0, 162, 163, 164, 0, 165,
	247, 0, 825, 215, 216, 218, 222, 0, 0, 243,
	244, 0, 0, 100, 0, 941, 0, 0, 0, 930,
	119, 120, 121, 122, 117, 0, 0, 125, 322, 0,
	0, 0, 245, 0, 0, 224, 240, 225, 226, 0,
	351, 0, 0, 384, 385, 386, 387, 0, 0, 0,
	320, 322, 210, 0, 276, 277, 282, 283, 301, 0,
	0, 0, 0, 851, 852, 0, 855, 92, 374, 376,
	375, 379, 0, 0, 0, 0, 411, 261, 825, 0,
	415, 262, 263, 472, 437, 453, 472, 429, 436, 479,
	458, 489, 532, 0, 0, 0, 540, 0, 668, 670,
	672, 659, 680, 663, 0, 660, 0, 0, 654, 722,
	0, 0, 563, 0, 813, 856, 726, 727, 0, 0,
	0, 0, 0, 763, 0, 0, 764, 0, 813, 0,
	791, 0, 0, 738, 757, 0, 0, 758, 759, 760,
	761, 762, 518, 521, 523, 598, 0, 0, 0, 0,
	620, 936, 43, 0, 0, 0, 823, 824, 816, 42,
	0, 923, 924, 807, 808, 809, 0, 578, 589, 569,
	0, 821, 898, 0, 0, 890, 0, 0, 643, 906,
	0, 591, 612, 614, 0, 609, 624, 625, 627, 0,
	629, 0, 631, 632, 595, 596, 597, 0, 643, 0,
	643, 66, 643, 68, 0, 637, 75, 76, 0, 0,
	82, 211, 212, 117, 271, 130, 136, 0, 0, 0,
	140, 0, 0, 143, 145, 146, 206, 210, 210, 175,
	208, 209, 176, 177, 178, 0, 194, 0, 0, 0,
	264, 87, 829, 828, 222, 222, 217, 0, 220, 0,
	197, 0, 102, 0, 0, 0, 0, 326, 602, 0,
	337, 338, 0, 321, 381, 0, 214, 0, 227, 796,
	605, 0, 0, 339, 0, 322, 342, 343, 354, 304,
	305, 302, 600, 842, 843, 844, 0, 854, 95, 0,
	0, 0, 0, 372, 0, 413, 414, 64, 475, 475,
	527, 0, 530, 0, 661, 0, 681, 664, 723, 724,
	0, 797, 821, 45, 0, 196, 196, 776, 196, 200,
	779, 196, 781, 196, 784, 0, 0, 0, 0, 0,
	0, 0, 788, 737, 794, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 861, 858, 44, 811, 0, 644,
	582, 48, 52, 0, 898, 889, 900, 902, 0, 0,
	0, 894, 0, 813, 0, 0, 606, 613, 0, 0,
	607, 0, 608, 628, 630, -2, 813, 643, 59, 60,
	0, 79, 80, 81, 270, 137, 138, 0, 141, 142,
	144, 171, 172, 207, 0, 207, 0, 201, 0, 253,
	265, 0, 826, 827, 0, 0, 219, 221, 600, 103,
	104, 105, 0, 0, 126, 323, 0, 213, 0, 0,
	406, 403, 340, 341, 0, 0, 853, 373, 0, 93,
	94, 0, 0, 378, 412, 422, 428, 529, 549, 665,
	725, 856, 728, 773, 207, 777, 778, 780, 782, 783,
	785, 730, 729, 0, 0, 0, 0, 0, 821, 0,
	792, 0, 0, 0, 0, 0, 618, 207, 881, 49,
	0, 0, 0, 53, 0, 903, 0, 0, 0, 0,
	70, 821, 907, 908, 610, 0, 615, 821, 58, 139,
	210, 195, 210, 0, 0, 266, 830, 831, 832, 833,
	834, 835, 836, 0, 329, 603, 0, 0, 383, 0,
	391, 0, 0, 0, 0, 96, 97, 0, 0, 0,
	46, 774, 775, 0, 0, 0, 0, 765, 0, 789,
	0, 0, 0, 640, 0, 0, 638, 863, 862, 875,
	879, 812, 810, 0, 901, 0, 893, 896, 892, 895,
	56, 0, 57, 184, 185, 199, 202, 0, 0, 0,
	407, 404, 405, 845, 601, 0, 0, 0, 380, 731,
	733, 732, 734, 0, 0, 0, 736, 753, 754, 639,
	641, 642, 599, 881, 0, 874, 877, -2, 0, 0,
	891, 0, 611, 845, 0, 0, 370, 847, 98, 99,
	315, 316, 317, 92, 735, 0, 0, 0, 868, 866,
	866, 879, 0, 883, 0, 888, 0, 899, 897, 88,
	0, 0, 0, 0, 848, 849, 95, 766, 0, 769,
	871, 0, 864, 867, 865, 876, 0, 882, 0, 0,
	880, 408, 409, 249, 0, 377, 767, 860, 0, 869,
	870, 878, 0, 0, 250, 251, 0, 846, 0, 872,
	873, 884, 886, 252, 0, 0, 0, 0, 254, 256,
	257, 0, 0, 255, 768, 258, 259, 260,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 469,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:409
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Load{}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{&Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:546
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:589
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = InsertAct
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:672
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadWrite
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = ReadOnly
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = SessionScope
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.scope = GlobalScope
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:759
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = false
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.boolean = true
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:831
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = false
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = true
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptions
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyDollar[1].columnTypeOptions.NotNull = false
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyDollar[1].columnTypeOptions.NotNull = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].bytes)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyPrimary
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUniqueKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUnique
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.literal = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1298
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1302
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1337
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.str = ""
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1374
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = nil
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1440
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = yyDollar[2].str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = "key"
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = ""
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1548
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1560
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1566
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = ""
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.boolean = false
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1631
		{
			yyVAL.tableOptions = nil
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.bytes = []byte("")
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colName = nil
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.colName = nil
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1846
		{
			yyVAL.alterOptions = nil
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1866
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &Force{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2037
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2061
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2146
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2150
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2154
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2158
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2162
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2178
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = false
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.boolean = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2252
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2256
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2278
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[5].tableNames, IfExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2282
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &OtherRead{}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{&ShowBasic{Full: yyDollar[2].boolean, Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].boolean, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2392
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2396
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2400
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2404
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2408
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2412
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2452
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2457
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilter, DbName: yyDollar[3].str}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2461
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2469
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = "extended "
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2526
		{
			yyVAL.boolean = false
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.boolean = true
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2560
		{
			yyVAL.showFilter = nil
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2574
		{
			yyVAL.showFilter = nil
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.empty = struct{}{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.statement = &Begin{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.statement = &Begin{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.statement = &Commit{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.statement = &Rollback{}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2628
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2633
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2638
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2656
		{
			yyVAL.explainType = EmptyType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.explainType = JSONType
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.explainType = TreeType
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.explainType = VitessType
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2672
		{
			yyVAL.explainType = TraditionalType
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.explainType = AnalyzeType
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2757
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.lockType = Read
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.lockType = ReadLocal
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.lockType = Write
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2787
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2793
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2801
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2805
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2809
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2813
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.boolean = false
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.boolean = true
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.boolean = true
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2900
		{
			setAllowComments(yylex, true)
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.bytes2 = nil
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolean = false
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolean = true
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = SQLCacheStr
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.boolean = false
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.boolean = true
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.boolean = true
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2959
		{
			yyVAL.selectExprs = nil
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2968
		{
			yyVAL.strs = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2984
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = SQLCacheStr
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = DistinctStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = DistinctStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = StraightJoinHint
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3042
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3047
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3055
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3067
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3111
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3115
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.columns = nil
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3161
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3165
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3169
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3177
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3181
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3187
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3192
		{
			yyVAL.empty = struct{}{}
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3197
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3205
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.joinType = NormalJoinType
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3222
		{
			yyVAL.joinType = NormalJoinType
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3226
		{
			yyVAL.joinType = NormalJoinType
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.joinType = StraightJoinType
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3238
		{
			yyVAL.joinType = LeftJoinType
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.joinType = LeftJoinType
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3246
		{
			yyVAL.joinType = RightJoinType
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3250
		{
			yyVAL.joinType = RightJoinType
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3270
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3295
		{
			yyVAL.indexHints = nil
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3299
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3307
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3311
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3316
		{
			yyVAL.expr = nil
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3326
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3388
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3404
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3408
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 665:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3412
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3434
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3452
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3468
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.expr = nil
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3495
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3501
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3573
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3593
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3601
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3605
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3609
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3621
		{
			yyVAL.expr = handleUnaryMinus(yyDollar[2].expr)
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3689
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 731:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3693
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 735:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3717
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3721
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3821
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3841
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3851
		{
			yyVAL.matchExprOption = NoOption
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3855
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3859
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 768:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3863
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3903
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3907
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3917
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3925
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3929
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = nil
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = string("")
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = nil
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3994
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.expr = &NullVal{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.exprs = nil
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.expr = nil
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.orderBy = nil
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4084
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.orderDirection = AscOrder
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.orderDirection = AscOrder
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.orderDirection = DescOrder
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.limit = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4116
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4120
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4125
		{
			yyVAL.alterOptions = nil
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4129
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4148
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4156
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4160
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4166
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4170
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4174
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = yyDollar[3].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = yyDollar[2].str
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = "cascaded"
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.lock = NoLock
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.lock = ForUpdateLock
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4272
		{
			yyVAL.lock = ShareModeLock
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4277
		{
			yyVAL.selectInto = nil
		}
	case 860:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4281
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4289
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = " header"
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = " manifest on"
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = " manifest off"
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = " overwrite on"
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = " overwrite off"
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = " optionally"
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4427
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4431
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4435
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4453
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.updateExprs = nil
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4462
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4508
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.bytes = []byte("charset")
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = &Default{}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4581
		{
			yyVAL.boolean = false
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.boolean = true
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4586
		{
			yyVAL.boolean = false
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4588
		{
			yyVAL.boolean = true
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4591
		{
			yyVAL.boolean = false
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.boolean = true
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4596
		{
			yyVAL.ignore = false
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.ignore = true
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4601
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4609
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4614
		{
			yyVAL.exprs = nil
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4623
		{
			yyVAL.indexOptions = nil
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5096
		{
			decNesting(yylex)
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			skipToEnd(yylex)
		}
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			skipToEnd(yylex)
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			skipToEnd(yylex)
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
