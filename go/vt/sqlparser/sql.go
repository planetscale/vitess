// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const GENERATED = 57381
const ALWAYS = 57382
const OUTFILE = 57383
const S3 = 57384
const DATA = 57385
const LOAD = 57386
const LINES = 57387
const TERMINATED = 57388
const ESCAPED = 57389
const ENCLOSED = 57390
const DUMPFILE = 57391
const CSV = 57392
const HEADER = 57393
const MANIFEST = 57394
const OVERWRITE = 57395
const STARTING = 57396
const OPTIONALLY = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const SQL_CALC_FOUND_ROWS = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const INPLACE = 57419
const COPY = 57420
const ALGORITHM = 57421
const NONE = 57422
const SHARED = 57423
const EXCLUSIVE = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const VIRTUAL = 57448
const STORED = 57449
const OR = 57450
const XOR = 57451
const AND = 57452
const NOT = 57453
const BETWEEN = 57454
const CASE = 57455
const WHEN = 57456
const THEN = 57457
const ELSE = 57458
const END = 57459
const LE = 57460
const GE = 57461
const NE = 57462
const NULL_SAFE_EQUAL = 57463
const IS = 57464
const LIKE = 57465
const REGEXP = 57466
const IN = 57467
const SHIFT_LEFT = 57468
const SHIFT_RIGHT = 57469
const DIV = 57470
const MOD = 57471
const UNARY = 57472
const COLLATE = 57473
const BINARY = 57474
const UNDERSCORE_BINARY = 57475
const UNDERSCORE_UTF8MB4 = 57476
const UNDERSCORE_UTF8 = 57477
const UNDERSCORE_LATIN1 = 57478
const INTERVAL = 57479
const JSON_EXTRACT_OP = 57480
const JSON_UNQUOTE_EXTRACT_OP = 57481
const CREATE = 57482
const ALTER = 57483
const DROP = 57484
const RENAME = 57485
const ANALYZE = 57486
const ADD = 57487
const FLUSH = 57488
const CHANGE = 57489
const MODIFY = 57490
const REVERT = 57491
const SCHEMA = 57492
const TABLE = 57493
const INDEX = 57494
const VIEW = 57495
const TO = 57496
const IGNORE = 57497
const IF = 57498
const UNIQUE = 57499
const PRIMARY = 57500
const COLUMN = 57501
const SPATIAL = 57502
const FULLTEXT = 57503
const KEY_BLOCK_SIZE = 57504
const CHECK = 57505
const INDEXES = 57506
const ACTION = 57507
const CASCADE = 57508
const CONSTRAINT = 57509
const FOREIGN = 57510
const NO = 57511
const REFERENCES = 57512
const RESTRICT = 57513
const SHOW = 57514
const DESCRIBE = 57515
const EXPLAIN = 57516
const DATE = 57517
const ESCAPE = 57518
const REPAIR = 57519
const OPTIMIZE = 57520
const TRUNCATE = 57521
const COALESCE = 57522
const EXCHANGE = 57523
const REBUILD = 57524
const PARTITIONING = 57525
const REMOVE = 57526
const MAXVALUE = 57527
const PARTITION = 57528
const REORGANIZE = 57529
const LESS = 57530
const THAN = 57531
const PROCEDURE = 57532
const TRIGGER = 57533
const VINDEX = 57534
const VINDEXES = 57535
const DIRECTORY = 57536
const NAME = 57537
const UPGRADE = 57538
const STATUS = 57539
const VARIABLES = 57540
const WARNINGS = 57541
const CASCADED = 57542
const DEFINER = 57543
const OPTION = 57544
const SQL = 57545
const UNDEFINED = 57546
const SEQUENCE = 57547
const MERGE = 57548
const TEMPORARY = 57549
const TEMPTABLE = 57550
const INVOKER = 57551
const SECURITY = 57552
const FIRST = 57553
const AFTER = 57554
const LAST = 57555
const VITESS_MIGRATION = 57556
const CANCEL = 57557
const RETRY = 57558
const COMPLETE = 57559
const BEGIN = 57560
const START = 57561
const TRANSACTION = 57562
const COMMIT = 57563
const ROLLBACK = 57564
const SAVEPOINT = 57565
const RELEASE = 57566
const WORK = 57567
const BIT = 57568
const TINYINT = 57569
const SMALLINT = 57570
const MEDIUMINT = 57571
const INT = 57572
const INTEGER = 57573
const BIGINT = 57574
const INTNUM = 57575
const REAL = 57576
const DOUBLE = 57577
const FLOAT_TYPE = 57578
const DECIMAL = 57579
const NUMERIC = 57580
const TIME = 57581
const TIMESTAMP = 57582
const DATETIME = 57583
const YEAR = 57584
const CHAR = 57585
const VARCHAR = 57586
const BOOL = 57587
const CHARACTER = 57588
const VARBINARY = 57589
const NCHAR = 57590
const TEXT = 57591
const TINYTEXT = 57592
const MEDIUMTEXT = 57593
const LONGTEXT = 57594
const BLOB = 57595
const TINYBLOB = 57596
const MEDIUMBLOB = 57597
const LONGBLOB = 57598
const JSON = 57599
const ENUM = 57600
const GEOMETRY = 57601
const POINT = 57602
const LINESTRING = 57603
const POLYGON = 57604
const GEOMETRYCOLLECTION = 57605
const MULTIPOINT = 57606
const MULTILINESTRING = 57607
const MULTIPOLYGON = 57608
const NULLX = 57609
const AUTO_INCREMENT = 57610
const APPROXNUM = 57611
const SIGNED = 57612
const UNSIGNED = 57613
const ZEROFILL = 57614
const CODE = 57615
const COLLATION = 57616
const COLUMNS = 57617
const DATABASES = 57618
const ENGINES = 57619
const EVENT = 57620
const EXTENDED = 57621
const FIELDS = 57622
const FULL = 57623
const FUNCTION = 57624
const GTID_EXECUTED = 57625
const KEYSPACES = 57626
const OPEN = 57627
const PLUGINS = 57628
const PRIVILEGES = 57629
const PROCESSLIST = 57630
const SCHEMAS = 57631
const TABLES = 57632
const TRIGGERS = 57633
const USER = 57634
const VGTID_EXECUTED = 57635
const VITESS_KEYSPACES = 57636
const VITESS_METADATA = 57637
const VITESS_MIGRATIONS = 57638
const VITESS_SHARDS = 57639
const VITESS_TABLETS = 57640
const VSCHEMA = 57641
const NAMES = 57642
const CHARSET = 57643
const GLOBAL = 57644
const SESSION = 57645
const ISOLATION = 57646
const LEVEL = 57647
const READ = 57648
const WRITE = 57649
const ONLY = 57650
const REPEATABLE = 57651
const COMMITTED = 57652
const UNCOMMITTED = 57653
const SERIALIZABLE = 57654
const CURRENT_TIMESTAMP = 57655
const DATABASE = 57656
const CURRENT_DATE = 57657
const CURRENT_TIME = 57658
const LOCALTIME = 57659
const LOCALTIMESTAMP = 57660
const CURRENT_USER = 57661
const UTC_DATE = 57662
const UTC_TIME = 57663
const UTC_TIMESTAMP = 57664
const REPLACE = 57665
const CONVERT = 57666
const CAST = 57667
const SUBSTR = 57668
const SUBSTRING = 57669
const GROUP_CONCAT = 57670
const SEPARATOR = 57671
const TIMESTAMPADD = 57672
const TIMESTAMPDIFF = 57673
const MATCH = 57674
const AGAINST = 57675
const BOOLEAN = 57676
const LANGUAGE = 57677
const WITH = 57678
const QUERY = 57679
const EXPANSION = 57680
const WITHOUT = 57681
const VALIDATION = 57682
const UNUSED = 57683
const ARRAY = 57684
const CUME_DIST = 57685
const DESCRIPTION = 57686
const DENSE_RANK = 57687
const EMPTY = 57688
const EXCEPT = 57689
const FIRST_VALUE = 57690
const GROUPING = 57691
const GROUPS = 57692
const JSON_TABLE = 57693
const LAG = 57694
const LAST_VALUE = 57695
const LATERAL = 57696
const LEAD = 57697
const MEMBER = 57698
const NTH_VALUE = 57699
const NTILE = 57700
const OF = 57701
const OVER = 57702
const PERCENT_RANK = 57703
const RANK = 57704
const RECURSIVE = 57705
const ROW_NUMBER = 57706
const SYSTEM = 57707
const WINDOW = 57708
const ACTIVE = 57709
const ADMIN = 57710
const BUCKETS = 57711
const CLONE = 57712
const COMPONENT = 57713
const DEFINITION = 57714
const ENFORCED = 57715
const EXCLUDE = 57716
const FOLLOWING = 57717
const GEOMCOLLECTION = 57718
const GET_MASTER_PUBLIC_KEY = 57719
const HISTOGRAM = 57720
const HISTORY = 57721
const INACTIVE = 57722
const INVISIBLE = 57723
const LOCKED = 57724
const MASTER_COMPRESSION_ALGORITHMS = 57725
const MASTER_PUBLIC_KEY_PATH = 57726
const MASTER_TLS_CIPHERSUITES = 57727
const MASTER_ZSTD_COMPRESSION_LEVEL = 57728
const NESTED = 57729
const NETWORK_NAMESPACE = 57730
const NOWAIT = 57731
const NULLS = 57732
const OJ = 57733
const OLD = 57734
const OPTIONAL = 57735
const ORDINALITY = 57736
const ORGANIZATION = 57737
const OTHERS = 57738
const PATH = 57739
const PERSIST = 57740
const PERSIST_ONLY = 57741
const PRECEDING = 57742
const PRIVILEGE_CHECKS_USER = 57743
const PROCESS = 57744
const RANDOM = 57745
const REFERENCE = 57746
const REQUIRE_ROW_FORMAT = 57747
const RESOURCE = 57748
const RESPECT = 57749
const RESTART = 57750
const RETAIN = 57751
const REUSE = 57752
const ROLE = 57753
const SECONDARY = 57754
const SECONDARY_ENGINE = 57755
const SECONDARY_LOAD = 57756
const SECONDARY_UNLOAD = 57757
const SKIP = 57758
const SRID = 57759
const THREAD_PRIORITY = 57760
const TIES = 57761
const UNBOUNDED = 57762
const VCPU = 57763
const VISIBLE = 57764
const FORMAT = 57765
const TREE = 57766
const VITESS = 57767
const TRADITIONAL = 57768
const LOCAL = 57769
const LOW_PRIORITY = 57770
const NO_WRITE_TO_BINLOG = 57771
const LOGS = 57772
const ERROR = 57773
const GENERAL = 57774
const HOSTS = 57775
const OPTIMIZER_COSTS = 57776
const USER_RESOURCES = 57777
const SLOW = 57778
const CHANNEL = 57779
const RELAY = 57780
const EXPORT = 57781
const AVG_ROW_LENGTH = 57782
const CONNECTION = 57783
const CHECKSUM = 57784
const DELAY_KEY_WRITE = 57785
const ENCRYPTION = 57786
const ENGINE = 57787
const INSERT_METHOD = 57788
const MAX_ROWS = 57789
const MIN_ROWS = 57790
const PACK_KEYS = 57791
const PASSWORD = 57792
const FIXED = 57793
const DYNAMIC = 57794
const COMPRESSED = 57795
const REDUNDANT = 57796
const COMPACT = 57797
const ROW_FORMAT = 57798
const STATS_AUTO_RECALC = 57799
const STATS_PERSISTENT = 57800
const STATS_SAMPLE_PAGES = 57801
const STORAGE = 57802
const MEMORY = 57803
const DISK = 57804

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	480, 112,
	-2, 118,
	-1, 46,
	147, 118,
	263, 118,
	318, 118,
	-2, 339,
	-1, 53,
	34, 487,
	169, 487,
	181, 487,
	214, 501,
	215, 501,
	-2, 489,
	-1, 58,
	171, 511,
	-2, 509,
	-1, 84,
	58, 579,
	-2, 587,
	-1, 97,
	168, 949,
	-2, 91,
	-1, 99,
	1, 113,
	480, 113,
	-2, 118,
	-1, 109,
	174, 243,
	175, 243,
	-2, 333,
	-1, 128,
	147, 118,
	263, 118,
	318, 118,
	-2, 348,
	-1, 564,
	154, 970,
	-2, 966,
	-1, 565,
	154, 971,
	-2, 967,
	-1, 584,
	58, 580,
	-2, 592,
	-1, 585,
	58, 581,
	-2, 593,
	-1, 606,
	122, 1319,
	-2, 84,
	-1, 607,
	122, 1200,
	-2, 85,
	-1, 613,
	122, 1251,
	-2, 943,
	-1, 754,
	122, 1137,
	-2, 940,
	-1, 790,
	180, 38,
	185, 38,
	-2, 254,
	-1, 867,
	1, 386,
	480, 386,
	-2, 118,
	-1, 1108,
	1, 282,
	480, 282,
	-2, 118,
	-1, 1111,
	23, 137,
	-2, 139,
	-1, 1184,
	174, 243,
	175, 243,
	-2, 333,
	-1, 1193,
	180, 39,
	185, 39,
	-2, 255,
	-1, 1401,
	154, 975,
	-2, 969,
	-1, 1494,
	76, 66,
	84, 66,
	-2, 70,
	-1, 1515,
	1, 283,
	480, 283,
	-2, 118,
	-1, 1943,
	5, 836,
	18, 836,
	20, 836,
	32, 836,
	85, 836,
	-2, 619,
	-1, 2172,
	48, 911,
	-2, 905,
}

const yyPrivate = 57344

const yyLast = 28642

var yyAct = [...]int{
	564, 2276, 2267, 2095, 2220, 2200, 2173, 2233, 2001, 927,
	1777, 2150, 83, 3, 2120, 1733, 1700, 1820, 536, 1582,
	1923, 1512, 1009, 1924, 2092, 1438, 1734, 1920, 1800, 505,
	522, 1063, 1532, 1547, 1863, 1824, 757, 1801, 1552, 820,
	507, 1935, 1720, 1802, 1491, 1387, 1567, 1882, 1056, 165,
	1395, 137, 165, 577, 470, 165, 1660, 1090, 1580, 878,
	486, 1299, 165, 123, 1613, 81, 1566, 1191, 907, 1554,
	165, 1794, 611, 785, 1100, 1093, 1473, 1480, 1440, 1209,
	586, 1061, 1086, 1421, 1048, 1165, 571, 1066, 498, 33,
	945, 1364, 486, 509, 1084, 486, 165, 486, 1564, 788,
	764, 608, 765, 1198, 1083, 1282, 786, 791, 798, 761,
	1296, 1456, 1533, 1073, 787, 1099, 79, 1097, 1304, 925,
	100, 1543, 1496, 101, 106, 140, 1022, 8, 7, 6,
	1160, 863, 78, 1025, 1843, 1842, 1611, 1268, 1183, 107,
	1870, 493, 1871, 167, 168, 169, 2122, 1353, 1435, 1436,
	1352, 1351, 1350, 1349, 1348, 496, 1341, 497, 2249, 1698,
	2169, 1970, 2071, 2146, 773, 822, 445, 768, 758, 572,
	2145, 102, 824, 2090, 593, 597, 2091, 946, 836, 837,
	825, 840, 841, 842, 843, 108, 823, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 2275, 2230, 612, 494, 2270, 2195, 80, 605,
	801, 1559, 1650, 2263, 1398, 780, 2096, 1599, 2229, 802,
	779, 84, 2194, 778, 1899, 102, 2034, 1174, 774, 826,
	827, 828, 1557, 1950, 1951, 35, 1699, 946, 72, 39,
	40, 1949, 161, 956, 1850, 833, 1869, 549, 1849, 555,
	556, 553, 554, 838, 552, 551, 550, 1648, 86, 87,
	88, 89, 90, 91, 557, 558, 97, 103, 1764, 162,
	1437, 1763, 440, 1506, 1765, 161, 1497, 1507, 1508, 1101,
	145, 1102, 474, 839, 777, 781, 769, 902, 903, 102,
	897, 772, 570, 923, 771, 770, 885, 568, 567, 885,
	103, 886, 125, 956, 886, 898, 866, 1784, 891, 884,
	1526, 883, 71, 145, 1556, 2003, 2197, 2025, 2023, 484,
	1340, 1768, 488, 1342, 1343, 1344, 1258, 862, 1288, 777,
	482, 872, 873, 952, 142, 1052, 143, 473, 167, 168,
	169, 775, 1825, 1581, 135, 160, 1624, 1622, 1623, 124,
	2159, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1997, 1846, 982, 1619, 142, 1259, 143,
	1260, 1998, 1614, 904, 112, 113, 134, 133, 160, 2269,
	920, 899, 1283, 905, 892, 2250, 775, 914, 906, 916,
	922, 2004, 868, 952, 777, 861, 944, 1858, 1626, 474,
	1627, 474, 1628, 900, 901, 1629, 146, 845, 844, 2005,
	1618, 1616, 2141, 2085, 1583, 1474, 151, 809, 807, 818,
	1620, 502, 1497, 817, 816, 815, 913, 915, 129, 110,
	136, 117, 109, 800, 130, 131, 814, 1969, 813, 146,
	165, 2143, 165, 812, 811, 165, 806, 782, 776, 151,
	118, 1617, 2261, 1177, 473, 819, 473, 2280, 865, 2282,
	1862, 762, 793, 918, 121, 119, 114, 115, 116, 120,
	1289, 486, 486, 486, 111, 1297, 951, 948, 949, 950,
	955, 957, 954, 122, 953, 1197, 1196, 895, 1558, 486,
	486, 947, 800, 776, 1848, 762, 800, 1565, 762, 599,
	794, 2193, 760, 938, 919, 1859, 881, 1605, 887, 888,
	889, 890, 810, 808, 911, 474, 1701, 1703, 912, 1293,
	932, 1865, 138, 1883, 835, 829, 1864, 1977, 917, 924,
	800, 1845, 2198, 800, 1908, 921, 951, 948, 949, 950,
	955, 957, 954, 864, 953, 1649, 1907, 1906, 1172, 1171,
	910, 947, 1170, 1835, 1294, 138, 2221, 1168, 776, 1865,
	444, 439, 99, 1601, 1864, 994, 995, 1885, 165, 73,
	473, 2160, 2180, 799, 1679, 1270, 1269, 1271, 1272, 1273,
	793, 796, 797, 2054, 762, 1948, 1054, 1287, 790, 794,
	595, 929, 930, 1725, 882, 1668, 486, 1513, 992, 165,
	800, 165, 165, 1053, 486, 874, 1591, 789, 871, 2278,
	486, 132, 2279, 608, 2277, 1702, 982, 1760, 941, 939,
	940, 1857, 894, 126, 1856, 1676, 127, 1010, 1502, 1887,
	1077, 1891, 799, 1886, 896, 1884, 799, 1007, 803, 793,
	1889, 876, 803, 793, 972, 1082, 1452, 982, 804, 1888,
	1049, 908, 804, 167, 168, 169, 499, 1389, 1305, 1336,
	94, 2189, 1890, 1892, 962, 821, 805, 1067, 1933, 1284,
	799, 1285, 834, 799, 1286, 880, 1024, 1027, 1029, 1031,
	1032, 1034, 1036, 1037, 1028, 1030, 1615, 1033, 1035, 1901,
	1038, 1600, 1780, 1773, 139, 144, 141, 147, 148, 149,
	150, 152, 153, 154, 155, 1780, 1371, 95, 1046, 1290,
	156, 157, 158, 159, 1103, 1390, 612, 994, 995, 942,
	1369, 1370, 1368, 960, 961, 959, 867, 139, 144, 141,
	147, 148, 149, 150, 152, 153, 154, 155, 1774, 1422,
	799, 962, 959, 156, 157, 158, 159, 793, 796, 797,
	1422, 762, 1686, 2283, 1070, 790, 794, 165, 962, 1813,
	1776, 1161, 1598, 1771, 1593, 1596, 1457, 1458, 994, 995,
	1169, 909, 809, 2212, 807, 2242, 2210, 1772, 1306, 975,
	976, 977, 978, 979, 972, 2214, 2215, 982, 1597, 486,
	2211, 1193, 879, 167, 168, 169, 1055, 1789, 1065, 1202,
	1799, 1953, 2070, 1206, 2069, 1975, 486, 486, 1593, 486,
	1098, 486, 486, 2264, 486, 486, 486, 486, 486, 486,
	1175, 1176, 1674, 2284, 1910, 1189, 960, 961, 959, 486,
	1673, 71, 1595, 165, 1242, 598, 2255, 1779, 1778, 2259,
	1675, 2265, 1203, 1367, 962, 1798, 961, 959, 1182, 1255,
	1779, 1778, 960, 961, 959, 1790, 1797, 960, 961, 959,
	486, 1562, 165, 962, 2256, 1239, 1201, 1237, 1238, 1278,
	962, 2258, 1911, 1295, 1263, 962, 1262, 165, 1245, 1246,
	1653, 1654, 1655, 1277, 1251, 1252, 1211, 1261, 1212, 1275,
	1214, 1216, 1253, 165, 1220, 1222, 1224, 1226, 1228, 1167,
	165, 1200, 603, 1265, 1454, 1199, 1199, 1247, 1180, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 486, 486,
	486, 1192, 1179, 1178, 1244, 600, 601, 1243, 960, 961,
	959, 1218, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1240, 2000, 1276, 165, 962, 2257, 1775, 1301,
	1274, 1309, 1307, 1308, 1359, 1361, 1362, 2243, 1313, 2241,
	1315, 1316, 1317, 1318, 1264, 2239, 1312, 1322, 1360, 1453,
	2111, 2067, 2042, 1319, 1320, 1321, 167, 168, 169, 581,
	1767, 1337, 1932, 1388, 1365, 1298, 1956, 1912, 779, 1807,
	1795, 778, 1391, 102, 1644, 1173, 960, 961, 959, 167,
	168, 169, 1347, 960, 961, 959, 486, 1609, 1608, 1446,
	1302, 1903, 1311, 1266, 962, 1254, 1250, 1399, 167, 168,
	169, 962, 1575, 1249, 1392, 1393, 973, 974, 975, 976,
	977, 978, 979, 972, 1248, 2139, 982, 1332, 1333, 1334,
	486, 486, 1405, 525, 524, 527, 528, 529, 530, 1984,
	2260, 165, 526, 80, 531, 2138, 1410, 1413, 2094, 1366,
	1984, 2227, 1423, 1984, 2187, 486, 167, 168, 169, 1400,
	1573, 1827, 165, 1810, 1445, 486, 1984, 2181, 1721, 165,
	1401, 165, 1521, 1010, 167, 168, 169, 1399, 1256, 165,
	165, 1498, 963, 1429, 1430, 1921, 486, 1984, 581, 486,
	82, 1492, 2088, 581, 1932, 608, 1466, 1447, 608, 35,
	486, 1984, 2086, 1593, 581, 2052, 581, 1459, 1967, 1966,
	1963, 1964, 1963, 1962, 1594, 1402, 1465, 581, 499, 1497,
	1844, 1164, 1829, 581, 1822, 1823, 2049, 1020, 1476, 1471,
	1477, 581, 35, 958, 581, 2188, 1517, 1495, 1467, 1477,
	1401, 1164, 1163, 1109, 1108, 1499, 1534, 1535, 1536, 2127,
	1516, 35, 1721, 1501, 1498, 486, 1754, 1728, 1465, 1059,
	1062, 1568, 1569, 1570, 1497, 958, 1572, 1574, 1465, 1984,
	1965, 1593, 1477, 1520, 1505, 1691, 71, 574, 1469, 486,
	1690, 1477, 1729, 1549, 1465, 486, 1202, 1593, 2072, 1202,
	1576, 1202, 1527, 1233, 1528, 1529, 1530, 1531, 612, 1592,
	1555, 612, 1504, 1503, 1500, 1455, 1519, 1433, 1345, 71,
	1539, 1540, 1541, 1542, 1518, 1579, 1406, 1407, 1499, 1292,
	1412, 1415, 1416, 1932, 1095, 784, 1497, 783, 71, 486,
	2219, 1388, 71, 2152, 2093, 2060, 1388, 1388, 2073, 2074,
	2075, 1804, 1166, 1234, 1235, 1236, 1428, 1548, 1999, 1431,
	1432, 1959, 1830, 1586, 71, 2002, 1589, 1560, 1590, 1544,
	1550, 1538, 1571, 1563, 1537, 1602, 1280, 1561, 1545, 1546,
	1194, 165, 1190, 1162, 96, 2076, 1604, 801, 165, 1803,
	866, 1606, 1607, 165, 165, 1585, 802, 165, 1603, 165,
	1584, 1588, 1550, 581, 2153, 165, 1199, 1936, 1937, 1559,
	2272, 2268, 165, 1982, 565, 971, 970, 980, 981, 973,
	974, 975, 976, 977, 978, 979, 972, 1981, 1980, 982,
	1230, 1939, 2077, 2078, 1921, 1814, 1804, 1633, 1612, 165,
	486, 1482, 1485, 1486, 1487, 1483, 1338, 1484, 1488, 1942,
	1941, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 166, 2135, 982, 166, 1639, 1640, 166,
	1742, 1741, 1642, 2252, 487, 1661, 166, 1231, 1232, 1710,
	1745, 1643, 2228, 1743, 166, 1746, 1363, 1365, 1744, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1913, 1632, 487, 1064, 2053, 487,
	166, 487, 971, 970, 980, 981, 973, 974, 975, 976,
	977, 978, 979, 972, 1987, 1747, 982, 1486, 1487, 2174,
	2176, 1719, 1718, 534, 165, 2254, 1647, 2232, 2177, 2234,
	2205, 2171, 165, 1482, 1485, 1486, 1487, 1483, 1425, 1484,
	1488, 1424, 1782, 1936, 1937, 2202, 1708, 1291, 1524, 1670,
	1656, 566, 1366, 2201, 1709, 1808, 831, 165, 1418, 830,
	2012, 1303, 1057, 1803, 1868, 931, 2047, 1837, 165, 165,
	165, 165, 165, 1419, 1058, 1836, 1730, 103, 2125, 1669,
	165, 1958, 572, 485, 165, 1957, 1707, 165, 165, 1587,
	1208, 165, 165, 165, 1685, 1207, 1752, 1195, 1714, 1457,
	1458, 1723, 1450, 1978, 1766, 1726, 1049, 1735, 1697, 1636,
	1705, 2183, 2147, 1781, 1490, 610, 575, 576, 759, 1652,
	766, 1717, 1625, 578, 1788, 580, 82, 1713, 2240, 1716,
	2238, 1755, 2237, 2206, 2204, 1757, 2046, 1983, 1724, 1354,
	1355, 1356, 1357, 1722, 1787, 1577, 1791, 1792, 1793, 579,
	486, 1785, 1786, 2045, 1916, 165, 1748, 1769, 1721, 2274,
	2273, 1753, 165, 1737, 1738, 1301, 1740, 1758, 486, 1680,
	1761, 1677, 1736, 1078, 486, 1739, 1071, 2274, 2178, 1202,
	1955, 1770, 1451, 574, 486, 80, 1806, 85, 77, 1,
	1555, 1832, 2142, 2209, 1408, 1409, 1841, 457, 1434, 1047,
	1796, 1665, 1666, 469, 2266, 1267, 1257, 165, 165, 165,
	165, 165, 1826, 1805, 2097, 2149, 1840, 1990, 1811, 1553,
	792, 128, 1683, 165, 165, 1815, 1816, 1817, 1514, 1839,
	1182, 1515, 499, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1400, 2223, 982, 1831, 591, 587, 93,
	755, 1838, 92, 795, 1401, 893, 1578, 2089, 1783, 486,
	1525, 1115, 1113, 588, 1114, 1388, 1112, 1117, 1879, 970,
	980, 981, 973, 974, 975, 976, 977, 978, 979, 972,
	1860, 1116, 982, 1111, 1511, 591, 587, 1339, 1068, 1069,
	590, 1880, 589, 483, 1489, 486, 163, 1866, 1104, 1072,
	1867, 588, 832, 447, 1872, 1900, 165, 1968, 1878, 1881,
	1893, 1335, 1610, 1894, 453, 990, 486, 1715, 1762, 609,
	602, 1927, 486, 486, 2199, 1879, 584, 585, 590, 2170,
	589, 2172, 2121, 2175, 1922, 2168, 2253, 2231, 1925, 2182,
	1522, 1449, 1060, 1551, 166, 165, 166, 2044, 1915, 166,
	1684, 1019, 1420, 1087, 508, 1444, 1358, 523, 520, 1735,
	521, 1460, 1727, 964, 506, 500, 1931, 1079, 1481, 1479,
	1919, 1940, 1478, 1634, 1909, 487, 487, 487, 1091, 1938,
	1934, 1657, 1658, 1659, 1085, 1464, 1944, 1523, 1946, 1945,
	1947, 1847, 1996, 487, 487, 943, 583, 1960, 1961, 1976,
	495, 767, 1930, 1417, 2158, 165, 1651, 2033, 582, 61,
	1952, 38, 490, 486, 2248, 934, 592, 32, 31, 30,
	29, 486, 28, 23, 22, 21, 165, 20, 19, 25,
	1972, 18, 17, 1973, 1974, 1971, 165, 16, 1989, 98,
	48, 45, 43, 105, 1991, 104, 46, 42, 869, 1985,
	165, 27, 26, 165, 15, 14, 1986, 1993, 1988, 13,
	12, 11, 2013, 10, 1994, 9, 1555, 5, 4, 937,
	24, 1008, 166, 2, 0, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 610, 610, 0, 0, 0,
	487, 0, 0, 166, 0, 166, 166, 0, 487, 0,
	0, 2021, 933, 935, 487, 0, 2010, 2011, 0, 0,
	0, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	2048, 0, 0, 0, 0, 0, 0, 0, 0, 2057,
	0, 0, 0, 2056, 0, 0, 0, 0, 0, 2018,
	2019, 0, 2020, 1735, 0, 2022, 2062, 2024, 165, 0,
	0, 165, 165, 165, 486, 486, 2064, 0, 2063, 0,
	0, 0, 0, 0, 0, 2066, 0, 2068, 0, 0,
	0, 2083, 0, 2098, 486, 486, 486, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 0, 0, 0, 0, 0, 610, 0, 486,
	486, 486, 165, 1105, 1711, 1712, 1062, 0, 0, 0,
	0, 0, 2103, 486, 0, 486, 2114, 2116, 2117, 0,
	0, 486, 0, 0, 2128, 2102, 0, 2118, 1925, 2124,
	0, 166, 1925, 2126, 2130, 2119, 0, 0, 2133, 0,
	0, 0, 0, 1874, 1875, 0, 0, 2110, 2136, 0,
	2137, 0, 0, 0, 486, 0, 0, 486, 1895, 1896,
	0, 1897, 1898, 487, 2140, 0, 2151, 0, 2144, 0,
	2132, 2148, 1904, 1905, 0, 0, 2134, 0, 0, 0,
	487, 487, 0, 487, 0, 487, 487, 0, 487, 487,
	487, 487, 487, 487, 0, 2167, 0, 0, 0, 0,
	0, 0, 0, 487, 165, 0, 1925, 166, 2179, 0,
	0, 0, 0, 486, 165, 0, 0, 0, 0, 0,
	2186, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	2190, 0, 0, 0, 487, 0, 166, 0, 0, 2203,
	0, 486, 0, 2196, 0, 0, 0, 0, 0, 486,
	486, 166, 0, 2213, 2207, 1954, 2216, 0, 2151, 2224,
	2222, 0, 0, 0, 0, 2236, 2235, 166, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 1735,
	486, 2244, 759, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 487, 487, 487, 1204, 2251, 2247, 0, 1210,
	1210, 0, 1210, 0, 1210, 1210, 0, 1219, 1210, 1210,
	1210, 1210, 1210, 2030, 0, 2262, 0, 0, 0, 166,
	1204, 1204, 759, 0, 0, 0, 0, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 2281, 1902, 971, 970,
	980, 981, 973, 974, 975, 976, 977, 978, 979, 972,
	0, 0, 982, 1279, 0, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 966, 0, 969, 0, 0,
	0, 0, 1917, 983, 984, 985, 986, 987, 988, 989,
	487, 967, 968, 965, 971, 970, 980, 981, 973, 974,
	975, 976, 977, 978, 979, 972, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 610, 610, 610, 487, 487, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 166, 971, 970, 980, 981,
	973, 974, 975, 976, 977, 978, 979, 972, 0, 487,
	982, 2065, 0, 0, 0, 0, 166, 0, 0, 487,
	0, 0, 0, 166, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 166, 166, 0, 0, 0, 0, 0,
	487, 0, 0, 487, 0, 0, 0, 0, 462, 0,
	0, 0, 0, 0, 487, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 1394,
	0, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	2105, 2106, 2107, 2108, 2109, 1204, 0, 0, 2112, 2113,
	1403, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 1427, 0, 0, 456, 0, 487,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 2035, 0, 0, 0, 1461, 0,
	161, 0, 0, 487, 0, 0, 1448, 0, 1075, 487,
	0, 610, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 2058, 103, 0, 2059, 2029, 610,
	2061, 0, 610, 474, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 448, 463, 0, 476, 0, 475, 452,
	0, 450, 454, 464, 455, 0, 449, 0, 460, 0,
	0, 451, 465, 466, 480, 479, 467, 0, 473, 458,
	477, 0, 142, 0, 143, 166, 0, 0, 766, 0,
	0, 0, 166, 160, 0, 0, 2217, 166, 166, 0,
	0, 166, 0, 166, 0, 0, 0, 0, 0, 166,
	0, 0, 759, 0, 0, 0, 166, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 2123, 499, 535, 0,
	0, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 166, 487, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 164, 0, 0,
	443, 0, 0, 481, 0, 0, 0, 0, 0, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 443, 2036,
	0, 0, 0, 0, 478, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 596, 596, 0, 0, 0,
	0, 0, 471, 0, 443, 971, 970, 980, 981, 973,
	974, 975, 976, 977, 978, 979, 972, 472, 166, 982,
	0, 0, 0, 0, 0, 0, 166, 0, 971, 970,
	980, 981, 973, 974, 975, 976, 977, 978, 979, 972,
	0, 0, 982, 1646, 0, 0, 0, 0, 0, 0,
	138, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 166, 166, 166, 166, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 166, 0,
	0, 166, 166, 0, 0, 166, 166, 166, 0, 0,
	0, 0, 0, 0, 35, 36, 37, 72, 39, 40,
	0, 971, 970, 980, 981, 973, 974, 975, 976, 977,
	978, 979, 972, 1663, 76, 982, 0, 1664, 0, 41,
	67, 68, 0, 65, 69, 0, 0, 0, 1671, 1672,
	0, 0, 66, 0, 1678, 0, 0, 1681, 1682, 0,
	0, 0, 0, 0, 487, 1688, 0, 1689, 0, 166,
	1692, 1693, 1694, 1695, 1696, 0, 166, 0, 0, 0,
	0, 54, 487, 1873, 0, 0, 1706, 0, 487, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 487, 0,
	1204, 0, 0, 971, 970, 980, 981, 973, 974, 975,
	976, 977, 978, 979, 972, 0, 0, 982, 0, 0,
	0, 166, 166, 166, 166, 166, 0, 0, 0, 0,
	0, 0, 0, 1750, 1751, 0, 0, 166, 166, 0,
	0, 0, 139, 144, 141, 147, 148, 149, 150, 152,
	153, 154, 155, 0, 0, 0, 0, 0, 156, 157,
	158, 159, 0, 0, 0, 44, 47, 50, 49, 52,
	0, 64, 0, 487, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 75, 74,
	0, 1821, 62, 63, 51, 1204, 0, 1828, 0, 487,
	0, 0, 0, 0, 0, 610, 0, 1833, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 487, 487, 0, 0,
	0, 0, 0, 55, 56, 0, 57, 58, 59, 60,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 0,
	443, 0, 0, 443, 971, 970, 980, 981, 973, 974,
	975, 976, 977, 978, 979, 972, 0, 0, 982, 0,
	0, 0, 610, 0, 0, 971, 970, 980, 981, 973,
	974, 975, 976, 977, 978, 979, 972, 1876, 1877, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 487, 1210, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 73, 610,
	166, 0, 1204, 0, 0, 1929, 1210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 166, 0, 0,
	0, 0, 0, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 34, 0, 0, 0, 0,
	0, 0, 0, 0, 1943, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 0, 34,
	0, 0, 0, 0, 0, 0, 0, 443, 0, 443,
	1094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 1204,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 166, 166, 166, 487, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 487,
	487, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 489, 0, 0, 2017, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 2026, 2027, 0, 0, 0,
	0, 0, 0, 487, 487, 487, 166, 0, 0, 0,
	0, 2041, 0, 0, 0, 763, 1204, 487, 0, 487,
	0, 0, 0, 0, 0, 487, 0, 0, 2050, 2051,
	0, 0, 2055, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	0, 487, 0, 0, 0, 0, 0, 1821, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 2100, 2101,
	1205, 0, 2087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 1205, 1205, 487, 166, 0,
	0, 443, 1821, 1821, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2129, 0, 2131, 0,
	2115, 0, 0, 0, 1821, 487, 0, 0, 0, 0,
	443, 0, 0, 487, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	610, 443, 0, 0, 487, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1324, 443,
	443, 443, 443, 443, 443, 443, 0, 2154, 2155, 2156,
	2157, 0, 2161, 0, 2162, 2163, 2164, 0, 2165, 2166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2192, 0, 1204, 0, 2208, 0, 0, 0, 0, 0,
	0, 0, 610, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 1300, 0, 0, 0,
	596, 596, 0, 1821, 596, 596, 596, 0, 0, 0,
	1205, 0, 0, 0, 0, 926, 926, 926, 0, 2245,
	2246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 596, 596, 596, 596, 34, 0, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 0, 0, 991, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 870,
	443, 875, 0, 0, 877, 0, 1300, 443, 0, 443,
	0, 0, 0, 0, 0, 0, 0, 443, 443, 1006,
	0, 0, 0, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 0, 1021, 1023, 1026, 1026, 1026, 1023, 1026, 1026,
	1023, 1026, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 34, 0,
	0, 0, 1132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 1092, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 1120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 143, 0, 0, 0, 0, 1185, 1186, 134,
	133, 160, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 443, 443, 1133, 0, 443, 0, 1637, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 1187, 136, 0, 1184, 0, 130, 131, 0,
	0, 0, 146, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 151, 0, 1146, 1149, 1150, 1151, 1152, 1153,
	1154, 0, 1155, 1156, 1157, 1158, 1159, 1134, 1135, 1136,
	1137, 1118, 1119, 1147, 0, 1121, 0, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 596, 443, 0, 0, 0, 0,
	0, 0, 926, 926, 926, 1205, 443, 443, 443, 443,
	443, 0, 0, 0, 0, 0, 0, 0, 1749, 0,
	0, 1281, 443, 0, 0, 443, 443, 0, 0, 443,
	1759, 1300, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 127,
	0, 0, 1310, 0, 0, 0, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 1092, 0, 0, 0, 0, 0,
	1205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 443, 443, 443, 443,
	139, 144, 141, 147, 148, 149, 150, 152, 153, 154,
	155, 443, 443, 0, 0, 0, 156, 157, 158, 159,
	0, 0, 0, 1493, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 103, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 0, 0, 0, 1472, 0,
	1475, 0, 0, 0, 443, 0, 135, 0, 0, 1494,
	0, 124, 0, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 143, 0, 0, 0, 0, 1185, 1186, 134, 133,
	160, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 1187, 136, 0, 1184, 0, 130, 131, 0, 0,
	0, 146, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 0,
	0, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 1630, 1631, 0, 0, 1635, 138, 0, 0,
	0, 1205, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 0, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 443,
	443, 443, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 126, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 0, 0, 0, 0, 0, 1731, 1732,
	0, 0, 1088, 1088, 1088, 1088, 1088, 0, 0, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 1088, 0, 0, 0, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	0, 0, 0, 0, 0, 156, 157, 158, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1092, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1926, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 2038, 2039, 2040, 0, 1992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1926, 0, 34, 2079, 1926, 0,
	2080, 2081, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 34, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 34, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2185, 0, 0, 0, 0, 0, 0,
	737, 723, 0, 2191, 672, 740, 642, 660, 750, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 739, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 746, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 729, 683, 719, 671, 707, 631, 694, 741, 658,
	703, 742, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 2225, 2226, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 736, 655, 702, 219,
	260, 225, 218, 391, 747, 728, 705, 753, 616, 697,
	0, 619, 622, 749, 732, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 731, 670, 423, 735, 668, 667, 738,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 928, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 714, 752,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 743, 744, 745, 718, 629, 0, 637, 638,
	0, 724, 733, 734, 691, 170, 184, 274, 748, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 730, 751, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 737, 723, 0, 0, 672,
	740, 642, 660, 750, 663, 666, 706, 621, 685, 314,
	657, 0, 646, 617, 653, 618, 644, 674, 223, 678,
	641, 725, 688, 739, 272, 0, 623, 647, 328, 662,
	176, 708, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 746, 276, 695, 0,
	375, 299, 0, 0, 0, 676, 729, 683, 719, 671,
	707, 631, 694, 741, 658, 703, 742, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	700, 736, 655, 702, 219, 260, 225, 218, 391, 747,
	728, 705, 753, 616, 697, 0, 619, 622, 749, 732,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 1918,
	0, 648, 0, 693, 0, 0, 0, 627, 620, 0,
	0, 0, 0, 673, 0, 0, 0, 630, 0, 649,
	717, 0, 614, 245, 624, 300, 0, 721, 731, 670,
	423, 735, 668, 667, 738, 712, 628, 727, 661, 271,
	626, 268, 171, 187, 0, 659, 310, 349, 355, 726,
	645, 654, 210, 652, 353, 324, 408, 194, 235, 346,
	329, 351, 692, 710, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 928, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 640, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 722, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 714, 752, 323, 354, 200, 410, 374,
	635, 639, 633, 634, 686, 687, 636, 743, 744, 745,
	718, 629, 0, 637, 638, 0, 724, 733, 734, 691,
	170, 184, 274, 748, 343, 238, 436, 417, 413, 615,
	632, 216, 643, 0, 0, 656, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 730, 751, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 689, 696, 284, 232, 249,
	259, 704, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	737, 723, 0, 0, 672, 740, 642, 660, 750, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 739, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 746, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 729, 683, 719, 671, 707, 631, 694, 741, 658,
	703, 742, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 736, 655, 702, 219,
	260, 225, 218, 391, 747, 728, 705, 753, 616, 697,
	0, 619, 622, 749, 732, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 1760, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 731, 670, 423, 735, 668, 667, 738,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 928, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 714, 752,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 743, 744, 745, 718, 629, 0, 637, 638,
	0, 724, 733, 734, 691, 170, 184, 274, 748, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 730, 751, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 737, 723, 0, 0, 672,
	740, 642, 660, 750, 663, 666, 706, 621, 685, 314,
	657, 0, 646, 617, 653, 618, 644, 674, 223, 678,
	641, 725, 688, 739, 272, 0, 623, 647, 328, 662,
	176, 708, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 746, 276, 695, 0,
	375, 299, 0, 0, 0, 676, 729, 683, 719, 671,
	707, 631, 694, 741, 658, 703, 742, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	700, 736, 655, 702, 219, 260, 225, 218, 391, 747,
	728, 705, 753, 616, 697, 0, 619, 622, 749, 732,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 1470,
	0, 648, 0, 693, 0, 0, 0, 627, 620, 0,
	0, 0, 0, 673, 0, 0, 0, 630, 0, 649,
	717, 0, 614, 245, 624, 300, 0, 721, 731, 670,
	423, 735, 668, 667, 738, 712, 628, 727, 661, 271,
	626, 268, 171, 187, 0, 659, 310, 349, 355, 726,
	645, 654, 210, 652, 353, 324, 408, 194, 235, 346,
	329, 351, 692, 710, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 928, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 640, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 722, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 714, 752, 323, 354, 200, 410, 374,
	635, 639, 633, 634, 686, 687, 636, 743, 744, 745,
	718, 629, 0, 637, 638, 0, 724, 733, 734, 691,
	170, 184, 274, 748, 343, 238, 436, 417, 413, 615,
	632, 216, 643, 0, 0, 656, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 730, 751, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 689, 696, 284, 232, 249,
	259, 704, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	737, 723, 0, 0, 672, 740, 642, 660, 750, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 739, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 746, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 729, 683, 719, 671, 707, 631, 694, 741, 658,
	703, 742, 262, 207, 175, 311, 376, 237, 71, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 736, 655, 702, 219,
	260, 225, 218, 391, 747, 728, 705, 753, 616, 697,
	0, 619, 622, 749, 732, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 731, 670, 423, 735, 668, 667, 738,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 928, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 714, 752,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 743, 744, 745, 718, 629, 0, 637, 638,
	0, 724, 733, 734, 691, 170, 184, 274, 748, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 730, 751, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 737, 723, 0, 0, 672,
	740, 642, 660, 750, 663, 666, 706, 621, 685, 314,
	657, 0, 646, 617, 653, 618, 644, 674, 223, 678,
	641, 725, 688, 739, 272, 0, 623, 647, 328, 662,
	176, 708, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 746, 276, 695, 0,
	375, 299, 0, 0, 0, 676, 729, 683, 719, 671,
	707, 631, 694, 741, 658, 703, 742, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	700, 736, 655, 702, 219, 260, 225, 218, 391, 747,
	728, 705, 753, 616, 697, 0, 619, 622, 749, 732,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 693, 0, 0, 0, 627, 620, 0,
	0, 0, 0, 673, 0, 0, 0, 630, 0, 649,
	717, 0, 614, 245, 624, 300, 0, 721, 731, 670,
	423, 735, 668, 667, 738, 712, 628, 727, 661, 271,
	626, 268, 171, 187, 0, 659, 310, 349, 355, 726,
	645, 654, 210, 652, 353, 324, 408, 194, 235, 346,
	329, 351, 692, 710, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 928, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 640, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 722, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 714, 752, 323, 354, 200, 410, 374,
	635, 639, 633, 634, 686, 687, 636, 743, 744, 745,
	718, 629, 0, 637, 638, 0, 724, 733, 734, 691,
	170, 184, 274, 748, 343, 238, 436, 417, 413, 615,
	632, 216, 643, 0, 0, 656, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 730, 751, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 689, 696, 284, 232, 249,
	259, 704, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	737, 723, 0, 0, 672, 740, 642, 660, 750, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 739, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 746, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 729, 683, 719, 671, 707, 631, 694, 741, 658,
	703, 742, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 736, 655, 702, 219,
	260, 225, 218, 391, 747, 728, 705, 753, 616, 697,
	0, 619, 622, 749, 732, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 731, 670, 423, 735, 668, 667, 738,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 625, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 613, 754, 607, 606, 269, 278, 714, 752,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 743, 744, 745, 718, 629, 0, 637, 638,
	0, 724, 733, 734, 691, 170, 184, 274, 748, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 730, 751, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 737, 723, 0, 0, 672,
	740, 642, 660, 750, 663, 666, 706, 621, 685, 314,
	657, 0, 646, 617, 653, 618, 644, 674, 223, 678,
	641, 725, 688, 739, 272, 0, 623, 647, 328, 662,
	176, 708, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 746, 276, 695, 0,
	375, 299, 0, 0, 0, 676, 729, 683, 719, 671,
	707, 631, 694, 741, 658, 703, 742, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	700, 736, 655, 702, 219, 260, 225, 218, 391, 747,
	728, 705, 753, 616, 697, 0, 619, 622, 749, 732,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 693, 0, 0, 0, 627, 620, 0,
	0, 0, 0, 673, 0, 0, 0, 630, 0, 649,
	717, 0, 614, 245, 624, 300, 0, 721, 731, 670,
	423, 735, 668, 667, 738, 712, 628, 727, 661, 271,
	626, 268, 171, 187, 0, 659, 310, 349, 355, 726,
	645, 654, 210, 652, 353, 324, 408, 194, 235, 346,
	329, 351, 692, 710, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 1096, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 625, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 640, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 722, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 613, 754, 607,
	606, 269, 278, 714, 752, 323, 354, 200, 410, 374,
	635, 639, 633, 634, 686, 687, 636, 743, 744, 745,
	718, 629, 0, 637, 638, 0, 724, 733, 734, 691,
	170, 184, 274, 748, 343, 238, 436, 417, 413, 615,
	632, 216, 643, 0, 0, 656, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 730, 751, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 689, 696, 284, 232, 249,
	259, 704, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	737, 723, 0, 0, 672, 740, 642, 660, 750, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 739, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 746, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 729, 683, 719, 671, 707, 631, 694, 741, 658,
	703, 742, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 736, 655, 702, 219,
	260, 225, 218, 391, 747, 728, 705, 753, 616, 697,
	0, 619, 622, 749, 732, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 731, 670, 423, 735, 668, 667, 738,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 604, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 625, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 613, 754, 607, 606, 269, 278, 714, 752,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 743, 744, 745, 718, 629, 0, 637, 638,
	0, 724, 733, 734, 691, 170, 184, 274, 748, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 730, 751, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 1396, 0,
	504, 0, 0, 0, 223, 0, 503, 0, 0, 0,
	272, 0, 0, 1397, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 547, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 0, 167, 168, 169, 525, 524, 527, 528, 529,
	530, 0, 0, 198, 526, 205, 531, 532, 533, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	501, 518, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 594, 0, 0, 0, 562,
	0, 517, 0, 0, 510, 511, 513, 512, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 561, 0, 0, 423, 0, 0, 559,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 549, 560, 555, 556,
	553, 554, 548, 552, 551, 550, 563, 540, 541, 542,
	543, 545, 0, 557, 558, 544, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 504, 0, 0, 0, 223, 0, 503, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 547, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 1509, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 525, 524, 527, 528,
	529, 530, 0, 0, 198, 526, 205, 531, 532, 533,
	1510, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 501, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 504, 0, 0, 0, 223, 0, 503, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 547, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 71, 0, 581, 167, 168, 169, 525, 524, 527,
	528, 529, 530, 0, 0, 198, 526, 205, 531, 532,
	533, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 501, 518, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 562, 0, 517, 0, 0, 510, 511, 513, 512,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 561, 0, 0, 423, 0,
	0, 559, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 549, 560,
	555, 556, 553, 554, 548, 552, 551, 550, 563, 540,
	541, 542, 543, 545, 0, 557, 558, 544, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 504, 0, 0, 0, 223, 0, 503,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 547, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 71, 0, 0, 167, 168, 169, 525, 524,
	527, 528, 529, 530, 0, 0, 198, 526, 205, 531,
	532, 533, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 501, 518, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 594, 0,
	0, 0, 562, 0, 517, 0, 0, 510, 511, 513,
	512, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 561, 0, 0, 423,
	0, 0, 559, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 549,
	560, 555, 556, 553, 554, 548, 552, 551, 550, 563,
	540, 541, 542, 543, 545, 0, 557, 558, 544, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 504, 0, 0, 0, 223, 0,
	503, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 547, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 71, 0, 0, 167, 168, 169, 525,
	1414, 527, 528, 529, 530, 0, 0, 198, 526, 205,
	531, 532, 533, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 501, 518, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 594,
	0, 0, 0, 562, 0, 517, 0, 0, 510, 511,
	513, 512, 514, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 561, 0, 0,
	423, 0, 0, 559, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	549, 560, 555, 556, 553, 554, 548, 552, 551, 550,
	563, 540, 541, 542, 543, 545, 0, 557, 558, 544,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 504, 0, 0, 0, 223,
	0, 503, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 547, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 71, 0, 0, 167, 168, 169,
	525, 1411, 527, 528, 529, 530, 0, 0, 198, 526,
	205, 531, 532, 533, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 501, 518, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	594, 0, 0, 0, 562, 0, 517, 0, 0, 510,
	511, 513, 512, 514, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 561, 0,
	0, 423, 0, 0, 559, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 549, 560, 555, 556, 553, 554, 548, 552, 551,
	550, 563, 540, 541, 542, 543, 545, 0, 557, 558,
	544, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 504,
	0, 0, 0, 223, 0, 503, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 547, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 71, 0,
	0, 167, 168, 169, 525, 524, 527, 528, 529, 530,
	0, 0, 198, 526, 205, 531, 532, 533, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 501,
	518, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 562, 0,
	517, 0, 0, 510, 511, 513, 512, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 561, 0, 0, 423, 0, 0, 559, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 549, 560, 555, 556, 553,
	554, 548, 552, 551, 550, 563, 540, 541, 542, 543,
	545, 0, 557, 558, 544, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	504, 0, 0, 0, 223, 0, 503, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 547, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 0, 167, 168, 169, 525, 524, 527, 528, 529,
	530, 0, 0, 198, 526, 205, 531, 532, 533, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	501, 518, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 562,
	0, 517, 0, 0, 510, 511, 513, 512, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 561, 0, 0, 423, 0, 0, 559,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 549, 560, 555, 556,
	553, 554, 548, 552, 551, 550, 563, 540, 541, 542,
	543, 545, 0, 557, 558, 544, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 547, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 525, 524, 527, 528,
	529, 530, 0, 0, 198, 526, 205, 531, 532, 533,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 2218,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 547, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 71, 0, 581, 167, 168, 169, 525, 524, 527,
	528, 529, 530, 0, 0, 198, 526, 205, 531, 532,
	533, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 518, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 562, 0, 517, 0, 0, 510, 511, 513, 512,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 561, 0, 0, 423, 0,
	0, 559, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 549, 560,
	555, 556, 553, 554, 548, 552, 551, 550, 563, 540,
	541, 542, 543, 545, 0, 557, 558, 544, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 547, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 71, 0, 0, 167, 168, 169, 525, 524,
	527, 528, 529, 530, 0, 0, 198, 526, 205, 531,
	532, 533, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 518, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 0, 0,
	0, 0, 562, 0, 517, 0, 0, 510, 511, 513,
	512, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 561, 0, 0, 423,
	0, 0, 559, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 549,
	560, 555, 556, 553, 554, 548, 552, 551, 550, 563,
	540, 541, 542, 543, 545, 0, 557, 558, 544, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 971, 970, 980, 981, 973, 974, 975,
	976, 977, 978, 979, 972, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	800, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	799, 423, 0, 0, 0, 0, 0, 0, 796, 797,
	271, 762, 268, 171, 187, 790, 794, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 1074, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 1076, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 960, 961, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 581, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	1441, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 1443, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	1439, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 762, 268,
	171, 187, 760, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 1441, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 1443,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 71, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 1462, 0, 0, 1463, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 1107, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 1106, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 581, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 1443, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 1076,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 1346, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 1229, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 1227, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 1225, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 1223, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 1221, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 1217, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 1215, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 1213,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 1188, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 1089,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 1080, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 936,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	491, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 441,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220,
}

var yyPact = [...]int{
	2818, -1000, -348, 1590, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1520, 1155, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 577, 1201, -1000, 1457, 270, -1000, 28162, 393,
	-1000, 27701, 392, 2270, 28162, -1000, 93, -1000, 77, 28162,
	82, 27240, -1000, -1000, -289, 12916, 1418, -9, -10, 28162,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1181,
	1505, 1515, 1542, 1048, 1674, -1000, 11059, 11059, 327, 327,
	327, 9215, -1000, -1000, 17078, 28162, 28162, 117, -1000, 1457,
	-1000, -1000, 138, -1000, 246, 1153, -1000, 1151, -1000, 404,
	463, 243, 310, 309, 241, 240, 235, 233, 222, 221,
	220, 216, 255, -1000, 543, 543, -171, -185, 2495, 286,
	286, 286, 354, 1435, 1432, -1000, 501, -1000, 543, 543,
	136, 543, 543, 543, 543, 197, 196, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 227, 1457, 179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28162,
	162, 28162, -1000, 487, 28162, 662, 662, 4, 662, 662,
	662, 662, 94, 453, -17, -1000, 91, 189, 73, 174,
	639, 219, 57, -1000, -1000, 165, 639, 83, -1000, 662,
	7315, 7315, 7315, -1000, 1444, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 349, -1000, -1000, -1000, -1000, 28162, 26779,
	229, 597, -1000, -1000, -1000, 89, -1000, -1000, 1091, 612,
	-1000, 12916, 2191, 1159, 1159, -1000, -1000, 410, -1000, -1000,
	14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1159, 483, -1000, 12455, 1159, 1159,
	1159, 1159, 1159, 1159, 1159, 1159, 12916, 1159, 1159, 1159,
	1159, 1159, 1159, 1159, 1159, 1159, 1159, 1159, 1159, 1159,
	1159, 1159, 1159, 1159, -1000, -1000, -1000, 28162, -1000, 1159,
	104, 1520, -1000, 1155, -1000, -1000, -1000, 1452, 12916, 12916,
	1520, -1000, 1349, 11059, -1000, -1000, 1636, -1000, -1000, -1000,
	-1000, -1000, 658, 1574, -1000, 15682, 476, 1571, 26318, -1000,
	19857, 25857, 1150, 8740, -42, -1000, -1000, -1000, 592, 18935,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1444, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1069, 28162, -1000, -1000, 3741,
	913, -1000, 1200, -1000, 1067, -1000, 1169, 1211, 389, 913,
	383, 380, 379, -1000, -113, -1000, -1000, -1000, -1000, -1000,
	543, 543, 253, 270, 4282, -1000, -1000, -1000, 25389, 1199,
	913, -1000, 1197, -1000, 1478, 311, 504, 504, 913, -1000,
	-1000, 28162, 913, 1476, 1471, 28162, 28162, -1000, 24928, -1000,
	24467, 24006, 840, 28162, 23545, 23084, 22623, 22162, 21701, -1000,
	1300, -1000, 1173, -1000, -1000, -1000, 28162, 28162, 28162, 19,
	-1000, -1000, 28162, 913, -1000, -1000, 836, 833, 543, 543,
	816, 944, 933, 926, 543, 543, 801, 925, 998, 140,
	796, 785, 783, 873, 923, 107, 859, 853, 778, 28162,
	1193, 28162, -1000, 164, 512, 238, 587, 1457, 1414, 1145,
	348, 386, 913, 302, 302, -1000, 7790, -1000, -1000, 920,
	12916, -1000, 646, 639, 639, -1000, -1000, -1000, -1000, -1000,
	-1000, 662, 28162, 646, -1000, -1000, -1000, 639, 662, 28162,
	662, 662, 662, 662, 639, 639, 639, 662, 28162, 28162,
	28162, 28162, 28162, 28162, 28162, 28162, 28162, 7315, 7315, 7315,
	529, 662, -1000, 1271, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 80, -1000, -1000, -1000, -1000, -1000, 1590, -1000,
	-1000, -1000, -118, 1134, 21240, -1000, -293, -294, -295, -296,
	-1000, -1000, -1000, -297, -300, -1000, -1000, -1000, 12916, 12916,
	12916, 12916, 854, 535, 14299, 748, 590, 14299, 14299, 14299,
	14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299, 14299,
	14299, 14299, 567, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 913, -1000, 1587, 954, 954, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 14760, 9676, 7790, 1048, 1059,
	1520, 11059, 11059, 12916, 12916, 11981, 11520, 11059, 1446, 621,
	612, 28162, -1000, 894, -1000, -1000, 13838, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28162,
	28162, 11059, 11059, 11059, 11059, 11059, -1000, 1133, -1000, -175,
	16617, 12916, 919, 1515, 1048, 1636, 1485, 1582, 514, 885,
	1131, -1000, 741, 1515, 18474, 1094, -1000, 1636, -1000, -1000,
	-1000, 28162, -1000, -1000, 20779, -1000, -1000, 6840, 28162, 212,
	28162, -1000, 1107, 1276, -1000, -1000, -1000, 1501, 18013, 28162,
	1152, 1079, -1000, -1000, 474, 8265, -42, -1000, 8265, 1100,
	-1000, -49, -47, 10137, 450, -1000, -1000, -1000, 2495, 15221,
	997, 1419, 22, -1000, -1000, -1000, 1169, -1000, 1169, 1169,
	1169, 1169, 19, 19, 19, 19, -1000, -1000, -1000, -1000,
	-1000, 1191, 1188, -1000, 1169, 1169, 1169, 1169, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1186, 1186, 1186, 1174, 1174,
	281, -1000, 12916, 135, 28162, 1484, 770, 164, 324, 1233,
	913, 913, 913, 324, -1000, 980, 932, -1000, 1116, -1000,
	-1000, 1538, -1000, -1000, 571, 666, 664, 467, 28162, 115,
	211, -1000, 315, -1000, 28162, 913, 1470, 504, 913, -1000,
	913, -1000, -1000, -1000, -1000, 452, -1000, -1000, 913, 1113,
	-1000, 1097, 724, 657, 680, 654, 1113, -1000, -1000, -136,
	1113, -1000, 1113, -1000, 1113, -1000, 1113, -1000, 1113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 28162, 115,
	567, -1000, 336, -1000, -1000, 567, 567, -1000, -1000, -1000,
	-1000, 918, 917, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -341,
	28162, -1000, 152, 564, 202, 242, 198, 28162, 114, 1511,
	177, 194, 28162, 28162, 302, 1262, 28162, 1495, 28162, -1000,
	-1000, -1000, -1000, 612, 28162, -1000, -1000, 662, 662, -1000,
	-1000, 28162, 662, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 662, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 904, -1000, 28162, 28162,
	-1000, -1000, -1000, -1000, -1000, 29, -66, 192, -1000, -1000,
	-1000, -1000, 1509, -1000, 612, 535, 734, 629, -1000, -1000,
	780, -1000, -1000, 2972, -1000, -1000, -1000, -1000, 748, 14299,
	14299, 14299, 1182, 2972, 2951, 1508, 1545, 469, 640, 640,
	500, 500, 500, 500, 500, 889, 889, -1000, -1000, -1000,
	-1000, 894, -1000, -1000, -1000, 894, 11059, 11059, 1110, 1159,
	441, -1000, 1181, -1000, -1000, 1515, 1042, 1042, 746, 817,
	613, 1569, 1042, 562, 1567, 1042, 1042, 11059, -1000, -1000,
	632, -1000, 12916, 894, -1000, 1218, 1106, 1101, 1042, 894,
	894, 1042, 1042, 28162, -1000, -285, -1000, -88, 443, 1159,
	-1000, 20318, -1000, -1000, 894, 1091, -1000, 1452, -1000, -1000,
	1415, -1000, 1319, 12916, 12916, 12916, -1000, -1000, -1000, 1452,
	1519, -1000, 1376, 1375, 1555, 11059, 19857, 1636, -1000, -1000,
	-1000, 439, 1555, 1136, 1159, -1000, 28162, 19857, 19857, 19857,
	19857, 19857, -1000, 1306, 1305, -1000, 1318, 1315, 1360, 28162,
	-1000, 1056, 1048, 18013, 212, 1090, 19857, 28162, -1000, -1000,
	19857, 28162, 6365, -1000, 1100, -42, -55, -1000, -1000, -1000,
	-1000, 612, -1000, 890, -1000, 237, -1000, 318, -1000, -1000,
	-1000, -1000, 663, 1500, 1412, 18, -1000, -1000, 19, 19,
	-1000, -1000, 450, 707, 450, 450, 450, 900, 900, -1000,
	-1000, -1000, -1000, -1000, 765, -1000, -1000, -1000, 754, -1000,
	-1000, 715, 1257, 135, -1000, -1000, 543, 899, 1427, 28162,
	-1000, -1000, 988, 152, 28162, 645, 1260, -1000, 1233, 1233,
	1233, 28162, -1000, -1000, -1000, -1000, 3803, 28162, 1050, -1000,
	113, 28162, 986, 28162, -1000, 1047, 1179, -1000, 913, -1000,
	-1000, 7790, -1000, 28162, 1159, -1000, -1000, -1000, -1000, 385,
	1455, 1447, 115, 113, 450, 913, -1000, -1000, -1000, -1000,
	-1000, -344, 1045, 361, 137, 158, 28162, 28162, 28162, 28162,
	28162, 462, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 185,
	334, -1000, 28162, 28162, 376, -1000, -1000, -1000, 639, -1000,
	-1000, 639, -1000, -1000, -1000, -1000, -1000, -1000, 1442, -77,
	-316, -1000, -312, -1000, -1000, -1000, -1000, 1182, 2972, 2780,
	-1000, 14299, 14299, -1000, -1000, 1042, 1042, 11059, 7790, 1520,
	1452, -1000, -1000, 375, 567, 375, 14299, 14299, -1000, 14299,
	14299, -1000, -126, 1084, 568, -1000, 12916, 892, -1000, -1000,
	14299, 14299, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 378, 377, 365, 28162, -1000, -1000, -1000, 782, 897,
	1343, 612, 612, -1000, -1000, 28162, -1000, -1000, -1000, -1000,
	1550, 12916, -1000, 1098, -1000, 5890, 1515, 1259, 28162, 1159,
	1590, 16156, 28162, 1149, -1000, 546, 1276, 1232, 1256, 1378,
	-1000, -1000, -1000, -1000, 1285, -1000, 1284, -1000, -1000, -1000,
	-1000, -1000, 1048, 1555, 19857, 1065, -1000, 1065, -1000, 431,
	-1000, -1000, -1000, -82, -94, -1000, -1000, -1000, 2495, -1000,
	-1000, -1000, 701, 14299, 1580, -1000, 896, -1000, 1466, 1462,
	-1000, 1178, -1000, -1000, -1000, 450, 450, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1038, -1000, 1036, 1096, 1034, 47,
	-1000, 1172, 1441, 543, 543, -1000, 714, -1000, 913, -1000,
	-1000, 357, -1000, 1489, 28162, 1253, 1252, 1238, -1000, 1530,
	1095, -1000, 28162, -1000, -1000, 28162, -1000, -1000, 1368, 135,
	28162, -1000, -1000, -1000, 211, 28162, -1000, 954, 113, -1000,
	-1000, -1000, -1000, -1000, -1000, 28162, 145, -1000, 1175, 856,
	-1000, 1189, -1000, -1000, -1000, -1000, 106, 200, -1000, 28162,
	338, 1257, 28162, -1000, -1000, -1000, 662, 662, -1000, 1438,
	-1000, 913, -1000, 14299, 2972, 2972, -1000, -1000, 894, -1000,
	1515, -1000, 894, 1169, 1169, -1000, 1169, 1174, -1000, 1169,
	70, 1169, 69, 894, 894, 2698, 2508, 2233, 2145, 1159,
	-120, -1000, 612, 12916, 2625, 2602, 1159, 1159, 1159, 1029,
	882, 19, -1000, -1000, -1000, 1548, 1529, 612, -1000, -1000,
	-1000, 1448, 1020, 1052, -1000, -1000, 10598, 1031, 1352, 429,
	1029, 1520, 28162, 12916, -1000, -1000, 12916, 1162, -1000, 12916,
	-1000, -1000, -1000, 1520, 1520, 1065, -1000, -1000, 478, -1000,
	-1000, -1000, -1000, -1000, 2972, -83, -1000, -1000, -1000, 14299,
	-1000, -1000, 19, 881, 19, 713, -1000, 711, -1000, -1000,
	-228, -1000, -1000, 1168, 1255, -1000, -1000, 28162, -1000, -1000,
	28162, 28162, 28162, 28162, 28162, -1000, -1000, 208, -1000, 1027,
	1018, -1000, -180, -1000, -1000, 1161, -1000, -1000, -1000, 973,
	-1000, -137, 913, 28162, 28162, 28162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2972, -1000, 1452, -1000, -1000, 252,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14299, 14299,
	14299, 14299, 14299, 1515, 880, 612, 14299, 14299, 19396, 28162,
	28162, 17539, 19, 7, -1000, 12916, 12916, 1459, -1000, 1159,
	-1000, 1103, 28162, 1159, 28162, -1000, 1515, -1000, 612, 612,
	28162, 612, 1515, -1000, -1000, 1279, 450, -1000, 450, 970,
	950, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1161,
	-1000, -1000, -1000, 1095, -1000, 206, 254, -1000, 211, -1000,
	-187, -194, 1499, 28162, -1000, -1000, 7790, -1000, -1000, 1160,
	1228, -1000, -1000, -1000, -1000, 1218, 1218, 1218, 1218, 218,
	894, -1000, 1218, 1218, 1013, -1000, 1013, 1013, 443, -280,
	-1000, 1396, 1383, 612, 1091, 1578, -1000, 1159, 1590, 418,
	1052, -1000, -1000, 992, -1000, -1000, -1000, -1000, -1000, -1000,
	1498, 1159, -1000, 28162, -1000, -1000, -1000, 1155, 979, 1061,
	-1000, 539, 28162, 28162, -1000, -1000, -1000, -1000, 894, 150,
	-147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7, 266,
	-1000, 1409, 1383, -1000, 1527, 1392, 1526, -1000, 28162, 1052,
	28162, -1000, 676, 1155, 13377, 1157, 203, -1000, 7790, 5415,
	976, -1000, -1000, 1321, -134, -152, 1385, 1388, 1388, 1409,
	-1000, 1525, 1523, -1000, 875, 1521, 869, 898, -1000, -1000,
	-1000, 675, 867, -1000, -1000, -1000, 203, 1218, 894, 28162,
	-1000, -59, -1000, -1000, -1000, -1000, -1000, 1189, -1000, 1312,
	-1000, 1382, 761, -1000, -1000, -1000, -1000, 857, 781, -1000,
	749, -1000, -1000, -1000, -1000, -1000, -1000, 965, 272, -1000,
	-1000, -137, -140, -1000, 738, -1000, -1000, -1000, -1000, -1000,
	1236, 160, -1000, -148, -1000, -1000, 1235, -1000, 1559, -1000,
	-153, -1000, 1577, 426, 426, -1000, -1000, -1000, -1000, 277,
	723, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1883, 1881, 12, 89, 86, 1880, 1879, 1878, 1877,
	129, 128, 127, 1875, 1873, 1871, 1870, 1869, 1865, 1864,
	1862, 1861, 1858, 1857, 1856, 63, 138, 37, 43, 139,
	1855, 1853, 28, 1852, 1851, 1850, 123, 120, 562, 1849,
	125, 1847, 1842, 1841, 1839, 1838, 1837, 1835, 1834, 1833,
	1832, 1830, 1829, 1828, 1827, 221, 1826, 1825, 4, 1824,
	34, 1822, 1821, 1819, 1818, 1817, 90, 1816, 1814, 1813,
	116, 1811, 1810, 56, 214, 50, 87, 1806, 1805, 80,
	131, 1802, 64, 105, 1801, 1797, 590, 1795, 44, 104,
	94, 1794, 41, 1790, 1789, 57, 1788, 1783, 1782, 77,
	1779, 1778, 3269, 1777, 75, 82, 16, 42, 1775, 1774,
	1773, 1772, 29, 421, 1771, 1770, 30, 1768, 1767, 133,
	1766, 91, 22, 1765, 20, 18, 23, 1764, 93, 1763,
	40, 58, 35, 1762, 83, 1761, 1760, 1758, 1757, 31,
	1752, 81, 111, 53, 1751, 1750, 1749, 7, 14, 1747,
	1746, 1745, 1743, 1742, 1741, 6, 1739, 5, 1734, 48,
	1731, 17, 24, 76, 79, 27, 15, 1730, 112, 1729,
	26, 117, 74, 115, 1728, 1727, 1725, 835, 146, 1724,
	1722, 59, 1721, 110, 98, 1717, 167, 1713, 1712, 72,
	1314, 1433, 9, 113, 1709, 1708, 2638, 61, 78, 25,
	1706, 68, 1704, 1703, 1697, 141, 119, 45, 810, 47,
	1693, 1691, 1677, 1676, 1674, 1672, 1671, 85, 32, 21,
	121, 33, 1670, 1668, 1667, 71, 36, 1666, 114, 106,
	73, 108, 1665, 118, 103, 67, 1663, 39, 1662, 1660,
	1659, 1654, 51, 1641, 1638, 1631, 1630, 102, 100, 69,
	46, 1629, 38, 66, 107, 109, 1627, 19, 124, 11,
	1625, 3, 0, 1624, 8, 130, 164, 99, 1616, 1615,
	1, 1614, 2, 1613, 1609, 84, 1608, 1607, 1603, 10,
	1602, 1599, 1598, 3194, 1451, 122, 1597, 126,
}

//line sql.y:5287
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 281, 282, 282, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 262, 262, 262, 265, 265,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 285, 285, 97, 97, 95, 95, 96, 96,
	163, 163, 13, 14, 14, 173, 173, 172, 172, 172,
	174, 174, 174, 174, 208, 208, 15, 15, 15, 15,
	15, 71, 71, 264, 264, 263, 261, 261, 260, 260,
	259, 23, 24, 33, 33, 33, 33, 34, 35, 266,
	266, 238, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 240, 240, 227, 227, 239, 239,
	239, 239, 239, 239, 239, 226, 226, 85, 85, 145,
	145, 145, 145, 145, 145, 145, 145, 278, 278, 146,
	146, 146, 146, 146, 146, 279, 279, 279, 279, 210,
	210, 210, 210, 213, 213, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 212, 212, 212, 212, 212, 214,
	214, 214, 214, 214, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 216,
	216, 216, 216, 216, 216, 216, 216, 225, 225, 217,
	217, 220, 220, 221, 221, 221, 222, 222, 223, 223,
	218, 218, 218, 218, 219, 219, 219, 228, 252, 252,
	251, 251, 249, 249, 249, 249, 237, 237, 246, 246,
	246, 246, 246, 236, 236, 232, 232, 232, 233, 233,
	234, 234, 231, 231, 235, 235, 248, 248, 247, 229,
	229, 230, 230, 254, 280, 280, 280, 280, 255, 271,
	272, 270, 270, 270, 270, 270, 60, 60, 60, 185,
	185, 185, 244, 244, 243, 243, 243, 245, 245, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 180, 180,
	180, 269, 269, 269, 269, 269, 269, 268, 268, 268,
	241, 241, 241, 267, 267, 131, 131, 132, 132, 30,
	30, 30, 30, 30, 30, 29, 29, 29, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	31, 31, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 224, 224, 224, 256, 256, 257, 257, 17,
	22, 22, 18, 18, 18, 18, 19, 19, 41, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 273, 273, 179, 179, 187,
	187, 178, 178, 201, 201, 201, 181, 181, 181, 182,
	182, 277, 277, 277, 43, 43, 45, 45, 46, 47,
	47, 203, 203, 204, 204, 48, 49, 61, 61, 61,
	61, 61, 61, 63, 63, 63, 7, 7, 7, 7,
	57, 57, 57, 6, 6, 44, 44, 51, 274, 274,
	275, 276, 276, 276, 276, 52, 54, 20, 20, 20,
	20, 20, 20, 78, 78, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 72, 72, 72,
	67, 67, 286, 55, 56, 56, 70, 70, 70, 64,
	64, 64, 69, 69, 69, 75, 75, 77, 77, 77,
	77, 77, 79, 79, 79, 79, 79, 79, 79, 74,
	74, 76, 76, 76, 76, 194, 194, 194, 193, 193,
	87, 87, 88, 88, 89, 89, 90, 90, 90, 129,
	105, 105, 162, 162, 161, 161, 164, 164, 91, 91,
	91, 91, 92, 92, 93, 93, 94, 94, 202, 202,
	199, 199, 199, 198, 198, 98, 98, 98, 100, 99,
	99, 99, 99, 101, 101, 103, 103, 102, 102, 104,
	106, 106, 106, 106, 106, 107, 107, 86, 86, 86,
	86, 86, 86, 86, 86, 176, 176, 109, 109, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 120,
	120, 120, 120, 120, 120, 110, 110, 110, 110, 110,
	110, 110, 73, 73, 121, 121, 121, 128, 122, 122,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 117, 117, 117, 117, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 287, 287,
	119, 118, 118, 118, 118, 118, 118, 118, 68, 68,
	68, 68, 68, 207, 207, 207, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 135,
	135, 65, 65, 133, 133, 134, 136, 136, 130, 130,
	130, 112, 112, 112, 112, 112, 112, 112, 112, 114,
	114, 114, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 142, 142, 142, 143, 143, 143, 143, 32, 32,
	32, 32, 32, 27, 27, 27, 27, 28, 28, 28,
	80, 80, 80, 80, 82, 82, 81, 81, 58, 58,
	59, 59, 59, 83, 83, 84, 84, 84, 84, 159,
	159, 159, 144, 144, 144, 144, 151, 151, 151, 147,
	147, 149, 149, 149, 150, 150, 150, 148, 156, 156,
	158, 158, 157, 157, 153, 153, 154, 154, 155, 155,
	155, 152, 152, 111, 111, 111, 111, 111, 160, 160,
	160, 160, 165, 165, 124, 124, 126, 126, 125, 127,
	166, 166, 170, 167, 167, 171, 171, 171, 171, 171,
	168, 168, 169, 169, 195, 195, 195, 175, 175, 186,
	186, 183, 183, 184, 184, 177, 177, 188, 188, 188,
	53, 123, 123, 253, 253, 250, 191, 191, 192, 192,
	196, 196, 200, 200, 197, 197, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 283, 284, 205, 206, 206,
	206,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 8, 0, 2, 0,
	2, 3, 3, 4, 2, 3, 2, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 2, 2, 2, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 3, 0, 1, 3, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 8, 8, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 3, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 5, 6, 4, 4,
	6, 6, 6, 8, 8, 8, 8, 9, 8, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -281, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -283, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 157, -34, -24, 158, -35, 160,
	159, 196, 161, 189, 73, 235, 236, 238, 239, 240,
	241, -63, 194, 195, 163, 35, 44, 32, 33, 36,
	166, 83, 9, 340, 191, 190, 26, -282, 480, -70,
	5, -139, 16, -3, -55, -286, -55, -55, -55, -55,
	-55, -55, -238, -240, 83, 130, 83, -55, -39, -38,
	-37, -36, -40, 30, -30, -31, -258, -29, -26, 162,
	159, 204, 104, 105, 196, 197, 198, 161, 180, 195,
	199, 194, 213, -25, 79, 32, 353, 356, -245, 158,
	164, 165, 341, 107, 106, 74, 160, -242, 285, 457,
	-40, 459, 97, 99, 458, 43, 169, 460, 461, 462,
	463, 179, 464, 465, 466, 467, 473, 474, 475, 476,
	108, 5, -55, -200, -196, -262, -190, 86, 87, 88,
	350, 182, 384, 385, 229, 79, 40, 285, 457, 235,
	249, 243, 270, 262, 351, 386, 232, 183, 217, 454,
	260, 318, 459, 387, 197, 290, 291, 292, 97, 238,
	327, 472, 234, 388, 470, 99, 458, 78, 50, 43,
	192, 258, 254, 460, 218, 389, 361, 211, 107, 104,
	479, 252, 49, 28, 469, 106, 48, 461, 390, 462,
	294, 275, 448, 47, 295, 198, 391, 82, 355, 456,
	296, 253, 297, 228, 468, 163, 392, 440, 299, 449,
	393, 276, 280, 394, 319, 300, 51, 395, 396, 450,
	105, 397, 77, 463, 247, 248, 398, 226, 181, 321,
	274, 179, 34, 301, 352, 230, 57, 205, 322, 45,
	278, 44, 444, 399, 447, 273, 269, 52, 400, 401,
	402, 403, 464, 272, 246, 268, 478, 223, 465, 61,
	165, 282, 281, 283, 212, 317, 265, 404, 405, 406,
	186, 80, 407, 255, 19, 408, 409, 302, 219, 410,
	55, 411, 412, 325, 195, 413, 53, 466, 38, 200,
	467, 414, 415, 416, 417, 418, 304, 419, 303, 277,
	279, 207, 305, 354, 420, 251, 199, 471, 421, 187,
	455, 201, 204, 194, 326, 188, 422, 423, 424, 425,
	426, 233, 427, 428, 239, 473, 42, 429, 430, 431,
	432, 227, 222, 320, 329, 60, 81, 287, 433, 453,
	245, 220, 434, 236, 54, 474, 475, 476, 214, 477,
	307, 108, 224, 225, 46, 266, 206, 435, 436, 256,
	257, 271, 244, 267, 237, 441, 208, 308, 196, 437,
	328, 221, 288, 358, 213, 309, 452, 357, 264, 261,
	215, 438, 310, 170, 209, 210, 439, 442, 311, 312,
	314, 315, 231, 313, 316, 216, 356, 259, 289, 168,
	-55, 168, -102, -196, 168, -168, 291, -187, 293, 306,
	301, 311, 299, -179, 302, 304, 207, -277, 319, 168,
	308, 157, 148, 294, 303, 312, 313, 316, 216, -273,
	-262, 462, 477, 318, 263, 298, 296, 320, 444, 315,
	314, -196, 237, -203, 242, -191, -262, -190, 240, -102,
	-61, 440, 161, -205, -205, -72, 444, 446, -122, -86,
	-108, 114, -113, 30, 24, -112, -109, -130, -127, -128,
	148, 149, 151, 150, 152, 137, 138, 145, 115, 153,
	-117, -115, -116, -118, 90, 89, 98, 91, 92, 93,
	94, 100, 101, 102, -191, -196, -125, -283, 67, 68,
	341, 342, 343, 344, 349, 345, 117, 56, 336, 330,
	339, 338, 337, 334, 335, 332, 333, 347, 348, 173,
	331, 167, 143, 340, -262, -190, 43, 307, 307, -102,
	-55, -5, -4, -283, 6, 21, 22, -143, 18, 17,
	-284, 85, -64, -77, 62, 63, -79, 22, 37, 66,
	64, 21, -56, -76, 139, -86, -196, -76, -177, 172,
	-177, -177, -167, -208, 237, -171, 320, 319, -192, -169,
	-191, -189, -168, 317, 162, 359, 113, 23, 25, 116,
	148, 17, 117, 36, 164, 263, 180, 147, 176, 341,
	157, 71, 360, 332, 333, 330, 336, 343, 344, 331,
	293, 30, 11, 362, 26, 190, 22, 37, 141, 159,
	120, 121, 193, 24, 191, 102, 365, 20, 74, 185,
	12, 178, 39, 14, 366, 367, 15, 173, 172, 132,
	169, 69, 9, 153, 27, 129, 65, 368, 29, 369,
	370, 371, 372, 67, 130, 18, 334, 335, 32, 445,
	373, 349, 202, 143, 72, 58, 446, 114, 374, 375,
	100, 376, 103, 75, 451, 111, 16, 70, 41, 377,
	203, 378, 175, 379, 323, 380, 131, 160, 340, 68,
	381, 167, 306, 6, 346, 31, 189, 177, 110, 66,
	382, 168, 119, 347, 348, 171, 101, 5, 174, 33,
	10, 73, 76, 337, 338, 339, 56, 109, 353, 118,
	13, 383, 324, 112, 318, -239, 130, -226, -230, -191,
	184, -255, 180, -102, -248, -247, -191, -71, -186, 169,
	178, 177, 174, -266, 111, 224, 331, 167, -36, -37,
	-168, 147, 201, 84, 84, -230, -229, -228, -267, 203,
	184, -254, -246, 176, 185, -236, 177, 178, -231, 169,
	29, -267, -231, 175, 185, 203, 203, 108, 203, 108,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 200,
	-237, 122, -237, 357, 357, -242, -267, -267, -267, 171,
	34, 34, -188, -231, 171, 23, -237, -237, -168, 147,
	-237, -237, -237, -237, 211, 211, -237, -237, -237, -237,
	-237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
	-237, 168, -266, -80, 316, 231, 79, -38, 213, -22,
	-102, -186, 169, 170, -266, -102, 154, -102, -181, 130,
	13, -181, -178, 307, 305, 292, 297, -181, -181, -181,
	-181, 214, 290, -232, 169, 34, 181, 307, 214, 290,
	214, 215, 214, 215, 300, 310, 214, -201, 12, 132,
	331, 295, 299, 207, 168, 208, 170, 309, -262, 447,
	215, -201, 307, 210, -181, -206, -283, -192, 263, -206,
	-206, 31, 171, -191, -57, -191, 90, -7, -3, -11,
	-10, -12, 122, -78, 307, -66, 148, 462, 448, 449,
	450, 447, 304, 455, 453, 451, 214, 452, 84, 113,
	111, 112, 129, -86, -110, 132, 114, 130, 131, 116,
	134, 133, 144, 137, 138, 139, 140, 141, 142, 143,
	135, 136, 147, 122, 123, 124, 125, 126, 127, 128,
	-176, -283, -128, -283, 155, 156, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -283, 154, -2, -122,
	-4, -283, -283, -283, -283, -283, -283, -283, -283, -135,
	-86, -283, -287, -283, -287, -119, -283, -287, -119, -287,
	-119, -287, -287, -119, -287, -119, -287, -287, -119, -283,
	-283, -283, -283, -283, -283, -283, -205, -274, -275, -105,
	-102, -283, 231, -139, -3, -55, -159, 20, 32, -86,
	-140, -141, -86, -139, 58, -74, -76, -79, 62, 63,
	96, 12, -194, -193, 23, -191, 90, 154, 12, -103,
	27, -102, -88, -89, -90, -91, -105, -129, -283, 12,
	-95, -96, -102, -104, -196, 84, 237, -171, -208, -173,
	-172, 321, 323, 122, -195, -191, 90, 30, 85, 84,
	-102, -210, -213, -215, -214, -216, -211, -212, 260, 261,
	148, 264, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 31, 192, 256, 257, 258, 259, 276, 277,
	278, 279, 280, 281, 282, 283, 243, 262, 351, 244,
	245, 246, 247, 248, 249, 251, 252, 253, 254, 255,
	-265, -262, 83, 85, 84, -217, 83, -80, 168, -262,
	169, 169, 169, -55, 340, -237, -237, 200, -29, -26,
	-258, 16, -25, -26, 162, 104, 105, 159, 83, -226,
	83, -235, -265, -262, 83, 29, 175, 174, -234, -231,
	-234, -235, -262, -130, -191, -196, -262, 29, 29, -164,
	-191, -164, -164, 21, -164, 21, -164, 21, 91, -191,
	-164, 21, -164, 21, -164, 21, -164, 21, -164, 21,
	30, 77, 78, 30, 80, 81, 82, -130, -130, -226,
	-168, -102, -262, 91, 91, -237, -237, 91, 90, 90,
	90, -237, -237, 91, 90, -262, 90, -268, 186, 228,
	230, 91, 91, 91, 91, 30, 90, -269, 30, 469,
	468, 470, 471, 472, 91, 30, 91, 30, 91, -191,
	83, -102, -83, 218, 157, 159, 162, 75, 90, 232,
	122, 43, 84, 171, 168, -262, -183, 173, -183, -197,
	-196, -189, 90, -86, -233, 12, 132, -201, -201, -181,
	-102, -233, -201, -181, -102, -181, -181, -181, -181, -201,
	-201, -201, -181, -196, -196, -102, -102, -102, -102, -102,
	-102, -102, -206, -206, -206, -182, 130, -181, 75, -204,
	240, 274, 441, 442, 443, 84, 353, -95, 447, 447,
	447, 447, 447, 447, -86, -86, -86, -86, -120, 100,
	114, 101, 102, -113, -121, -125, -128, 95, 132, 130,
	131, 116, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -113, -207, -262, 90,
	148, -262, -112, -112, -191, -75, 22, 37, -74, -192,
	-197, -189, -70, -284, -284, -139, -74, -74, -86, -86,
	-130, 90, -74, -130, 90, -74, -74, -69, 22, 37,
	-133, -134, 118, -130, -284, -113, -191, -191, -74, -75,
	-75, -74, -74, 84, -276, 323, 324, 445, -199, 203,
	-198, 23, -196, 90, -123, -122, 90, -143, -284, -144,
	27, 10, 132, 84, 19, 84, -142, 25, 26, -143,
	-114, -191, 91, 94, -87, 84, 12, -79, -102, -193,
	139, -197, -102, -163, 203, -102, 31, 84, -98, -100,
	-99, -101, 65, 69, 71, 66, 67, 68, 72, -202,
	23, -88, -3, -283, -102, -95, -285, 84, 12, 76,
	-285, 84, 154, -171, -173, 84, 322, 324, 325, 75,
	103, -86, -219, 147, -244, -243, -242, -226, -228, -229,
	-230, 85, -145, -85, 39, -222, 288, -217, -217, -217,
	-217, -217, -218, -168, -218, -218, -218, 83, 83, -217,
	-217, -217, -217, -220, 83, -220, -220, -221, 83, -221,
	-255, -86, -252, -251, -249, -250, 179, 97, 353, 76,
	-247, -142, 91, -83, -184, 173, -253, -250, -262, -262,
	-262, -184, -262, 90, -262, 90, 84, 17, -227, -226,
	-131, 228, -257, 203, -254, -248, -235, 29, -234, -235,
	-235, 154, -262, 84, 27, 108, 108, 108, 108, 353,
	159, 31, -226, -131, -207, 171, -207, -207, 90, 90,
	-180, 477, -95, -82, 220, 122, 209, 209, 168, 168,
	222, -102, 233, 234, 232, 21, 221, 223, 225, 211,
	-102, -102, -183, 75, -97, -102, 24, -196, -102, -181,
	-181, -102, -181, -181, 90, -102, -191, -66, 323, 353,
	20, -67, 20, 100, 101, 102, -121, -113, -113, -113,
	-73, 193, 113, -284, -284, -74, -74, -283, 154, -5,
	-143, -284, -284, 84, 76, 23, 12, 12, -284, 12,
	12, -284, -284, -74, -136, -134, 120, -86, -284, -284,
	84, 84, -284, -284, -284, -284, -284, -275, 444, 324,
	-106, 73, 172, 74, -283, -198, -284, -159, 41, 49,
	60, -86, -86, -141, -159, -175, 20, 12, 56, 56,
	-107, 13, -76, -88, -79, 154, -107, -111, 31, 56,
	-3, -283, -283, -166, -170, -130, -89, -90, -90, -89,
	-90, 65, 65, 65, 70, 65, 70, 65, -99, -196,
	-284, -284, -3, -163, 76, -88, -102, -88, -104, -196,
	139, -172, -174, 326, 323, 329, -262, 90, 84, -242,
	-230, 100, 114, 30, 75, 285, 97, -279, 175, 174,
	29, 23, 40, -223, 289, -218, -218, -219, -262, 90,
	148, -219, -219, -219, -225, 90, -225, 91, 91, 85,
	-32, -27, -28, 32, 79, -249, -237, 90, 38, -191,
	85, -82, -102, 114, 75, -253, -253, -253, -196, 16,
	-161, -191, 84, 85, -132, 229, -130, 85, -191, 85,
	83, -235, -192, -191, -283, 168, 30, 30, -131, -132,
	-219, -262, 479, 478, 85, 170, 227, -84, 336, 90,
	86, -102, -102, -102, -102, -102, 162, 159, 212, 171,
	-95, -102, 84, -60, 188, 183, -201, -201, 32, 323,
	456, 454, -73, 113, -113, -113, -284, -284, -75, -192,
	-139, -159, -209, 148, 260, 192, 258, 254, 274, 265,
	287, 256, 288, -207, -209, -113, -113, -113, -113, 350,
	-139, 121, -86, 119, -113, -113, 169, 169, 169, -164,
	42, 90, 90, 61, -102, -137, 14, -86, 139, -143,
	-165, 75, -166, -124, -126, -125, -283, -160, -284, -191,
	-164, -107, 84, 122, -93, -92, 75, 76, -94, 75,
	-92, 65, 65, -284, -107, -88, -107, -107, 154, 323,
	327, 328, -242, 100, -113, 10, 90, 29, 29, 83,
	-219, -219, 85, 84, 85, 84, 85, 84, -185, 390,
	114, -28, -27, -237, -237, 91, -262, 170, 24, -102,
	75, 75, 75, 17, 84, -226, -130, 56, -252, -161,
	-256, -257, -102, -112, -132, -102, -81, 218, 226, 83,
	87, -264, 76, 209, 285, 209, -102, -60, -32, -102,
	-181, -181, 32, -262, -113, -284, -143, -284, -217, -217,
	-217, -221, -217, 248, -217, 248, -284, -284, 20, 20,
	20, 20, -283, -65, 346, -86, 84, 84, -283, -283,
	-283, -284, 90, -218, -138, 15, 17, 28, -165, 84,
	-284, -284, 84, 56, 154, -284, -139, -170, -86, -86,
	83, -86, -139, -107, -116, -113, -218, 90, -218, 91,
	91, 390, 30, 80, 81, 82, 30, 77, 78, -102,
	-102, -102, -102, -161, -191, 205, 85, -284, 84, -224,
	353, 356, -162, 83, 85, -261, 353, -263, -262, -191,
	-191, -191, -159, -218, -262, -113, -113, -113, -113, -113,
	-143, 90, -113, -113, -161, -284, -161, -161, -199, -218,
	-148, -153, -178, -86, -122, 29, -126, 56, -3, -191,
	-124, -191, -143, -161, -143, 85, -219, -219, 85, 85,
	-162, 206, -280, 187, -257, 357, 357, 23, -161, -260,
	-259, -192, 83, 76, -284, -284, -284, -284, -68, 132,
	353, -284, -284, -284, -284, -284, -284, -106, -151, 440,
	-156, 45, -154, -155, 46, -152, 47, 55, 10, -124,
	154, 85, -146, 23, -283, -102, -3, 85, 84, 122,
	-161, -102, -284, 351, 72, 354, -148, 50, 266, -158,
	-157, 54, 46, -155, 17, 48, 17, -166, -191, -278,
	100, 114, 97, -279, 109, 110, -3, -113, 202, 83,
	-58, 353, -259, -241, -192, 90, 91, 85, 61, 352,
	355, -149, 52, -147, 51, -147, -157, 17, 17, 90,
	17, 90, 100, 90, -58, -284, -284, -161, -59, 217,
	444, -264, 61, -150, 53, 75, 103, 90, 90, 90,
	85, 180, -261, 353, 75, 103, -271, -272, 75, 219,
	354, -272, 75, 11, 10, 355, -270, 188, 183, 186,
	31, -270, 182, 30, 100,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 836, 0, 572, 572, 572, 572, 572,
	572, 572, 0, 0, 572, -2, -2, 572, 972, 0,
	572, 0, 0, -2, 505, 506, 0, 508, -2, 0,
	0, 517, 1387, 1387, 567, 0, 0, 0, 0, 0,
	572, 1385, 55, 56, 523, 524, 525, 1, 3, 0,
	576, 844, 0, 0, -2, 574, 0, 0, 955, 955,
	955, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 381, 342, 384, 340, 370, -2,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 236, 236, 0, 0, -2, 333,
	333, 333, 0, 0, 0, 367, 957, 287, 236, 236,
	0, 236, 236, 236, 236, 0, 0, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 860, 118, 973, 970, 971, 35, 36, 37,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 0,
	949, 0, 437, 657, 0, 496, 496, 0, 496, 496,
	496, 496, 0, 0, 0, 449, 0, 0, 0, 0,
	493, 0, 0, 468, 470, 0, 493, 0, 480, 496,
	1388, 1388, 1388, 940, 0, 490, 488, 502, 503, 485,
	486, 504, 507, 0, 512, 515, 966, 967, 0, 530,
	0, 1193, 522, 535, 536, 0, 568, 569, 40, 708,
	667, 0, 673, 675, 0, 710, 711, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 741, 742, 743, 821, 822, 823, 824, 825, 826,
	827, 828, 677, 678, 818, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 809, 0, 778, 778,
	778, 778, 778, 778, 778, 778, 778, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 1387, 0, 545, 0,
	0, 836, 51, 0, 572, 577, 578, 879, 0, 0,
	836, 1386, 0, 0, -2, -2, 588, 594, 595, 596,
	597, 598, 573, 0, 601, 605, 0, 0, 0, 956,
	0, 0, 72, 0, 1350, 933, -2, -2, 0, 0,
	968, 969, 942, -2, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, -2, 0, 0, 128, 129, 0,
	38, 262, 0, 124, 0, 256, 209, 860, 0, 0,
	0, 0, 0, 572, 0, 950, 109, 110, 116, 117,
	236, 236, 0, 118, 118, 349, 350, 351, 0, 0,
	-2, 260, 0, 334, 0, 0, 250, 250, 254, 252,
	253, 0, 0, 0, 0, 0, 0, 361, 0, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 421,
	0, 237, 0, 379, 380, 288, 0, 0, 0, 0,
	359, 360, 0, 0, 958, 959, 0, 0, 236, 236,
	0, 0, 0, 0, 236, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 873, 0, 0, 0, -2, 0, 429,
	0, 0, 0, 951, 951, 436, 0, 438, 439, 0,
	0, 440, 0, 493, 493, 491, 492, 442, 443, 444,
	445, 496, 0, 0, 245, 246, 247, 493, 496, 0,
	496, 496, 496, 496, 493, 493, 493, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1388, 1388, 1388,
	499, 496, 477, 478, 481, 482, 1389, 1390, 987, 483,
	484, 941, 513, 516, 533, 531, 532, 534, 526, 527,
	528, 529, 0, 547, 548, 553, 0, 0, 0, 0,
	559, 560, 561, 0, 0, 564, 565, 566, 0, 0,
	0, 0, 0, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 696, 697, 698, 699, 700, 701,
	674, 0, 688, 0, 0, 0, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 0, 585, 0, 0, 0,
	836, 0, 0, 0, 0, 0, 0, 0, 582, 0,
	810, 0, 761, 0, 762, 770, 0, 763, 771, 764,
	772, 765, 766, 773, 767, 774, 768, 769, 775, 0,
	0, 0, 585, 585, 0, 0, 41, 537, 538, 0,
	640, 961, 0, 844, 0, 587, 882, 0, 0, 845,
	837, 838, 841, 844, 0, 610, 599, 589, 592, 593,
	575, 0, 602, 606, 0, 608, 609, 0, 0, 70,
	0, 656, 0, 612, 614, 615, 616, 638, 0, 0,
	0, 0, 66, 68, 657, 0, 1350, 939, 0, 74,
	75, 0, 0, 0, 224, 944, 945, 946, -2, 243,
	0, -2, 216, 160, 161, 162, 209, 164, 209, 209,
	209, 209, 220, 220, 220, 220, 192, 193, 194, 195,
	196, 0, 0, 179, 209, 209, 209, 209, 199, 200,
	201, 202, 203, 204, 205, 206, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 211, 211, 211, 213, 213,
	0, 39, 0, 228, 0, 841, 0, 873, 953, 963,
	0, 0, 0, 953, 92, 0, 0, 382, 343, 371,
	383, 0, 346, 347, -2, 0, 0, 333, 0, 335,
	0, 244, 0, -2, 0, 254, 0, 250, 254, 251,
	254, 242, 255, 363, 818, 0, 364, 365, 0, 401,
	626, 0, 0, 0, 0, 0, 407, 408, 409, 0,
	411, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	372, 373, 374, 375, 376, 377, 378, 0, 0, 335,
	0, 368, 0, 289, 290, 0, 0, 293, 294, 295,
	296, 0, 0, 299, 300, 301, 302, 303, 327, 328,
	329, 304, 305, 306, 307, 308, 309, 310, 321, 322,
	323, 324, 325, 326, 311, 312, 313, 314, 315, 318,
	0, 102, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 0, 0, 658,
	974, 975, 497, 498, 0, 248, 249, 496, 496, 446,
	469, 0, 496, 450, 471, 451, 453, 452, 454, 473,
	474, 496, 457, 494, 495, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 475, 0, 476, 0, 0,
	514, 518, 519, 520, 521, 0, 0, 550, 555, 556,
	557, 558, 570, 563, 709, 668, 669, 670, 672, 689,
	0, 691, 693, 679, 680, 704, 705, 706, 0, 0,
	0, 0, 702, 684, 0, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 729, 793, 794,
	795, 0, 727, 728, 739, 0, 0, 0, 586, 819,
	0, -2, 0, 707, 928, 844, 0, 0, 0, 0,
	712, 821, 0, 712, 821, 0, 0, 0, 583, 584,
	816, 813, 0, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 541, 543, 0, 660, 0,
	641, 0, 643, 644, 0, 962, 546, 879, 52, 42,
	0, 880, 0, 0, 0, 0, 840, 842, 843, 879,
	0, 829, 0, 0, 665, 0, 0, 590, 48, 607,
	603, 0, 665, 0, 0, 655, 0, 0, 0, 0,
	0, 0, 645, 0, 0, 648, 0, 0, 0, 0,
	639, 0, 0, 0, -2, 0, 0, 0, 62, 63,
	0, 0, 0, 934, 73, 0, 0, 78, 79, 935,
	936, 937, 938, 0, 111, -2, 284, 130, 132, 133,
	134, 125, 135, 0, 0, 218, 217, 163, 220, 220,
	186, 187, 224, 0, 224, 224, 224, 0, 0, 180,
	181, 182, 183, 174, 0, 175, 176, 177, 0, 178,
	261, 0, 848, 229, 230, 232, 236, 0, 0, 0,
	257, 258, 0, 864, 0, 0, 0, 964, 963, 963,
	963, 0, 120, 121, 122, 123, 118, 0, 0, 126,
	337, 0, 0, 0, 259, 0, 0, 238, 254, 239,
	240, 0, 366, 0, 0, 403, 404, 405, 406, 0,
	0, 0, 335, 337, 224, 0, 291, 292, 297, 298,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 397, 398, 399, 861, 862, 863, 0,
	0, 430, 0, 0, 276, 64, 952, 435, 493, 456,
	472, 493, 448, 455, 500, 479, 510, 554, 0, 0,
	0, 562, 0, 690, 692, 694, 681, 702, 685, 0,
	682, 0, 0, 676, 744, 0, 0, 585, 0, 836,
	879, 748, 749, 0, 0, 0, 0, 0, 786, 0,
	0, 787, 0, 836, 0, 814, 0, 0, 760, 780,
	0, 0, 781, 782, 783, 784, 785, 539, 542, 544,
	620, 0, 0, 0, 0, 642, 960, 44, 0, 0,
	0, 846, 847, 839, 43, 0, 947, 948, 830, 831,
	832, 0, 600, 611, 591, 0, 844, 922, 0, 0,
	914, 0, 0, 665, 930, 0, 613, 634, 636, 0,
	631, 646, 647, 649, 0, 651, 0, 653, 654, 617,
	618, 619, 0, 665, 0, 665, 67, 665, 69, 0,
	659, 76, 77, 0, 0, 83, 225, 226, 118, 286,
	131, 140, 0, 0, 0, 144, 0, 146, 0, 156,
	158, 0, 138, 159, 219, 224, 224, 188, 221, 222,
	223, 189, 190, 191, 0, 207, 0, 0, 0, 279,
	88, 852, 851, 236, 236, 231, 0, 234, 0, 965,
	210, 0, 101, 0, 0, 0, 0, 0, 107, 0,
	341, 624, 0, 352, 353, 0, 336, 400, 0, 228,
	0, 241, 819, 627, 0, 0, 354, 0, 337, 357,
	358, 369, 319, 320, 317, 0, 0, 874, 875, 0,
	878, 93, 389, 391, 390, 394, 0, 0, 387, 0,
	276, 848, 0, 434, 277, 278, 496, 496, 549, 0,
	552, 0, 683, 0, 703, 686, 745, 746, 0, 820,
	844, 46, 0, 209, 209, 799, 209, 213, 802, 209,
	804, 209, 807, 0, 0, 0, 0, 0, 0, 0,
	811, 759, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 884, 881, 45, 834, 0, 666, 604, 49,
	53, 0, 922, 913, 924, 926, 0, 0, 0, 918,
	0, 836, 0, 0, 628, 635, 0, 0, 629, 0,
	630, 650, 652, -2, 836, 665, 60, 61, 0, 80,
	81, 82, 285, 141, 142, 0, 145, 155, 157, 0,
	184, 185, 220, 0, 220, 0, 214, 0, 268, 280,
	0, 849, 850, 0, 0, 233, 235, 0, 954, 103,
	0, 0, 0, 0, 0, 127, 338, 0, 227, 0,
	0, 425, 422, 355, 356, 622, 865, 866, 867, 0,
	877, 96, 0, 0, 0, 0, 431, 432, 433, 65,
	441, 447, 551, 571, 687, 747, 879, 750, 796, 220,
	800, 801, 803, 805, 806, 808, 752, 751, 0, 0,
	0, 0, 0, 844, 0, 815, 0, 0, 0, 0,
	0, 640, 220, 904, 50, 0, 0, 0, 54, 0,
	927, 0, 0, 0, 0, 71, 844, 931, 932, 632,
	0, 637, 844, 59, 143, 0, 224, 208, 224, 0,
	0, 281, 853, 854, 855, 856, 857, 858, 859, 622,
	104, 105, 106, 344, 625, 0, 0, 402, 0, 410,
	0, 0, 0, 0, 876, 388, 0, 94, 95, 0,
	0, 393, 47, 797, 798, 0, 0, 0, 0, 788,
	0, 812, 0, 0, 0, 662, 0, 0, 660, 886,
	885, 898, 911, 835, 833, 0, 925, 0, 917, 920,
	916, 919, 57, 0, 58, 149, 197, 198, 212, 215,
	0, 0, 263, 0, 426, 423, 424, 0, 0, 97,
	98, 0, 0, 0, 753, 755, 754, 756, 0, 0,
	0, 758, 776, 777, 661, 663, 664, 621, 904, 0,
	897, 0, -2, 906, 0, 0, 0, 912, 0, 915,
	0, 633, 136, 0, 0, 0, 868, 623, 0, 0,
	0, 395, 757, 0, 0, 0, 891, 889, 889, 899,
	900, 0, 0, 907, 0, 0, 0, 923, 921, 150,
	151, 0, 0, 154, 147, 148, 868, 0, 0, 0,
	385, 870, 99, 100, 330, 331, 332, 93, 789, 0,
	792, 894, 0, 887, 890, 888, 901, 0, 0, 908,
	0, 910, 152, 153, 89, 427, 428, 0, 0, 871,
	872, 96, 790, 883, 0, 892, 893, 902, 903, 909,
	264, 0, 392, 0, 895, 896, 265, 266, 0, 869,
	0, 267, 0, 0, 0, 791, 269, 271, 272, 0,
	0, 270, 273, 274, 275,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 115, 3, 3, 3, 142, 134, 3,
	83, 85, 139, 137, 84, 138, 154, 140, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 480,
	123, 122, 124, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 144, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 145,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	116, 117, 118, 119, 120, 121, 125, 126, 127, 128,
	129, 130, 131, 132, 135, 136, 141, 143, 146, 147,
	148, 149, 150, 151, 152, 153, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:431
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:436
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:437
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:441
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:488
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:493
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:509
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:515
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:524
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:528
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:532
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:555
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:563
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:575
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:589
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:593
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:612
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:624
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:628
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:644
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:652
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:662
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:672
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:682
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:686
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:695
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:717
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:721
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:727
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:731
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:735
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:741
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:745
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:749
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:753
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:759
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:763
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:802
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:806
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:811
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:826
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:831
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:837
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:854
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:861
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:868
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:873
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:878
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:883
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:890
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:897
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:908
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:918
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:924
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:928
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:951
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:955
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:961
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:965
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:972
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:976
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:982
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:992
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:997
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1006
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1025
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1030
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1050
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1054
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1060
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1066
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1071
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1076
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1081
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1086
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1093
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1097
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1102
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1106
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1111
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1117
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1123
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1128
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1135
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1139
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1143
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1147
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1207
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1307
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1342
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1364
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1378
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1383
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1387
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1395
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1405
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = ""
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1463
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1472
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1478
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1482
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1488
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1492
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1497
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1501
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = ""
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1517
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1521
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1525
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1529
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1533
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = ""
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = yyDollar[2].str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = "key"
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = yyDollar[1].str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1601
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1611
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1617
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1621
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1627
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1631
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1637
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1643
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1647
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1651
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1655
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1661
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1667
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1673
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1679
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1683
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1687
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1691
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1695
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = ""
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1721
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1730
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1736
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1750
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1768
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1792
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1796
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1927
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1936
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1945
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1949
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1953
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 344:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1961
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1967
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1981
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1985
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1989
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1993
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1997
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2001
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2005
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2009
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2013
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2017
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2021
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2025
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2029
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2033
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2037
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2041
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2045
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2049
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2053
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2057
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2061
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2065
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2071
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2081
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2085
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2089
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2093
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2097
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2101
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2105
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2109
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2113
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2119
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2125
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2132
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2139
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2145
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2149
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2156
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2163
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2175
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2185
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2189
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2193
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2206
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2216
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2220
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2231
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2238
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2245
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2252
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2260
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2264
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2268
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2272
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2276
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2280
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2284
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2288
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2292
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2296
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2300
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2304
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2308
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2312
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2316
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2320
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2324
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2328
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2332
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2336
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2340
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2344
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2364
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2374
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2378
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2384
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2390
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2394
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2400
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2404
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2413
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2417
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2423
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2427
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2432
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2442
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2446
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2450
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2454
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2458
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2462
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2466
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2470
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2474
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2482
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2494
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2498
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2502
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2510
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2514
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2518
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2522
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2526
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2530
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2534
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2538
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2542
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2546
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2554
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2558
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2562
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2566
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2570
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2574
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2578
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2582
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2587
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2608
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2622
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2626
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2630
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = "extended "
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2684
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2694
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2698
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2708
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2714
		{
			yyVAL.empty = struct{}{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.empty = struct{}{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.empty = struct{}{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2728
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2732
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2763
		{
			yyVAL.empty = struct{}{}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.empty = struct{}{}
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.empty = struct{}{}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.empty = struct{}{}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2786
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2790
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2794
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2798
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2802
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2806
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = yyDollar[1].str
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2834
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2838
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2867
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2871
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2883
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2893
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2899
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2903
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2907
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2911
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2917
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2923
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2929
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2933
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2941
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2945
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3027
		{
			yyVAL.str = ""
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3036
		{
			setAllowComments(yylex, true)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3046
		{
			yyVAL.strs = nil
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3050
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3060
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3064
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3069
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = SQLCacheStr
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3099
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3104
		{
			yyVAL.strs = nil
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3112
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3120
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = SQLCacheStr
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.str = DistinctStr
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.str = DistinctStr
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = StraightJoinHint
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3156
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3160
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3166
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3170
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3174
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3178
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3183
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3191
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3203
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3207
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3213
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3227
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3231
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3235
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3241
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3247
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3251
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3260
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3266
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3276
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3293
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3297
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3301
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3305
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3313
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3317
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3323
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3328
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3333
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3354
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3358
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3362
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3368
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3374
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3378
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3382
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3386
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3392
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3396
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3406
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3420
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3435
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3439
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3443
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3447
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3456
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3466
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3470
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3474
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3478
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3482
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3486
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3490
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3506
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3510
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3516
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3520
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3524
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3528
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3532
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3536
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3540
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3544
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3548
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3552
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3558
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3562
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3566
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3570
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3574
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3578
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3584
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3588
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3592
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3596
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3600
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3604
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3608
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3617
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3623
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3627
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3631
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3638
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3644
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3658
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3662
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3670
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3674
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3746
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3750
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3754
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3758
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3762
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3788
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3792
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3796
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3810
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3822
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3826
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3854
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3885
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3901
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3915
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3919
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3938
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3942
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3962
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3966
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3970
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3974
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3978
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3992
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3996
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4000
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4004
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4008
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4028
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4032
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4036
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4040
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4044
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4048
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4054
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4058
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4062
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4066
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4070
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4074
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4078
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4087
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = string("")
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4102
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4112
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4121
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4127
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4131
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4135
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4141
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4145
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4149
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4153
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4157
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4165
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4176
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4199
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4217
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4223
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4233
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4238
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4242
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4246
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4255
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4259
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4263
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4272
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4276
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4280
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4284
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4291
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4295
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4299
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4303
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4309
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4313
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4317
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = yyDollar[3].str
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = yyDollar[2].str
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = "cascaded"
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4407
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4411
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4415
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4424
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4428
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4432
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4450
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.str = " header"
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = " manifest on"
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = " manifest off"
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = " overwrite on"
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = " overwrite off"
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = yyDollar[1].str
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = " optionally"
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4570
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4574
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4578
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4582
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4586
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4592
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4596
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4604
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4613
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4619
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4629
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4633
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4639
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4655
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4665
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4671
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4675
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4681
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4685
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4689
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4693
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4697
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = "charset"
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4734
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4737
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4752
		{
			yyVAL.empty = struct{}{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.empty = struct{}{}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.empty = struct{}{}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4769
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4776
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4780
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5257
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5266
		{
			decNesting(yylex)
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5271
		{
			skipToEnd(yylex)
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			skipToEnd(yylex)
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			skipToEnd(yylex)
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
