// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const CODE = 57605
const NAMES = 57606
const CHARSET = 57607
const GLOBAL = 57608
const SESSION = 57609
const ISOLATION = 57610
const LEVEL = 57611
const READ = 57612
const WRITE = 57613
const ONLY = 57614
const REPEATABLE = 57615
const COMMITTED = 57616
const UNCOMMITTED = 57617
const SERIALIZABLE = 57618
const CURRENT_TIMESTAMP = 57619
const DATABASE = 57620
const CURRENT_DATE = 57621
const CURRENT_TIME = 57622
const LOCALTIME = 57623
const LOCALTIMESTAMP = 57624
const CURRENT_USER = 57625
const UTC_DATE = 57626
const UTC_TIME = 57627
const UTC_TIMESTAMP = 57628
const REPLACE = 57629
const CONVERT = 57630
const CAST = 57631
const SUBSTR = 57632
const SUBSTRING = 57633
const GROUP_CONCAT = 57634
const SEPARATOR = 57635
const TIMESTAMPADD = 57636
const TIMESTAMPDIFF = 57637
const MATCH = 57638
const AGAINST = 57639
const BOOLEAN = 57640
const LANGUAGE = 57641
const WITH = 57642
const QUERY = 57643
const EXPANSION = 57644
const UNUSED = 57645
const ARRAY = 57646
const CUME_DIST = 57647
const DESCRIPTION = 57648
const DENSE_RANK = 57649
const EMPTY = 57650
const EXCEPT = 57651
const FIRST_VALUE = 57652
const GROUPING = 57653
const GROUPS = 57654
const JSON_TABLE = 57655
const LAG = 57656
const LAST_VALUE = 57657
const LATERAL = 57658
const LEAD = 57659
const MEMBER = 57660
const NTH_VALUE = 57661
const NTILE = 57662
const OF = 57663
const OVER = 57664
const PERCENT_RANK = 57665
const RANK = 57666
const RECURSIVE = 57667
const ROW_NUMBER = 57668
const SYSTEM = 57669
const WINDOW = 57670
const ACTIVE = 57671
const ADMIN = 57672
const BUCKETS = 57673
const CLONE = 57674
const COMPONENT = 57675
const DEFINITION = 57676
const ENFORCED = 57677
const EXCLUDE = 57678
const FOLLOWING = 57679
const GEOMCOLLECTION = 57680
const GET_MASTER_PUBLIC_KEY = 57681
const HISTOGRAM = 57682
const HISTORY = 57683
const INACTIVE = 57684
const INVISIBLE = 57685
const LOCKED = 57686
const MASTER_COMPRESSION_ALGORITHMS = 57687
const MASTER_PUBLIC_KEY_PATH = 57688
const MASTER_TLS_CIPHERSUITES = 57689
const MASTER_ZSTD_COMPRESSION_LEVEL = 57690
const NESTED = 57691
const NETWORK_NAMESPACE = 57692
const NOWAIT = 57693
const NULLS = 57694
const OJ = 57695
const OLD = 57696
const OPTIONAL = 57697
const ORDINALITY = 57698
const ORGANIZATION = 57699
const OTHERS = 57700
const PATH = 57701
const PERSIST = 57702
const PERSIST_ONLY = 57703
const PRECEDING = 57704
const PRIVILEGE_CHECKS_USER = 57705
const PROCESS = 57706
const RANDOM = 57707
const REFERENCE = 57708
const REQUIRE_ROW_FORMAT = 57709
const RESOURCE = 57710
const RESPECT = 57711
const RESTART = 57712
const RETAIN = 57713
const REUSE = 57714
const ROLE = 57715
const SECONDARY = 57716
const SECONDARY_ENGINE = 57717
const SECONDARY_LOAD = 57718
const SECONDARY_UNLOAD = 57719
const SKIP = 57720
const SRID = 57721
const THREAD_PRIORITY = 57722
const TIES = 57723
const UNBOUNDED = 57724
const VCPU = 57725
const VISIBLE = 57726
const FORMAT = 57727
const TREE = 57728
const VITESS = 57729
const TRADITIONAL = 57730
const LOCAL = 57731
const LOW_PRIORITY = 57732

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 802,
	-2, 87,
	-1, 43,
	136, 110,
	236, 110,
	-2, 104,
	-1, 50,
	34, 349,
	155, 349,
	167, 349,
	195, 363,
	196, 363,
	-2, 351,
	-1, 55,
	157, 373,
	-2, 371,
	-1, 79,
	55, 416,
	-2, 424,
	-1, 103,
	136, 110,
	236, 110,
	-2, 105,
	-1, 448,
	143, 813,
	-2, 809,
	-1, 449,
	143, 814,
	-2, 810,
	-1, 466,
	55, 417,
	-2, 429,
	-1, 467,
	55, 418,
	-2, 430,
	-1, 487,
	111, 1102,
	-2, 80,
	-1, 488,
	111, 1002,
	-2, 81,
	-1, 493,
	111, 959,
	-2, 773,
	-1, 495,
	111, 1043,
	-2, 775,
	-1, 650,
	136, 110,
	236, 110,
	-2, 273,
	-1, 1042,
	143, 816,
	-2, 812,
	-1, 1134,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1530,
	5, 670,
	18, 670,
	20, 670,
	32, 670,
	82, 670,
	-2, 455,
	-1, 1740,
	45, 744,
	-2, 742,
}

const yyPrivate = 57344

const yyLast = 20058

var yyAct = [...]int{
	448, 1834, 1578, 1823, 1740, 1447, 1787, 1716, 1663, 1686,
	1355, 1156, 78, 3, 392, 1207, 1510, 1323, 421, 459,
	407, 1356, 1201, 1511, 1081, 1507, 1400, 808, 1423, 927,
	1155, 1342, 1152, 1424, 630, 663, 764, 1165, 960, 1640,
	1131, 1522, 1495, 1186, 1467, 1282, 113, 804, 627, 125,
	1029, 361, 125, 1209, 1416, 492, 624, 373, 852, 125,
	972, 1036, 1170, 1120, 845, 1113, 815, 818, 422, 32,
	380, 468, 813, 1083, 836, 802, 838, 1062, 1231, 699,
	453, 394, 701, 623, 1006, 1096, 1210, 373, 851, 835,
	373, 125, 373, 849, 1136, 975, 123, 842, 76, 383,
	631, 32, 825, 74, 390, 1197, 376, 777, 1078, 1079,
	125, 125, 104, 992, 73, 31, 79, 105, 125, 778,
	656, 1798, 1321, 125, 114, 115, 116, 1737, 1650, 1688,
	1827, 381, 382, 1784, 1563, 1821, 75, 1763, 629, 1813,
	8, 7, 1579, 455, 1783, 6, 1484, 1762, 1608, 474,
	478, 81, 82, 83, 84, 85, 86, 644, 645, 433,
	639, 439, 440, 437, 438, 653, 436, 435, 434, 489,
	659, 1438, 1214, 1537, 1538, 1437, 441, 442, 352, 96,
	486, 33, 1147, 1148, 67, 37, 38, 353, 1386, 1536,
	454, 1385, 1322, 1212, 1387, 350, 1727, 726, 725, 735,
	736, 728, 729, 730, 731, 732, 733, 734, 727, 671,
	853, 737, 854, 1039, 917, 1146, 641, 101, 118, 119,
	120, 640, 680, 681, 697, 114, 115, 116, 1080, 347,
	682, 452, 101, 93, 683, 680, 681, 451, 359, 97,
	1408, 1180, 98, 99, 1449, 1468, 1643, 1765, 643, 101,
	109, 1187, 110, 1599, 371, 66, 1597, 991, 33, 34,
	35, 67, 37, 38, 1211, 114, 115, 116, 375, 993,
	994, 995, 369, 1572, 1434, 677, 1819, 340, 71, 1221,
	1573, 1222, 1223, 39, 64, 65, 1470, 62, 1219, 949,
	920, 695, 651, 63, 672, 1452, 688, 948, 690, 696,
	675, 676, 673, 674, 342, 343, 344, 1261, 357, 358,
	364, 1451, 1450, 946, 354, 356, 365, 345, 346, 367,
	366, 1812, 51, 341, 349, 362, 1800, 1746, 1717, 1799,
	687, 689, 66, 947, 1114, 1472, 1253, 1476, 950, 1471,
	125, 1469, 1205, 1811, 1205, 1205, 1474, 1543, 642, 626,
	655, 693, 1840, 684, 686, 1473, 1324, 1326, 1706, 100,
	636, 480, 373, 1453, 111, 954, 702, 1433, 1475, 1477,
	1494, 1493, 1492, 637, 100, 649, 373, 373, 666, 667,
	668, 669, 670, 1562, 339, 117, 1260, 661, 1436, 1259,
	708, 100, 1728, 1761, 749, 750, 698, 1250, 42, 44,
	47, 46, 49, 1252, 61, 1744, 1629, 1535, 1347, 1174,
	1311, 1290, 1142, 829, 762, 660, 1213, 727, 1187, 1301,
	737, 1838, 114, 115, 116, 1153, 737, 50, 70, 69,
	700, 1092, 59, 60, 48, 1382, 1298, 685, 988, 1766,
	973, 717, 1719, 928, 1325, 1520, 32, 363, 1778, 646,
	654, 647, 125, 1220, 648, 665, 976, 746, 748, 1013,
	52, 53, 921, 54, 55, 56, 57, 855, 806, 716,
	714, 747, 692, 1011, 1012, 1010, 1554, 373, 1241, 68,
	125, 678, 125, 125, 694, 373, 717, 712, 761, 1707,
	1705, 373, 766, 767, 768, 769, 770, 771, 772, 773,
	1063, 776, 779, 779, 779, 785, 779, 779, 785, 779,
	793, 794, 795, 796, 797, 798, 799, 1067, 711, 709,
	805, 800, 834, 710, 32, 714, 1486, 833, 803, 1251,
	844, 1249, 1237, 1238, 1239, 1173, 1174, 923, 765, 1297,
	819, 717, 780, 782, 784, 786, 788, 790, 791, 974,
	840, 749, 750, 1406, 781, 783, 68, 787, 789, 1836,
	792, 664, 1837, 1177, 1835, 977, 1094, 489, 749, 750,
	1178, 657, 658, 807, 726, 725, 735, 736, 728, 729,
	730, 731, 732, 733, 734, 727, 89, 103, 737, 1749,
	114, 115, 116, 1063, 1814, 1308, 462, 730, 731, 732,
	733, 734, 727, 1805, 1240, 737, 1275, 1276, 1277, 1245,
	1242, 1233, 1243, 1236, 1841, 1232, 715, 716, 714, 1234,
	1235, 1815, 822, 125, 1296, 90, 635, 913, 1093, 66,
	1806, 1283, 1295, 1244, 717, 1817, 125, 1816, 924, 925,
	1649, 1009, 1097, 1098, 1648, 943, 373, 715, 716, 714,
	125, 715, 716, 714, 1807, 125, 1568, 1421, 125, 959,
	1497, 125, 1173, 1575, 1420, 717, 715, 716, 714, 717,
	863, 1419, 1795, 125, 1488, 715, 716, 714, 1217, 817,
	1842, 1776, 1676, 922, 717, 373, 373, 373, 373, 125,
	373, 373, 1646, 717, 1001, 1003, 1004, 951, 963, 1617,
	650, 1002, 844, 1499, 463, 958, 1429, 966, 1498, 968,
	969, 970, 971, 1417, 700, 1272, 962, 715, 716, 714,
	967, 964, 638, 1712, 1519, 945, 1711, 728, 729, 730,
	731, 732, 733, 734, 727, 717, 983, 737, 1030, 1007,
	978, 850, 715, 716, 714, 1703, 1818, 1032, 114, 115,
	116, 1660, 955, 700, 700, 700, 700, 75, 700, 700,
	717, 373, 1432, 641, 979, 980, 981, 982, 640, 984,
	985, 725, 735, 736, 728, 729, 730, 731, 732, 733,
	734, 727, 1703, 1759, 737, 1051, 1054, 986, 114, 115,
	116, 1064, 1031, 1175, 373, 373, 114, 115, 116, 1624,
	1441, 1041, 1008, 1755, 463, 125, 713, 735, 736, 728,
	729, 730, 731, 732, 733, 734, 727, 373, 1042, 737,
	1703, 1753, 479, 1718, 125, 1087, 1558, 373, 484, 1703,
	1745, 125, 1046, 125, 463, 1099, 114, 115, 116, 1117,
	1389, 125, 125, 1703, 463, 1040, 1703, 1702, 373, 916,
	1639, 373, 463, 1132, 1033, 1034, 1616, 463, 1072, 1073,
	1627, 463, 373, 373, 765, 1560, 1559, 1043, 1111, 1556,
	1557, 1108, 410, 409, 412, 413, 414, 415, 1112, 1390,
	1115, 411, 416, 1556, 1555, 1042, 114, 115, 116, 1134,
	1229, 1107, 726, 725, 735, 736, 728, 729, 730, 731,
	732, 733, 734, 727, 1105, 463, 737, 481, 482, 1133,
	1138, 1172, 1040, 1117, 463, 713, 463, 373, 33, 33,
	1188, 1189, 1190, 916, 915, 862, 861, 1508, 1228, 1109,
	489, 1343, 1376, 489, 1145, 1203, 1519, 1144, 1140, 1135,
	1137, 1143, 77, 1350, 1157, 1314, 1160, 125, 125, 125,
	125, 125, 1313, 1106, 125, 125, 1227, 1138, 125, 373,
	1343, 1105, 1204, 1137, 1095, 1351, 1693, 33, 1076, 456,
	953, 1139, 1651, 847, 125, 125, 125, 66, 1448, 1141,
	1047, 1048, 1796, 449, 1053, 1056, 1057, 125, 1665, 1116,
	125, 373, 66, 66, 1254, 1255, 1256, 1257, 1258, 1117,
	1230, 1262, 1263, 1216, 1611, 1264, 1426, 1105, 1266, 1071,
	1246, 1226, 1074, 1075, 1270, 1199, 1200, 1215, 1139, 1652,
	1653, 1654, 1105, 1269, 1659, 634, 1137, 700, 1519, 1007,
	1635, 918, 126, 1202, 1271, 126, 1574, 1273, 1265, 1117,
	374, 66, 126, 66, 1547, 726, 725, 735, 736, 728,
	729, 730, 731, 732, 733, 734, 727, 914, 1394, 737,
	1198, 1122, 1125, 1126, 1127, 1123, 1292, 1124, 1128, 1192,
	374, 1523, 1524, 374, 126, 374, 1191, 125, 91, 1425,
	1523, 1524, 1666, 1214, 1181, 125, 1182, 1183, 1184, 1185,
	1829, 1655, 1008, 126, 126, 1278, 1824, 1549, 1526, 1508,
	1439, 126, 1193, 1194, 1195, 1196, 126, 125, 989, 1289,
	957, 1367, 455, 1529, 1528, 1329, 1368, 1364, 125, 125,
	125, 125, 125, 1426, 1291, 1363, 1352, 1336, 387, 1802,
	125, 1357, 1782, 1500, 125, 1656, 1657, 125, 125, 1307,
	1365, 125, 125, 125, 1348, 1366, 1374, 1345, 1332, 816,
	1780, 1327, 1320, 803, 1388, 1628, 373, 1341, 1328, 454,
	1369, 1340, 1126, 1127, 1771, 1395, 1768, 1391, 1335, 1804,
	1401, 1401, 1786, 1344, 1788, 840, 1330, 1377, 1794, 1346,
	1793, 1379, 1353, 1354, 1331, 1378, 840, 840, 840, 840,
	840, 1741, 1370, 1359, 1360, 1739, 1362, 1402, 962, 952,
	1375, 450, 1133, 1430, 1383, 840, 1380, 1358, 95, 840,
	1361, 1059, 809, 1425, 1412, 373, 926, 1393, 860, 1411,
	1405, 1413, 1414, 1415, 810, 1060, 1409, 1410, 1440, 469,
	1397, 1398, 1399, 1122, 1125, 1126, 1127, 1123, 1157, 1124,
	1128, 1428, 662, 470, 107, 1751, 469, 1418, 125, 1750,
	1691, 1287, 1288, 108, 373, 1403, 121, 1396, 1622, 1577,
	470, 1090, 1427, 1610, 1224, 373, 820, 821, 472, 956,
	471, 1809, 1305, 1097, 1098, 1713, 1130, 476, 457, 458,
	1339, 1044, 1045, 466, 467, 472, 1808, 471, 1338, 460,
	1791, 373, 1772, 1621, 461, 1444, 77, 1030, 1620, 1503,
	1343, 1302, 1442, 1299, 726, 725, 735, 736, 728, 729,
	730, 731, 732, 733, 734, 727, 830, 1443, 737, 1445,
	1466, 1831, 1830, 126, 1088, 1457, 823, 1831, 373, 1742,
	1455, 1644, 1456, 700, 1091, 456, 75, 80, 125, 72,
	384, 1, 1479, 348, 1454, 374, 1077, 1478, 373, 801,
	1041, 1463, 360, 1822, 373, 373, 112, 1580, 1465, 374,
	374, 1509, 1662, 933, 1715, 1357, 1225, 1042, 1506, 1422,
	1512, 1208, 1485, 1464, 1163, 1154, 88, 125, 621, 87,
	691, 1162, 1161, 1704, 1407, 1501, 1179, 1518, 1642, 1548,
	1404, 373, 1748, 373, 1489, 373, 868, 1517, 1401, 1401,
	1401, 1605, 866, 1527, 1540, 867, 865, 1531, 870, 1533,
	869, 1534, 864, 1553, 990, 370, 1129, 1532, 856, 824,
	1513, 1539, 32, 1248, 1544, 1545, 1546, 1247, 929, 1541,
	1464, 1569, 1561, 1542, 125, 126, 1176, 987, 355, 679,
	125, 351, 1551, 1552, 1172, 840, 745, 1337, 1384, 1581,
	373, 373, 373, 1565, 125, 1566, 1567, 1564, 490, 483,
	374, 1658, 1514, 126, 94, 126, 126, 1792, 374, 1769,
	1767, 1738, 1687, 1157, 374, 1157, 1770, 1736, 1803, 1785,
	1089, 1570, 812, 1619, 1502, 1590, 1306, 1576, 774, 1061,
	839, 1586, 1587, 393, 1000, 1595, 408, 405, 406, 1100,
	1349, 1585, 719, 726, 725, 735, 736, 728, 729, 730,
	731, 732, 733, 734, 727, 391, 385, 737, 831, 1121,
	1119, 1118, 843, 1525, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 1357, 1623, 1521, 837, 1104, 1435,
	373, 1632, 1618, 919, 1218, 1571, 633, 465, 373, 92,
	1285, 1391, 1058, 1606, 1286, 1726, 1607, 464, 58, 36,
	377, 1612, 1613, 1614, 1638, 1293, 1294, 1797, 1777, 704,
	473, 1300, 30, 29, 1303, 1304, 28, 23, 22, 21,
	373, 20, 1310, 19, 25, 1631, 1312, 18, 17, 1315,
	1316, 1317, 1318, 1319, 1669, 16, 106, 102, 1637, 1645,
	45, 1647, 43, 41, 40, 652, 126, 27, 26, 15,
	14, 13, 12, 373, 373, 373, 125, 373, 1667, 126,
	11, 10, 1157, 9, 5, 4, 707, 1675, 373, 374,
	373, 24, 763, 126, 2, 0, 373, 1668, 126, 1694,
	1683, 126, 0, 1512, 126, 1696, 1661, 1512, 1692, 1372,
	1373, 1698, 1679, 1681, 1682, 1701, 126, 1700, 1690, 0,
	373, 1685, 1664, 0, 718, 1708, 373, 125, 374, 374,
	374, 374, 126, 374, 374, 1699, 0, 419, 1709, 0,
	1710, 0, 0, 1592, 1593, 0, 1594, 0, 0, 1596,
	0, 1598, 0, 1513, 0, 32, 0, 1513, 0, 1714,
	384, 1735, 0, 0, 373, 1720, 0, 0, 0, 775,
	1743, 0, 1512, 0, 1721, 0, 0, 0, 373, 373,
	373, 0, 0, 0, 0, 0, 1752, 1757, 0, 0,
	0, 1758, 0, 0, 372, 0, 0, 0, 811, 814,
	0, 0, 0, 0, 374, 373, 1764, 125, 0, 0,
	0, 0, 0, 1773, 0, 0, 0, 1357, 0, 0,
	0, 0, 1513, 1779, 491, 1781, 0, 625, 0, 632,
	0, 0, 1790, 1789, 0, 0, 0, 374, 374, 0,
	0, 0, 32, 0, 1801, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 1775, 0, 0, 373, 0, 0,
	374, 1664, 1157, 0, 0, 1461, 1462, 126, 0, 0,
	374, 0, 0, 0, 126, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 126, 126, 1828, 0, 0, 0,
	0, 374, 0, 1839, 374, 0, 1810, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 374, 0, 1005, 0,
	0, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 721, 0, 724, 0, 0, 0, 0,
	374, 738, 739, 740, 741, 742, 743, 744, 1068, 722,
	723, 720, 726, 725, 735, 736, 728, 729, 730, 731,
	732, 733, 734, 727, 0, 0, 737, 0, 0, 0,
	126, 126, 126, 126, 126, 0, 0, 126, 126, 939,
	0, 126, 374, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 126, 126, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 126, 374, 1604, 0, 0, 0, 0,
	0, 1589, 0, 0, 0, 1591, 0, 0, 0, 0,
	0, 996, 997, 998, 999, 0, 1600, 1601, 0, 1458,
	0, 0, 0, 0, 0, 0, 114, 115, 116, 0,
	0, 0, 0, 1615, 0, 0, 0, 937, 0, 726,
	725, 735, 736, 728, 729, 730, 731, 732, 733, 734,
	727, 1625, 1626, 737, 0, 1630, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 1049, 1050, 0, 0,
	0, 0, 0, 703, 705, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 885, 126, 0,
	934, 931, 932, 0, 930, 0, 0, 726, 725, 735,
	736, 728, 729, 730, 731, 732, 733, 734, 727, 0,
	126, 737, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 126, 126, 126, 126, 126, 0, 941, 944, 0,
	0, 0, 0, 126, 1602, 0, 0, 126, 0, 0,
	126, 126, 0, 0, 126, 126, 126, 0, 0, 0,
	1680, 0, 0, 1151, 0, 0, 0, 0, 0, 374,
	1279, 1280, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 936,
	0, 0, 491, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 0, 0, 0, 1722, 1723,
	1724, 1725, 1206, 1729, 0, 1730, 1731, 1732, 374, 1733,
	1734, 726, 725, 735, 736, 728, 729, 730, 731, 732,
	733, 734, 727, 0, 886, 737, 726, 725, 735, 736,
	728, 729, 730, 731, 732, 733, 734, 727, 940, 0,
	737, 126, 0, 1754, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 942, 1760, 0, 0, 0, 374, 0,
	0, 0, 899, 902, 903, 904, 905, 906, 907, 0,
	908, 909, 910, 911, 912, 887, 888, 889, 890, 871,
	872, 900, 0, 874, 374, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 891, 892, 893, 894, 895,
	896, 897, 898, 726, 725, 735, 736, 728, 729, 730,
	731, 732, 733, 734, 727, 0, 0, 737, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 374, 374, 0,
	0, 1309, 0, 1832, 1833, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 0, 0, 1284,
	126, 0, 491, 491, 491, 491, 0, 491, 491, 0,
	0, 1333, 1334, 814, 374, 0, 374, 0, 374, 726,
	725, 735, 736, 728, 729, 730, 731, 732, 733, 734,
	727, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 1459, 1460, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 1480, 1481, 0,
	1482, 1483, 0, 374, 374, 374, 0, 126, 1035, 0,
	491, 0, 1490, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 1065, 0, 368, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 1069, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 477, 0, 0,
	0, 0, 0, 0, 1101, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 124, 124, 0, 0, 0, 0,
	0, 0, 124, 374, 0, 491, 0, 124, 491, 0,
	0, 374, 0, 0, 1550, 0, 0, 0, 0, 491,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 1588, 0, 0,
	0, 0, 0, 0, 632, 0, 374, 374, 374, 126,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 374, 0, 0, 0, 0, 0, 374,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 374,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 374, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	126, 1670, 1671, 1672, 1673, 1674, 0, 0, 0, 1677,
	1678, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 1065, 0, 0, 0, 1633, 0,
	0, 1634, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 124, 846, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 1689, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 124, 1065, 0,
	0, 1516, 1496, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 124,
	0, 0, 124, 0, 0, 961, 0, 0, 491, 0,
	491, 0, 632, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 1583, 1584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 961, 0, 0,
	0, 477, 477, 0, 0, 477, 477, 477, 0, 0,
	0, 1066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1065, 0, 0,
	477, 477, 477, 477, 477, 0, 0, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 124, 0,
	0, 0, 0, 0, 961, 124, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 124, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 1641, 1641, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 1697, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 124, 124, 124, 124, 124, 0, 0, 124, 124,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 1268,
	124, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 124, 1756, 491, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 124, 124, 124, 124, 124, 0, 0, 0,
	0, 0, 0, 0, 1371, 0, 0, 0, 124, 0,
	0, 124, 124, 0, 0, 124, 1381, 961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 593, 0,
	1085, 546, 608, 519, 536, 617, 537, 540, 578, 503,
	559, 237, 534, 0, 523, 499, 530, 500, 521, 548,
	166, 552, 518, 595, 562, 607, 201, 0, 524, 249,
	580, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 614, 204, 569, 0, 289,
	223, 124, 0, 0, 550, 597, 557, 589, 545, 579,
	508, 568, 609, 535, 576, 610, 192, 154, 131, 234,
	290, 173, 0, 0, 0, 114, 115, 116, 0, 1158,
	1159, 0, 0, 0, 0, 0, 150, 0, 573, 604,
	532, 575, 577, 620, 498, 570, 0, 501, 504, 616,
	600, 527, 528, 1392, 0, 0, 0, 0, 0, 0,
	549, 558, 586, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 0, 567, 0, 0, 1066, 505, 502,
	0, 124, 0, 0, 547, 0, 0, 0, 507, 0,
	526, 587, 0, 496, 178, 591, 599, 544, 326, 603,
	542, 541, 606, 260, 0, 294, 182, 200, 145, 197,
	128, 140, 0, 180, 233, 267, 271, 596, 522, 531,
	157, 529, 269, 246, 315, 566, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	141, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	133, 297, 312, 151, 279, 0, 0, 0, 135, 310,
	293, 220, 193, 194, 134, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 142, 323, 137, 143, 322,
	229, 303, 311, 221, 213, 136, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	132, 0, 291, 319, 338, 148, 517, 592, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 147, 228, 144, 187, 287, 198, 206, 584,
	619, 245, 270, 152, 317, 288, 512, 516, 510, 511,
	560, 561, 513, 611, 612, 613, 588, 506, 0, 514,
	515, 0, 594, 601, 602, 565, 127, 138, 203, 615,
	263, 174, 320, 497, 509, 162, 520, 0, 0, 533,
	538, 539, 551, 553, 554, 555, 556, 564, 571, 572,
	574, 581, 582, 583, 585, 590, 598, 618, 129, 130,
	139, 146, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 0, 210, 563,
	605, 593, 0, 0, 546, 608, 519, 536, 617, 537,
	540, 578, 503, 559, 237, 534, 0, 523, 499, 530,
	500, 521, 548, 166, 552, 518, 595, 562, 607, 201,
	0, 524, 249, 580, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 614, 204,
	569, 0, 289, 223, 0, 0, 0, 550, 597, 557,
	589, 545, 579, 508, 568, 609, 535, 576, 610, 192,
	154, 131, 234, 290, 173, 0, 0, 0, 114, 115,
	116, 0, 1158, 1159, 0, 0, 0, 0, 0, 150,
	0, 573, 604, 532, 575, 577, 620, 498, 570, 0,
	501, 504, 616, 600, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 549, 558, 586, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 0, 567, 0, 0,
	0, 505, 502, 0, 0, 0, 0, 547, 0, 0,
	0, 507, 0, 526, 587, 0, 496, 178, 591, 599,
	544, 326, 603, 542, 541, 606, 260, 0, 294, 182,
	200, 145, 197, 128, 140, 0, 180, 233, 267, 271,
	596, 522, 531, 157, 529, 269, 246, 315, 566, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 141, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 133, 297, 312, 151, 279, 0, 0,
	0, 135, 310, 293, 220, 193, 194, 134, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 142, 323,
	137, 143, 322, 229, 303, 311, 221, 213, 136, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 132, 0, 291, 319, 338, 148, 517,
	592, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 147, 228, 144, 187, 287,
	198, 206, 584, 619, 245, 270, 152, 317, 288, 512,
	516, 510, 511, 560, 561, 513, 611, 612, 613, 588,
	506, 0, 514, 515, 0, 594, 601, 602, 565, 127,
	138, 203, 615, 263, 174, 320, 497, 509, 162, 520,
	0, 0, 533, 538, 539, 551, 553, 554, 555, 556,
	564, 571, 572, 574, 581, 582, 583, 585, 590, 598,
	618, 129, 130, 139, 146, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	0, 210, 563, 605, 593, 0, 0, 546, 608, 519,
	536, 617, 537, 540, 578, 503, 559, 237, 534, 0,
	523, 499, 530, 500, 521, 548, 166, 552, 518, 595,
	562, 607, 201, 0, 524, 249, 580, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 614, 204, 569, 0, 289, 223, 0, 0, 0,
	550, 597, 557, 589, 545, 579, 508, 568, 609, 535,
	576, 610, 192, 154, 131, 234, 290, 173, 0, 0,
	0, 114, 115, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 573, 604, 532, 575, 577, 620,
	498, 570, 0, 501, 504, 616, 600, 527, 528, 0,
	0, 0, 0, 0, 0, 0, 549, 558, 586, 543,
	0, 0, 0, 0, 0, 0, 1505, 0, 525, 0,
	567, 0, 0, 0, 505, 502, 0, 0, 0, 0,
	547, 0, 0, 0, 507, 0, 526, 587, 0, 496,
	178, 591, 599, 544, 326, 603, 542, 541, 606, 260,
	0, 294, 182, 200, 145, 197, 128, 140, 0, 180,
	233, 267, 271, 596, 522, 531, 157, 529, 269, 246,
	315, 566, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 141, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 133, 297, 312, 151,
	279, 0, 0, 0, 135, 310, 293, 220, 193, 194,
	134, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 142, 323, 137, 143, 322, 229, 303, 311, 221,
	213, 136, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 132, 0, 291, 319,
	338, 148, 517, 592, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 147, 228,
	144, 187, 287, 198, 206, 584, 619, 245, 270, 152,
	317, 288, 512, 516, 510, 511, 560, 561, 513, 611,
	612, 613, 588, 506, 0, 514, 515, 0, 594, 601,
	602, 565, 127, 138, 203, 615, 263, 174, 320, 497,
	509, 162, 520, 0, 0, 533, 538, 539, 551, 553,
	554, 555, 556, 564, 571, 572, 574, 581, 582, 583,
	585, 590, 598, 618, 129, 130, 139, 146, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 0, 210, 563, 605, 593, 0, 0,
	546, 608, 519, 536, 617, 537, 540, 578, 503, 559,
	237, 534, 0, 523, 499, 530, 500, 521, 548, 166,
	552, 518, 595, 562, 607, 201, 0, 524, 249, 580,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 614, 204, 569, 0, 289, 223,
	0, 0, 0, 550, 597, 557, 589, 545, 579, 508,
	568, 609, 535, 576, 610, 192, 154, 131, 234, 290,
	173, 66, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 573, 604, 532,
	575, 577, 620, 498, 570, 0, 501, 504, 616, 600,
	527, 528, 0, 0, 0, 0, 0, 0, 0, 549,
	558, 586, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 567, 0, 0, 0, 505, 502, 0,
	0, 0, 0, 547, 0, 0, 0, 507, 0, 526,
	587, 0, 496, 178, 591, 599, 544, 326, 603, 542,
	541, 606, 260, 0, 294, 182, 200, 145, 197, 128,
	140, 0, 180, 233, 267, 271, 596, 522, 531, 157,
	529, 269, 246, 315, 566, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 141,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 133,
	297, 312, 151, 279, 0, 0, 0, 135, 310, 293,
	220, 193, 194, 134, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 142, 323, 137, 143, 322, 229,
	303, 311, 221, 213, 136, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 132,
	0, 291, 319, 338, 148, 517, 592, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 147, 228, 144, 187, 287, 198, 206, 584, 619,
	245, 270, 152, 317, 288, 512, 516, 510, 511, 560,
	561, 513, 611, 612, 613, 588, 506, 0, 514, 515,
	0, 594, 601, 602, 565, 127, 138, 203, 615, 263,
	174, 320, 497, 509, 162, 520, 0, 0, 533, 538,
	539, 551, 553, 554, 555, 556, 564, 571, 572, 574,
	581, 582, 583, 585, 590, 598, 618, 129, 130, 139,
	146, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 0, 210, 563, 605,
	593, 0, 0, 546, 608, 519, 536, 617, 537, 540,
	578, 503, 559, 237, 534, 0, 523, 499, 530, 500,
	521, 548, 166, 552, 518, 595, 562, 607, 201, 0,
	524, 249, 580, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 614, 204, 569,
	0, 289, 223, 0, 0, 0, 550, 597, 557, 589,
	545, 579, 508, 568, 609, 535, 576, 610, 192, 154,
	131, 234, 290, 173, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	573, 604, 532, 575, 577, 620, 498, 570, 0, 501,
	504, 616, 600, 527, 528, 0, 0, 0, 0, 0,
	0, 0, 549, 558, 586, 543, 0, 0, 0, 0,
	0, 0, 1382, 0, 525, 0, 567, 0, 0, 0,
	505, 502, 0, 0, 0, 0, 547, 0, 0, 0,
	507, 0, 526, 587, 0, 496, 178, 591, 599, 544,
	326, 603, 542, 541, 606, 260, 0, 294, 182, 200,
	145, 197, 128, 140, 0, 180, 233, 267, 271, 596,
	522, 531, 157, 529, 269, 246, 315, 566, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 141, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 133, 297, 312, 151, 279, 0, 0, 0,
	135, 310, 293, 220, 193, 194, 134, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 142, 323, 137,
	143, 322, 229, 303, 311, 221, 213, 136, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 132, 0, 291, 319, 338, 148, 517, 592,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 147, 228, 144, 187, 287, 198,
	206, 584, 619, 245, 270, 152, 317, 288, 512, 516,
	510, 511, 560, 561, 513, 611, 612, 613, 588, 506,
	0, 514, 515, 0, 594, 601, 602, 565, 127, 138,
	203, 615, 263, 174, 320, 497, 509, 162, 520, 0,
	0, 533, 538, 539, 551, 553, 554, 555, 556, 564,
	571, 572, 574, 581, 582, 583, 585, 590, 598, 618,
	129, 130, 139, 146, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 0,
	210, 563, 605, 593, 0, 0, 546, 608, 519, 536,
	617, 537, 540, 578, 503, 559, 237, 534, 0, 523,
	499, 530, 500, 521, 548, 166, 552, 518, 595, 562,
	607, 201, 0, 524, 249, 580, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	614, 204, 569, 0, 289, 223, 0, 0, 0, 550,
	597, 557, 589, 545, 579, 508, 568, 609, 535, 576,
	610, 192, 154, 131, 234, 290, 173, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 573, 604, 532, 575, 577, 620, 498,
	570, 0, 501, 504, 616, 600, 527, 528, 0, 0,
	0, 0, 0, 0, 0, 549, 558, 586, 543, 0,
	0, 0, 0, 0, 0, 1110, 0, 525, 0, 567,
	0, 0, 0, 505, 502, 0, 0, 0, 0, 547,
	0, 0, 0, 507, 0, 526, 587, 0, 496, 178,
	591, 599, 544, 326, 603, 542, 541, 606, 260, 0,
	294, 182, 200, 145, 197, 128, 140, 0, 180, 233,
	267, 271, 596, 522, 531, 157, 529, 269, 246, 315,
	566, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 141, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 133, 297, 312, 151, 279,
	0, 0, 0, 135, 310, 293, 220, 193, 194, 134,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	142, 323, 137, 143, 322, 229, 303, 311, 221, 213,
	136, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 132, 0, 291, 319, 338,
	148, 517, 592, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 147, 228, 144,
	187, 287, 198, 206, 584, 619, 245, 270, 152, 317,
	288, 512, 516, 510, 511, 560, 561, 513, 611, 612,
	613, 588, 506, 0, 514, 515, 0, 594, 601, 602,
	565, 127, 138, 203, 615, 263, 174, 320, 497, 509,
	162, 520, 0, 0, 533, 538, 539, 551, 553, 554,
	555, 556, 564, 571, 572, 574, 581, 582, 583, 585,
	590, 598, 618, 129, 130, 139, 146, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 0, 210, 563, 605, 593, 0, 0, 546,
	608, 519, 536, 617, 537, 540, 578, 503, 559, 237,
	534, 0, 523, 499, 530, 500, 521, 548, 166, 552,
	518, 595, 562, 607, 201, 0, 524, 249, 580, 280,
	156, 209, 207, 302, 171, 167, 165, 155, 188, 214,
	248, 298, 242, 614, 204, 569, 0, 289, 223, 0,
	0, 0, 550, 597, 557, 589, 545, 579, 508, 568,
	609, 535, 576, 610, 192, 154, 131, 234, 290, 173,
	0, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 573, 604, 532, 575,
	577, 620, 498, 570, 0, 501, 504, 616, 600, 527,
	528, 0, 0, 0, 0, 0, 0, 0, 549, 558,
	586, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 567, 0, 0, 0, 505, 502, 0, 0,
	0, 0, 547, 0, 0, 0, 507, 0, 526, 587,
	0, 496, 178, 591, 599, 544, 326, 603, 542, 541,
	606, 260, 0, 294, 182, 200, 145, 197, 128, 140,
	0, 180, 233, 267, 271, 596, 522, 531, 157, 529,
	269, 246, 315, 566, 250, 268, 205, 304, 261, 314,
	327, 328, 163, 227, 321, 299, 324, 336, 141, 160,
	240, 295, 318, 286, 222, 301, 196, 285, 133, 297,
	312, 151, 279, 0, 0, 0, 135, 310, 293, 220,
	193, 194, 134, 0, 265, 164, 176, 159, 236, 307,
	308, 158, 337, 142, 323, 137, 143, 322, 229, 303,
	311, 221, 213, 136, 309, 219, 212, 199, 170, 184,
	258, 208, 259, 185, 225, 224, 226, 0, 132, 0,
	291, 319, 338, 148, 517, 592, 300, 332, 335, 0,
	262, 149, 177, 169, 257, 175, 202, 331, 333, 334,
	147, 228, 144, 187, 287, 198, 206, 584, 619, 245,
	270, 152, 317, 288, 512, 516, 510, 511, 560, 561,
	513, 611, 612, 613, 588, 506, 0, 514, 515, 0,
	594, 601, 602, 565, 127, 138, 203, 615, 263, 174,
	320, 497, 509, 162, 520, 0, 0, 533, 538, 539,
	551, 553, 554, 555, 556, 564, 571, 572, 574, 581,
	582, 583, 585, 590, 598, 618, 129, 130, 139, 146,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 0, 210, 563, 605, 593,
	0, 0, 546, 608, 519, 536, 617, 537, 540, 578,
	503, 559, 237, 534, 0, 523, 499, 530, 500, 521,
	548, 166, 552, 518, 595, 562, 607, 201, 0, 524,
	249, 580, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 614, 204, 569, 0,
	289, 223, 0, 0, 0, 550, 597, 557, 589, 545,
	579, 508, 568, 609, 535, 576, 610, 192, 154, 131,
	234, 290, 173, 0, 0, 0, 114, 115, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 573,
	604, 532, 575, 577, 620, 498, 570, 0, 501, 504,
	616, 600, 527, 528, 0, 0, 0, 0, 0, 0,
	0, 549, 558, 586, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 567, 0, 0, 0, 505,
	502, 0, 0, 0, 0, 547, 0, 0, 0, 507,
	0, 526, 587, 0, 496, 178, 591, 599, 544, 326,
	603, 542, 541, 606, 260, 0, 294, 182, 200, 145,
	197, 128, 140, 0, 180, 233, 267, 271, 596, 522,
	531, 157, 529, 269, 246, 315, 566, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 141, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 133, 297, 312, 151, 279, 0, 0, 0, 135,
	310, 293, 220, 193, 194, 134, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 142, 323, 137, 494,
	322, 229, 303, 311, 221, 213, 136, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 132, 0, 291, 319, 338, 148, 517, 592, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 147, 495, 493, 488, 487, 198, 206,
	584, 619, 245, 270, 152, 317, 288, 512, 516, 510,
	511, 560, 561, 513, 611, 612, 613, 588, 506, 0,
	514, 515, 0, 594, 601, 602, 565, 127, 138, 203,
	615, 263, 174, 320, 497, 509, 162, 520, 0, 0,
	533, 538, 539, 551, 553, 554, 555, 556, 564, 571,
	572, 574, 581, 582, 583, 585, 590, 598, 618, 129,
	130, 139, 146, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 0, 210,
	563, 605, 593, 0, 0, 546, 608, 519, 536, 617,
	537, 540, 578, 503, 559, 237, 534, 0, 523, 499,
	530, 500, 521, 548, 166, 552, 518, 595, 562, 607,
	201, 0, 524, 249, 580, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 614,
	204, 569, 0, 289, 223, 0, 0, 0, 550, 597,
	557, 589, 545, 579, 508, 568, 609, 535, 576, 610,
	192, 154, 131, 234, 290, 173, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 573, 604, 532, 575, 577, 620, 498, 570,
	0, 501, 504, 616, 600, 527, 528, 0, 0, 0,
	0, 0, 0, 0, 549, 558, 586, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 567, 0,
	0, 0, 505, 502, 0, 0, 0, 0, 547, 0,
	0, 0, 507, 0, 526, 587, 0, 496, 178, 591,
	599, 544, 326, 603, 542, 541, 606, 260, 0, 294,
	182, 200, 145, 197, 128, 140, 0, 180, 233, 267,
	271, 596, 522, 531, 157, 529, 269, 246, 315, 566,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 141, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 133, 297, 848, 151, 279, 0,
	0, 0, 135, 310, 293, 220, 193, 194, 134, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 142,
	323, 137, 494, 322, 229, 303, 311, 221, 213, 136,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 132, 0, 291, 319, 338, 148,
	517, 592, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 147, 495, 493, 488,
	487, 198, 206, 584, 619, 245, 270, 152, 317, 288,
	512, 516, 510, 511, 560, 561, 513, 611, 612, 613,
	588, 506, 0, 514, 515, 0, 594, 601, 602, 565,
	127, 138, 203, 615, 263, 174, 320, 497, 509, 162,
	520, 0, 0, 533, 538, 539, 551, 553, 554, 555,
	556, 564, 571, 572, 574, 581, 582, 583, 585, 590,
	598, 618, 129, 130, 139, 146, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 0, 210, 563, 605, 593, 0, 0, 546, 608,
	519, 536, 617, 537, 540, 578, 503, 559, 237, 534,
	0, 523, 499, 530, 500, 521, 548, 166, 552, 518,
	595, 562, 607, 201, 0, 524, 249, 580, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 614, 204, 569, 0, 289, 223, 0, 0,
	0, 550, 597, 557, 589, 545, 579, 508, 568, 609,
	535, 576, 610, 192, 154, 131, 234, 290, 173, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 573, 604, 532, 575, 577,
	620, 498, 570, 0, 501, 504, 616, 600, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 586,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 567, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 587, 0,
	496, 178, 591, 599, 544, 326, 603, 542, 541, 606,
	260, 0, 294, 182, 200, 145, 197, 128, 140, 0,
	180, 233, 267, 271, 596, 522, 531, 157, 529, 269,
	246, 315, 566, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 141, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 133, 297, 485,
	151, 279, 0, 0, 0, 135, 310, 293, 220, 193,
	194, 134, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 142, 323, 137, 494, 322, 229, 303, 311,
	221, 213, 136, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 132, 0, 291,
	319, 338, 148, 517, 592, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 147,
	495, 493, 488, 487, 198, 206, 584, 619, 245, 270,
	152, 317, 288, 512, 516, 510, 511, 560, 561, 513,
	611, 612, 613, 588, 506, 0, 514, 515, 0, 594,
	601, 602, 565, 127, 138, 203, 615, 263, 174, 320,
	497, 509, 162, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 564, 571, 572, 574, 581, 582,
	583, 585, 590, 598, 618, 129, 130, 139, 146, 153,
	161, 168, 172, 179, 183, 186, 189, 190, 191, 195,
	211, 215, 216, 217, 218, 230, 231, 232, 235, 238,
	239, 241, 243, 244, 247, 251, 252, 253, 254, 255,
	256, 264, 266, 272, 273, 274, 275, 276, 277, 278,
	281, 282, 283, 284, 292, 296, 305, 306, 316, 325,
	329, 181, 313, 330, 237, 210, 563, 1037, 0, 389,
	0, 0, 0, 166, 0, 388, 0, 0, 0, 201,
	0, 1038, 249, 0, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 432, 204,
	0, 0, 289, 223, 0, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	154, 131, 234, 290, 173, 66, 0, 0, 114, 115,
	116, 410, 409, 412, 413, 414, 415, 0, 0, 150,
	411, 416, 417, 418, 0, 0, 0, 0, 386, 403,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 475, 0, 0, 0, 446, 0, 402,
	0, 0, 395, 396, 398, 397, 399, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 445, 0,
	0, 326, 0, 0, 443, 0, 260, 0, 294, 182,
	200, 145, 197, 128, 140, 0, 180, 233, 267, 271,
	0, 0, 0, 157, 0, 269, 246, 315, 0, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 141, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 133, 297, 312, 151, 279, 0, 0,
	0, 135, 310, 293, 220, 193, 194, 134, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 142, 323,
	137, 143, 322, 229, 303, 311, 221, 213, 136, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 132, 0, 291, 319, 338, 148, 0,
	0, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 147, 228, 144, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 433,
	444, 439, 440, 437, 438, 0, 436, 435, 434, 447,
	425, 426, 427, 428, 430, 0, 441, 442, 429, 127,
	138, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 0, 389, 0, 0, 0, 166,
	0, 388, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 432, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 1149, 0, 192, 154, 131, 234, 290,
	173, 66, 0, 0, 114, 115, 116, 410, 409, 412,
	413, 414, 415, 0, 0, 150, 411, 416, 417, 418,
	1150, 0, 0, 0, 386, 403, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 401, 0,
	0, 0, 0, 446, 0, 402, 0, 0, 395, 396,
	398, 397, 399, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 445, 0, 0, 326, 0, 0,
	443, 0, 260, 0, 294, 182, 200, 145, 197, 128,
	140, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 141,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 133,
	297, 312, 151, 279, 0, 0, 0, 135, 310, 293,
	220, 193, 194, 134, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 142, 323, 137, 143, 322, 229,
	303, 311, 221, 213, 136, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 132,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 147, 228, 144, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 433, 444, 439, 440, 437,
	438, 0, 436, 435, 434, 447, 425, 426, 427, 428,
	430, 0, 441, 442, 429, 127, 138, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	0, 389, 0, 0, 0, 166, 0, 388, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	432, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 131, 234, 290, 173, 66, 0, 463,
	114, 115, 116, 410, 409, 412, 413, 414, 415, 0,
	0, 150, 411, 416, 417, 418, 0, 0, 0, 0,
	386, 403, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 401, 0, 0, 0, 0, 446,
	0, 402, 0, 0, 395, 396, 398, 397, 399, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	445, 0, 0, 326, 0, 0, 443, 0, 260, 0,
	294, 182, 200, 145, 197, 128, 140, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 141, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 133, 297, 312, 151, 279,
	0, 0, 0, 135, 310, 293, 220, 193, 194, 134,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	142, 323, 137, 143, 322, 229, 303, 311, 221, 213,
	136, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 132, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 147, 228, 144,
	187, 287, 198, 206, 0, 0, 245, 270, 152, 317,
	288, 433, 444, 439, 440, 437, 438, 0, 436, 435,
	434, 447, 425, 426, 427, 428, 430, 0, 441, 442,
	429, 127, 138, 203, 0, 263, 174, 320, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 146, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 237, 210, 0, 0, 0, 389, 0, 0,
	0, 166, 0, 388, 0, 0, 0, 201, 0, 0,
	249, 0, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 432, 204, 0, 0,
	289, 223, 0, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 154, 131,
	234, 290, 173, 66, 0, 0, 114, 115, 116, 410,
	409, 412, 413, 414, 415, 0, 0, 150, 411, 416,
	417, 418, 0, 0, 0, 0, 386, 403, 0, 431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 400,
	401, 475, 0, 0, 0, 446, 0, 402, 0, 0,
	395, 396, 398, 397, 399, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 445, 0, 0, 326,
	0, 0, 443, 0, 260, 0, 294, 182, 200, 145,
	197, 128, 140, 0, 180, 233, 267, 271, 0, 0,
	0, 157, 0, 269, 246, 315, 0, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 141, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 133, 297, 312, 151, 279, 0, 0, 0, 135,
	310, 293, 220, 193, 194, 134, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 142, 323, 137, 143,
	322, 229, 303, 311, 221, 213, 136, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 132, 0, 291, 319, 338, 148, 0, 0, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 147, 228, 144, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 433, 444, 439,
	440, 437, 438, 0, 436, 435, 434, 447, 425, 426,
	427, 428, 430, 0, 441, 442, 429, 127, 138, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 237, 210,
	0, 0, 0, 389, 0, 0, 0, 166, 0, 388,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 432, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 131, 234, 290, 173, 66,
	0, 0, 114, 115, 116, 410, 1055, 412, 413, 414,
	415, 0, 0, 150, 411, 416, 417, 418, 0, 0,
	0, 0, 386, 403, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 400, 401, 475, 0, 0,
	0, 446, 0, 402, 0, 0, 395, 396, 398, 397,
	399, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 445, 0, 0, 326, 0, 0, 443, 0,
	260, 0, 294, 182, 200, 145, 197, 128, 140, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 141, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 133, 297, 312,
	151, 279, 0, 0, 0, 135, 310, 293, 220, 193,
	194, 134, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 142, 323, 137, 143, 322, 229, 303, 311,
	221, 213, 136, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 132, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 147,
	228, 144, 187, 287, 198, 206, 0, 0, 245, 270,
	152, 317, 288, 433, 444, 439, 440, 437, 438, 0,
	436, 435, 434, 447, 425, 426, 427, 428, 430, 0,
	441, 442, 429, 127, 138, 203, 0, 263, 174, 320,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 139, 146, 153,
	161, 168, 172, 179, 183, 186, 189, 190, 191, 195,
	211, 215, 216, 217, 218, 230, 231, 232, 235, 238,
	239, 241, 243, 244, 247, 251, 252, 253, 254, 255,
	256, 264, 266, 272, 273, 274, 275, 276, 277, 278,
	281, 282, 283, 284, 292, 296, 305, 306, 316, 325,
	329, 181, 313, 330, 237, 210, 0, 0, 0, 389,
	0, 0, 0, 166, 0, 388, 0, 0, 0, 201,
	0, 0, 249, 0, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 432, 204,
	0, 0, 289, 223, 0, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	154, 131, 234, 290, 173, 66, 0, 0, 114, 115,
	116, 410, 1052, 412, 413, 414, 415, 0, 0, 150,
	411, 416, 417, 418, 0, 0, 0, 0, 386, 403,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 400, 401, 475, 0, 0, 0, 446, 0, 402,
	0, 0, 395, 396, 398, 397, 399, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 445, 0,
	0, 326, 0, 0, 443, 0, 260, 0, 294, 182,
	200, 145, 197, 128, 140, 0, 180, 233, 267, 271,
	0, 0, 0, 157, 0, 269, 246, 315, 0, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 141, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 133, 297, 312, 151, 279, 0, 0,
	0, 135, 310, 293, 220, 193, 194, 134, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 142, 323,
	137, 143, 322, 229, 303, 311, 221, 213, 136, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 132, 0, 291, 319, 338, 148, 0,
	0, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 147, 228, 144, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 433,
	444, 439, 440, 437, 438, 0, 436, 435, 434, 447,
	425, 426, 427, 428, 430, 0, 441, 442, 429, 127,
	138, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	456, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 389, 0,
	0, 0, 166, 0, 388, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 432, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	131, 234, 290, 173, 66, 0, 0, 114, 115, 116,
	410, 409, 412, 413, 414, 415, 0, 0, 150, 411,
	416, 417, 418, 0, 0, 0, 0, 386, 403, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 401, 0, 0, 0, 0, 446, 0, 402, 0,
	0, 395, 396, 398, 397, 399, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 445, 0, 0,
	326, 0, 0, 443, 0, 260, 0, 294, 182, 200,
	145, 197, 128, 140, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 141, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 133, 297, 312, 151, 279, 0, 0, 0,
	135, 310, 293, 220, 193, 194, 134, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 142, 323, 137,
	143, 322, 229, 303, 311, 221, 213, 136, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 132, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 147, 228, 144, 187, 287, 198,
	206, 0, 0, 245, 270, 152, 317, 288, 433, 444,
	439, 440, 437, 438, 0, 436, 435, 434, 447, 425,
	426, 427, 428, 430, 0, 441, 442, 429, 127, 138,
	203, 0, 263, 174, 320, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 130, 139, 146, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 237,
	210, 0, 0, 0, 389, 0, 0, 0, 166, 0,
	388, 0, 0, 0, 201, 0, 0, 249, 0, 280,
	156, 209, 207, 302, 171, 167, 165, 155, 188, 214,
	248, 298, 242, 432, 204, 0, 0, 289, 223, 0,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 154, 131, 234, 290, 173,
	66, 0, 0, 114, 115, 116, 410, 409, 412, 413,
	414, 415, 0, 0, 150, 411, 416, 417, 418, 0,
	0, 0, 0, 386, 403, 0, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 400, 401, 0, 0,
	0, 0, 446, 0, 402, 0, 0, 395, 396, 398,
	397, 399, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 445, 0, 0, 326, 0, 0, 443,
	0, 260, 0, 294, 182, 200, 145, 197, 128, 140,
	0, 180, 233, 267, 271, 0, 0, 0, 157, 0,
	269, 246, 315, 0, 250, 268, 205, 304, 261, 314,
	327, 328, 163, 227, 321, 299, 324, 336, 141, 160,
	240, 295, 318, 286, 222, 301, 196, 285, 133, 297,
	312, 151, 279, 0, 0, 0, 135, 310, 293, 220,
	193, 194, 134, 0, 265, 164, 176, 159, 236, 307,
	308, 158, 337, 142, 323, 137, 143, 322, 229, 303,
	311, 221, 213, 136, 309, 219, 212, 199, 170, 184,
	258, 208, 259, 185, 225, 224, 226, 0, 132, 0,
	291, 319, 338, 148, 0, 0, 300, 332, 335, 0,
	262, 149, 177, 169, 257, 175, 202, 331, 333, 334,
	147, 228, 144, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 433, 444, 439, 440, 437, 438,
	0, 436, 435, 434, 447, 425, 426, 427, 428, 430,
	0, 441, 442, 429, 127, 138, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 432,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 131, 234, 290, 173, 66, 0, 0, 114,
	115, 116, 410, 409, 412, 413, 414, 415, 0, 0,
	150, 411, 416, 417, 418, 0, 0, 0, 0, 0,
	403, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 400, 401, 0, 0, 0, 0, 446, 0,
	402, 0, 0, 395, 396, 398, 397, 399, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 445,
	0, 0, 326, 0, 0, 443, 0, 260, 0, 294,
	182, 200, 145, 197, 128, 140, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 1826,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 141, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 133, 297, 312, 151, 279, 0,
	0, 0, 135, 310, 293, 220, 193, 194, 134, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 142,
	323, 137, 143, 322, 229, 303, 311, 221, 213, 136,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 132, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 147, 228, 144, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	433, 444, 439, 440, 437, 438, 0, 436, 435, 434,
	447, 425, 426, 427, 428, 430, 0, 441, 442, 429,
	127, 138, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 432, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 131, 234,
	290, 173, 66, 0, 463, 114, 115, 116, 410, 409,
	412, 413, 414, 415, 0, 0, 150, 411, 416, 417,
	418, 0, 0, 0, 0, 0, 403, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 400, 401,
	0, 0, 0, 0, 446, 0, 402, 0, 0, 395,
	396, 398, 397, 399, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 445, 0, 0, 326, 0,
	0, 443, 0, 260, 0, 294, 182, 200, 145, 197,
	128, 140, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	141, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	133, 297, 312, 151, 279, 0, 0, 0, 135, 310,
	293, 220, 193, 194, 134, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 142, 323, 137, 143, 322,
	229, 303, 311, 221, 213, 136, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	132, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 147, 228, 144, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 433, 444, 439, 440,
	437, 438, 0, 436, 435, 434, 447, 425, 426, 427,
	428, 430, 0, 441, 442, 429, 127, 138, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 201, 0, 0, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 432, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 131, 234, 290, 173, 66, 0,
	0, 114, 115, 116, 410, 409, 412, 413, 414, 415,
	0, 0, 150, 411, 416, 417, 418, 0, 0, 0,
	0, 0, 403, 0, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 401, 0, 0, 0, 0,
	446, 0, 402, 0, 0, 395, 396, 398, 397, 399,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 445, 0, 0, 326, 0, 0, 443, 0, 260,
	0, 294, 182, 200, 145, 197, 128, 140, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 141, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 133, 297, 312, 151,
	279, 0, 0, 0, 135, 310, 293, 220, 193, 194,
	134, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 142, 323, 137, 143, 322, 229, 303, 311, 221,
	213, 136, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 132, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 147, 228,
	144, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 433, 444, 439, 440, 437, 438, 0, 436,
	435, 434, 447, 425, 426, 427, 428, 430, 0, 441,
	442, 429, 127, 138, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 237, 210, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	131, 234, 290, 173, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 725, 735, 736,
	728, 729, 730, 731, 732, 733, 734, 727, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	145, 197, 128, 140, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 141, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 133, 297, 312, 151, 279, 0, 0, 0,
	135, 310, 293, 220, 193, 194, 134, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 142, 323, 137,
	143, 322, 229, 303, 311, 221, 213, 136, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 132, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 147, 228, 144, 187, 287, 198,
	206, 0, 0, 245, 270, 152, 317, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 138,
	203, 0, 263, 174, 320, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 130, 139, 146, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 237,
	210, 0, 0, 826, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 201, 0, 0, 249, 0, 280,
	156, 209, 207, 302, 171, 167, 165, 155, 188, 214,
	248, 298, 242, 0, 204, 0, 0, 289, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 154, 131, 234, 290, 173,
	0, 0, 0, 114, 115, 116, 0, 828, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	715, 716, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 326, 0, 0, 0,
	0, 260, 0, 294, 182, 200, 145, 197, 128, 140,
	0, 180, 233, 267, 271, 0, 0, 0, 157, 0,
	269, 246, 315, 0, 250, 268, 205, 304, 261, 314,
	327, 328, 163, 227, 321, 299, 324, 336, 141, 160,
	240, 295, 318, 286, 222, 301, 196, 285, 133, 297,
	312, 151, 279, 0, 0, 0, 135, 310, 293, 220,
	193, 194, 134, 0, 265, 164, 176, 159, 236, 307,
	308, 158, 337, 142, 323, 137, 143, 322, 229, 303,
	311, 221, 213, 136, 309, 219, 212, 199, 170, 184,
	258, 208, 259, 185, 225, 224, 226, 0, 132, 0,
	291, 319, 338, 148, 0, 0, 300, 332, 335, 0,
	262, 149, 177, 169, 257, 175, 202, 331, 333, 334,
	147, 228, 144, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 1174, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 0,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 131, 234, 290, 173, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1173, 326, 0, 0, 0, 1169, 1166, 0, 1167,
	1168, 200, 628, 197, 128, 140, 1164, 1171, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 141, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 133, 297, 312, 151, 279, 0,
	0, 0, 135, 310, 293, 220, 193, 194, 134, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 142,
	323, 137, 143, 322, 229, 303, 311, 221, 213, 136,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 132, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 147, 228, 144, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 33, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 201,
	0, 0, 249, 0, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 0, 204,
	0, 0, 289, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	154, 131, 234, 290, 173, 66, 0, 463, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 326, 0, 0, 0, 0, 260, 0, 294, 182,
	200, 145, 197, 128, 140, 0, 180, 233, 267, 271,
	0, 0, 0, 157, 0, 269, 246, 315, 0, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 141, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 133, 297, 312, 151, 279, 0, 0,
	0, 135, 310, 293, 220, 193, 194, 134, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 142, 323,
	137, 143, 322, 229, 303, 311, 221, 213, 136, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 132, 0, 291, 319, 338, 148, 0,
	0, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 147, 228, 144, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 1084, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 0, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 131, 234, 290,
	173, 0, 0, 0, 114, 115, 116, 0, 1086, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 326, 0, 0,
	0, 0, 260, 0, 294, 182, 200, 145, 197, 128,
	140, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 141,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 133,
	297, 312, 151, 279, 0, 0, 0, 135, 310, 293,
	220, 193, 194, 134, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 142, 323, 137, 143, 322, 229,
	303, 311, 221, 213, 136, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 132,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 147, 228, 144, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 33, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 201, 0, 0, 249, 0, 280,
	156, 209, 207, 302, 171, 167, 165, 155, 188, 214,
	248, 298, 242, 0, 204, 0, 0, 289, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 154, 131, 234, 290, 173,
	66, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 326, 0, 0, 0,
	0, 260, 0, 294, 182, 200, 145, 197, 128, 140,
	0, 180, 233, 267, 271, 0, 0, 0, 157, 0,
	269, 246, 315, 0, 250, 268, 205, 304, 261, 314,
	327, 328, 163, 227, 321, 299, 324, 336, 141, 160,
	240, 295, 318, 286, 222, 301, 196, 285, 133, 297,
	312, 151, 279, 0, 0, 0, 135, 310, 293, 220,
	193, 194, 134, 0, 265, 164, 176, 159, 236, 307,
	308, 158, 337, 142, 323, 137, 143, 322, 229, 303,
	311, 221, 213, 136, 309, 219, 212, 199, 170, 184,
	258, 208, 259, 185, 225, 224, 226, 0, 132, 0,
	291, 319, 338, 148, 0, 0, 300, 332, 335, 0,
	262, 149, 177, 169, 257, 175, 202, 331, 333, 334,
	147, 228, 144, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 0,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 131, 234, 290, 173, 0, 0, 0, 114,
	115, 116, 0, 0, 1102, 0, 0, 1103, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 326, 0, 0, 0, 0, 260, 0, 294,
	182, 200, 145, 197, 128, 140, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 141, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 133, 297, 312, 151, 279, 0,
	0, 0, 135, 310, 293, 220, 193, 194, 134, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 142,
	323, 137, 143, 322, 229, 303, 311, 221, 213, 136,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 132, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 147, 228, 144, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 1084, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 131, 234,
	290, 173, 0, 0, 0, 114, 115, 116, 0, 1086,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 145, 197,
	128, 140, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 1082, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	141, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	133, 297, 312, 151, 279, 0, 0, 0, 135, 310,
	293, 220, 193, 194, 134, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 142, 323, 137, 143, 322,
	229, 303, 311, 221, 213, 136, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	132, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 147, 228, 144, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 138, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 859, 0,
	0, 0, 201, 0, 0, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 0, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 131, 234, 290, 173, 0, 0,
	0, 114, 115, 116, 0, 858, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 326, 0, 0, 0, 0, 260,
	0, 294, 182, 200, 145, 197, 128, 140, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 141, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 133, 297, 312, 151,
	279, 0, 0, 0, 135, 310, 293, 220, 193, 194,
	134, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 142, 323, 137, 143, 322, 229, 303, 311, 221,
	213, 136, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 132, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 147, 228,
	144, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 237, 210, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	131, 234, 290, 173, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	628, 197, 128, 140, 626, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 141, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 133, 297, 312, 151, 279, 0, 0, 0,
	135, 310, 293, 220, 193, 194, 134, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 142, 323, 137,
	143, 322, 229, 303, 311, 221, 213, 136, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 132, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 147, 228, 144, 187, 287, 198,
	206, 0, 0, 245, 270, 152, 317, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 138,
	203, 0, 263, 174, 320, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 130, 139, 146, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 237,
	210, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 201, 0, 0, 249, 0, 280,
	156, 209, 207, 302, 171, 167, 165, 155, 188, 214,
	248, 298, 242, 0, 204, 0, 0, 289, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 154, 131, 234, 290, 173,
	0, 0, 463, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 326, 0, 0, 0,
	0, 260, 0, 294, 182, 200, 145, 197, 128, 140,
	0, 180, 233, 267, 271, 0, 0, 0, 157, 0,
	269, 246, 315, 0, 250, 268, 205, 304, 261, 314,
	327, 328, 163, 227, 321, 299, 324, 336, 141, 160,
	240, 295, 318, 286, 222, 301, 196, 285, 133, 297,
	312, 151, 279, 0, 0, 0, 135, 310, 293, 220,
	193, 194, 134, 0, 265, 164, 176, 159, 236, 307,
	308, 158, 337, 142, 323, 137, 143, 322, 229, 303,
	311, 221, 213, 136, 309, 219, 212, 199, 170, 184,
	258, 208, 259, 185, 225, 224, 226, 0, 132, 0,
	291, 319, 338, 148, 0, 0, 300, 332, 335, 0,
	262, 149, 177, 169, 257, 175, 202, 331, 333, 334,
	147, 228, 144, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 0,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 131, 234, 290, 173, 66, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 326, 0, 0, 0, 0, 260, 0, 294,
	182, 200, 145, 197, 128, 140, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 141, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 133, 297, 312, 151, 279, 0,
	0, 0, 135, 310, 293, 220, 193, 194, 134, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 142,
	323, 137, 143, 322, 229, 303, 311, 221, 213, 136,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 132, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 147, 228, 144, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 131, 234,
	290, 173, 0, 0, 0, 114, 115, 116, 0, 1086,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 145, 197,
	128, 140, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	141, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	133, 297, 312, 151, 279, 0, 0, 0, 135, 310,
	293, 220, 193, 194, 134, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 142, 323, 137, 143, 322,
	229, 303, 311, 221, 213, 136, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	132, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 147, 228, 144, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 138, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 201, 0, 0, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 0, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 131, 234, 290, 173, 0, 0,
	0, 114, 115, 116, 0, 828, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 326, 0, 0, 0, 0, 260,
	0, 294, 182, 200, 145, 197, 128, 140, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 141, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 133, 297, 312, 151,
	279, 0, 0, 0, 135, 310, 293, 220, 193, 194,
	134, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 142, 323, 137, 143, 322, 229, 303, 311, 221,
	213, 136, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 132, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 147, 228,
	144, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 841, 210, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 0, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 131, 234, 290,
	173, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 326, 0, 0,
	0, 0, 260, 0, 294, 182, 200, 145, 197, 128,
	140, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 141,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 133,
	297, 312, 151, 279, 0, 0, 0, 135, 310, 293,
	220, 193, 194, 134, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 142, 323, 137, 143, 322, 229,
	303, 311, 221, 213, 136, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 132,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 147, 228, 144, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	0, 0, 0, 0, 832, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 131, 234, 290, 173, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 145, 197, 128, 140, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 141, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 133, 297, 312, 151, 279,
	0, 0, 0, 135, 310, 293, 220, 193, 194, 134,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	142, 323, 137, 143, 322, 229, 303, 311, 221, 213,
	136, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 132, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 147, 228, 144,
	187, 287, 198, 206, 0, 0, 245, 270, 152, 317,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 138, 203, 0, 263, 174, 320, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 146, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 237, 210, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 201, 0, 0,
	249, 0, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 0, 204, 0, 0,
	289, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 154, 131,
	234, 290, 173, 0, 0, 0, 114, 115, 116, 0,
	706, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 326,
	0, 0, 0, 0, 260, 0, 294, 182, 200, 145,
	197, 128, 140, 0, 180, 233, 267, 271, 0, 0,
	0, 157, 0, 269, 246, 315, 0, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 141, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 133, 297, 312, 151, 279, 0, 0, 0, 135,
	310, 293, 220, 193, 194, 134, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 142, 323, 137, 143,
	322, 229, 303, 311, 221, 213, 136, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 132, 0, 291, 319, 338, 148, 0, 0, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 147, 228, 144, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 237, 210,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 0, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 131, 234, 290, 173, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 178, 0, 0, 0, 326, 0, 0, 0, 0,
	260, 0, 294, 182, 200, 145, 197, 128, 140, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 141, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 133, 297, 312,
	151, 279, 0, 0, 0, 135, 310, 293, 220, 193,
	194, 134, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 142, 323, 137, 143, 322, 229, 303, 311,
	221, 213, 136, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 132, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 147,
	228, 144, 187, 287, 198, 206, 0, 0, 245, 270,
	152, 317, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 138, 203, 0, 263, 174, 320,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 139, 146, 153,
	161, 168, 172, 179, 183, 186, 189, 190, 191, 195,
	211, 215, 216, 217, 218, 230, 231, 232, 235, 238,
	239, 241, 243, 244, 247, 251, 252, 253, 254, 255,
	256, 264, 266, 272, 273, 274, 275, 276, 277, 278,
	281, 282, 283, 284, 292, 296, 305, 306, 316, 325,
	329, 378, 313, 330, 237, 210, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 201,
	0, 0, 249, 0, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 0, 204,
	0, 0, 289, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	154, 131, 234, 290, 173, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 122,
	0, 326, 0, 0, 0, 0, 260, 0, 294, 182,
	200, 145, 197, 128, 140, 0, 180, 233, 267, 271,
	0, 0, 0, 157, 0, 269, 246, 315, 0, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 141, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 133, 297, 312, 151, 279, 0, 0,
	0, 135, 310, 293, 220, 193, 194, 134, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 142, 323,
	137, 143, 322, 229, 303, 311, 221, 213, 136, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 132, 0, 291, 319, 338, 148, 0,
	0, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 147, 228, 144, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 0, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 131, 234, 290,
	173, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 326, 0, 0,
	0, 0, 260, 0, 294, 182, 200, 145, 197, 128,
	140, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 141,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 133,
	297, 312, 151, 279, 0, 0, 0, 135, 310, 293,
	220, 193, 194, 134, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 142, 323, 137, 143, 322, 229,
	303, 311, 221, 213, 136, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 132,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 147, 228, 144, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 0, 210,
}

var yyPact = [...]int{
	252, -1000, -294, 1331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1280, 961, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	506, 998, 79, 1214, 96, 665, 231, 64, 19265, 230,
	41, 19651, -1000, 62, -1000, 39, 19651, 55, 18879, -1000,
	-1000, -1000, 10740, 1161, -29, -35, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 963, 1257, 1271, 1277, 752, 1224,
	-1000, 9183, 9183, 203, 203, 203, 7639, -1000, -1000, 15784,
	19651, 19651, 949, 201, 218, 201, -144, -1000, -1000, -1000,
	-1000, -1000, -1000, 1214, -1000, -1000, 112, -1000, -1000, 19651,
	19651, 303, 1214, 98, -1000, -1000, -1000, 19651, 191, 665,
	191, 191, 19651, -1000, 272, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19651,
	1211, 442, 442, 442, 442, 442, 442, 14, 107, 105,
	80, -36, 665, 142, -1000, 317, -1000, 95, 33, -1000,
	442, 5221, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	209, -1000, -1000, -1000, -1000, 19651, 18493, 175, 376, -1000,
	-1000, -1000, -1000, 725, 642, -1000, 10740, 1790, 897, 897,
	-1000, -1000, 250, -1000, -1000, 11898, 11898, 11898, 11898, 11898,
	11898, 11898, 11898, 11898, 11898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 897,
	271, -1000, 10354, 897, 897, 897, 897, 897, 897, 897,
	897, 10740, 897, 897, 897, 897, 897, 897, 897, 897,
	897, 897, 897, 897, 897, 897, 897, 897, -1000, -1000,
	-1000, 19651, -1000, 1280, -1000, 961, -1000, -1000, -1000, 1192,
	10740, 10740, 1280, -1000, 1094, 9183, -1000, -1000, 1207, -1000,
	-1000, -1000, -1000, 529, 1314, -1000, 12670, 270, 1304, 18107,
	-1000, 16556, 17721, 892, 7236, -75, -1000, -1000, -1000, 356,
	15398, -1000, -1000, -1000, 1187, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 844, 19651, -1000, -1000, 2036, 665, -1000, 977, -1000,
	842, -1000, 951, 91, 351, 19651, 434, 665, 665, -1000,
	-1000, -1000, 1185, 332, 1923, 5221, 123, 143, 135, 19651,
	1214, 1159, 889, 208, 19651, 1245, 1038, 19651, 665, -1000,
	6430, -1000, 442, -1000, 634, 10740, -1000, -1000, -1000, -1000,
	-1000, 442, 19651, 442, 442, 442, 442, 428, 444, 428,
	-1000, -1000, -1000, -1000, 5221, 5221, 5221, 5221, 19651, 5221,
	5221, 444, -1000, -1000, -1000, 319, -1000, 1036, -1000, -1000,
	-1000, -1000, 44, -1000, -1000, -1000, -1000, -1000, 1331, -1000,
	-1000, -1000, -134, 10740, 10740, 10740, 10740, 598, 323, 11898,
	549, 354, 11898, 11898, 11898, 11898, 11898, 11898, 11898, 11898,
	11898, 11898, 11898, 11898, 11898, 11898, 11898, 705, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 665, -1000, 1329, 786,
	786, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	12284, 8025, 6430, 752, 834, 1280, 9183, 9183, 10740, 10740,
	9955, 9569, 9183, 1189, 393, 642, 19651, -1000, -1000, 11512,
	-1000, -1000, -1000, -1000, -1000, 622, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19651, 19651, 9183, 9183, 9183, 9183, 9183,
	-1000, 887, -1000, -179, 15012, 1271, 752, 1207, 1234, 1324,
	310, 547, 883, -1000, 617, 1271, 14626, 941, -1000, 1207,
	-1000, -1000, -1000, 19651, -1000, -1000, 17328, -1000, -1000, 6027,
	19651, 150, 19651, -1000, 958, 1171, -1000, -1000, -1000, 1253,
	14240, 19651, 945, 898, -1000, -1000, 269, 6833, -75, -1000,
	6833, 853, -1000, -71, -106, 8411, 289, -1000, -1000, -1000,
	-1000, 4415, 13056, 711, 467, -20, -1000, -1000, -1000, 951,
	-1000, 951, 951, 951, 951, 15, 15, 15, 15, -1000,
	-1000, -1000, -1000, -1000, 996, 989, -1000, 951, 951, 951,
	951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 980, 980,
	980, 953, 953, 178, 10740, 99, 19651, 1248, 590, 87,
	342, 77, -1000, 1240, 1010, -1000, 332, 803, -1000, -1000,
	449, 449, 374, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 152, -1000, 19651, 19651, 19651, 19651,
	19651, 238, 115, 19651, 19651, 882, -1000, 19651, 5221, -1000,
	-1000, -1000, -1000, -1000, -1000, 642, -1000, -1000, -1000, -1000,
	-1000, -1000, 442, 19651, 19651, 19651, -1000, -1000, 442, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19651, -1000, 628, 19651,
	19651, -1000, -1000, -1000, -1000, -1000, 642, 323, 368, 423,
	-1000, -1000, 510, -1000, -1000, 2171, -1000, -1000, -1000, -1000,
	549, 11898, 11898, 11898, 452, 2171, 2257, 683, 648, 290,
	469, 469, 284, 284, 284, 284, 284, 601, 601, -1000,
	-1000, -1000, 622, -1000, -1000, -1000, 622, 9183, 9183, 880,
	897, 268, -1000, 963, -1000, -1000, 1271, 823, 823, 551,
	516, 424, 1291, 823, 407, 1289, 823, 823, 9183, -1000,
	-1000, 486, -1000, 10740, 622, -1000, 267, -1000, 770, 871,
	864, 823, 622, 622, 823, 823, 19651, -1000, -284, -1000,
	-96, 286, 897, -1000, 16942, -1000, -1000, 1192, -1000, -1000,
	1138, -1000, 1091, 10740, 10740, 10740, -1000, -1000, -1000, 1192,
	1268, -1000, 1108, 1104, 1287, 9183, 16556, 1207, -1000, -1000,
	-1000, 265, 1287, 912, 897, -1000, 19651, 16556, 16556, 16556,
	16556, 16556, -1000, 1063, 1055, -1000, 1078, 1049, 1098, 19651,
	-1000, 832, 752, 14240, 150, 859, 16556, 19651, -1000, -1000,
	16556, 19651, 5624, -1000, 853, -75, -99, -1000, -1000, -1000,
	-1000, 642, -1000, 753, 798, 4012, -1000, -1000, -1000, -1000,
	179, -1000, -1000, 978, 665, -1000, 1228, 380, 380, 507,
	665, 1226, -1000, -1000, -1000, -1000, 1190, -1000, 457, -22,
	-1000, -1000, 15, 15, -1000, -1000, 289, 1183, 289, 289,
	289, 626, 626, -1000, -1000, -1000, -1000, -1000, 583, -1000,
	-1000, -1000, 576, -1000, -1000, 977, 575, 1047, 99, -1000,
	-1000, 332, 619, 1166, 19651, -1000, -1000, 680, 211, 67,
	88, -1000, -1000, -1000, -1000, 1028, -1000, 713, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19651, -1000, -1000,
	-1000, -1000, -1000, 19651, 905, -1000, -1000, -1000, -1000, 54,
	121, 102, 206, -1000, 5221, -1000, -1000, -1000, -1000, 428,
	-1000, 428, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 452,
	2171, 1897, -1000, 11898, 11898, -1000, -1000, 823, 823, 9183,
	6430, 1280, 1192, -1000, -1000, 108, 705, 108, 11898, 11898,
	-1000, 11898, 11898, -1000, -168, 926, 416, -1000, 10740, 566,
	-1000, 6430, -1000, 11898, 11898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 217, 216, 215, 19651, -1000, -1000,
	621, 616, 1075, 642, 642, -1000, -1000, 19651, -1000, -1000,
	-1000, -1000, 1285, 10740, -1000, 758, -1000, 4818, 1271, 1027,
	19651, 897, 1331, 13455, 19651, 947, -1000, 334, 1171, 1008,
	1026, 999, -1000, -1000, -1000, -1000, 1052, -1000, 1051, -1000,
	-1000, -1000, -1000, -1000, 752, 1287, 16556, 918, -1000, 918,
	-1000, 264, -1000, -1000, -1000, -98, -118, -1000, -1000, -1000,
	4415, -1000, 4415, -1000, 19651, 176, -1000, 665, 665, 665,
	-1000, -1000, -1000, 964, 1025, 11898, -1000, -1000, -1000, 289,
	289, -1000, 339, -1000, -1000, -1000, 802, -1000, 788, 745,
	784, 31, -1000, 930, 1181, 332, 332, -1000, 568, -1000,
	665, -1000, -1000, 19651, 74, -1000, 956, 579, -1000, 19651,
	-1000, -1000, -1000, -1000, -1000, -1000, 1232, -175, 665, 19651,
	19651, 19651, -1000, 19651, -1000, 442, 442, -1000, 11898, 2171,
	2171, -1000, -1000, 622, -1000, 1271, -1000, 622, 951, 951,
	-1000, 951, 953, -1000, 951, 35, 951, 32, 622, 622,
	2094, 2079, 1955, 1381, 897, -162, -1000, 642, 10740, -1000,
	1182, 923, 897, 897, 897, 775, -1000, 612, 15, -1000,
	-1000, -1000, 1283, 1276, 642, -1000, -1000, -1000, 1230, 855,
	718, -1000, -1000, 8797, 779, 1102, 263, 775, 1280, 19651,
	10740, -1000, -1000, 10740, 950, -1000, 10740, -1000, -1000, -1000,
	1280, 1280, 918, -1000, -1000, 307, -1000, -1000, -1000, 4012,
	-1000, 768, -1000, 1226, -1000, -1000, -1000, 19651, -12, 1321,
	2171, -1000, -1000, -1000, -1000, 15, 605, 15, 556, -1000,
	552, -1000, -1000, -224, -1000, -1000, 942, 1061, -1000, -1000,
	944, -1000, -1000, -1000, 669, -1000, -1000, 897, -1000, 6430,
	-1000, -1000, 908, 1009, -1000, -1000, -1000, -1000, 2171, -1000,
	1192, -1000, -1000, 182, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11898, 11898, 11898, 11898, 11898, 1271, 595, 642,
	11898, 11898, 16170, 19651, 19651, 13841, 19651, 15, -49, -1000,
	10740, 10740, 1221, -1000, 897, -1000, 913, 19651, 897, 19651,
	-1000, 1271, -1000, 642, 642, 19651, 642, 1271, -1000, 99,
	765, -1000, 329, -1000, -135, 289, -1000, 289, 644, 641,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1252, 19651,
	-1000, 144, 742, -1000, 331, 19651, 19651, -1000, -1000, -1000,
	770, 770, 770, 770, 75, 622, -1000, 770, 770, 762,
	-1000, 762, 762, 286, -1000, -275, -1000, 1153, 1148, 642,
	725, 1319, -1000, 897, 1331, 262, 718, -1000, -1000, 748,
	-1000, -1000, 154, 19651, 495, 1220, -1000, 1216, -1000, -1000,
	-1000, -1000, -1000, 961, 739, 722, -1000, 19651, 6430, 4415,
	701, -1000, -1000, -1000, -1000, -1000, 622, 78, -181, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -49, 200, -1000, 1115,
	1112, 1275, 19651, 718, 19651, -1000, 19651, -1000, -1000, 594,
	-1000, -1000, 131, -1000, -1000, 144, 1097, -1000, -1000, 905,
	-1000, 1074, -172, -186, 1123, 1126, 1126, 1148, 1273, 1136,
	1133, -1000, 585, 643, -1000, 902, -1000, -1000, -77, -1000,
	140, -175, -1000, 1071, -1000, 1119, 531, -1000, -1000, -1000,
	-1000, 567, -1000, 1269, 1254, -1000, 19651, 177, -1000, -1000,
	134, -1000, -178, -1000, 522, -1000, -1000, -1000, 550, 548,
	664, 76, 897, -183, -1000, -1000, -1000, -1000, 1024, -1000,
	11126, -189, 1018, -1000, 1311, 770, 622, -1000, -1000, 1317,
	390, 390, -1000, -1000, -1000, -1000, -1000, 184, 584, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1634, 1632, 12, 115, 80, 1631, 1626, 1625, 1624,
	145, 141, 140, 1623, 1621, 1620, 1612, 1611, 1610, 1609,
	1608, 1607, 1605, 1604, 1603, 1602, 1600, 117, 112, 587,
	1597, 1596, 1595, 1588, 1587, 1584, 1583, 1581, 1579, 1578,
	1577, 1576, 1573, 1572, 116, 1570, 1569, 1568, 1567, 1560,
	1559, 1558, 1557, 1556, 1555, 1552, 103, 1549, 45, 213,
	61, 67, 1547, 71, 1546, 1545, 1544, 1543, 1539, 1277,
	1538, 40, 89, 74, 1537, 41, 1536, 1523, 97, 1522,
	1521, 63, 1520, 1519, 47, 1518, 64, 76, 17, 31,
	1516, 1515, 1502, 1500, 104, 1128, 1499, 1498, 20, 1497,
	1496, 119, 1494, 84, 36, 16, 18, 23, 1493, 81,
	1490, 14, 1489, 77, 1488, 1486, 1484, 1483, 66, 1482,
	72, 85, 19, 1480, 6, 9, 1479, 1478, 1477, 1476,
	1472, 1471, 4, 1470, 1469, 1467, 1464, 27, 1462, 39,
	1461, 65, 42, 25, 10, 1459, 1458, 21, 93, 58,
	88, 1448, 1447, 1446, 822, 1441, 60, 1439, 129, 1438,
	35, 1437, 450, 626, 1436, 1432, 1428, 1427, 1423, 55,
	983, 1677, 82, 102, 1419, 1418, 2404, 38, 73, 24,
	1416, 1415, 1414, 70, 79, 50, 741, 44, 1412, 1410,
	1408, 1406, 1405, 1402, 1396, 214, 1392, 1390, 1389, 43,
	32, 105, 22, 1388, 1386, 1384, 1383, 54, 83, 1382,
	1381, 56, 62, 1380, 95, 26, 29, 1379, 1378, 1376,
	1375, 30, 11, 1374, 100, 34, 53, 28, 33, 86,
	1371, 15, 1369, 1366, 37, 48, 1364, 7, 1363, 8,
	1362, 2, 0, 1357, 5, 1356, 78, 1208, 1, 1353,
	3, 1352, 1349, 75, 1346, 1343, 1341, 1339, 68, 517,
	94, 1337, 107,
}

var yyR1 = [...]int{
	0, 256, 257, 257, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 242, 242, 242, 245, 245, 21, 41,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 50, 50, 11, 12, 12, 12, 12,
	260, 260, 78, 78, 79, 79, 141, 141, 13, 14,
	14, 150, 150, 149, 149, 149, 151, 151, 151, 151,
	186, 186, 15, 15, 15, 15, 15, 57, 57, 244,
	244, 243, 241, 241, 240, 240, 239, 23, 24, 25,
	26, 247, 247, 217, 30, 30, 29, 29, 29, 29,
	31, 31, 28, 28, 27, 27, 219, 219, 218, 218,
	218, 218, 218, 218, 208, 188, 188, 188, 188, 191,
	191, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	190, 190, 190, 190, 190, 192, 192, 192, 192, 192,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 194, 194, 194, 194, 194,
	194, 194, 194, 207, 207, 195, 195, 201, 201, 202,
	202, 202, 204, 204, 205, 205, 164, 164, 164, 197,
	197, 198, 198, 203, 203, 199, 199, 199, 200, 200,
	200, 206, 206, 206, 206, 206, 196, 196, 209, 231,
	231, 230, 230, 226, 226, 226, 226, 216, 216, 223,
	223, 223, 223, 223, 223, 213, 213, 213, 214, 214,
	212, 212, 215, 215, 225, 225, 224, 210, 210, 211,
	211, 234, 234, 234, 234, 234, 235, 249, 250, 248,
	248, 248, 248, 248, 165, 165, 165, 220, 220, 220,
	221, 221, 221, 222, 222, 222, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 238, 236, 236,
	237, 237, 17, 22, 22, 18, 18, 18, 18, 19,
	19, 32, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 157, 157, 251, 251, 159,
	159, 155, 155, 158, 158, 156, 156, 156, 160, 160,
	160, 161, 161, 255, 255, 255, 34, 34, 36, 36,
	37, 38, 38, 181, 181, 182, 182, 39, 40, 49,
	49, 49, 49, 49, 49, 51, 51, 51, 7, 7,
	7, 7, 46, 46, 46, 6, 6, 35, 35, 42,
	252, 252, 253, 254, 254, 254, 254, 43, 20, 261,
	44, 45, 45, 56, 56, 56, 52, 52, 52, 55,
	55, 55, 60, 60, 62, 62, 62, 62, 62, 63,
	63, 63, 63, 63, 63, 59, 59, 61, 61, 61,
	61, 174, 174, 174, 173, 173, 70, 70, 71, 71,
	72, 72, 73, 73, 73, 110, 87, 87, 140, 140,
	139, 139, 142, 142, 74, 74, 74, 74, 75, 75,
	76, 76, 77, 77, 180, 180, 179, 179, 179, 178,
	178, 80, 80, 80, 82, 81, 81, 81, 81, 83,
	83, 85, 85, 84, 84, 86, 88, 88, 88, 88,
	88, 89, 89, 69, 69, 69, 69, 69, 69, 69,
	69, 153, 153, 91, 91, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 102, 102, 102, 102, 102,
	102, 92, 92, 92, 92, 92, 92, 92, 58, 58,
	103, 103, 103, 109, 104, 104, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	99, 99, 99, 99, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 262, 262, 101, 100, 100, 100, 100,
	100, 100, 100, 54, 54, 54, 54, 54, 185, 185,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 114, 114, 53, 53, 112, 112, 113,
	115, 115, 111, 111, 111, 94, 94, 94, 94, 94,
	94, 94, 94, 96, 96, 96, 116, 116, 117, 117,
	118, 118, 119, 119, 120, 121, 121, 121, 122, 122,
	122, 122, 232, 232, 232, 232, 232, 227, 227, 227,
	227, 228, 228, 228, 64, 64, 64, 64, 66, 66,
	65, 65, 47, 47, 48, 48, 48, 67, 67, 68,
	68, 68, 68, 137, 137, 137, 123, 123, 123, 123,
	128, 128, 128, 124, 124, 126, 126, 126, 127, 127,
	127, 125, 131, 131, 133, 133, 132, 132, 130, 130,
	135, 135, 134, 134, 129, 129, 93, 93, 93, 93,
	93, 138, 138, 138, 138, 143, 143, 105, 105, 107,
	107, 106, 108, 144, 144, 147, 145, 145, 148, 148,
	148, 148, 148, 146, 146, 146, 175, 175, 175, 152,
	152, 162, 162, 163, 163, 154, 154, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 167, 167, 167,
	168, 168, 136, 136, 136, 136, 233, 233, 229, 171,
	171, 172, 172, 176, 176, 177, 177, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 258, 259, 183, 184, 184, 184,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 7, 4,
	2, 1, 1, 4, 0, 1, 1, 1, 2, 2,
	0, 1, 5, 5, 4, 4, 2, 4, 1, 1,
	3, 4, 3, 3, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	4, 4, 2, 2, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 0, 1, 2, 0,
	2, 0, 3, 0, 1, 0, 3, 3, 0, 2,
	2, 0, 2, 1, 2, 1, 0, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 2,
	3, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 0, 1, 3,
	1, 2, 3, 1, 1, 1, 5, 6, 6, 6,
	6, 4, 4, 3, 6, 7, 5, 5, 5, 12,
	7, 5, 9, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 3,
	8, 8, 3, 3, 5, 4, 6, 5, 4, 3,
	2, 3, 4, 3, 3, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 5, 7, 4, 4, 4, 4,
	4, 4, 4, 2, 7, 2, 4, 5, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -256, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -42,
	-43, -4, -258, 6, 7, 8, -50, 10, 11, 31,
	-23, -24, 146, -25, 147, -26, 149, 148, 182, 150,
	175, 70, 208, 209, 211, 212, 213, 214, -51, 180,
	181, 152, 35, 41, 32, 33, 80, 9, 304, 177,
	176, 26, -257, 408, -56, 5, -118, 16, -3, -44,
	-261, -44, -44, -44, -44, -44, -44, -217, -219, 80,
	119, 80, -57, 154, -136, -247, 100, 160, 163, 164,
	295, 153, -30, -29, -28, -27, -31, 30, -247, 154,
	156, 268, -245, -242, 83, 84, 85, 154, 154, 155,
	156, -247, 154, -84, -176, -242, -170, 314, 168, 346,
	347, 76, 258, 208, 222, 216, 243, 235, 315, 348,
	169, 198, 233, 236, 282, 166, 349, 280, 263, 271,
	94, 211, 291, 350, 75, 47, 40, 178, 231, 227,
	199, 351, 323, 192, 225, 46, 28, 45, 352, 273,
	248, 44, 353, 79, 319, 275, 226, 272, 152, 354,
	171, 402, 164, 355, 249, 253, 356, 283, 48, 357,
	358, 359, 74, 220, 221, 360, 206, 167, 285, 247,
	165, 34, 276, 316, 54, 186, 286, 42, 251, 41,
	406, 361, 246, 242, 49, 362, 363, 364, 365, 245,
	219, 241, 204, 58, 255, 254, 256, 193, 281, 238,
	366, 367, 368, 172, 77, 369, 228, 19, 370, 371,
	200, 372, 52, 373, 374, 289, 181, 375, 50, 37,
	184, 376, 377, 378, 379, 380, 381, 274, 250, 252,
	161, 188, 270, 318, 382, 224, 383, 173, 185, 180,
	290, 174, 384, 385, 386, 387, 388, 389, 390, 212,
	39, 391, 392, 393, 394, 207, 203, 284, 293, 57,
	78, 260, 395, 218, 163, 201, 396, 209, 51, 195,
	266, 205, 43, 239, 187, 397, 398, 229, 230, 244,
	217, 240, 210, 403, 189, 182, 399, 292, 202, 261,
	320, 194, 237, 234, 196, 400, 156, 190, 191, 401,
	404, 277, 267, 278, 279, 268, 197, 232, 262, 154,
	236, 282, 263, 264, 265, 276, 277, 188, -255, 283,
	154, -155, 137, 146, 273, -159, 274, 267, 268, 197,
	-251, -242, 284, 406, 269, 275, 279, 278, -176, 210,
	-181, 215, -171, -242, -170, 213, -84, -49, 402, 150,
	-183, -183, -183, -104, -69, -90, 103, -95, 30, 24,
	-94, -91, -111, -108, -109, 137, 138, 140, 139, 141,
	126, 127, 134, 104, 142, -99, -97, -98, -100, 87,
	86, 95, 88, 89, 90, 91, 96, 97, 98, -171,
	-176, -106, -258, 64, 65, 305, 306, 307, 308, 313,
	309, 106, 53, 294, 303, 302, 301, 298, 299, 296,
	297, 311, 312, 159, 295, 153, 132, 304, -242, -170,
	40, 266, 266, -5, -4, -258, 6, 21, 22, -122,
	18, 17, -259, 82, -52, -62, 59, 60, -63, 22,
	36, 63, 61, -45, -61, 128, -69, -176, -61, -154,
	158, -154, -154, -145, -186, 210, -148, 284, 283, -172,
	-146, -171, -169, 282, 236, 281, 151, 321, 102, 23,
	25, 105, 137, 17, 106, 136, 305, 146, 68, 322,
	296, 297, 294, 300, 307, 308, 295, 264, 30, 11,
	324, 26, 176, 22, 36, 130, 148, 109, 110, 179,
	24, 177, 98, 327, 20, 71, 12, 14, 328, 329,
	15, 159, 158, 121, 155, 66, 9, 142, 27, 118,
	62, 330, 29, 331, 332, 333, 334, 64, 119, 18,
	298, 299, 32, 407, 335, 313, 183, 132, 69, 55,
	103, 336, 337, 96, 338, 99, 72, 100, 16, 67,
	38, 339, 340, 341, 287, 342, 120, 149, 304, 65,
	343, 153, 265, 6, 310, 31, 175, 63, 344, 154,
	108, 311, 312, 157, 97, 5, 160, 33, 10, 70,
	73, 301, 302, 303, 53, 317, 107, 13, 345, 288,
	101, -218, 119, -208, -211, -171, 170, -235, 166, -84,
	-225, -224, -171, -64, 76, -163, 159, 155, -163, 304,
	-27, -28, 236, 136, -84, -84, 146, 148, 151, 72,
	-29, 194, -22, -84, -162, 159, -242, -162, -162, -84,
	143, -84, 31, -160, 119, 13, -160, -160, -160, -160,
	-160, 195, 280, 195, 196, 195, 196, 195, -158, -157,
	271, 272, 266, 270, -242, 295, -242, 188, 154, 189,
	156, -213, 155, 34, 167, 196, 266, 191, -160, -184,
	-258, -172, 157, -171, -46, -171, 87, -7, -3, -11,
	-10, -12, 111, 81, 102, 100, 101, 118, -69, -92,
	121, 103, 119, 120, 105, 123, 122, 133, 126, 127,
	128, 129, 130, 131, 132, 124, 125, 136, 111, 112,
	113, 114, 115, 116, 117, -153, -258, -109, -258, 144,
	145, -95, -95, -95, -95, -95, -95, -95, -95, -95,
	-95, -258, 143, -2, -104, -4, -258, -258, -258, -258,
	-258, -258, -258, -258, -114, -69, -258, -262, -101, -258,
	-262, -101, -262, -101, -262, -258, -262, -101, -262, -101,
	-262, -262, -101, -258, -258, -258, -258, -258, -258, -258,
	-183, -252, -253, -87, -84, -118, -3, -44, -137, 20,
	32, -69, -119, -120, -69, -118, 55, -59, -61, -63,
	59, 60, 93, 12, -174, -173, 23, -171, 87, 143,
	12, -85, 27, -84, -71, -72, -73, -74, -87, -110,
	-258, 12, -78, -79, -84, -86, -176, 81, 210, -148,
	-186, -150, -149, 285, 287, 111, -175, -171, 87, 30,
	31, 82, 81, -84, -188, -191, -193, -192, -194, -189,
	-190, 233, 234, 137, 237, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 31, 178, 229, 230, 231,
	232, 249, 250, 251, 252, 253, 254, 255, 256, 216,
	235, 315, 217, 218, 219, 220, 221, 222, 224, 225,
	226, 227, 228, -242, 80, 82, 81, -195, 80, -67,
	199, 111, -84, 103, -242, -242, 31, -216, 111, -166,
	151, 148, 149, -238, 147, 258, 236, 94, 30, 16,
	305, 184, 320, -242, 185, -184, 190, 190, 154, 154,
	203, -84, 40, 81, 157, -78, 24, 72, -84, -242,
	-177, -176, -169, -160, 87, -69, -160, -84, -160, -160,
	-160, -160, -156, 12, 121, -214, 12, 121, -156, -184,
	-184, -184, -184, -84, -184, -184, -214, -161, 119, 72,
	-182, 213, 247, 403, 404, 405, -69, -69, -69, -69,
	-102, 96, 103, 97, 98, -95, -103, -106, -109, 92,
	121, 119, 120, 105, -95, -95, -95, -95, -95, -95,
	-95, -95, -95, -95, -95, -95, -95, -95, -95, -185,
	-242, 87, -242, -94, -94, -171, -60, 22, 36, -59,
	-172, -177, -169, -56, -259, -259, -118, -59, -59, -69,
	-69, -111, 87, -59, -111, 87, -59, -59, -55, 22,
	36, -112, -113, 107, -111, -171, -176, -259, -95, -171,
	-171, -59, -60, -60, -59, -59, 81, -254, 287, 288,
	407, -179, 184, -178, 23, -176, 87, -122, -259, -123,
	27, 10, 121, 81, 19, 81, -121, 25, 26, -122,
	-96, -171, 88, 91, -70, 81, 12, -63, -84, -173,
	128, -177, -84, -141, 184, -84, 31, 81, -80, -82,
	-81, -83, 62, 66, 68, 63, 64, 65, 69, -180,
	23, -71, -3, -258, -84, -78, -260, 81, 12, 73,
	-260, 81, 143, -148, -150, 81, 286, 288, 289, 72,
	99, -69, -200, 136, -220, -221, -222, -172, 87, 88,
	-208, -209, -210, -223, 170, -234, 161, 163, 164, 160,
	-212, 171, -235, 155, 29, 82, -164, 96, 103, -204,
	261, -195, -195, -195, -195, -195, -199, 236, -199, -199,
	-199, 80, 80, -195, -195, -195, -195, -201, 80, -201,
	-201, -202, 80, -202, -235, 166, -69, -231, -230, -226,
	-229, 165, 94, 317, 73, -224, -121, 88, -66, 201,
	111, 202, 204, 205, 24, -233, -229, -216, -242, 87,
	-183, -246, 166, 162, 170, 171, 164, 83, 84, 85,
	155, 29, 161, 163, 184, 160, -246, -167, -168, 157,
	23, 155, 29, 184, -84, -84, -84, -84, -84, 151,
	148, 192, -84, -84, -84, -184, -160, -176, -176, -84,
	-160, -84, 87, -84, -171, 96, 97, 98, -103, -95,
	-95, -95, -58, 179, 102, -259, -259, -59, -59, -258,
	143, -5, -122, -259, -259, 81, 73, 23, 12, 12,
	-259, 12, 12, -259, -259, -59, -115, -113, 109, -69,
	-259, 143, -259, 81, 81, -259, -259, -259, -259, -259,
	-253, 406, 288, -88, 70, 158, 71, -258, -178, -137,
	38, 46, 57, -69, -69, -120, -137, -152, 20, 12,
	53, 53, -89, 13, -61, -71, -63, 143, -89, -93,
	31, 53, -3, -258, -258, -144, -147, -111, -72, -73,
	-73, -72, -73, 62, 62, 62, 67, 62, 67, 62,
	-81, -176, -259, -259, -3, -141, 73, -71, -84, -71,
	-86, -176, 128, -149, -151, 290, 287, 293, -242, 87,
	81, -222, 111, -211, 80, -242, 29, -212, -212, -212,
	-215, -242, -215, 29, -197, 30, 96, -205, 262, -199,
	-199, -200, 31, -200, -200, -200, -207, 87, -207, 88,
	88, 82, -232, -227, -228, 32, 76, -226, -216, 87,
	37, -171, 82, 156, 207, -68, 300, 87, 83, 72,
	-242, 87, -183, -183, -84, -183, -171, -244, 73, 190,
	258, 190, 193, 157, -184, -156, -156, -58, 102, -95,
	-95, -259, -259, -60, -172, -118, -137, -187, 137, 233,
	178, 231, 227, 247, 238, 260, 229, 261, -185, -187,
	-95, -95, -95, -95, 314, -118, 110, -69, 108, -172,
	-95, -95, 155, 155, 155, -142, -171, 39, 87, 87,
	58, -84, -116, 14, -69, 128, -122, -143, 72, -144,
	-105, -107, -106, -258, -138, -259, -171, -142, -89, 81,
	111, -76, -75, 72, 73, -77, 72, -75, 62, 62,
	-259, -89, -71, -89, -89, 143, 287, 291, 292, -221,
	-222, -225, -234, 171, -215, -215, -215, 80, -198, 72,
	-95, -200, -200, -242, 137, 82, 81, 82, 81, 82,
	81, -165, 352, 103, -228, -227, -216, -216, 88, -242,
	-84, -65, 199, 206, 80, 84, -84, 27, -241, 317,
	-243, -242, -171, -171, -171, -84, -160, -160, -95, -259,
	-122, -259, -195, -195, -195, -202, -195, 221, -195, 221,
	-259, -259, 20, 20, 20, 20, -258, -53, 310, -69,
	81, 81, -258, -258, -258, -259, 81, 87, -199, -117,
	15, 17, 28, -143, 81, -259, -259, 81, 53, 143,
	-259, -118, -147, -69, -69, 80, -69, -118, -89, 82,
	-139, -171, -203, 258, 10, -199, 87, -199, 88, 88,
	352, 30, 77, 78, 79, 30, 74, 75, -140, 80,
	82, -258, -240, -239, -172, 80, 73, -137, -199, -242,
	-95, -95, -95, -95, -95, -122, 87, -95, -95, -139,
	-259, -139, -139, -179, -171, -199, -125, -130, -158, -69,
	-104, 29, -107, 53, -3, -171, -105, -171, -122, -139,
	-122, -231, 82, 81, -206, 161, 29, 160, -98, -200,
	-200, 82, 82, 23, -139, -236, -237, 184, 81, 111,
	-139, -84, -259, -259, -259, -259, -54, 121, 317, -259,
	-259, -259, -259, -259, -259, -88, -128, 402, -131, 42,
	-132, 43, 10, -105, 143, 82, 173, -171, -196, 94,
	29, 29, -3, 82, -259, 81, -171, -239, -222, 82,
	-259, 315, 69, 318, -125, 47, 239, -133, 51, -134,
	-129, 52, 17, -144, -171, -84, 87, -47, 317, -237,
	53, -244, 58, 316, 319, -126, 49, -124, 48, -124,
	-132, 17, -135, 44, 45, 87, 80, -48, 198, 406,
	186, -241, 58, -127, 50, 72, 99, 87, 17, 17,
	-139, 166, 187, 317, 72, 99, 87, 87, 82, 200,
	-258, 318, -249, -250, 72, -95, 183, 319, -250, 72,
	11, 10, -259, -259, -248, 174, 169, 172, 31, -248,
	168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 670, 0, 409, 409, 409, 409, 409, 409, 409,
	0, 0, -2, -2, 0, 36, 0, 0, 0, 0,
	-2, 367, 368, 0, 370, -2, 0, 0, 379, 1156,
	1156, 1156, 0, 0, 0, 0, 1154, 53, 54, 385,
	386, 387, 1, 3, 0, 413, 678, 0, 0, -2,
	411, 0, 0, 785, 785, 785, 0, 82, 83, 0,
	0, 0, 694, 783, 0, 783, 0, 803, 804, 805,
	101, 102, 86, -2, 106, 107, 0, 111, 100, 0,
	0, 0, 110, 37, 33, 34, 35, 0, 781, 0,
	781, 781, 0, 310, 493, 813, 814, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 0,
	0, 358, 358, 358, 358, 358, 358, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 335, 0, 0, 342,
	358, 1157, 364, 365, 352, 350, 347, 348, 366, 369,
	0, 374, 377, 809, 810, 0, 392, 0, 996, 384,
	397, 398, 408, 38, 544, 503, 0, 509, 511, 0,
	546, 547, 548, 549, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 577, 578, 579, 655,
	656, 657, 658, 659, 660, 661, 662, 513, 514, 652,
	0, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 0, 613, 613, 613, 613, 613, 613, 613,
	613, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1156, 0, 407, 670, 49, 0, 409, 414, 415, 713,
	0, 0, 670, 1155, 0, 0, -2, -2, 425, 431,
	432, 433, 434, 410, 0, 437, 441, 0, 0, 0,
	786, 0, 0, 68, 0, 1127, 766, -2, -2, 0,
	0, 811, 812, -2, 958, -2, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 0, 0, 118, 119, 0, 0, 240, 960, 116,
	0, 234, 175, 707, 0, 0, 0, 0, 0, 88,
	108, 109, 0, 217, 0, 1157, 0, 0, 0, 0,
	-2, 0, 302, 0, 0, 0, 0, 0, 0, 309,
	0, 311, 358, 313, 0, 0, 314, 315, 316, 317,
	318, 358, 0, 358, 358, 358, 358, 355, 0, 355,
	353, 354, 345, 346, 1157, 1157, 1157, 1157, 0, 1157,
	1157, 0, 225, 226, 227, 361, 339, 340, 343, 344,
	1158, 1159, 375, 378, 395, 393, 394, 396, 388, 389,
	390, 391, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 510, 0, 524, 0, 0,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	0, 422, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 419, 0, 644, 0, 597, 605, 0,
	598, 606, 599, 607, 600, 0, 601, 608, 602, 609,
	603, 604, 610, 0, 0, 0, 422, 422, 0, 0,
	39, 399, 400, 0, 476, 678, 0, 424, 716, 0,
	0, 679, 671, 672, 675, 678, 0, 446, 435, 426,
	429, 430, 412, 0, 438, 442, 0, 444, 445, 0,
	0, 66, 0, 492, 0, 448, 450, 451, 452, 474,
	0, 0, 0, 0, 62, 64, 493, 0, 1127, 772,
	0, 70, 71, 0, 0, 0, 198, 776, 777, 778,
	774, 257, 0, 0, 186, 182, 126, 127, 128, 175,
	130, 175, 175, 175, 175, 195, 195, 195, 195, 158,
	159, 160, 161, 162, 0, 0, 145, 175, 175, 175,
	175, 165, 166, 167, 168, 169, 170, 171, 172, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 177, 177,
	177, 179, 179, 0, 0, 209, 0, 675, 0, 698,
	0, 0, 97, 0, 806, 99, 217, 0, 218, 1156,
	0, 0, 797, 272, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 782, 0, 1157, 308,
	494, 815, 816, 312, 359, 360, 319, 336, 320, 322,
	321, 323, 358, 0, 0, 0, 228, 229, 358, 326,
	327, 328, 329, 330, 331, 332, 0, 338, 0, 0,
	0, 376, 380, 381, 382, 383, 545, 504, 505, 506,
	508, 525, 0, 527, 529, 515, 516, 540, 541, 542,
	0, 0, 0, 0, 538, 520, 0, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 565,
	628, 629, 0, 563, 564, 575, 0, 0, 0, 423,
	653, 0, -2, 0, 543, 761, 678, 0, 0, 0,
	0, 548, 655, 0, 548, 655, 0, 0, 0, 420,
	421, 650, 647, 0, 0, 652, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 403, 405,
	0, 496, 1065, 477, 0, 479, 480, 713, 50, 40,
	0, 714, 0, 0, 0, 0, 674, 676, 677, 713,
	0, 663, 0, 0, 501, 0, 0, 427, 46, 443,
	439, 0, 501, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 481, 0, 0, 484, 0, 0, 0, 0,
	475, 0, 0, 0, -2, 0, 0, 0, 60, 61,
	0, 0, 0, 767, 69, 0, 0, 74, 75, 768,
	769, 770, 771, 0, 103, 258, 260, 263, 264, 265,
	120, 122, 123, 0, 0, 238, 1075, 1109, 997, 232,
	232, 995, 245, 230, 231, 117, 189, 187, 0, 184,
	183, 129, 195, 195, 152, 153, 198, 0, 198, 198,
	198, 0, 0, 146, 147, 148, 149, 140, 0, 141,
	142, 143, 0, 144, 239, 0, 0, 682, 210, 211,
	213, 217, 0, 0, 0, 235, 236, 0, 0, 0,
	0, 695, 696, 697, 784, 0, 807, 0, 114, 115,
	266, 1156, 283, 284, 285, 286, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 1156, 0, 1156, 798,
	799, 800, 801, 0, 89, 276, 278, 277, 281, 0,
	0, 0, 0, 303, 1157, 307, 324, 356, 357, 355,
	337, 355, 362, 341, 372, 526, 528, 530, 517, 538,
	521, 0, 518, 0, 0, 512, 580, 0, 0, 422,
	0, 670, 713, 584, 585, 0, 0, 0, 0, 0,
	621, 0, 0, 622, 0, 670, 0, 648, 0, 0,
	596, 0, 615, 0, 0, 616, 617, 618, 619, 620,
	401, 404, 406, 456, 0, 0, 0, 0, 478, 42,
	0, 0, 0, 680, 681, 673, 41, 0, 779, 780,
	664, 665, 666, 0, 436, 447, 428, 0, 678, 755,
	0, 0, 747, 0, 0, 501, 763, 0, 449, 470,
	472, 0, 467, 482, 483, 485, 0, 487, 0, 489,
	490, 453, 454, 455, 0, 501, 0, 501, 63, 501,
	65, 0, 495, 72, 73, 0, 0, 79, 199, 200,
	0, 261, 0, 121, 0, 0, 219, 232, 232, 232,
	223, 233, 224, 0, 191, 0, 188, 125, 185, 198,
	198, 154, 0, 155, 156, 157, 0, 173, 0, 0,
	0, 254, 84, 686, 685, 217, 217, 212, 0, 215,
	0, 808, 176, 0, 0, 708, 709, 0, 712, 0,
	112, 113, 267, 268, 269, 270, 0, 92, 0, 0,
	0, 0, 274, 0, 306, 358, 358, 519, 0, 539,
	522, 581, 582, 0, 654, 678, 44, 0, 175, 175,
	633, 175, 179, 636, 175, 638, 175, 641, 0, 0,
	0, 0, 0, 0, 0, 645, 595, 651, 0, 653,
	0, 0, 0, 0, 0, 0, 462, 0, 195, 718,
	715, 43, 668, 0, 502, 440, 47, 51, 0, 755,
	746, 757, 759, 0, 0, 0, 751, 0, 670, 0,
	0, 464, 471, 0, 0, 465, 0, 466, 486, 488,
	-2, 670, 501, 58, 59, 0, 76, 77, 78, 259,
	262, 0, 237, 0, 220, 221, 222, 0, 193, 0,
	190, 150, 151, 196, 197, 195, 0, 195, 0, 180,
	0, 246, 255, 0, 683, 684, 0, 0, 214, 216,
	458, 699, 700, 701, 0, 711, 98, 0, 275, 0,
	90, 91, 0, 0, 280, 304, 325, 334, 523, 583,
	713, 586, 630, 195, 634, 635, 637, 639, 640, 642,
	588, 587, 0, 0, 0, 0, 0, 678, 0, 649,
	0, 0, 0, 0, 0, 476, 0, 195, 738, 48,
	0, 0, 0, 52, 0, 760, 0, 0, 0, 0,
	67, 678, 764, 765, 468, 0, 473, 678, 57, 209,
	0, 460, 201, 194, 0, 198, 174, 198, 0, 0,
	256, 687, 688, 689, 690, 691, 692, 693, 0, 0,
	710, 0, 93, 94, 0, 0, 0, 45, 631, 632,
	0, 0, 0, 0, 623, 0, 646, 0, 0, 0,
	498, 0, 0, 496, 463, 720, 719, 732, 736, 669,
	667, 0, 758, 0, 750, 753, 749, 752, 55, 0,
	56, 208, 0, 0, 206, 0, 203, 205, 192, 163,
	164, 178, 181, 0, 0, 0, 298, 0, 0, 0,
	0, 282, 589, 591, 590, 592, 0, 0, 0, 594,
	611, 612, 497, 499, 500, 457, 738, 0, 731, 734,
	-2, 0, 0, 748, 0, 469, 0, 461, 124, 0,
	202, 204, 702, 459, 297, 0, 0, 95, 96, 89,
	593, 0, 0, 0, 725, 723, 723, 736, 0, 740,
	0, 745, 0, 756, 754, 0, 207, 85, 704, 299,
	0, 92, 624, 0, 627, 728, 0, 721, 724, 722,
	733, 0, 739, 0, 0, 737, 0, 0, 705, 706,
	0, 279, 625, 717, 0, 726, 727, 735, 0, 0,
	0, 0, 0, 0, 729, 730, 741, 743, 241, 703,
	0, 0, 242, 243, 0, 0, 0, 626, 244, 0,
	0, 0, 300, 301, 247, 249, 250, 0, 0, 248,
	251, 252, 253,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 408,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:389
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:394
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:399
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:430
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:440
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:449
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:459
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:465
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:471
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:480
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:511
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:519
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:539
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:549
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:556
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:568
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:584
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:637
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:641
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:657
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:667
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:677
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:691
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:715
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:728
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:736
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:740
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:747
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:771
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:787
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:799
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:806
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:813
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:820
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:831
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:837
		{
			yyVAL.collateAndCharsets = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:859
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:864
		{
			yyVAL.boolean = false
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.boolean = true
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:874
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:878
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:888
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:899
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:919
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1111
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1150
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.literal = nil
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1179
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1187
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1197
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.boolean = false
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.boolean = true
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.boolean = false
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.boolean = true
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1237
		{
			yyVAL.optVal = nil
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1246
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1255
		{
			yyVAL.boolean = false
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.boolean = true
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = ""
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1290
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.colKeyOpt = colKey
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1311
		{
			yyVAL.literal = nil
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1326
		{
			yyVAL.indexOptions = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = ""
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1481
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 242:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1485
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1489
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 244:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1493
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1503
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1542
		{
			yyVAL.boolean = true
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.boolean = true
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.boolean = false
		}
	case 257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = ""
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1599
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1603
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1607
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1611
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1616
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1621
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1625
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1636
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1665
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1669
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1673
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1686
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1696
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 282:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1700
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 297:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1729
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1745
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 301:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1749
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 306:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1777
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1796
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.statement = &OtherRead{}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1819
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1839
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1843
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1847
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1876
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1884
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1888
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1896
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1909
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1919
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1924
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = "extended "
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1991
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.str = "full "
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2025
		{
			yyVAL.showFilter = nil
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2039
		{
			yyVAL.showFilter = nil
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2049
		{
			yyVAL.empty = struct{}{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.empty = struct{}{}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.statement = &Begin{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.statement = &Begin{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &Commit{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Rollback{}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2098
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.empty = struct{}{}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2103
		{
			yyVAL.empty = struct{}{}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.empty = struct{}{}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2121
		{
			yyVAL.explainType = EmptyType
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.explainType = JSONType
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.explainType = TreeType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.explainType = VitessType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.explainType = TraditionalType
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.explainType = AnalyzeType
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.statement = &OtherRead{}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.lockType = Read
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yyVAL.lockType = ReadLocal
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.lockType = Write
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2262
		{
			setAllowComments(yylex, true)
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.bytes2 = nil
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.boolean = true
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.boolean = false
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.boolean = true
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = SQLCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2308
		{
			yyVAL.boolean = false
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.boolean = true
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.boolean = true
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2321
		{
			yyVAL.selectExprs = nil
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2330
		{
			yyVAL.strs = nil
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2346
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = SQLCacheStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = DistinctStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.str = DistinctStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.str = StraightJoinHint
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2400
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2405
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2457
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2473
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columns = nil
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2515
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2523
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2535
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2545
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2550
		{
			yyVAL.empty = struct{}{}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.empty = struct{}{}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.joinType = NormalJoinType
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.joinType = NormalJoinType
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.joinType = NormalJoinType
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.joinType = StraightJoinType
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.joinType = LeftJoinType
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.joinType = LeftJoinType
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.joinType = RightJoinType
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.joinType = RightJoinType
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.indexHints = nil
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2657
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2665
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2669
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2674
		{
			yyVAL.expr = nil
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2678
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2738
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2746
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2750
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2754
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2762
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2766
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2770
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.expr = nil
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2931
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2939
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2975
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3001
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3035
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 593:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3093
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3116
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3169
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 612:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3173
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3197
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3201
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3205
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3209
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3213
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3217
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3223
		{
			yyVAL.matchExprOption = NoOption
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3235
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3293
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3305
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = nil
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3319
		{
			yyVAL.str = string("")
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3333
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3339
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.expr = nil
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3362
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &NullVal{}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.exprs = nil
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3429
		{
			yyVAL.expr = nil
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3433
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3438
		{
			yyVAL.orderBy = nil
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3458
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.orderDirection = AscOrder
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.orderDirection = AscOrder
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.orderDirection = DescOrder
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3476
		{
			yyVAL.limit = nil
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3480
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3484
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3493
		{
			yyVAL.indexOptions = nil
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = yyDollar[2].str
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = "cascaded"
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.str = yyDollar[3].str
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3632
		{
			yyVAL.lock = NoLock
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			yyVAL.lock = ForUpdateLock
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3640
		{
			yyVAL.lock = ShareModeLock
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.selectInto = nil
		}
	case 717:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3649
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3653
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3657
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = " header"
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = " manifest on"
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = " manifest off"
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = " overwrite on"
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = " overwrite off"
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = " optionally"
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3799
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3803
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3821
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3826
		{
			yyVAL.updateExprs = nil
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3830
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3840
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3850
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3892
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3922
		{
			yyVAL.bytes = []byte("charset")
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = &Default{}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.boolean = false
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.boolean = true
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3951
		{
			yyVAL.boolean = false
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.boolean = true
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.ignore = false
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.ignore = true
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3984
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.str = ""
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.indexOptions = nil
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			decNesting(yylex)
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			skipToEnd(yylex)
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			skipToEnd(yylex)
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			skipToEnd(yylex)
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
