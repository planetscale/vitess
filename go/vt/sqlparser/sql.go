// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const CODE = 57605
const PRIVILEGES = 57606
const FUNCTION = 57607
const NAMES = 57608
const CHARSET = 57609
const GLOBAL = 57610
const SESSION = 57611
const ISOLATION = 57612
const LEVEL = 57613
const READ = 57614
const WRITE = 57615
const ONLY = 57616
const REPEATABLE = 57617
const COMMITTED = 57618
const UNCOMMITTED = 57619
const SERIALIZABLE = 57620
const CURRENT_TIMESTAMP = 57621
const DATABASE = 57622
const CURRENT_DATE = 57623
const CURRENT_TIME = 57624
const LOCALTIME = 57625
const LOCALTIMESTAMP = 57626
const CURRENT_USER = 57627
const UTC_DATE = 57628
const UTC_TIME = 57629
const UTC_TIMESTAMP = 57630
const REPLACE = 57631
const CONVERT = 57632
const CAST = 57633
const SUBSTR = 57634
const SUBSTRING = 57635
const GROUP_CONCAT = 57636
const SEPARATOR = 57637
const TIMESTAMPADD = 57638
const TIMESTAMPDIFF = 57639
const MATCH = 57640
const AGAINST = 57641
const BOOLEAN = 57642
const LANGUAGE = 57643
const WITH = 57644
const QUERY = 57645
const EXPANSION = 57646
const UNUSED = 57647
const ARRAY = 57648
const CUME_DIST = 57649
const DESCRIPTION = 57650
const DENSE_RANK = 57651
const EMPTY = 57652
const EXCEPT = 57653
const FIRST_VALUE = 57654
const GROUPING = 57655
const GROUPS = 57656
const JSON_TABLE = 57657
const LAG = 57658
const LAST_VALUE = 57659
const LATERAL = 57660
const LEAD = 57661
const MEMBER = 57662
const NTH_VALUE = 57663
const NTILE = 57664
const OF = 57665
const OVER = 57666
const PERCENT_RANK = 57667
const RANK = 57668
const RECURSIVE = 57669
const ROW_NUMBER = 57670
const SYSTEM = 57671
const WINDOW = 57672
const ACTIVE = 57673
const ADMIN = 57674
const BUCKETS = 57675
const CLONE = 57676
const COMPONENT = 57677
const DEFINITION = 57678
const ENFORCED = 57679
const EXCLUDE = 57680
const FOLLOWING = 57681
const GEOMCOLLECTION = 57682
const GET_MASTER_PUBLIC_KEY = 57683
const HISTOGRAM = 57684
const HISTORY = 57685
const INACTIVE = 57686
const INVISIBLE = 57687
const LOCKED = 57688
const MASTER_COMPRESSION_ALGORITHMS = 57689
const MASTER_PUBLIC_KEY_PATH = 57690
const MASTER_TLS_CIPHERSUITES = 57691
const MASTER_ZSTD_COMPRESSION_LEVEL = 57692
const NESTED = 57693
const NETWORK_NAMESPACE = 57694
const NOWAIT = 57695
const NULLS = 57696
const OJ = 57697
const OLD = 57698
const OPTIONAL = 57699
const ORDINALITY = 57700
const ORGANIZATION = 57701
const OTHERS = 57702
const PATH = 57703
const PERSIST = 57704
const PERSIST_ONLY = 57705
const PRECEDING = 57706
const PRIVILEGE_CHECKS_USER = 57707
const PROCESS = 57708
const RANDOM = 57709
const REFERENCE = 57710
const REQUIRE_ROW_FORMAT = 57711
const RESOURCE = 57712
const RESPECT = 57713
const RESTART = 57714
const RETAIN = 57715
const REUSE = 57716
const ROLE = 57717
const SECONDARY = 57718
const SECONDARY_ENGINE = 57719
const SECONDARY_LOAD = 57720
const SECONDARY_UNLOAD = 57721
const SKIP = 57722
const SRID = 57723
const THREAD_PRIORITY = 57724
const TIES = 57725
const UNBOUNDED = 57726
const VCPU = 57727
const VISIBLE = 57728
const FORMAT = 57729
const TREE = 57730
const VITESS = 57731
const TRADITIONAL = 57732
const LOCAL = 57733
const LOW_PRIORITY = 57734

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 807,
	-2, 87,
	-1, 43,
	136, 111,
	236, 111,
	-2, 105,
	-1, 51,
	34, 354,
	155, 354,
	167, 354,
	195, 368,
	196, 368,
	-2, 356,
	-1, 56,
	157, 378,
	-2, 376,
	-1, 80,
	55, 421,
	-2, 429,
	-1, 104,
	136, 111,
	236, 111,
	-2, 106,
	-1, 457,
	143, 818,
	-2, 814,
	-1, 458,
	143, 819,
	-2, 815,
	-1, 475,
	55, 422,
	-2, 434,
	-1, 476,
	55, 423,
	-2, 435,
	-1, 496,
	111, 1109,
	-2, 80,
	-1, 497,
	111, 1008,
	-2, 81,
	-1, 502,
	111, 964,
	-2, 778,
	-1, 504,
	111, 1049,
	-2, 780,
	-1, 660,
	136, 111,
	236, 111,
	-2, 274,
	-1, 1043,
	143, 821,
	-2, 817,
	-1, 1135,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1502,
	5, 675,
	18, 675,
	20, 675,
	32, 675,
	82, 675,
	-2, 460,
	-1, 1707,
	45, 749,
	-2, 747,
}

const yyPrivate = 57344

const yyLast = 19630

var yyAct = [...]int{
	457, 1789, 1782, 1549, 1707, 1419, 1633, 1611, 1749, 1300,
	401, 1332, 1656, 430, 79, 3, 1153, 777, 1482, 468,
	1483, 1082, 1157, 416, 828, 1333, 1479, 1319, 1202, 1208,
	940, 1401, 636, 1400, 1166, 1494, 1439, 1377, 673, 1132,
	958, 501, 1156, 639, 821, 1030, 1467, 118, 972, 1037,
	130, 1259, 370, 130, 1210, 1393, 77, 1171, 382, 633,
	130, 1114, 858, 865, 1121, 477, 849, 712, 831, 848,
	826, 1063, 1084, 851, 817, 815, 1211, 403, 1007, 31,
	462, 392, 1097, 1198, 855, 640, 632, 1137, 382, 864,
	75, 382, 130, 382, 862, 838, 975, 993, 111, 399,
	105, 106, 80, 790, 74, 389, 1079, 1080, 1760, 1298,
	791, 1704, 8, 1658, 130, 7, 130, 6, 1535, 1621,
	714, 1784, 1746, 130, 128, 666, 1780, 76, 130, 119,
	120, 121, 1727, 1215, 385, 1773, 1745, 82, 83, 84,
	85, 86, 87, 1550, 1456, 1726, 1579, 648, 1509, 1510,
	1299, 483, 487, 930, 1213, 463, 102, 113, 33, 115,
	485, 68, 37, 38, 1148, 1149, 638, 390, 391, 1694,
	739, 738, 748, 749, 741, 742, 743, 744, 745, 746,
	747, 740, 495, 361, 750, 1415, 97, 1508, 654, 1414,
	655, 1147, 362, 102, 123, 124, 125, 663, 1363, 683,
	359, 1362, 669, 681, 1364, 650, 649, 866, 498, 867,
	710, 442, 1187, 448, 449, 446, 447, 694, 445, 444,
	443, 695, 692, 693, 393, 1212, 1081, 461, 450, 451,
	692, 693, 67, 460, 356, 1385, 1181, 1421, 1614, 102,
	94, 1729, 652, 368, 1570, 1188, 98, 1568, 380, 99,
	100, 992, 384, 378, 1440, 994, 995, 996, 119, 120,
	121, 1411, 1040, 1544, 1220, 1779, 933, 119, 120, 121,
	1545, 116, 1222, 708, 1223, 1224, 689, 947, 687, 688,
	685, 686, 347, 661, 684, 709, 1424, 1238, 682, 1423,
	944, 1115, 1713, 946, 1793, 1442, 1206, 1795, 1206, 1772,
	101, 1515, 635, 706, 1206, 1422, 665, 1676, 645, 349,
	350, 351, 489, 366, 367, 373, 1425, 952, 1761, 363,
	365, 374, 352, 353, 376, 375, 948, 355, 354, 945,
	348, 358, 371, 715, 1301, 1303, 1410, 101, 701, 1175,
	703, 1175, 651, 1466, 1444, 1465, 1448, 130, 1443, 659,
	1441, 1464, 646, 346, 122, 1446, 1237, 762, 763, 1236,
	1711, 1600, 696, 699, 1445, 1278, 1507, 1695, 1324, 1534,
	1288, 382, 700, 702, 1275, 1267, 1143, 1447, 1449, 1214,
	842, 775, 670, 101, 740, 382, 382, 750, 676, 677,
	678, 679, 680, 1725, 1154, 119, 120, 121, 750, 1359,
	973, 721, 472, 1093, 1413, 119, 120, 121, 711, 989,
	730, 1188, 743, 744, 745, 746, 747, 740, 976, 1686,
	750, 671, 1302, 656, 705, 657, 675, 941, 658, 90,
	1492, 1458, 1791, 1730, 1221, 1792, 707, 1790, 1677, 1675,
	934, 1742, 739, 738, 748, 749, 741, 742, 743, 744,
	745, 746, 747, 740, 372, 1014, 750, 727, 69, 1526,
	664, 130, 868, 725, 1064, 1174, 698, 1174, 91, 1012,
	1013, 1011, 104, 730, 690, 1064, 760, 1285, 936, 819,
	1796, 697, 1383, 728, 729, 727, 382, 818, 1178, 130,
	1716, 130, 130, 835, 382, 1179, 644, 762, 763, 724,
	382, 730, 722, 1620, 723, 1619, 762, 763, 1540, 974,
	1397, 778, 739, 738, 748, 749, 741, 742, 743, 744,
	745, 746, 747, 740, 1396, 1218, 750, 977, 1777, 1582,
	847, 1776, 674, 1768, 816, 741, 742, 743, 744, 745,
	746, 747, 740, 832, 1757, 750, 1797, 793, 795, 797,
	799, 801, 803, 804, 794, 796, 731, 800, 802, 1740,
	805, 1581, 1774, 846, 1766, 813, 857, 1469, 820, 1260,
	739, 738, 748, 749, 741, 742, 743, 744, 745, 746,
	747, 740, 729, 727, 750, 1646, 667, 668, 67, 1775,
	660, 1767, 393, 647, 1617, 1095, 1588, 1098, 1099, 730,
	1010, 788, 739, 738, 748, 749, 741, 742, 743, 744,
	745, 746, 747, 740, 498, 1470, 750, 748, 749, 741,
	742, 743, 744, 745, 746, 747, 740, 1471, 1547, 750,
	824, 827, 130, 863, 1273, 1406, 926, 1002, 1004, 1005,
	1394, 1249, 1272, 1491, 1003, 130, 962, 937, 938, 488,
	472, 1274, 1252, 1253, 1254, 1682, 382, 1094, 1673, 1778,
	130, 728, 729, 727, 76, 130, 1673, 1723, 130, 957,
	1681, 130, 728, 729, 727, 1576, 728, 729, 727, 730,
	119, 120, 121, 130, 1032, 130, 1631, 728, 729, 727,
	730, 119, 120, 121, 730, 1460, 1398, 382, 382, 130,
	382, 382, 130, 382, 382, 730, 876, 1673, 1720, 1409,
	78, 961, 960, 1176, 728, 729, 727, 1673, 1712, 935,
	964, 493, 966, 943, 968, 969, 970, 971, 728, 729,
	727, 1595, 730, 726, 949, 490, 491, 830, 1320, 857,
	978, 472, 956, 1673, 472, 1353, 730, 1008, 1685, 953,
	1530, 1031, 942, 1138, 119, 120, 121, 965, 1418, 967,
	1033, 650, 649, 1480, 979, 980, 1107, 982, 983, 1118,
	985, 986, 1491, 981, 382, 1106, 984, 739, 738, 748,
	749, 741, 742, 743, 744, 745, 746, 747, 740, 1673,
	1672, 750, 929, 1610, 1052, 1055, 1587, 472, 1598, 472,
	1065, 987, 1117, 1047, 1532, 1531, 1118, 382, 382, 1528,
	1529, 1009, 1528, 1527, 1106, 472, 1042, 1043, 130, 738,
	748, 749, 741, 742, 743, 744, 745, 746, 747, 740,
	382, 1320, 750, 1118, 472, 1106, 963, 130, 1088, 1367,
	382, 778, 726, 472, 130, 1139, 130, 33, 1100, 119,
	120, 121, 1118, 1366, 130, 130, 1139, 929, 928, 1073,
	1074, 382, 1034, 1035, 382, 1146, 33, 1044, 1133, 1291,
	119, 120, 121, 458, 1230, 382, 382, 875, 874, 1290,
	1068, 1106, 1138, 1112, 1043, 1096, 1077, 997, 998, 999,
	1000, 1327, 951, 33, 1663, 465, 1041, 860, 1108, 1491,
	419, 418, 421, 422, 423, 424, 1140, 653, 1173, 420,
	425, 1109, 1758, 1328, 1142, 67, 1635, 1140, 1113, 1630,
	1116, 67, 1606, 131, 1622, 1138, 131, 931, 1203, 1135,
	382, 383, 1546, 131, 1519, 1110, 927, 1371, 1199, 1136,
	67, 1229, 1050, 1051, 1141, 130, 130, 130, 130, 130,
	1193, 1145, 130, 130, 1204, 1144, 130, 382, 1192, 1205,
	471, 383, 1161, 1041, 383, 131, 383, 67, 92, 67,
	1228, 1623, 1624, 1625, 130, 130, 130, 1403, 112, 643,
	1420, 498, 1495, 1496, 498, 1636, 1215, 131, 130, 131,
	1626, 130, 382, 1402, 1786, 1158, 131, 1783, 1521, 1498,
	1480, 131, 1416, 990, 955, 1344, 1200, 1201, 1501, 1500,
	1345, 1243, 1341, 1217, 1227, 1216, 1340, 1247, 829, 1231,
	1232, 1233, 1234, 1235, 1242, 1008, 1239, 1240, 1342, 1152,
	1241, 478, 1763, 1343, 1627, 1628, 1182, 1403, 1183, 1184,
	1185, 1186, 1048, 1049, 478, 479, 1054, 1057, 1058, 1346,
	1246, 1127, 1128, 1744, 1194, 1195, 1196, 1197, 479, 1472,
	1309, 1599, 1248, 1318, 1317, 1250, 1735, 1269, 833, 834,
	481, 1072, 480, 1765, 1075, 1076, 1732, 1748, 130, 1750,
	1756, 475, 476, 481, 1755, 480, 130, 1708, 1207, 1009,
	1255, 1123, 1126, 1127, 1128, 1124, 1706, 1125, 1129, 1307,
	950, 1407, 1189, 1190, 1191, 459, 822, 1308, 130, 1402,
	96, 1389, 1060, 939, 873, 672, 1593, 1382, 823, 130,
	130, 130, 130, 130, 463, 1268, 1061, 108, 1334, 1329,
	1718, 130, 1717, 1306, 1284, 130, 1661, 1380, 130, 130,
	1373, 1325, 130, 130, 130, 1313, 1091, 1322, 1225, 1351,
	954, 816, 1683, 1297, 1131, 1365, 114, 382, 1305, 126,
	1098, 1099, 466, 467, 469, 1316, 1372, 1312, 1770, 1769,
	78, 1378, 1378, 1315, 1323, 1321, 1575, 1354, 1753, 1368,
	1736, 1356, 1592, 470, 1591, 960, 1336, 1337, 1335, 1339,
	1475, 1338, 1320, 1279, 1347, 1788, 1787, 1352, 1276, 843,
	836, 1788, 1709, 1615, 1388, 1357, 1390, 1391, 1392, 1379,
	1360, 1092, 465, 1355, 76, 81, 382, 73, 1, 357,
	131, 1370, 1078, 814, 369, 1286, 1374, 1375, 1376, 1417,
	1123, 1126, 1127, 1128, 1124, 1781, 1125, 1129, 117, 1551,
	1495, 1496, 382, 1405, 383, 1632, 1226, 1399, 1209, 1395,
	1164, 1155, 89, 630, 88, 1310, 1311, 827, 383, 383,
	704, 1163, 1162, 1674, 1404, 1384, 1180, 1613, 382, 1520,
	1381, 1715, 881, 879, 1031, 880, 878, 1158, 739, 738,
	748, 749, 741, 742, 743, 744, 745, 746, 747, 740,
	883, 882, 750, 1437, 877, 1427, 991, 1428, 379, 1130,
	869, 1264, 1265, 837, 1533, 382, 1177, 1457, 1429, 1426,
	988, 1451, 364, 691, 1438, 130, 1435, 360, 758, 1450,
	1314, 1361, 1282, 499, 492, 382, 1629, 1486, 95, 1042,
	1043, 382, 382, 1754, 131, 1733, 1731, 1705, 1334, 1481,
	1657, 1734, 1484, 1703, 1764, 1478, 1747, 1090, 825, 1590,
	1474, 1283, 787, 1062, 130, 852, 402, 1001, 417, 383,
	1490, 414, 131, 415, 131, 131, 1101, 383, 382, 1326,
	382, 732, 382, 383, 1499, 1378, 1378, 1378, 1489, 400,
	1503, 394, 1505, 428, 1506, 844, 1122, 1120, 1436, 1473,
	1525, 1119, 1512, 1504, 856, 1497, 1386, 1387, 1493, 850,
	1105, 1412, 932, 1523, 1524, 1173, 1219, 1514, 1541, 1461,
	1511, 130, 1516, 1517, 1518, 1513, 1543, 130, 642, 474,
	93, 1552, 382, 382, 382, 1059, 130, 1693, 1578, 473,
	59, 36, 1536, 1538, 1539, 1537, 386, 1759, 1741, 717,
	482, 381, 30, 29, 28, 1436, 1459, 23, 22, 21,
	20, 19, 25, 18, 17, 16, 107, 1561, 103, 46,
	43, 41, 109, 110, 44, 40, 1557, 1558, 662, 27,
	26, 500, 15, 1566, 634, 14, 641, 13, 12, 11,
	10, 1476, 9, 5, 4, 1542, 720, 24, 1158, 776,
	1158, 1548, 2, 0, 0, 0, 0, 0, 0, 0,
	1556, 0, 1334, 0, 0, 131, 0, 0, 1594, 0,
	0, 0, 382, 0, 0, 1602, 0, 1603, 131, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 1608, 383,
	0, 0, 1609, 131, 1368, 0, 0, 0, 131, 0,
	0, 131, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 131, 0, 131, 0,
	0, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	383, 383, 131, 383, 383, 131, 383, 383, 0, 0,
	0, 0, 0, 0, 382, 382, 382, 130, 382, 0,
	0, 1649, 1651, 1652, 1563, 1564, 0, 1565, 1645, 382,
	1567, 382, 1569, 0, 0, 0, 1637, 382, 1653, 1484,
	1660, 0, 1664, 1484, 1669, 0, 1662, 0, 1666, 0,
	0, 1580, 1668, 0, 0, 0, 0, 0, 1670, 0,
	0, 382, 1158, 1679, 0, 1680, 382, 130, 1684, 1678,
	1671, 0, 0, 1687, 0, 0, 393, 383, 0, 0,
	0, 0, 0, 1604, 0, 0, 1605, 1045, 1046, 1607,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 382, 0, 0, 1484, 0, 0,
	383, 383, 1710, 1589, 0, 0, 382, 382, 0, 0,
	0, 131, 1721, 0, 0, 0, 0, 0, 1719, 0,
	1089, 0, 0, 383, 0, 0, 0, 0, 0, 1722,
	131, 1688, 382, 383, 130, 0, 1728, 131, 0, 131,
	1334, 1737, 0, 0, 0, 0, 0, 131, 131, 1743,
	1574, 0, 0, 0, 383, 0, 1752, 383, 0, 1751,
	1616, 0, 1618, 0, 0, 0, 0, 1762, 383, 383,
	0, 0, 1659, 393, 500, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 1771, 0, 716, 718,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 1739, 0,
	1794, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 383, 0, 0, 1634, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 131,
	131, 131, 131, 0, 0, 131, 131, 0, 0, 131,
	383, 0, 739, 738, 748, 749, 741, 742, 743, 744,
	745, 746, 747, 740, 0, 0, 750, 131, 131, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 131, 383, 1573, 0, 0, 840,
	0, 0, 0, 0, 0, 0, 734, 500, 737, 0,
	0, 0, 0, 870, 751, 752, 753, 754, 755, 756,
	757, 0, 735, 736, 733, 739, 738, 748, 749, 741,
	742, 743, 744, 745, 746, 747, 740, 0, 0, 750,
	0, 0, 0, 0, 1262, 0, 0, 0, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	1271, 0, 0, 0, 0, 1277, 0, 0, 1280, 1281,
	0, 0, 0, 0, 0, 0, 1287, 0, 0, 0,
	1289, 131, 0, 1292, 1293, 1294, 1295, 1296, 0, 131,
	0, 0, 0, 0, 0, 431, 32, 0, 739, 738,
	748, 749, 741, 742, 743, 744, 745, 746, 747, 740,
	0, 131, 750, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 131, 131, 131, 131, 131, 0, 32, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 131, 0,
	0, 131, 131, 1349, 1350, 131, 131, 131, 739, 738,
	748, 749, 741, 742, 743, 744, 745, 746, 747, 740,
	383, 1430, 750, 0, 0, 0, 0, 0, 0, 500,
	129, 464, 0, 377, 0, 0, 0, 0, 0, 0,
	129, 739, 738, 748, 749, 741, 742, 743, 744, 745,
	746, 747, 740, 0, 0, 750, 0, 0, 0, 0,
	0, 1261, 0, 486, 486, 0, 0, 0, 0, 0,
	500, 500, 129, 500, 500, 0, 500, 500, 0, 383,
	0, 739, 738, 748, 749, 741, 742, 743, 744, 745,
	746, 747, 740, 0, 129, 750, 129, 0, 0, 0,
	0, 0, 0, 129, 0, 383, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 1433, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	1070, 1071, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 383, 383, 0, 0, 0, 0,
	0, 1487, 0, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 0, 0, 500, 131, 0, 0,
	0, 0, 1502, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 383, 500, 383, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 383, 383, 383, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 0, 1560, 0, 0, 0,
	1562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1571, 1572, 0, 0, 0, 713, 129, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 1586, 0,
	0, 0, 32, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 761, 0, 1596, 1597, 0, 0,
	1601, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 0, 383, 774, 0, 0, 0, 779, 780,
	781, 782, 783, 784, 785, 786, 0, 789, 792, 792,
	792, 798, 792, 792, 798, 792, 806, 807, 808, 809,
	810, 811, 812, 0, 383, 0, 0, 0, 0, 0,
	32, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 853, 383, 383, 383,
	131, 383, 0, 0, 1650, 486, 0, 0, 0, 0,
	0, 0, 383, 0, 383, 0, 0, 0, 0, 129,
	383, 129, 859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1066, 0, 0, 383, 0, 0, 0, 0, 383,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 1690, 1691, 1692, 0, 1696, 0, 1697, 1698,
	1699, 0, 1700, 1701, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 713, 129, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 500, 0, 0, 0, 129, 0, 0, 129, 0,
	0, 959, 713, 713, 0, 713, 713, 0, 713, 713,
	0, 0, 500, 129, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1468, 129,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 1066, 0, 0, 1488, 1468, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 39, 65,
	66, 500, 63, 500, 0, 641, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 486, 959, 0, 0, 0,
	486, 486, 0, 0, 486, 486, 486, 0, 0, 0,
	1067, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 486,
	486, 486, 486, 486, 0, 1553, 1554, 1555, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 959, 129, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 129, 129, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 0, 0, 0, 0,
	0, 0, 0, 42, 45, 48, 47, 50, 0, 62,
	0, 0, 0, 0, 0, 1066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 71, 70, 500, 0, 60, 61, 49,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 0, 53, 54, 0, 55, 56,
	57, 58, 0, 0, 500, 129, 129, 129, 129, 129,
	0, 0, 129, 129, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 1245, 129, 1612, 1612, 1612,
	0, 1654, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 129, 1665, 0, 1667, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 0,
	464, 0, 0, 0, 1612, 0, 0, 0, 0, 1612,
	0, 0, 0, 69, 0, 0, 0, 0, 0, 486,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	486, 0, 898, 0, 0, 0, 0, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 500,
	500, 0, 0, 853, 0, 0, 1086, 0, 0, 0,
	1330, 1331, 0, 0, 853, 853, 853, 853, 853, 0,
	0, 0, 0, 1066, 0, 1738, 0, 486, 129, 0,
	1134, 0, 0, 853, 0, 0, 0, 853, 1067, 129,
	129, 129, 129, 129, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 129, 0, 0, 129, 129,
	0, 0, 129, 1358, 959, 0, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1006, 0, 0, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 0, 0, 0, 0, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1069, 0, 0, 912, 915, 916,
	917, 918, 919, 920, 0, 921, 922, 923, 924, 925,
	900, 901, 902, 903, 884, 885, 913, 486, 887, 0,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	904, 905, 906, 907, 908, 909, 910, 911, 0, 959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 32, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 914, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	1583, 1584, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1256, 1257, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 32, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1067, 0, 1431, 1432, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 1453, 0,
	1454, 1455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1462, 1463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 614, 602, 0, 0, 555,
	617, 528, 545, 626, 546, 549, 587, 512, 568, 243,
	543, 0, 532, 508, 539, 509, 530, 557, 171, 561,
	527, 604, 571, 616, 207, 0, 533, 255, 589, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 623, 210, 578, 0, 296, 229, 0,
	0, 0, 559, 606, 566, 598, 554, 588, 517, 577,
	618, 544, 585, 619, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 1159, 1160, 0,
	0, 0, 0, 0, 155, 0, 582, 613, 541, 584,
	586, 629, 507, 579, 0, 510, 513, 625, 609, 536,
	537, 1369, 0, 0, 0, 0, 0, 0, 558, 567,
	595, 552, 0, 0, 0, 1640, 1641, 1642, 1643, 1644,
	534, 0, 576, 1647, 1648, 0, 514, 511, 0, 0,
	0, 0, 556, 0, 0, 0, 516, 0, 535, 596,
	0, 505, 183, 600, 608, 553, 333, 612, 551, 550,
	615, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 605, 531, 540, 162, 538,
	276, 252, 322, 575, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 526, 601, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 593,
	628, 251, 277, 157, 324, 295, 521, 525, 519, 520,
	569, 570, 522, 620, 621, 622, 597, 515, 0, 523,
	524, 0, 603, 610, 611, 574, 132, 143, 209, 624,
	270, 179, 327, 506, 518, 167, 529, 0, 0, 542,
	547, 548, 560, 562, 563, 564, 565, 573, 580, 581,
	583, 590, 591, 592, 594, 599, 607, 627, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 0, 216, 572,
	614, 602, 0, 0, 555, 617, 528, 545, 626, 546,
	549, 587, 512, 568, 243, 543, 0, 532, 508, 539,
	509, 530, 557, 171, 561, 527, 604, 571, 616, 207,
	0, 533, 255, 589, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 623, 210,
	578, 0, 296, 229, 0, 0, 0, 559, 606, 566,
	598, 554, 588, 517, 577, 618, 544, 585, 619, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 1159, 1160, 0, 0, 0, 0, 0, 155,
	0, 582, 613, 541, 584, 586, 629, 507, 579, 0,
	510, 513, 625, 609, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 558, 567, 595, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 576, 0, 0,
	0, 514, 511, 0, 0, 0, 0, 556, 0, 0,
	0, 516, 0, 535, 596, 0, 505, 183, 600, 608,
	553, 333, 612, 551, 550, 615, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	605, 531, 540, 162, 538, 276, 252, 322, 575, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 526,
	601, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 593, 628, 251, 277, 157, 324,
	295, 521, 525, 519, 520, 569, 570, 522, 620, 621,
	622, 597, 515, 0, 523, 524, 0, 603, 610, 611,
	574, 132, 143, 209, 624, 270, 179, 327, 506, 518,
	167, 529, 0, 0, 542, 547, 548, 560, 562, 563,
	564, 565, 573, 580, 581, 583, 590, 591, 592, 594,
	599, 607, 627, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 0, 216, 572, 614, 602, 0, 0, 555,
	617, 528, 545, 626, 546, 549, 587, 512, 568, 243,
	543, 0, 532, 508, 539, 509, 530, 557, 171, 561,
	527, 604, 571, 616, 207, 0, 533, 255, 589, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 623, 210, 578, 0, 296, 229, 0,
	0, 0, 559, 606, 566, 598, 554, 588, 517, 577,
	618, 544, 585, 619, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 582, 613, 541, 584,
	586, 629, 507, 579, 0, 510, 513, 625, 609, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 558, 567,
	595, 552, 0, 0, 0, 0, 0, 0, 1477, 0,
	534, 0, 576, 0, 0, 0, 514, 511, 0, 0,
	0, 0, 556, 0, 0, 0, 516, 0, 535, 596,
	0, 505, 183, 600, 608, 553, 333, 612, 551, 550,
	615, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 605, 531, 540, 162, 538,
	276, 252, 322, 575, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 526, 601, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 593,
	628, 251, 277, 157, 324, 295, 521, 525, 519, 520,
	569, 570, 522, 620, 621, 622, 597, 515, 0, 523,
	524, 0, 603, 610, 611, 574, 132, 143, 209, 624,
	270, 179, 327, 506, 518, 167, 529, 0, 0, 542,
	547, 548, 560, 562, 563, 564, 565, 573, 580, 581,
	583, 590, 591, 592, 594, 599, 607, 627, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 0, 216, 572,
	614, 602, 0, 0, 555, 617, 528, 545, 626, 546,
	549, 587, 512, 568, 243, 543, 0, 532, 508, 539,
	509, 530, 557, 171, 561, 527, 604, 571, 616, 207,
	0, 533, 255, 589, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 623, 210,
	578, 0, 296, 229, 0, 0, 0, 559, 606, 566,
	598, 554, 588, 517, 577, 618, 544, 585, 619, 198,
	159, 136, 240, 297, 178, 67, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 582, 613, 541, 584, 586, 629, 507, 579, 0,
	510, 513, 625, 609, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 558, 567, 595, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 576, 0, 0,
	0, 514, 511, 0, 0, 0, 0, 556, 0, 0,
	0, 516, 0, 535, 596, 0, 505, 183, 600, 608,
	553, 333, 612, 551, 550, 615, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	605, 531, 540, 162, 538, 276, 252, 322, 575, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 526,
	601, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 593, 628, 251, 277, 157, 324,
	295, 521, 525, 519, 520, 569, 570, 522, 620, 621,
	622, 597, 515, 0, 523, 524, 0, 603, 610, 611,
	574, 132, 143, 209, 624, 270, 179, 327, 506, 518,
	167, 529, 0, 0, 542, 547, 548, 560, 562, 563,
	564, 565, 573, 580, 581, 583, 590, 591, 592, 594,
	599, 607, 627, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 0, 216, 572, 614, 602, 0, 0, 555,
	617, 528, 545, 626, 546, 549, 587, 512, 568, 243,
	543, 0, 532, 508, 539, 509, 530, 557, 171, 561,
	527, 604, 571, 616, 207, 0, 533, 255, 589, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 623, 210, 578, 0, 296, 229, 0,
	0, 0, 559, 606, 566, 598, 554, 588, 517, 577,
	618, 544, 585, 619, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 582, 613, 541, 584,
	586, 629, 507, 579, 0, 510, 513, 625, 609, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 558, 567,
	595, 552, 0, 0, 0, 0, 0, 0, 1359, 0,
	534, 0, 576, 0, 0, 0, 514, 511, 0, 0,
	0, 0, 556, 0, 0, 0, 516, 0, 535, 596,
	0, 505, 183, 600, 608, 553, 333, 612, 551, 550,
	615, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 605, 531, 540, 162, 538,
	276, 252, 322, 575, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 526, 601, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 593,
	628, 251, 277, 157, 324, 295, 521, 525, 519, 520,
	569, 570, 522, 620, 621, 622, 597, 515, 0, 523,
	524, 0, 603, 610, 611, 574, 132, 143, 209, 624,
	270, 179, 327, 506, 518, 167, 529, 0, 0, 542,
	547, 548, 560, 562, 563, 564, 565, 573, 580, 581,
	583, 590, 591, 592, 594, 599, 607, 627, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 0, 216, 572,
	614, 602, 0, 0, 555, 617, 528, 545, 626, 546,
	549, 587, 512, 568, 243, 543, 0, 532, 508, 539,
	509, 530, 557, 171, 561, 527, 604, 571, 616, 207,
	0, 533, 255, 589, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 623, 210,
	578, 0, 296, 229, 0, 0, 0, 559, 606, 566,
	598, 554, 588, 517, 577, 618, 544, 585, 619, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 582, 613, 541, 584, 586, 629, 507, 579, 0,
	510, 513, 625, 609, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 558, 567, 595, 552, 0, 0, 0,
	0, 0, 0, 1111, 0, 534, 0, 576, 0, 0,
	0, 514, 511, 0, 0, 0, 0, 556, 0, 0,
	0, 516, 0, 535, 596, 0, 505, 183, 600, 608,
	553, 333, 612, 551, 550, 615, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	605, 531, 540, 162, 538, 276, 252, 322, 575, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 526,
	601, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 593, 628, 251, 277, 157, 324,
	295, 521, 525, 519, 520, 569, 570, 522, 620, 621,
	622, 597, 515, 0, 523, 524, 0, 603, 610, 611,
	574, 132, 143, 209, 624, 270, 179, 327, 506, 518,
	167, 529, 0, 0, 542, 547, 548, 560, 562, 563,
	564, 565, 573, 580, 581, 583, 590, 591, 592, 594,
	599, 607, 627, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 0, 216, 572, 614, 602, 0, 0, 555,
	617, 528, 545, 626, 546, 549, 587, 512, 568, 243,
	543, 0, 532, 508, 539, 509, 530, 557, 171, 561,
	527, 604, 571, 616, 207, 0, 533, 255, 589, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 623, 210, 578, 0, 296, 229, 0,
	0, 0, 559, 606, 566, 598, 554, 588, 517, 577,
	618, 544, 585, 619, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 582, 613, 541, 584,
	586, 629, 507, 579, 0, 510, 513, 625, 609, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 558, 567,
	595, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 576, 0, 0, 0, 514, 511, 0, 0,
	0, 0, 556, 0, 0, 0, 516, 0, 535, 596,
	0, 505, 183, 600, 608, 553, 333, 612, 551, 550,
	615, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 605, 531, 540, 162, 538,
	276, 252, 322, 575, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 526, 601, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 593,
	628, 251, 277, 157, 324, 295, 521, 525, 519, 520,
	569, 570, 522, 620, 621, 622, 597, 515, 0, 523,
	524, 0, 603, 610, 611, 574, 132, 143, 209, 624,
	270, 179, 327, 506, 518, 167, 529, 0, 0, 542,
	547, 548, 560, 562, 563, 564, 565, 573, 580, 581,
	583, 590, 591, 592, 594, 599, 607, 627, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 0, 216, 572,
	614, 602, 0, 0, 555, 617, 528, 545, 626, 546,
	549, 587, 512, 568, 243, 543, 0, 532, 508, 539,
	509, 530, 557, 171, 561, 527, 604, 571, 616, 207,
	0, 533, 255, 589, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 623, 210,
	578, 0, 296, 229, 0, 0, 0, 559, 606, 566,
	598, 554, 588, 517, 577, 618, 544, 585, 619, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 582, 613, 541, 584, 586, 629, 507, 579, 0,
	510, 513, 625, 609, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 558, 567, 595, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 576, 0, 0,
	0, 514, 511, 0, 0, 0, 0, 556, 0, 0,
	0, 516, 0, 535, 596, 0, 505, 183, 600, 608,
	553, 333, 612, 551, 550, 615, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	605, 531, 540, 162, 538, 276, 252, 322, 575, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 503, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 526,
	601, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 504, 502,
	497, 496, 204, 212, 593, 628, 251, 277, 157, 324,
	295, 521, 525, 519, 520, 569, 570, 522, 620, 621,
	622, 597, 515, 0, 523, 524, 0, 603, 610, 611,
	574, 132, 143, 209, 624, 270, 179, 327, 506, 518,
	167, 529, 0, 0, 542, 547, 548, 560, 562, 563,
	564, 565, 573, 580, 581, 583, 590, 591, 592, 594,
	599, 607, 627, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 0, 216, 572, 614, 602, 0, 0, 555,
	617, 528, 545, 626, 546, 549, 587, 512, 568, 243,
	543, 0, 532, 508, 539, 509, 530, 557, 171, 561,
	527, 604, 571, 616, 207, 0, 533, 255, 589, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 623, 210, 578, 0, 296, 229, 0,
	0, 0, 559, 606, 566, 598, 554, 588, 517, 577,
	618, 544, 585, 619, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 582, 613, 541, 584,
	586, 629, 507, 579, 0, 510, 513, 625, 609, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 558, 567,
	595, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 576, 0, 0, 0, 514, 511, 0, 0,
	0, 0, 556, 0, 0, 0, 516, 0, 535, 596,
	0, 505, 183, 600, 608, 553, 333, 612, 551, 550,
	615, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 605, 531, 540, 162, 538,
	276, 252, 322, 575, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	861, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 503, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 526, 601, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 504, 502, 497, 496, 204, 212, 593,
	628, 251, 277, 157, 324, 295, 521, 525, 519, 520,
	569, 570, 522, 620, 621, 622, 597, 515, 0, 523,
	524, 0, 603, 610, 611, 574, 132, 143, 209, 624,
	270, 179, 327, 506, 518, 167, 529, 0, 0, 542,
	547, 548, 560, 562, 563, 564, 565, 573, 580, 581,
	583, 590, 591, 592, 594, 599, 607, 627, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 0, 216, 572,
	614, 602, 0, 0, 555, 617, 528, 545, 626, 546,
	549, 587, 512, 568, 243, 543, 0, 532, 508, 539,
	509, 530, 557, 171, 561, 527, 604, 571, 616, 207,
	0, 533, 255, 589, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 623, 210,
	578, 0, 296, 229, 0, 0, 0, 559, 606, 566,
	598, 554, 588, 517, 577, 618, 544, 585, 619, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 582, 613, 541, 584, 586, 629, 507, 579, 0,
	510, 513, 625, 609, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 558, 567, 595, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 576, 0, 0,
	0, 514, 511, 0, 0, 0, 0, 556, 0, 0,
	0, 516, 0, 535, 596, 0, 505, 183, 600, 608,
	553, 333, 612, 551, 550, 615, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	605, 531, 540, 162, 538, 276, 252, 322, 575, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 494, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 503, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 526,
	601, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 504, 502,
	497, 496, 204, 212, 593, 628, 251, 277, 157, 324,
	295, 521, 525, 519, 520, 569, 570, 522, 620, 621,
	622, 597, 515, 0, 523, 524, 0, 603, 610, 611,
	574, 132, 143, 209, 624, 270, 179, 327, 506, 518,
	167, 529, 0, 0, 542, 547, 548, 560, 562, 563,
	564, 565, 573, 580, 581, 583, 590, 591, 592, 594,
	599, 607, 627, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 243, 216, 572, 1038, 0, 398, 0, 0,
	0, 171, 0, 397, 0, 0, 0, 207, 0, 1039,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 441, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 432, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 67, 0, 0, 119, 120, 121, 419,
	418, 421, 422, 423, 424, 0, 0, 155, 420, 425,
	426, 427, 0, 0, 0, 0, 395, 412, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 484, 0, 0, 0, 455, 0, 411, 0, 0,
	404, 405, 407, 406, 408, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 454, 0, 0, 333,
	0, 0, 452, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 442,
	453, 448, 449, 446, 447, 0, 445, 444, 443, 456,
	434, 435, 436, 437, 439, 0, 450, 451, 438, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	243, 216, 0, 0, 0, 398, 0, 0, 0, 171,
	0, 397, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 441, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 432, 433, 0, 0, 0,
	0, 0, 0, 1150, 0, 198, 159, 136, 240, 297,
	178, 67, 0, 0, 119, 120, 121, 419, 418, 421,
	422, 423, 424, 0, 0, 155, 420, 425, 426, 427,
	1151, 0, 0, 0, 395, 412, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 0, 455, 0, 411, 0, 0, 404, 405,
	407, 406, 408, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 454, 0, 0, 333, 0, 0,
	452, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 442, 453, 448,
	449, 446, 447, 0, 445, 444, 443, 456, 434, 435,
	436, 437, 439, 0, 450, 451, 438, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 243, 216,
	0, 0, 0, 398, 0, 0, 0, 171, 0, 397,
	0, 0, 0, 207, 0, 0, 255, 0, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 441, 210, 0, 0, 296, 229, 0, 0,
	0, 0, 0, 432, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 159, 136, 240, 297, 178, 67,
	0, 472, 119, 120, 121, 419, 418, 421, 422, 423,
	424, 0, 0, 155, 420, 425, 426, 427, 0, 0,
	0, 0, 395, 412, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	0, 455, 0, 411, 0, 0, 404, 405, 407, 406,
	408, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 454, 0, 0, 333, 0, 0, 452, 0,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 0, 0, 0, 162, 0, 276,
	252, 322, 0, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 0, 0, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 0, 0,
	251, 277, 157, 324, 295, 442, 453, 448, 449, 446,
	447, 0, 445, 444, 443, 456, 434, 435, 436, 437,
	439, 0, 450, 451, 438, 132, 143, 209, 0, 270,
	179, 327, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 243, 216, 0, 0,
	0, 398, 0, 0, 0, 171, 0, 397, 0, 0,
	0, 207, 0, 0, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	441, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 432, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 67, 0, 0,
	119, 120, 121, 419, 418, 421, 422, 423, 424, 0,
	0, 155, 420, 425, 426, 427, 0, 0, 0, 0,
	395, 412, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 484, 0, 0, 0, 455,
	0, 411, 0, 0, 404, 405, 407, 406, 408, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	454, 0, 0, 333, 0, 0, 452, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 442, 453, 448, 449, 446, 447, 0,
	445, 444, 443, 456, 434, 435, 436, 437, 439, 0,
	450, 451, 438, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 243, 216, 0, 0, 0, 398,
	0, 0, 0, 171, 0, 397, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 441, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 432,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	159, 136, 240, 297, 178, 67, 0, 0, 119, 120,
	121, 419, 1056, 421, 422, 423, 424, 0, 0, 155,
	420, 425, 426, 427, 0, 0, 0, 0, 395, 412,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 484, 0, 0, 0, 455, 0, 411,
	0, 0, 404, 405, 407, 406, 408, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 454, 0,
	0, 333, 0, 0, 452, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 442, 453, 448, 449, 446, 447, 0, 445, 444,
	443, 456, 434, 435, 436, 437, 439, 0, 450, 451,
	438, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 243, 216, 0, 0, 0, 398, 0, 0,
	0, 171, 0, 397, 0, 0, 0, 207, 0, 0,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 441, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 432, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 67, 0, 0, 119, 120, 121, 419,
	1053, 421, 422, 423, 424, 0, 0, 155, 420, 425,
	426, 427, 0, 0, 0, 0, 395, 412, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 484, 0, 0, 0, 455, 0, 411, 0, 0,
	404, 405, 407, 406, 408, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 454, 0, 0, 333,
	0, 0, 452, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 442,
	453, 448, 449, 446, 447, 0, 445, 444, 443, 456,
	434, 435, 436, 437, 439, 0, 450, 451, 438, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	465, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 398, 0,
	0, 0, 171, 0, 397, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 441, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 432, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 67, 0, 0, 119, 120, 121,
	419, 418, 421, 422, 423, 424, 0, 0, 155, 420,
	425, 426, 427, 0, 0, 0, 0, 395, 412, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 0, 0, 0, 0, 455, 0, 411, 0,
	0, 404, 405, 407, 406, 408, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 454, 0, 0,
	333, 0, 0, 452, 0, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	442, 453, 448, 449, 446, 447, 0, 445, 444, 443,
	456, 434, 435, 436, 437, 439, 0, 450, 451, 438,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 0, 398, 0, 0, 0,
	171, 0, 397, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 441, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 67, 0, 0, 119, 120, 121, 419, 418,
	421, 422, 423, 424, 0, 0, 155, 420, 425, 426,
	427, 0, 0, 0, 0, 395, 412, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 0, 455, 0, 411, 0, 0, 404,
	405, 407, 406, 408, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 454, 0, 0, 333, 0,
	0, 452, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 442, 453,
	448, 449, 446, 447, 0, 445, 444, 443, 456, 434,
	435, 436, 437, 439, 0, 450, 451, 438, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 441, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 432, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	67, 0, 472, 119, 120, 121, 419, 418, 421, 422,
	423, 424, 0, 0, 155, 420, 425, 426, 427, 0,
	0, 0, 0, 0, 412, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 404, 405, 407,
	406, 408, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 454, 0, 0, 333, 0, 0, 452,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 442, 453, 448, 449,
	446, 447, 0, 445, 444, 443, 456, 434, 435, 436,
	437, 439, 0, 450, 451, 438, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 243, 216, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 441, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 432, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 67, 0,
	0, 119, 120, 121, 419, 418, 421, 422, 423, 424,
	0, 0, 155, 420, 425, 426, 427, 0, 0, 0,
	0, 0, 412, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 0,
	455, 0, 411, 0, 0, 404, 405, 407, 406, 408,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 454, 0, 0, 333, 0, 0, 452, 0, 267,
	0, 301, 187, 206, 150, 203, 133, 145, 0, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 256, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 442, 453, 448, 449, 446, 447,
	0, 445, 444, 443, 456, 434, 435, 436, 437, 439,
	0, 450, 451, 438, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 0, 0, 0, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 738,
	748, 749, 741, 742, 743, 744, 745, 746, 747, 740,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 333, 0, 0, 0, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 243, 216, 0, 0, 839, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 0, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 841, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 728, 729, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	333, 0, 0, 0, 0, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 0, 0, 0, 0, 0,
	171, 1175, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 0, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 0, 0, 0, 119, 120, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 1174, 333, 0,
	0, 0, 1170, 1167, 0, 1168, 1169, 206, 637, 203,
	133, 145, 1165, 1172, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 33,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 207, 0, 0,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 0, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 67, 0, 472, 119, 120, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 333,
	0, 0, 0, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	243, 216, 0, 0, 1085, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 0, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 159, 136, 240, 297,
	178, 0, 0, 0, 119, 120, 121, 0, 1087, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 333, 0, 0,
	0, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 33, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 0, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 67, 0, 0, 119, 120, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 333, 0,
	0, 0, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 0, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 1103, 0,
	0, 1104, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 333, 0, 0, 0,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 243, 216, 0,
	0, 1085, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 0, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 0, 0,
	0, 119, 120, 121, 0, 1087, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 333, 0, 0, 0, 0, 267,
	0, 301, 187, 206, 150, 203, 133, 145, 0, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 1083, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 872, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 0, 0, 0, 119,
	120, 121, 0, 871, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 333, 0, 0, 0, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 243, 216, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 0, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	333, 0, 0, 0, 0, 267, 0, 301, 187, 206,
	637, 203, 133, 145, 635, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 0, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 0, 0, 472, 119, 120, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 333, 0,
	0, 0, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 0, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	67, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 333, 0, 0, 0,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 243, 216, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 0, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 0, 0,
	0, 119, 120, 121, 0, 1087, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 333, 0, 0, 0, 0, 267,
	0, 301, 187, 206, 150, 203, 133, 145, 0, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 256, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 0, 0, 0, 119,
	120, 121, 0, 841, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 333, 0, 0, 0, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 854, 216, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 0, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 159, 136, 240, 297,
	178, 0, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 333, 0, 0,
	0, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 243, 216,
	0, 0, 0, 0, 0, 0, 845, 171, 0, 0,
	0, 0, 0, 207, 0, 0, 255, 0, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 0, 210, 0, 0, 296, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 333, 0, 0, 0, 0,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 0, 0, 0, 162, 0, 276,
	252, 322, 0, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 0, 0, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 0, 0,
	251, 277, 157, 324, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 143, 209, 0, 270,
	179, 327, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 243, 216, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 207, 0, 0, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	0, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 0, 0, 0,
	119, 120, 121, 0, 719, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 333, 0, 0, 0, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 243, 216, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 0, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 183, 0, 0,
	0, 333, 0, 0, 0, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 387,
	320, 337, 243, 216, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 207, 0, 0,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 0, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 0, 0, 0, 119, 120, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 127, 0, 333,
	0, 0, 0, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	243, 216, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 0, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 159, 136, 240, 297,
	178, 0, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 333, 0, 0,
	0, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 0, 216,
}

var yyPact = [...]int{
	2717, -1000, -306, 1209, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1154, 887, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	349, 888, 86, 1097, 902, 3, 608, 200, 40, 18833,
	199, 46, 19221, -1000, 43, -1000, 33, 19221, 39, 18445,
	-1000, -1000, -1000, 10652, 1065, -33, -39, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 889, 1141, 1146, 1166, 659,
	1022, -1000, 9087, 9087, 154, 154, 154, 7535, -1000, -1000,
	15334, 19221, 19221, 903, 149, 197, 149, -159, -1000, -1000,
	-1000, -1000, -1000, -1000, 1097, -1000, -1000, 106, -1000, -1000,
	826, -1000, -1000, 19221, -1000, 19221, 277, 1097, 89, -1000,
	-1000, -1000, 19221, 147, 608, 147, 147, 19221, -1000, 239,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19221, 1084, 413, 413,
	413, 413, 413, 413, 8, -1000, 4, 85, 83, 81,
	-49, 608, 184, -1000, 269, -1000, 77, 19, -1000, 413,
	5105, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 176,
	-1000, -1000, -1000, -1000, 19221, 18057, 152, 352, -1000, -1000,
	-1000, -1000, 652, 383, -1000, 10652, 1773, 835, 835, -1000,
	-1000, 213, -1000, -1000, 11428, 11428, 11428, 11428, 11428, 11428,
	11428, 11428, 11428, 11428, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 835, 238,
	-1000, 10264, 835, 835, 835, 835, 835, 835, 835, 835,
	10652, 835, 835, 835, 835, 835, 835, 835, 835, 835,
	835, 835, 835, 835, 835, 835, 835, -1000, -1000, -1000,
	19221, -1000, 1154, -1000, 887, -1000, -1000, -1000, 1086, 10652,
	10652, 1154, -1000, 963, 9087, -1000, -1000, 1009, -1000, -1000,
	-1000, -1000, 400, 1188, -1000, 12204, 237, 1187, 17669, -1000,
	16110, 17281, 816, 7130, -80, -1000, -1000, -1000, 351, 14946,
	-1000, -1000, -1000, 1083, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	796, 19221, -1000, -1000, 3021, 608, -1000, 856, -1000, 776,
	-1000, 847, 67, 329, 19221, 375, 608, 608, -1000, -1000,
	-1000, 1082, 316, 902, -1000, 5105, 100, 139, 123, 19221,
	1097, 1060, 811, 160, 19221, 1126, 932, 19221, 608, -1000,
	6320, -1000, 413, -1000, 559, 10652, -1000, -1000, -1000, -1000,
	-1000, 413, 19221, 413, 19221, 413, 413, 413, 413, 388,
	406, 388, -1000, -1000, -1000, -1000, 5105, 5105, 19221, 5105,
	5105, 19221, 5105, 5105, 406, -1000, -1000, -1000, 290, -1000,
	931, -1000, -1000, -1000, -1000, 38, -1000, -1000, -1000, -1000,
	-1000, 1209, -1000, -1000, -1000, -150, 10652, 10652, 10652, 10652,
	541, 292, 11428, 508, 350, 11428, 11428, 11428, 11428, 11428,
	11428, 11428, 11428, 11428, 11428, 11428, 11428, 11428, 11428, 11428,
	597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 608,
	-1000, 1206, 814, 814, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 11816, 7923, 6320, 659, 761, 1154, 9087,
	9087, 10652, 10652, 9863, 9475, 9087, 1090, 357, 383, 19221,
	-1000, -1000, 11040, -1000, -1000, -1000, -1000, -1000, 568, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19221, 19221, 9087, 9087,
	9087, 9087, 9087, -1000, 805, -1000, -183, 14558, 1146, 659,
	1009, 1119, 1201, 282, 576, 804, -1000, 572, 1146, 14170,
	754, -1000, 1009, -1000, -1000, -1000, 19221, -1000, -1000, 16886,
	-1000, -1000, 5915, 19221, 107, 19221, -1000, 771, 1029, -1000,
	-1000, -1000, 1131, 13782, 19221, 844, 833, -1000, -1000, 233,
	6725, -80, -1000, 6725, 784, -1000, -97, -126, 8311, 258,
	-1000, -1000, -1000, -1000, 4295, 12592, 631, 392, -25, -1000,
	-1000, -1000, 847, -1000, 847, 847, 847, 847, 9, 9,
	9, 9, -1000, -1000, -1000, -1000, -1000, 878, 870, -1000,
	847, 847, 847, 847, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 858, 858, 858, 848, 848, 138, 10652, 60, 19221,
	1135, 437, 63, 323, 70, -1000, 1124, 913, -1000, 316,
	787, -1000, -1000, -1000, 19221, 19221, 19221, 19221, 19221, 208,
	95, 19221, 19221, 801, -1000, 19221, 5105, -1000, -1000, -1000,
	-1000, -1000, -1000, 383, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 413, 19221, 19221, 19221, -1000, -1000, 413, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19221, -1000, 554,
	19221, 19221, -1000, -1000, -1000, -1000, -1000, 383, 292, 481,
	355, -1000, -1000, 556, -1000, -1000, 1896, -1000, -1000, -1000,
	-1000, 508, 11428, 11428, 11428, 390, 1896, 1969, 493, 696,
	262, 284, 284, 251, 251, 251, 251, 251, 409, 409,
	-1000, -1000, -1000, 568, -1000, -1000, -1000, 568, 9087, 9087,
	800, 835, 232, -1000, 889, -1000, -1000, 1146, 733, 733,
	561, 628, 362, 1186, 733, 353, 1181, 733, 733, 9087,
	-1000, -1000, 368, -1000, 10652, 568, -1000, 227, -1000, 320,
	798, 788, 733, 568, 568, 733, 733, 19221, -1000, -299,
	-1000, -140, 264, 835, -1000, 16498, -1000, -1000, 1086, -1000,
	-1000, 1061, -1000, 1003, 10652, 10652, 10652, -1000, -1000, -1000,
	1086, 1153, -1000, 1011, 1010, 1179, 9087, 16110, 1009, -1000,
	-1000, -1000, 225, 1179, 860, 835, -1000, 19221, 16110, 16110,
	16110, 16110, 16110, -1000, 954, 950, -1000, 966, 943, 987,
	19221, -1000, 752, 659, 13782, 107, 672, 16110, 19221, -1000,
	-1000, 16110, 19221, 5510, -1000, 784, -80, -91, -1000, -1000,
	-1000, -1000, 383, -1000, 766, 758, 3890, -1000, -1000, -1000,
	-1000, 132, -1000, -1000, 857, 608, -1000, 1111, 310, 310,
	312, 608, 1108, -1000, -1000, -1000, -1000, 1087, -1000, 386,
	-27, -1000, -1000, 9, 9, -1000, -1000, 258, 1080, 258,
	258, 258, 553, 553, -1000, -1000, -1000, -1000, -1000, 436,
	-1000, -1000, -1000, 422, -1000, -1000, 856, 614, 961, 60,
	-1000, -1000, 316, 548, 1064, 19221, -1000, -1000, 627, 180,
	54, 102, -1000, -1000, -1000, -1000, 930, -1000, 671, -1000,
	-1000, 907, -1000, -1000, -1000, -1000, 47, 99, 93, 159,
	-1000, 5105, -1000, -1000, -1000, -1000, 388, -1000, 388, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 390, 1896, 1929, -1000,
	11428, 11428, -1000, -1000, 733, 733, 9087, 6320, 1154, 1086,
	-1000, -1000, 117, 597, 117, 11428, 11428, -1000, 11428, 11428,
	-1000, -172, 694, 321, -1000, 10652, 587, -1000, 6320, -1000,
	11428, 11428, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 196, 190, 188, 19221, -1000, -1000, 528, 540, 1001,
	383, 383, -1000, -1000, 19221, -1000, -1000, -1000, -1000, 1176,
	10652, -1000, 688, -1000, 4700, 1146, 928, 19221, 835, 1209,
	12993, 19221, 818, -1000, 319, 1029, 910, 927, 1168, -1000,
	-1000, -1000, -1000, 947, -1000, 946, -1000, -1000, -1000, -1000,
	-1000, 659, 1179, 16110, 725, -1000, 725, -1000, 223, -1000,
	-1000, -1000, -102, -145, -1000, -1000, -1000, 4295, -1000, 4295,
	-1000, 19221, 130, -1000, 608, 608, 608, -1000, -1000, -1000,
	854, 926, 11428, -1000, -1000, -1000, 258, 258, -1000, 322,
	-1000, -1000, -1000, 731, -1000, 728, 669, 723, 15, -1000,
	901, 1077, 316, 316, -1000, 420, -1000, 608, -1000, -1000,
	19221, 64, -1000, 852, 544, -1000, 19221, -1000, -1000, -176,
	608, 19221, 19221, 19221, -1000, 19221, -1000, 413, 413, -1000,
	11428, 1896, 1896, -1000, -1000, 568, -1000, 1146, -1000, 568,
	847, 847, -1000, 847, 848, -1000, 847, 26, 847, 23,
	568, 568, 1846, 1710, 1156, 655, 835, -166, -1000, 383,
	10652, -1000, 480, 448, 835, 835, 835, 715, -1000, 509,
	9, -1000, -1000, -1000, 1169, 1165, 383, -1000, -1000, -1000,
	1088, 691, 650, -1000, -1000, 8699, 717, 1008, 218, 715,
	1154, 19221, 10652, -1000, -1000, 10652, 842, -1000, 10652, -1000,
	-1000, -1000, 1154, 1154, 725, -1000, -1000, 271, -1000, -1000,
	-1000, 3890, -1000, 711, -1000, 1108, -1000, -1000, -1000, 19221,
	-20, 1193, 1896, -1000, -1000, -1000, -1000, 9, 507, 9,
	417, -1000, 415, -1000, -1000, -235, -1000, -1000, 894, 960,
	-1000, -1000, 839, -1000, -1000, -1000, 604, -1000, -1000, -1000,
	6320, -1000, -1000, 836, 912, -1000, -1000, -1000, -1000, 1896,
	-1000, 1086, -1000, -1000, 175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11428, 11428, 11428, 11428, 11428, 1146, 498,
	383, 11428, 11428, 15722, 19221, 19221, 13381, 19221, 9, -41,
	-1000, 10652, 10652, 1107, -1000, 835, -1000, 841, 19221, 835,
	19221, -1000, 1146, -1000, 383, 383, 19221, 383, 1146, -1000,
	60, 708, -1000, 278, -1000, -85, 258, -1000, 258, 588,
	573, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1129,
	19221, -1000, 667, -1000, 308, 19221, 19221, -1000, -1000, -1000,
	320, 320, 320, 320, 48, 568, -1000, 320, 320, 662,
	-1000, 662, 662, 264, -1000, -293, -1000, 1054, 1044, 383,
	652, 1192, -1000, 835, 1209, 217, 650, -1000, -1000, 636,
	-1000, -1000, 119, 19221, 396, 1103, -1000, 1101, -1000, -1000,
	-1000, -1000, -1000, 887, 626, 6320, 4295, 585, -1000, -1000,
	-1000, -1000, -1000, 568, 76, -188, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -41, 194, -1000, 1025, 1014, 1163, 19221,
	650, 19221, -1000, 19221, -1000, -1000, 472, -1000, -1000, 122,
	-1000, -1000, -1000, 907, -1000, 995, -182, -199, 1028, 1031,
	1031, 1044, 1161, 1040, 1035, -1000, 457, 562, -1000, 832,
	-1000, -1000, -90, -176, -1000, 974, -1000, 1023, 492, -1000,
	-1000, -1000, -1000, 446, -1000, 1152, 1151, -1000, 19221, 133,
	-1000, -1000, -1000, -184, -1000, 490, -1000, -1000, -1000, 444,
	441, 577, 65, -194, -1000, -1000, -1000, -1000, 925, -1000,
	-200, 922, -1000, 1185, -1000, -1000, 1191, 263, 263, -1000,
	-1000, -1000, 129, 450, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1492, 1489, 14, 79, 80, 1487, 1486, 1484, 1483,
	117, 115, 112, 1482, 1480, 1479, 1478, 1477, 1475, 1472,
	1470, 1469, 1468, 1465, 1464, 98, 1463, 1462, 1461, 1460,
	1459, 101, 100, 472, 1458, 1456, 1455, 1454, 1453, 1452,
	1451, 1450, 1449, 1448, 1447, 1444, 1443, 1442, 102, 1440,
	1439, 1438, 1437, 1436, 1431, 1430, 1429, 1428, 1427, 1425,
	90, 1420, 51, 262, 49, 68, 1419, 65, 1418, 1416,
	1406, 1402, 1401, 160, 1400, 39, 69, 66, 1399, 35,
	1398, 1395, 84, 1394, 1391, 64, 1387, 1386, 74, 1385,
	62, 73, 9, 27, 1381, 1379, 1371, 1369, 99, 2441,
	1366, 1363, 23, 1361, 1358, 110, 1357, 78, 17, 18,
	13, 20, 1356, 77, 1355, 10, 1353, 71, 1352, 1351,
	1350, 1349, 24, 1348, 70, 82, 19, 1347, 8, 12,
	1346, 1344, 1343, 1341, 1340, 1337, 4, 1336, 1335, 1333,
	1328, 44, 1327, 7, 1326, 61, 46, 26, 11, 1324,
	1323, 25, 94, 63, 89, 1321, 1320, 1318, 649, 1317,
	48, 1313, 113, 1312, 38, 1310, 460, 496, 1306, 1304,
	1304, 1304, 1304, 41, 873, 1383, 120, 95, 1303, 1300,
	1990, 40, 72, 21, 1299, 1298, 1296, 105, 67, 45,
	633, 36, 1294, 1291, 1290, 1276, 1275, 1273, 1272, 153,
	1271, 1270, 1269, 212, 16, 83, 28, 1267, 1266, 1265,
	1263, 55, 86, 1262, 1261, 59, 57, 1260, 96, 37,
	30, 1254, 1253, 1252, 1251, 42, 22, 1250, 85, 43,
	54, 33, 31, 76, 1248, 29, 1247, 1246, 34, 32,
	1246, 1246, 1246, 6, 1245, 3, 0, 1239, 5, 1238,
	1238, 1110, 1, 1235, 2, 1224, 1223, 75, 1222, 1219,
	1218, 1217, 1965, 880, 87, 1215, 103,
}

var yyR1 = [...]int{
	0, 260, 261, 261, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 246, 246, 246, 249, 249, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	264, 264, 82, 82, 83, 83, 145, 145, 13, 14,
	14, 154, 154, 153, 153, 153, 155, 155, 155, 155,
	190, 190, 15, 15, 15, 15, 15, 61, 61, 248,
	248, 247, 245, 245, 244, 244, 243, 23, 24, 28,
	29, 30, 251, 251, 221, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 223, 223, 222,
	222, 222, 222, 222, 222, 212, 192, 192, 192, 192,
	195, 195, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 194, 194, 194, 194, 194, 196, 196, 196, 196,
	196, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 198, 198, 198, 198,
	198, 198, 198, 198, 211, 211, 199, 199, 205, 205,
	206, 206, 206, 208, 208, 209, 209, 168, 168, 168,
	201, 201, 202, 202, 207, 207, 203, 203, 203, 204,
	204, 204, 210, 210, 210, 210, 210, 200, 200, 213,
	235, 235, 234, 234, 230, 230, 230, 230, 220, 220,
	227, 227, 227, 227, 227, 227, 217, 217, 217, 218,
	218, 216, 216, 219, 219, 229, 229, 228, 214, 214,
	215, 215, 238, 238, 238, 238, 238, 239, 253, 254,
	252, 252, 252, 252, 252, 169, 169, 169, 224, 224,
	224, 225, 225, 225, 226, 226, 226, 27, 27, 26,
	26, 25, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 242, 240,
	240, 241, 241, 17, 22, 22, 18, 18, 18, 18,
	19, 19, 36, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	161, 161, 255, 255, 163, 163, 159, 159, 162, 162,
	160, 160, 160, 164, 164, 164, 165, 165, 259, 259,
	259, 38, 38, 40, 40, 41, 42, 42, 185, 185,
	186, 186, 43, 44, 53, 53, 53, 53, 53, 53,
	55, 55, 55, 7, 7, 7, 7, 50, 50, 50,
	6, 6, 39, 39, 46, 256, 256, 257, 258, 258,
	258, 258, 47, 20, 265, 48, 49, 49, 60, 60,
	60, 56, 56, 56, 59, 59, 59, 64, 64, 66,
	66, 66, 66, 66, 67, 67, 67, 67, 67, 67,
	63, 63, 65, 65, 65, 65, 178, 178, 178, 177,
	177, 74, 74, 75, 75, 76, 76, 77, 77, 77,
	114, 91, 91, 144, 144, 143, 143, 146, 146, 78,
	78, 78, 78, 79, 79, 80, 80, 81, 81, 184,
	184, 183, 183, 183, 182, 182, 84, 84, 84, 86,
	85, 85, 85, 85, 87, 87, 89, 89, 88, 88,
	90, 92, 92, 92, 92, 92, 93, 93, 73, 73,
	73, 73, 73, 73, 73, 73, 157, 157, 95, 95,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	106, 106, 106, 106, 106, 106, 96, 96, 96, 96,
	96, 96, 96, 62, 62, 107, 107, 107, 113, 108,
	108, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 103, 103, 103, 103, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 266, 266,
	105, 104, 104, 104, 104, 104, 104, 104, 58, 58,
	58, 58, 58, 189, 189, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 118, 118,
	57, 57, 116, 116, 117, 119, 119, 115, 115, 115,
	98, 98, 98, 98, 98, 98, 98, 98, 100, 100,
	100, 120, 120, 121, 121, 122, 122, 123, 123, 124,
	125, 125, 125, 126, 126, 126, 126, 236, 236, 236,
	236, 236, 231, 231, 231, 231, 232, 232, 232, 68,
	68, 68, 68, 70, 70, 69, 69, 51, 51, 52,
	52, 52, 71, 71, 72, 72, 72, 72, 141, 141,
	141, 127, 127, 127, 127, 132, 132, 132, 128, 128,
	130, 130, 130, 131, 131, 131, 129, 135, 135, 137,
	137, 136, 136, 134, 134, 139, 139, 138, 138, 133,
	133, 97, 97, 97, 97, 97, 142, 142, 142, 142,
	147, 147, 109, 109, 111, 111, 110, 112, 148, 148,
	151, 149, 149, 152, 152, 152, 152, 152, 150, 150,
	150, 179, 179, 179, 156, 156, 166, 166, 167, 167,
	158, 158, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 171, 171, 171, 172, 172, 140, 140, 140,
	140, 237, 237, 233, 175, 175, 176, 176, 180, 180,
	181, 181, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 262, 263, 187, 188, 188, 188,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	1, 3, 4, 3, 3, 8, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 1, 2,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 0,
	2, 2, 0, 2, 1, 2, 1, 0, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	2, 3, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 3, 1,
	3, 1, 10, 11, 11, 12, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 1, 1,
	3, 1, 2, 4, 3, 6, 7, 5, 5, 5,
	12, 7, 5, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	3, 8, 8, 3, 3, 5, 4, 6, 5, 4,
	3, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	4, 2, 4, 4, 4, 4, 4, 5, 7, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 7,
	2, 4, 5, 4, 3, 3, 5, 2, 3, 3,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 5, 4, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 5, 6, 4,
	4, 6, 6, 6, 8, 8, 8, 8, 9, 8,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 4, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -260, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -262, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 146, -29, -24, 147, -30, 149, 148, 182,
	150, 175, 70, 208, 209, 211, 212, 213, 214, -55,
	180, 181, 152, 35, 41, 32, 33, 80, 9, 306,
	177, 176, 26, -261, 410, -60, 5, -122, 16, -3,
	-48, -265, -48, -48, -48, -48, -48, -48, -221, -223,
	80, 119, 80, -61, 154, -140, -251, 100, 160, 163,
	164, 297, 153, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 76, 154, -251, 156, 268, -249, -246, 83,
	84, 85, 154, 154, 155, 156, -251, 154, -88, -180,
	-246, -174, 316, 168, 348, 349, 76, 258, 208, 222,
	216, 243, 235, 317, 350, 169, 198, 233, 236, 284,
	166, 351, 280, 263, 271, 94, 211, 293, 352, 75,
	47, 40, 178, 231, 227, 199, 353, 325, 192, 225,
	46, 28, 45, 354, 273, 248, 44, 355, 79, 321,
	275, 226, 272, 152, 356, 171, 404, 164, 282, 357,
	249, 253, 358, 285, 48, 359, 360, 361, 74, 220,
	221, 362, 206, 167, 287, 247, 165, 34, 276, 318,
	54, 186, 288, 42, 251, 41, 408, 363, 246, 242,
	49, 364, 365, 366, 367, 245, 219, 241, 204, 58,
	255, 254, 256, 193, 283, 238, 368, 369, 370, 172,
	77, 371, 228, 19, 372, 373, 200, 374, 52, 375,
	376, 291, 181, 377, 50, 37, 184, 378, 379, 380,
	381, 382, 281, 383, 274, 250, 252, 161, 188, 270,
	320, 384, 224, 385, 173, 185, 180, 292, 174, 386,
	387, 388, 389, 390, 391, 392, 212, 39, 393, 394,
	395, 396, 207, 203, 286, 295, 57, 78, 260, 397,
	218, 163, 201, 398, 209, 51, 195, 266, 205, 43,
	239, 187, 399, 400, 229, 230, 244, 217, 240, 210,
	405, 189, 182, 401, 294, 202, 261, 322, 194, 237,
	234, 196, 402, 156, 190, 191, 403, 406, 277, 267,
	278, 279, 268, 197, 232, 262, 154, 236, 284, 263,
	264, 265, 276, 277, 282, 281, 188, -259, 285, 154,
	-159, 137, 146, 273, -163, 274, 267, 268, 197, -255,
	-246, 286, 408, 269, 275, 279, 278, -180, 210, -185,
	215, -175, -246, -174, 213, -88, -53, 404, 150, -187,
	-187, -187, -108, -73, -94, 103, -99, 30, 24, -98,
	-95, -115, -112, -113, 137, 138, 140, 139, 141, 126,
	127, 134, 104, 142, -103, -101, -102, -104, 87, 86,
	95, 88, 89, 90, 91, 96, 97, 98, -175, -180,
	-110, -262, 64, 65, 307, 308, 309, 310, 315, 311,
	106, 53, 296, 305, 304, 303, 300, 301, 298, 299,
	313, 314, 159, 297, 153, 132, 306, -246, -174, 40,
	266, 266, -5, -4, -262, 6, 21, 22, -126, 18,
	17, -263, 82, -56, -66, 59, 60, -67, 22, 36,
	63, 61, -49, -65, 128, -73, -180, -65, -158, 158,
	-158, -158, -149, -190, 210, -152, 286, 285, -176, -150,
	-175, -173, 284, 236, 283, 151, 323, 102, 23, 25,
	105, 137, 17, 106, 136, 307, 146, 68, 324, 298,
	299, 296, 302, 309, 310, 297, 264, 30, 11, 326,
	26, 176, 22, 36, 130, 148, 109, 110, 179, 24,
	177, 98, 329, 20, 71, 12, 14, 330, 331, 15,
	159, 158, 121, 155, 66, 9, 142, 27, 118, 62,
	332, 29, 333, 334, 335, 336, 64, 119, 18, 300,
	301, 32, 409, 337, 315, 183, 132, 69, 55, 103,
	338, 339, 96, 340, 99, 72, 100, 16, 67, 38,
	341, 342, 343, 289, 344, 120, 149, 306, 65, 345,
	153, 265, 6, 312, 31, 175, 63, 346, 154, 108,
	313, 314, 157, 97, 5, 160, 33, 10, 70, 73,
	303, 304, 305, 53, 319, 107, 13, 347, 290, 101,
	-222, 119, -212, -215, -175, 170, -239, 166, -88, -229,
	-228, -175, -68, 76, -167, 159, 155, -167, 306, -31,
	-32, 236, 136, 81, -88, -88, 146, 148, 151, 72,
	-33, 194, -22, -88, -166, 159, -246, -166, -166, -88,
	143, -88, 31, -164, 119, 13, -164, -164, -164, -164,
	-164, 195, 280, 195, 280, 195, 196, 195, 196, 195,
	-162, -161, 271, 272, 266, 270, -246, 297, 282, -246,
	188, 154, 189, 156, -217, 155, 34, 167, 196, 266,
	191, -164, -188, -262, -176, 157, -175, -50, -175, 87,
	-7, -3, -11, -10, -12, 111, 81, 102, 100, 101,
	118, -73, -96, 121, 103, 119, 120, 105, 123, 122,
	133, 126, 127, 128, 129, 130, 131, 132, 124, 125,
	136, 111, 112, 113, 114, 115, 116, 117, -157, -262,
	-113, -262, 144, 145, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -262, 143, -2, -108, -4, -262,
	-262, -262, -262, -262, -262, -262, -262, -118, -73, -262,
	-266, -105, -262, -266, -105, -266, -105, -266, -262, -266,
	-105, -266, -105, -266, -266, -105, -262, -262, -262, -262,
	-262, -262, -262, -187, -256, -257, -91, -88, -122, -3,
	-48, -141, 20, 32, -73, -123, -124, -73, -122, 55,
	-63, -65, -67, 59, 60, 93, 12, -178, -177, 23,
	-175, 87, 143, 12, -89, 27, -88, -75, -76, -77,
	-78, -91, -114, -262, 12, -82, -83, -88, -90, -180,
	81, 210, -152, -190, -154, -153, 287, 289, 111, -179,
	-175, 87, 30, 31, 82, 81, -88, -192, -195, -197,
	-196, -198, -193, -194, 233, 234, 137, 237, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 31, 178,
	229, 230, 231, 232, 249, 250, 251, 252, 253, 254,
	255, 256, 216, 235, 317, 217, 218, 219, 220, 221,
	222, 224, 225, 226, 227, 228, -246, 80, 82, 81,
	-199, 80, -71, 199, 111, -88, 103, -246, -246, 31,
	-220, 111, -25, -188, 190, 190, 154, 154, 203, -88,
	40, 81, 157, -82, 24, 72, -88, -246, -181, -180,
	-173, -164, 87, -73, -164, -88, -164, -88, -164, -164,
	-164, -164, -160, 12, 121, -218, 12, 121, -160, -188,
	-188, -88, -188, -188, -88, -188, -188, -218, -165, 119,
	72, -186, 213, 247, 405, 406, 407, -73, -73, -73,
	-73, -106, 96, 103, 97, 98, -99, -107, -110, -113,
	92, 121, 119, 120, 105, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-189, -246, 87, -246, -98, -98, -175, -64, 22, 36,
	-63, -176, -181, -173, -60, -263, -263, -122, -63, -63,
	-73, -73, -115, 87, -63, -115, 87, -63, -63, -59,
	22, 36, -116, -117, 107, -115, -175, -180, -263, -99,
	-175, -175, -63, -64, -64, -63, -63, 81, -258, 289,
	290, 409, -183, 184, -182, 23, -180, 87, -126, -263,
	-127, 27, 10, 121, 81, 19, 81, -125, 25, 26,
	-126, -100, -175, 88, 91, -74, 81, 12, -67, -88,
	-177, 128, -181, -88, -145, 184, -88, 31, 81, -84,
	-86, -85, -87, 62, 66, 68, 63, 64, 65, 69,
	-184, 23, -75, -3, -262, -88, -82, -264, 81, 12,
	73, -264, 81, 143, -152, -154, 81, 288, 290, 291,
	72, 99, -73, -204, 136, -224, -225, -226, -176, 87,
	88, -212, -213, -214, -227, 170, -238, 161, 163, 164,
	160, -216, 171, -239, 155, 29, 82, -168, 96, 103,
	-208, 261, -199, -199, -199, -199, -199, -203, 236, -203,
	-203, -203, 80, 80, -199, -199, -199, -199, -205, 80,
	-205, -205, -206, 80, -206, -239, 166, -73, -235, -234,
	-230, -233, 165, 94, 319, 73, -228, -125, 88, -70,
	201, 111, 202, 204, 205, 24, -237, -233, -220, -246,
	87, -88, -88, -88, -88, -88, 151, 148, 192, -88,
	-88, -88, -188, -164, -180, -180, -88, -164, -88, 87,
	-88, -175, 96, 97, 98, -107, -99, -99, -99, -62,
	179, 102, -263, -263, -63, -63, -262, 143, -5, -126,
	-263, -263, 81, 73, 23, 12, 12, -263, 12, 12,
	-263, -263, -63, -119, -117, 109, -73, -263, 143, -263,
	81, 81, -263, -263, -263, -263, -263, -257, 408, 290,
	-92, 70, 158, 71, -262, -182, -141, 38, 46, 57,
	-73, -73, -124, -141, -156, 20, 12, 53, 53, -93,
	13, -65, -75, -67, 143, -93, -97, 31, 53, -3,
	-262, -262, -148, -151, -115, -76, -77, -77, -76, -77,
	62, 62, 62, 67, 62, 67, 62, -85, -180, -263,
	-263, -3, -145, 73, -75, -88, -75, -90, -180, 128,
	-153, -155, 292, 289, 295, -246, 87, 81, -226, 111,
	-215, 80, -246, 29, -216, -216, -216, -219, -246, -219,
	29, -201, 30, 96, -209, 262, -203, -203, -204, 31,
	-204, -204, -204, -211, 87, -211, 88, 88, 82, -236,
	-231, -232, 32, 76, -230, -220, 87, 37, -175, 82,
	156, 207, -72, 302, 87, 83, 72, -246, 87, -248,
	73, 190, 258, 190, 193, 157, -188, -160, -160, -62,
	102, -99, -99, -263, -263, -64, -176, -122, -141, -191,
	137, 233, 178, 231, 227, 247, 238, 260, 229, 261,
	-189, -191, -99, -99, -99, -99, 316, -122, 110, -73,
	108, -176, -99, -99, 155, 155, 155, -146, -175, 39,
	87, 87, 58, -88, -120, 14, -73, 128, -126, -147,
	72, -148, -109, -111, -110, -262, -142, -263, -175, -146,
	-93, 81, 111, -80, -79, 72, 73, -81, 72, -79,
	62, 62, -263, -93, -75, -93, -93, 143, 289, 293,
	294, -225, -226, -229, -238, 171, -219, -219, -219, 80,
	-202, 72, -99, -204, -204, -246, 137, 82, 81, 82,
	81, 82, 81, -169, 354, 103, -232, -231, -220, -220,
	88, -246, -88, -69, 199, 206, 80, 84, -88, -245,
	319, -247, -246, -175, -175, -175, -88, -164, -164, -99,
	-263, -126, -263, -199, -199, -199, -206, -199, 221, -199,
	221, -263, -263, 20, 20, 20, 20, -262, -57, 312,
	-73, 81, 81, -262, -262, -262, -263, 81, 87, -203,
	-121, 15, 17, 28, -147, 81, -263, -263, 81, 53,
	143, -263, -122, -151, -73, -73, 80, -73, -122, -93,
	82, -143, -175, -207, 258, 10, -203, 87, -203, 88,
	88, 354, 30, 77, 78, 79, 30, 74, 75, -144,
	80, 82, -244, -243, -176, 80, 73, -141, -203, -246,
	-99, -99, -99, -99, -99, -126, 87, -99, -99, -143,
	-263, -143, -143, -183, -175, -203, -129, -134, -162, -73,
	-108, 29, -111, 53, -3, -175, -109, -175, -126, -143,
	-126, -235, 82, 81, -210, 161, 29, 160, -102, -204,
	-204, 82, 82, 23, -143, 81, 111, -143, -88, -263,
	-263, -263, -263, -58, 121, 319, -263, -263, -263, -263,
	-263, -263, -92, -132, 404, -135, 42, -136, 43, 10,
	-109, 143, 82, 173, -175, -200, 94, 29, 29, -3,
	82, -243, -226, 82, -263, 317, 69, 320, -129, 47,
	239, -137, 51, -138, -133, 52, 17, -148, -175, -88,
	87, -51, 319, -248, 58, 318, 321, -130, 49, -128,
	48, -128, -136, 17, -139, 44, 45, 87, 80, -52,
	198, 408, -245, 58, -131, 50, 72, 99, 87, 17,
	17, -143, 166, 319, 72, 99, 87, 87, 82, 200,
	320, -253, -254, 72, 321, -254, 72, 11, 10, -252,
	174, 169, 172, 31, -252, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 675, 0, 414, 414, 414, 414, 414, 414, 414,
	0, 0, -2, -2, 267, 0, 36, 0, 0, 0,
	0, -2, 372, 373, 0, 375, -2, 0, 0, 384,
	1163, 1163, 1163, 0, 0, 0, 0, 1161, 53, 54,
	390, 391, 392, 1, 3, 0, 418, 683, 0, 0,
	-2, 416, 0, 0, 790, 790, 790, 0, 82, 83,
	0, 0, 0, 699, 788, 0, 788, 0, 808, 809,
	810, 102, 103, 86, -2, 107, 108, 0, 112, 272,
	268, 269, 271, 0, 101, 0, 0, 111, 37, 33,
	34, 35, 0, 786, 0, 786, 786, 0, 311, 498,
	818, 819, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 0, 0, 363, 363,
	363, 363, 363, 363, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 340, 0, 0, 347, 363,
	1164, 369, 370, 357, 355, 352, 353, 371, 374, 0,
	379, 382, 814, 815, 0, 397, 0, 1001, 389, 402,
	403, 413, 38, 549, 508, 0, 514, 516, 0, 551,
	552, 553, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 582, 583, 584, 660, 661,
	662, 663, 664, 665, 666, 667, 518, 519, 657, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 618, 618, 618, 618, 618, 618, 618, 618,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1163,
	0, 412, 675, 49, 0, 414, 419, 420, 718, 0,
	0, 675, 1162, 0, 0, -2, -2, 430, 436, 437,
	438, 439, 415, 0, 442, 446, 0, 0, 0, 791,
	0, 0, 68, 0, 1134, 771, -2, -2, 0, 0,
	816, 817, -2, 963, -2, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	0, 0, 119, 120, 0, 0, 241, 965, 117, 0,
	235, 176, 712, 0, 0, 0, 0, 0, 88, 109,
	110, 0, 218, 0, 98, 1164, 0, 0, 0, 0,
	-2, 0, 303, 0, 0, 0, 0, 0, 0, 310,
	0, 312, 363, 314, 0, 0, 315, 316, 317, 318,
	319, 363, 0, 363, 0, 363, 363, 363, 363, 360,
	0, 360, 358, 359, 350, 351, 1164, 1164, 0, 1164,
	1164, 0, 1164, 1164, 0, 226, 227, 228, 366, 344,
	345, 348, 349, 1165, 1166, 380, 383, 400, 398, 399,
	401, 393, 394, 395, 396, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 537, 538, 539, 540, 541, 542, 515, 0,
	529, 0, 0, 0, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 0, 427, 0, 0, 0, 675, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 649, 0,
	602, 610, 0, 603, 611, 604, 612, 605, 0, 606,
	613, 607, 614, 608, 609, 615, 0, 0, 0, 427,
	427, 0, 0, 39, 404, 405, 0, 481, 683, 0,
	429, 721, 0, 0, 684, 676, 677, 680, 683, 0,
	451, 440, 431, 434, 435, 417, 0, 443, 447, 0,
	449, 450, 0, 0, 66, 0, 497, 0, 453, 455,
	456, 457, 479, 0, 0, 0, 0, 62, 64, 498,
	0, 1134, 777, 0, 70, 71, 0, 0, 0, 199,
	781, 782, 783, 779, 258, 0, 0, 187, 183, 127,
	128, 129, 176, 131, 176, 176, 176, 176, 196, 196,
	196, 196, 159, 160, 161, 162, 163, 0, 0, 146,
	176, 176, 176, 176, 166, 167, 168, 169, 170, 171,
	172, 173, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 178, 178, 178, 180, 180, 0, 0, 210, 0,
	680, 0, 703, 0, 0, 97, 0, 811, 100, 218,
	0, 219, 270, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 787, 0, 1164, 309, 499, 820,
	821, 313, 364, 365, 320, 338, 322, 341, 323, 325,
	324, 326, 363, 0, 0, 0, 229, 230, 363, 329,
	330, 331, 332, 333, 334, 335, 336, 0, 343, 0,
	0, 0, 381, 385, 386, 387, 388, 550, 509, 510,
	511, 513, 530, 0, 532, 534, 520, 521, 545, 546,
	547, 0, 0, 0, 0, 543, 525, 0, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	570, 633, 634, 0, 568, 569, 580, 0, 0, 0,
	428, 658, 0, -2, 0, 548, 766, 683, 0, 0,
	0, 0, 553, 660, 0, 553, 660, 0, 0, 0,
	425, 426, 655, 652, 0, 0, 657, 0, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	410, 0, 501, 1071, 482, 0, 484, 485, 718, 50,
	40, 0, 719, 0, 0, 0, 0, 679, 681, 682,
	718, 0, 668, 0, 0, 506, 0, 0, 432, 46,
	448, 444, 0, 506, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 486, 0, 0, 489, 0, 0, 0,
	0, 480, 0, 0, 0, -2, 0, 0, 0, 60,
	61, 0, 0, 0, 772, 69, 0, 0, 74, 75,
	773, 774, 775, 776, 0, 104, 259, 261, 264, 265,
	266, 121, 123, 124, 0, 0, 239, 1082, 1116, 1002,
	233, 233, 1000, 246, 231, 232, 118, 190, 188, 0,
	185, 184, 130, 196, 196, 153, 154, 199, 0, 199,
	199, 199, 0, 0, 147, 148, 149, 150, 141, 0,
	142, 143, 144, 0, 145, 240, 0, 0, 687, 211,
	212, 214, 218, 0, 0, 0, 236, 237, 0, 0,
	0, 0, 700, 701, 702, 789, 0, 812, 0, 115,
	116, 89, 277, 279, 278, 282, 0, 0, 0, 0,
	304, 1164, 308, 327, 361, 362, 360, 342, 360, 367,
	346, 377, 531, 533, 535, 522, 543, 526, 0, 523,
	0, 0, 517, 585, 0, 0, 427, 0, 675, 718,
	589, 590, 0, 0, 0, 0, 0, 626, 0, 0,
	627, 0, 675, 0, 653, 0, 0, 601, 0, 620,
	0, 0, 621, 622, 623, 624, 625, 406, 409, 411,
	461, 0, 0, 0, 0, 483, 42, 0, 0, 0,
	685, 686, 678, 41, 0, 784, 785, 669, 670, 671,
	0, 441, 452, 433, 0, 683, 760, 0, 0, 752,
	0, 0, 506, 768, 0, 454, 475, 477, 0, 472,
	487, 488, 490, 0, 492, 0, 494, 495, 458, 459,
	460, 0, 506, 0, 506, 63, 506, 65, 0, 500,
	72, 73, 0, 0, 79, 200, 201, 0, 262, 0,
	122, 0, 0, 220, 233, 233, 233, 224, 234, 225,
	0, 192, 0, 189, 126, 186, 199, 199, 155, 0,
	156, 157, 158, 0, 174, 0, 0, 0, 255, 84,
	691, 690, 218, 218, 213, 0, 216, 0, 813, 177,
	0, 0, 713, 714, 0, 717, 0, 113, 114, 92,
	0, 0, 0, 0, 275, 0, 307, 363, 363, 524,
	0, 544, 527, 586, 587, 0, 659, 683, 44, 0,
	176, 176, 638, 176, 180, 641, 176, 643, 176, 646,
	0, 0, 0, 0, 0, 0, 0, 650, 600, 656,
	0, 658, 0, 0, 0, 0, 0, 0, 467, 0,
	196, 723, 720, 43, 673, 0, 507, 445, 47, 51,
	0, 760, 751, 762, 764, 0, 0, 0, 756, 0,
	675, 0, 0, 469, 476, 0, 0, 470, 0, 471,
	491, 493, -2, 675, 506, 58, 59, 0, 76, 77,
	78, 260, 263, 0, 238, 0, 221, 222, 223, 0,
	194, 0, 191, 151, 152, 197, 198, 196, 0, 196,
	0, 181, 0, 247, 256, 0, 688, 689, 0, 0,
	215, 217, 463, 704, 705, 706, 0, 716, 99, 276,
	0, 90, 91, 0, 0, 281, 305, 328, 339, 528,
	588, 718, 591, 635, 196, 639, 640, 642, 644, 645,
	647, 593, 592, 0, 0, 0, 0, 0, 683, 0,
	654, 0, 0, 0, 0, 0, 481, 0, 196, 743,
	48, 0, 0, 0, 52, 0, 765, 0, 0, 0,
	0, 67, 683, 769, 770, 473, 0, 478, 683, 57,
	210, 0, 465, 202, 195, 0, 199, 175, 199, 0,
	0, 257, 692, 693, 694, 695, 696, 697, 698, 0,
	0, 715, 93, 94, 0, 0, 0, 45, 636, 637,
	0, 0, 0, 0, 628, 0, 651, 0, 0, 0,
	503, 0, 0, 501, 468, 725, 724, 737, 741, 674,
	672, 0, 763, 0, 755, 758, 754, 757, 55, 0,
	56, 209, 0, 0, 207, 0, 204, 206, 193, 164,
	165, 179, 182, 0, 0, 0, 0, 0, 283, 594,
	596, 595, 597, 0, 0, 0, 599, 616, 617, 502,
	504, 505, 462, 743, 0, 736, 739, -2, 0, 0,
	753, 0, 474, 0, 466, 125, 0, 203, 205, 707,
	464, 95, 96, 89, 598, 0, 0, 0, 730, 728,
	728, 741, 0, 745, 0, 750, 0, 761, 759, 0,
	208, 85, 709, 92, 629, 0, 632, 733, 0, 726,
	729, 727, 738, 0, 744, 0, 0, 742, 0, 0,
	710, 711, 280, 630, 722, 0, 731, 732, 740, 0,
	0, 0, 0, 0, 734, 735, 746, 748, 242, 708,
	0, 243, 244, 0, 631, 245, 0, 0, 0, 248,
	250, 251, 0, 0, 249, 252, 253, 254,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 410,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:395
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:400
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:401
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:405
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:436
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:442
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:446
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:450
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:455
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:459
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:465
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:486
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:490
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:494
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:517
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:525
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:562
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:574
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:606
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:643
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:647
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:659
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:663
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:693
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:697
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:734
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:742
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:753
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:762
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:772
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:777
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:799
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:805
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:819
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:826
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:833
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:844
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:947
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1179
		{
			yyVAL.literal = nil
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1188
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1192
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1210
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1218
		{
			yyVAL.boolean = false
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.boolean = true
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1227
		{
			yyVAL.boolean = false
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1231
		{
			yyVAL.boolean = true
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1237
		{
			yyVAL.boolean = false
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1250
		{
			yyVAL.optVal = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1259
		{
			yyVAL.optVal = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.boolean = false
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.boolean = true
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = ""
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1290
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1303
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.colKeyOpt = colKey
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1324
		{
			yyVAL.literal = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1339
		{
			yyVAL.indexOptions = nil
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = ""
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = ""
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 242:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1494
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 243:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1498
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 244:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1502
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1506
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1516
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1555
		{
			yyVAL.boolean = true
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.boolean = true
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.boolean = false
		}
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = ""
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = yyDollar[1].str
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1611
		{
			yyVAL.alterOptions = nil
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.alterOption = nil
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1669
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1680
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 276:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1687
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1699
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1709
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 280:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1730
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 283:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1744
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1773
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 301:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1789
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1793
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1821
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1840
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &OtherRead{}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1879
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1891
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1895
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1956
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1969
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1979
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1992
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = "extended "
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = "full "
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2085
		{
			yyVAL.showFilter = nil
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.showFilter = nil
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.empty = struct{}{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.empty = struct{}{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &Begin{}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statement = &Begin{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = &Commit{}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.statement = &Rollback{}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.empty = struct{}{}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.empty = struct{}{}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.empty = struct{}{}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.empty = struct{}{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2181
		{
			yyVAL.explainType = EmptyType
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.explainType = JSONType
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.explainType = TreeType
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.explainType = VitessType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.explainType = TraditionalType
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.explainType = AnalyzeType
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = ""
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.statement = &OtherRead{}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.lockType = Read
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.lockType = ReadLocal
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.lockType = Write
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2322
		{
			setAllowComments(yylex, true)
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2326
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2332
		{
			yyVAL.bytes2 = nil
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.boolean = true
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.boolean = false
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.boolean = true
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = SQLCacheStr
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2368
		{
			yyVAL.boolean = false
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.boolean = true
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.boolean = true
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2381
		{
			yyVAL.selectExprs = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2390
		{
			yyVAL.strs = nil
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2406
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.str = SQLCacheStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = DistinctStr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = DistinctStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = StraightJoinHint
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2460
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2485
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2489
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2499
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2529
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2533
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columns = nil
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2575
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2579
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2583
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2595
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2605
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2610
		{
			yyVAL.empty = struct{}{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.empty = struct{}{}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.joinType = NormalJoinType
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.joinType = NormalJoinType
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2644
		{
			yyVAL.joinType = NormalJoinType
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.joinType = StraightJoinType
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.joinType = LeftJoinType
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.joinType = LeftJoinType
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.joinType = RightJoinType
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.joinType = RightJoinType
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2678
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2713
		{
			yyVAL.indexHints = nil
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2717
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2721
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2725
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2729
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.expr = nil
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2756
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2802
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2806
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2810
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2822
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2826
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = nil
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2929
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3035
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3125
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 598:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3145
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3186
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3283
		{
			yyVAL.matchExprOption = NoOption
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3291
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3295
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3327
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.expr = nil
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3379
		{
			yyVAL.str = string("")
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3399
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3404
		{
			yyVAL.expr = nil
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3422
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = &NullVal{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3480
		{
			yyVAL.exprs = nil
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = nil
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.orderBy = nil
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3523
		{
			yyVAL.orderDirection = AscOrder
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.orderDirection = AscOrder
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.orderDirection = DescOrder
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3536
		{
			yyVAL.limit = nil
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3548
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3553
		{
			yyVAL.indexOptions = nil
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3569
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = yyDollar[3].str
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = yyDollar[2].str
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = "cascaded"
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = yyDollar[3].str
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3692
		{
			yyVAL.lock = NoLock
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.lock = ForUpdateLock
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.lock = ShareModeLock
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.selectInto = nil
		}
	case 722:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3709
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3717
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = " header"
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = " manifest on"
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = " manifest off"
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = " overwrite on"
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = " overwrite off"
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3785
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = " optionally"
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3855
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3859
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3863
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3873
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3877
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3881
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3886
		{
			yyVAL.updateExprs = nil
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3890
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.bytes = []byte("charset")
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.expr = &Default{}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.boolean = false
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4008
		{
			yyVAL.boolean = true
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.boolean = false
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.boolean = true
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.ignore = false
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.ignore = true
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.indexOptions = nil
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			decNesting(yylex)
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4484
		{
			skipToEnd(yylex)
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4489
		{
			skipToEnd(yylex)
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			skipToEnd(yylex)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
