// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const INTEGRAL = 57429
const FLOAT = 57430
const HEXNUM = 57431
const VALUE_ARG = 57432
const LIST_ARG = 57433
const COMMENT = 57434
const COMMENT_KEYWORD = 57435
const BIT_LITERAL = 57436
const COMPRESSION = 57437
const NULL = 57438
const TRUE = 57439
const FALSE = 57440
const OFF = 57441
const DISCARD = 57442
const IMPORT = 57443
const ENABLE = 57444
const DISABLE = 57445
const TABLESPACE = 57446
const VIRTUAL = 57447
const STORED = 57448
const LOWER_THAN_CHARSET = 57449
const CHARSET = 57450
const UNIQUE = 57451
const KEY = 57452
const OR = 57453
const XOR = 57454
const AND = 57455
const NOT = 57456
const BETWEEN = 57457
const CASE = 57458
const WHEN = 57459
const THEN = 57460
const ELSE = 57461
const END = 57462
const LE = 57463
const GE = 57464
const NE = 57465
const NULL_SAFE_EQUAL = 57466
const IS = 57467
const LIKE = 57468
const REGEXP = 57469
const IN = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const UNDERSCORE_UTF8MB4 = 57479
const UNDERSCORE_UTF8 = 57480
const UNDERSCORE_LATIN1 = 57481
const INTERVAL = 57482
const JSON_EXTRACT_OP = 57483
const JSON_UNQUOTE_EXTRACT_OP = 57484
const CREATE = 57485
const ALTER = 57486
const DROP = 57487
const RENAME = 57488
const ANALYZE = 57489
const ADD = 57490
const FLUSH = 57491
const CHANGE = 57492
const MODIFY = 57493
const REVERT = 57494
const SCHEMA = 57495
const TABLE = 57496
const INDEX = 57497
const VIEW = 57498
const TO = 57499
const IGNORE = 57500
const IF = 57501
const PRIMARY = 57502
const COLUMN = 57503
const SPATIAL = 57504
const FULLTEXT = 57505
const KEY_BLOCK_SIZE = 57506
const CHECK = 57507
const INDEXES = 57508
const ACTION = 57509
const CASCADE = 57510
const CONSTRAINT = 57511
const FOREIGN = 57512
const NO = 57513
const REFERENCES = 57514
const RESTRICT = 57515
const SHOW = 57516
const DESCRIBE = 57517
const EXPLAIN = 57518
const DATE = 57519
const ESCAPE = 57520
const REPAIR = 57521
const OPTIMIZE = 57522
const TRUNCATE = 57523
const COALESCE = 57524
const EXCHANGE = 57525
const REBUILD = 57526
const PARTITIONING = 57527
const REMOVE = 57528
const MAXVALUE = 57529
const PARTITION = 57530
const REORGANIZE = 57531
const LESS = 57532
const THAN = 57533
const PROCEDURE = 57534
const TRIGGER = 57535
const VINDEX = 57536
const VINDEXES = 57537
const DIRECTORY = 57538
const NAME = 57539
const UPGRADE = 57540
const STATUS = 57541
const VARIABLES = 57542
const WARNINGS = 57543
const CASCADED = 57544
const DEFINER = 57545
const OPTION = 57546
const SQL = 57547
const UNDEFINED = 57548
const SEQUENCE = 57549
const MERGE = 57550
const TEMPORARY = 57551
const TEMPTABLE = 57552
const INVOKER = 57553
const SECURITY = 57554
const FIRST = 57555
const AFTER = 57556
const LAST = 57557
const VITESS_MIGRATION = 57558
const CANCEL = 57559
const RETRY = 57560
const COMPLETE = 57561
const BEGIN = 57562
const START = 57563
const TRANSACTION = 57564
const COMMIT = 57565
const ROLLBACK = 57566
const SAVEPOINT = 57567
const RELEASE = 57568
const WORK = 57569
const BIT = 57570
const TINYINT = 57571
const SMALLINT = 57572
const MEDIUMINT = 57573
const INT = 57574
const INTEGER = 57575
const BIGINT = 57576
const INTNUM = 57577
const REAL = 57578
const DOUBLE = 57579
const FLOAT_TYPE = 57580
const DECIMAL = 57581
const NUMERIC = 57582
const TIME = 57583
const TIMESTAMP = 57584
const DATETIME = 57585
const YEAR = 57586
const CHAR = 57587
const VARCHAR = 57588
const BOOL = 57589
const CHARACTER = 57590
const VARBINARY = 57591
const NCHAR = 57592
const TEXT = 57593
const TINYTEXT = 57594
const MEDIUMTEXT = 57595
const LONGTEXT = 57596
const BLOB = 57597
const TINYBLOB = 57598
const MEDIUMBLOB = 57599
const LONGBLOB = 57600
const JSON = 57601
const ENUM = 57602
const GEOMETRY = 57603
const POINT = 57604
const LINESTRING = 57605
const POLYGON = 57606
const GEOMETRYCOLLECTION = 57607
const MULTIPOINT = 57608
const MULTILINESTRING = 57609
const MULTIPOLYGON = 57610
const NULLX = 57611
const AUTO_INCREMENT = 57612
const APPROXNUM = 57613
const SIGNED = 57614
const UNSIGNED = 57615
const ZEROFILL = 57616
const CODE = 57617
const COLLATION = 57618
const COLUMNS = 57619
const DATABASES = 57620
const ENGINES = 57621
const EVENT = 57622
const EXTENDED = 57623
const FIELDS = 57624
const FULL = 57625
const FUNCTION = 57626
const GTID_EXECUTED = 57627
const KEYSPACES = 57628
const OPEN = 57629
const PLUGINS = 57630
const PRIVILEGES = 57631
const PROCESSLIST = 57632
const SCHEMAS = 57633
const TABLES = 57634
const TRIGGERS = 57635
const USER = 57636
const VGTID_EXECUTED = 57637
const VITESS_KEYSPACES = 57638
const VITESS_METADATA = 57639
const VITESS_MIGRATIONS = 57640
const VITESS_SHARDS = 57641
const VITESS_TABLETS = 57642
const VSCHEMA = 57643
const NAMES = 57644
const GLOBAL = 57645
const SESSION = 57646
const ISOLATION = 57647
const LEVEL = 57648
const READ = 57649
const WRITE = 57650
const ONLY = 57651
const REPEATABLE = 57652
const COMMITTED = 57653
const UNCOMMITTED = 57654
const SERIALIZABLE = 57655
const CURRENT_TIMESTAMP = 57656
const DATABASE = 57657
const CURRENT_DATE = 57658
const CURRENT_TIME = 57659
const LOCALTIME = 57660
const LOCALTIMESTAMP = 57661
const CURRENT_USER = 57662
const UTC_DATE = 57663
const UTC_TIME = 57664
const UTC_TIMESTAMP = 57665
const REPLACE = 57666
const CONVERT = 57667
const CAST = 57668
const SUBSTR = 57669
const SUBSTRING = 57670
const GROUP_CONCAT = 57671
const SEPARATOR = 57672
const TIMESTAMPADD = 57673
const TIMESTAMPDIFF = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const WITHOUT = 57682
const VALIDATION = 57683
const UNUSED = 57684
const ARRAY = 57685
const CUME_DIST = 57686
const DESCRIPTION = 57687
const DENSE_RANK = 57688
const EMPTY = 57689
const EXCEPT = 57690
const FIRST_VALUE = 57691
const GROUPING = 57692
const GROUPS = 57693
const JSON_TABLE = 57694
const LAG = 57695
const LAST_VALUE = 57696
const LATERAL = 57697
const LEAD = 57698
const MEMBER = 57699
const NTH_VALUE = 57700
const NTILE = 57701
const OF = 57702
const OVER = 57703
const PERCENT_RANK = 57704
const RANK = 57705
const RECURSIVE = 57706
const ROW_NUMBER = 57707
const SYSTEM = 57708
const WINDOW = 57709
const ACTIVE = 57710
const ADMIN = 57711
const BUCKETS = 57712
const CLONE = 57713
const COMPONENT = 57714
const DEFINITION = 57715
const ENFORCED = 57716
const EXCLUDE = 57717
const FOLLOWING = 57718
const GEOMCOLLECTION = 57719
const GET_MASTER_PUBLIC_KEY = 57720
const HISTOGRAM = 57721
const HISTORY = 57722
const INACTIVE = 57723
const INVISIBLE = 57724
const LOCKED = 57725
const MASTER_COMPRESSION_ALGORITHMS = 57726
const MASTER_PUBLIC_KEY_PATH = 57727
const MASTER_TLS_CIPHERSUITES = 57728
const MASTER_ZSTD_COMPRESSION_LEVEL = 57729
const NESTED = 57730
const NETWORK_NAMESPACE = 57731
const NOWAIT = 57732
const NULLS = 57733
const OJ = 57734
const OLD = 57735
const OPTIONAL = 57736
const ORDINALITY = 57737
const ORGANIZATION = 57738
const OTHERS = 57739
const PATH = 57740
const PERSIST = 57741
const PERSIST_ONLY = 57742
const PRECEDING = 57743
const PRIVILEGE_CHECKS_USER = 57744
const PROCESS = 57745
const RANDOM = 57746
const REFERENCE = 57747
const REQUIRE_ROW_FORMAT = 57748
const RESOURCE = 57749
const RESPECT = 57750
const RESTART = 57751
const RETAIN = 57752
const REUSE = 57753
const ROLE = 57754
const SECONDARY = 57755
const SECONDARY_ENGINE = 57756
const SECONDARY_LOAD = 57757
const SECONDARY_UNLOAD = 57758
const SKIP = 57759
const SRID = 57760
const THREAD_PRIORITY = 57761
const TIES = 57762
const UNBOUNDED = 57763
const VCPU = 57764
const VISIBLE = 57765
const FORMAT = 57766
const TREE = 57767
const VITESS = 57768
const TRADITIONAL = 57769
const LOCAL = 57770
const LOW_PRIORITY = 57771
const NO_WRITE_TO_BINLOG = 57772
const LOGS = 57773
const ERROR = 57774
const GENERAL = 57775
const HOSTS = 57776
const OPTIMIZER_COSTS = 57777
const USER_RESOURCES = 57778
const SLOW = 57779
const CHANNEL = 57780
const RELAY = 57781
const EXPORT = 57782
const AVG_ROW_LENGTH = 57783
const CONNECTION = 57784
const CHECKSUM = 57785
const DELAY_KEY_WRITE = 57786
const ENCRYPTION = 57787
const ENGINE = 57788
const INSERT_METHOD = 57789
const MAX_ROWS = 57790
const MIN_ROWS = 57791
const PACK_KEYS = 57792
const PASSWORD = 57793
const FIXED = 57794
const DYNAMIC = 57795
const COMPRESSED = 57796
const REDUNDANT = 57797
const COMPACT = 57798
const ROW_FORMAT = 57799
const STATS_AUTO_RECALC = 57800
const STATS_PERSISTENT = 57801
const STATS_SAMPLE_PAGES = 57802
const STORAGE = 57803
const MEMORY = 57804
const DISK = 57805

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	481, 112,
	-2, 118,
	-1, 46,
	111, 118,
	150, 118,
	265, 118,
	-2, 341,
	-1, 53,
	33, 490,
	172, 490,
	183, 490,
	216, 504,
	217, 504,
	-2, 492,
	-1, 58,
	174, 514,
	-2, 512,
	-1, 84,
	57, 582,
	-2, 590,
	-1, 97,
	171, 956,
	-2, 91,
	-1, 99,
	1, 113,
	481, 113,
	-2, 118,
	-1, 109,
	112, 244,
	177, 244,
	-2, 335,
	-1, 128,
	111, 118,
	150, 118,
	265, 118,
	-2, 350,
	-1, 164,
	1, 390,
	481, 390,
	-2, 118,
	-1, 569,
	157, 977,
	-2, 973,
	-1, 570,
	157, 978,
	-2, 974,
	-1, 589,
	57, 583,
	-2, 595,
	-1, 590,
	57, 584,
	-2, 596,
	-1, 611,
	125, 1326,
	-2, 84,
	-1, 612,
	125, 1207,
	-2, 85,
	-1, 618,
	125, 1258,
	-2, 950,
	-1, 758,
	125, 1141,
	-2, 947,
	-1, 794,
	182, 38,
	187, 38,
	-2, 255,
	-1, 871,
	1, 388,
	481, 388,
	-2, 118,
	-1, 1112,
	1, 285,
	481, 285,
	-2, 118,
	-1, 1115,
	23, 137,
	-2, 139,
	-1, 1188,
	112, 244,
	177, 244,
	-2, 335,
	-1, 1197,
	182, 39,
	187, 39,
	-2, 256,
	-1, 1406,
	157, 980,
	-2, 976,
	-1, 1497,
	75, 66,
	83, 66,
	-2, 70,
	-1, 1518,
	1, 286,
	481, 286,
	-2, 118,
	-1, 1951,
	5, 843,
	18, 843,
	20, 843,
	31, 843,
	84, 843,
	-2, 622,
	-1, 2185,
	47, 918,
	-2, 912,
}

const yyPrivate = 57344

const yyLast = 30134

var yyAct = [...]int{
	569, 2281, 2105, 2010, 2238, 2215, 2225, 2251, 931, 1775,
	2162, 83, 3, 1737, 2186, 2132, 1782, 1931, 1586, 1704,
	2102, 1783, 1013, 1443, 1932, 527, 1060, 1827, 1738, 1928,
	512, 1551, 1807, 1067, 1871, 541, 1831, 1556, 510, 1571,
	137, 824, 1724, 2124, 1392, 1808, 1890, 1169, 1809, 165,
	1400, 1943, 165, 1664, 475, 165, 1584, 1094, 882, 1304,
	491, 1494, 165, 582, 1195, 761, 1515, 81, 123, 1558,
	165, 1617, 616, 1570, 1801, 1104, 1097, 1070, 789, 1476,
	591, 1065, 1087, 1445, 1052, 1426, 576, 1483, 503, 911,
	542, 34, 491, 1090, 1369, 491, 165, 491, 514, 802,
	613, 1202, 1568, 1287, 769, 790, 1301, 949, 768, 765,
	1547, 1459, 795, 1403, 791, 1103, 1499, 1537, 1077, 792,
	1309, 1101, 100, 79, 106, 34, 1088, 867, 1026, 140,
	1164, 101, 8, 7, 33, 929, 6, 78, 107, 1615,
	1187, 498, 1851, 1850, 1029, 1878, 167, 168, 169, 1536,
	1879, 1273, 2134, 1358, 950, 167, 168, 169, 1440, 1441,
	1213, 1357, 1356, 1355, 598, 602, 1354, 826, 1353, 829,
	578, 450, 478, 762, 501, 102, 502, 777, 102, 1346,
	840, 841, 2270, 844, 845, 846, 847, 108, 950, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 1702, 499, 2182, 1979, 2081, 617,
	806, 2158, 467, 610, 577, 772, 2157, 828, 827, 960,
	784, 466, 783, 2100, 84, 1654, 2101, 2297, 2248, 102,
	805, 782, 464, 2296, 80, 2208, 837, 554, 1563, 560,
	561, 558, 559, 2289, 557, 556, 555, 2106, 1603, 830,
	831, 832, 2247, 960, 562, 563, 2207, 2043, 842, 1561,
	1907, 86, 87, 88, 89, 90, 91, 1178, 1768, 97,
	461, 1767, 162, 1858, 1769, 445, 1105, 1857, 1106, 473,
	1442, 1958, 1959, 1510, 1511, 1703, 1957, 783, 1500, 1877,
	1652, 870, 1509, 102, 102, 575, 782, 161, 901, 573,
	918, 889, 920, 927, 572, 2034, 890, 1791, 889, 956,
	906, 907, 948, 890, 888, 902, 887, 781, 895, 876,
	877, 103, 1530, 1529, 2212, 35, 479, 2032, 72, 39,
	40, 2012, 489, 1056, 145, 776, 487, 778, 917, 919,
	866, 1832, 478, 956, 1560, 1347, 1348, 1349, 1345, 493,
	478, 1628, 1626, 1627, 451, 1429, 453, 468, 1293, 481,
	1585, 480, 457, 1854, 455, 459, 469, 460, 1618, 454,
	2295, 465, 2006, 779, 456, 470, 471, 485, 484, 472,
	2007, 463, 482, 781, 865, 167, 168, 169, 142, 843,
	143, 903, 1288, 781, 896, 773, 908, 478, 924, 160,
	926, 71, 775, 774, 1866, 1623, 909, 2013, 2271, 904,
	905, 478, 2171, 975, 974, 984, 985, 977, 978, 979,
	980, 981, 982, 983, 976, 1263, 915, 986, 910, 1633,
	916, 1891, 103, 1630, 849, 1631, 785, 1632, 848, 585,
	921, 2014, 1622, 1620, 2154, 165, 869, 165, 2095, 779,
	165, 955, 952, 953, 954, 959, 961, 958, 1624, 957,
	813, 914, 811, 1587, 146, 1477, 951, 1264, 922, 1265,
	804, 822, 821, 151, 1893, 820, 491, 491, 491, 780,
	1500, 1978, 1621, 819, 818, 955, 952, 953, 954, 959,
	961, 958, 817, 957, 491, 491, 479, 1181, 816, 815,
	951, 810, 786, 1294, 479, 823, 483, 942, 2292, 1870,
	885, 1787, 891, 892, 893, 894, 2285, 1562, 923, 766,
	2287, 766, 766, 764, 476, 1856, 798, 797, 1302, 803,
	839, 868, 1201, 928, 807, 797, 1895, 2206, 1899, 477,
	1894, 899, 1892, 2213, 808, 780, 1569, 1897, 604, 1867,
	1609, 479, 1298, 936, 833, 780, 1896, 1986, 814, 1653,
	812, 925, 809, 1853, 1916, 479, 930, 930, 930, 1898,
	1900, 1915, 1914, 165, 1176, 1705, 1707, 1175, 1174, 138,
	1843, 1299, 1873, 2239, 1172, 449, 34, 1872, 444, 2193,
	1058, 1275, 1274, 1276, 1277, 1278, 2063, 1200, 1605, 995,
	997, 491, 1683, 804, 165, 886, 165, 165, 996, 491,
	1057, 1873, 933, 934, 99, 491, 1872, 613, 872, 1865,
	804, 1956, 1864, 878, 1680, 998, 999, 1729, 945, 943,
	1010, 2172, 944, 804, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1672, 1025, 1027, 1030, 1030, 1030, 1027, 1030,
	1030, 1027, 1030, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	73, 875, 803, 164, 1516, 1055, 1053, 1086, 1595, 34,
	804, 2283, 1071, 1505, 2284, 1081, 2282, 1014, 1706, 803,
	898, 838, 1011, 1028, 1031, 1033, 1035, 1036, 1038, 1040,
	1041, 900, 803, 880, 986, 1292, 1092, 807, 797, 1455,
	1032, 1034, 1069, 1037, 1039, 976, 1042, 808, 986, 1764,
	1341, 912, 1310, 1050, 975, 974, 984, 985, 977, 978,
	979, 980, 981, 982, 983, 976, 617, 966, 986, 803,
	1604, 94, 804, 2202, 825, 797, 800, 801, 1941, 766,
	884, 1619, 1295, 794, 798, 964, 965, 963, 998, 999,
	139, 144, 141, 147, 148, 149, 150, 152, 153, 154,
	155, 165, 793, 966, 963, 1165, 156, 157, 158, 159,
	998, 999, 1107, 1665, 1173, 965, 963, 946, 871, 1909,
	966, 1289, 95, 1290, 1427, 1778, 1291, 1427, 586, 1690,
	1820, 803, 966, 491, 2137, 1197, 1966, 797, 800, 801,
	1965, 766, 1591, 1206, 1059, 794, 798, 1210, 1212, 1211,
	491, 491, 1602, 491, 1199, 491, 491, 1600, 491, 491,
	491, 491, 491, 491, 813, 811, 1179, 1180, 2264, 1961,
	1779, 1074, 2080, 491, 913, 1311, 1207, 165, 1246, 2293,
	975, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 1781, 165, 986, 1776, 1376, 1186, 1193, 1597,
	883, 1241, 1242, 1918, 491, 2009, 165, 1205, 1785, 1786,
	1374, 1375, 1373, 1777, 1657, 1658, 1659, 1300, 1597, 2079,
	1984, 165, 1102, 1601, 1249, 1250, 1805, 964, 965, 963,
	1255, 1256, 167, 168, 169, 1911, 1394, 165, 1243, 1171,
	1203, 1203, 1599, 1204, 165, 966, 167, 168, 169, 2294,
	1796, 1919, 1184, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 491, 491, 491, 1196, 1182, 2290, 1183, 2276,
	1804, 603, 507, 1784, 1460, 1461, 1259, 977, 978, 979,
	980, 981, 982, 983, 976, 1787, 1566, 986, 1283, 165,
	71, 1244, 1268, 1306, 1314, 2291, 1267, 2277, 1395, 1266,
	600, 1318, 1372, 1320, 1321, 1322, 1323, 1257, 1251, 1248,
	1327, 1215, 1797, 1216, 608, 1218, 1220, 1312, 1313, 1224,
	1226, 1228, 1230, 1232, 1342, 1303, 1282, 1393, 167, 168,
	169, 1317, 1771, 1280, 783, 1247, 1396, 1222, 1324, 1325,
	1326, 102, 1177, 782, 2280, 1370, 1352, 167, 168, 169,
	491, 1579, 930, 930, 930, 167, 168, 169, 1316, 1577,
	1404, 605, 606, 964, 965, 963, 504, 984, 985, 977,
	978, 979, 980, 981, 982, 983, 976, 1397, 1398, 986,
	1270, 966, 1457, 1780, 491, 491, 586, 1281, 1410, 2279,
	1415, 1418, 2278, 2152, 1279, 165, 1428, 1337, 1338, 1339,
	2265, 2259, 979, 980, 981, 982, 983, 976, 1371, 491,
	986, 1405, 2257, 1364, 1366, 1367, 165, 2121, 1448, 491,
	167, 168, 169, 165, 1406, 165, 2077, 2051, 1964, 1920,
	1404, 1365, 1806, 165, 165, 1814, 1802, 1434, 1435, 1648,
	491, 1269, 1613, 491, 1495, 1612, 1456, 1449, 613, 1678,
	1307, 613, 2151, 1271, 491, 1258, 1254, 1677, 1679, 1253,
	1252, 1450, 964, 965, 963, 1993, 2245, 1993, 2200, 1411,
	1412, 1462, 1014, 1417, 1420, 1421, 1407, 964, 965, 963,
	966, 1474, 1993, 2195, 2231, 1993, 2194, 2229, 964, 965,
	963, 1498, 1470, 1519, 1406, 966, 2233, 2234, 2104, 1433,
	1785, 1786, 1436, 1437, 1834, 2230, 966, 1817, 1531, 491,
	1532, 1533, 1534, 1535, 80, 1572, 1573, 1574, 1524, 1520,
	1576, 1578, 1940, 1496, 2176, 586, 1543, 1544, 1545, 1546,
	2098, 586, 1523, 491, 2058, 1553, 1758, 1472, 1725, 491,
	1206, 1993, 2096, 1206, 1500, 1206, 1725, 1559, 2201, 964,
	965, 963, 1503, 1596, 1597, 586, 1507, 617, 962, 1522,
	617, 1506, 2061, 586, 1993, 1784, 71, 966, 1521, 1974,
	2040, 530, 529, 532, 533, 534, 535, 1787, 1976, 1975,
	531, 1598, 536, 491, 1480, 1393, 1972, 1973, 1972, 1971,
	1393, 1393, 1479, 586, 1468, 586, 1500, 1852, 1583, 1168,
	1836, 1829, 1830, 35, 1590, 82, 570, 1593, 1480, 1594,
	1501, 1549, 1550, 1564, 1554, 1567, 1940, 1538, 1539, 1540,
	1575, 1565, 1480, 586, 962, 586, 165, 1732, 35, 1608,
	1508, 806, 1695, 165, 1610, 1611, 1501, 1597, 165, 165,
	1607, 1203, 165, 1592, 165, 1480, 1554, 1589, 1606, 1588,
	165, 805, 1733, 1168, 1167, 166, 1929, 165, 166, 1113,
	1112, 166, 1694, 2082, 1468, 1940, 492, 1469, 166, 1237,
	1597, 35, 1468, 1502, 2148, 579, 166, 2139, 1580, 71,
	1811, 1504, 1458, 1616, 165, 491, 975, 974, 984, 985,
	977, 978, 979, 980, 981, 982, 983, 976, 492, 1502,
	986, 492, 166, 492, 71, 2011, 1438, 1500, 1408, 1409,
	1350, 1643, 1644, 2083, 2084, 2085, 1646, 2165, 1297, 1238,
	1239, 1240, 1099, 870, 788, 1647, 975, 974, 984, 985,
	977, 978, 979, 980, 981, 982, 983, 976, 1468, 787,
	986, 2164, 2103, 2074, 2069, 1170, 1636, 71, 970, 1370,
	973, 71, 1552, 2008, 1451, 1968, 987, 988, 989, 990,
	991, 992, 993, 1837, 971, 972, 969, 975, 974, 984,
	985, 977, 978, 979, 980, 981, 982, 983, 976, 165,
	1548, 986, 1542, 1541, 1285, 1198, 1194, 165, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1651, 1166,
	96, 1563, 1810, 1944, 1945, 2261, 2086, 967, 1660, 2226,
	165, 1991, 1371, 1234, 1674, 1990, 1989, 1711, 1947, 1929,
	1821, 165, 165, 165, 165, 165, 1637, 1343, 1734, 1718,
	1950, 1749, 1949, 165, 1673, 1671, 1750, 165, 578, 1746,
	165, 165, 1747, 504, 165, 165, 165, 1748, 1756, 1811,
	1739, 1689, 1024, 2087, 2088, 1669, 1670, 1770, 1730, 1745,
	1235, 1236, 1751, 1701, 1489, 1490, 2273, 2246, 1921, 1714,
	1709, 1727, 1053, 1068, 2062, 1708, 1687, 1996, 1795, 1723,
	1717, 1722, 577, 2275, 1063, 1066, 1726, 2187, 2189, 2217,
	2250, 1728, 2220, 2252, 1712, 2184, 2190, 2216, 1296, 1773,
	1092, 1759, 1713, 1740, 491, 1761, 1743, 1735, 1736, 165,
	571, 1092, 1092, 1092, 1092, 1092, 165, 1757, 1306, 1752,
	1789, 1762, 491, 1527, 1765, 1815, 835, 1496, 491, 834,
	1092, 2021, 1206, 1206, 1092, 1845, 1810, 1559, 491, 1774,
	1423, 1061, 1813, 1794, 1840, 1798, 1799, 1800, 1741, 1742,
	1849, 1744, 1062, 1876, 1424, 935, 1833, 1803, 596, 592,
	1844, 165, 165, 165, 165, 165, 2056, 1812, 1485, 1488,
	1489, 1490, 1486, 593, 1487, 1491, 103, 165, 165, 1818,
	1460, 1461, 1987, 1453, 1847, 1640, 1822, 1823, 1824, 1186,
	2197, 596, 592, 1629, 2159, 1405, 1838, 1839, 1072, 1073,
	595, 1788, 594, 1846, 1493, 1656, 593, 583, 1406, 580,
	581, 2258, 1721, 491, 2256, 1848, 2255, 2054, 2221, 1393,
	1720, 1887, 1792, 1793, 2219, 2055, 1992, 1581, 584, 1842,
	82, 589, 590, 595, 1868, 594, 1924, 1725, 2263, 2262,
	579, 1889, 1684, 1681, 1082, 1075, 2263, 1888, 2191, 491,
	1963, 166, 1454, 166, 80, 1880, 166, 85, 77, 1,
	165, 1908, 1886, 1901, 2228, 462, 1902, 1439, 1051, 474,
	491, 2224, 1874, 1272, 1262, 1875, 491, 491, 1887, 2107,
	2161, 1999, 492, 492, 492, 1557, 1930, 1485, 1488, 1489,
	1490, 1486, 1667, 1487, 1491, 796, 1668, 1944, 1945, 165,
	492, 492, 128, 1739, 1517, 1518, 2241, 1675, 1676, 1933,
	93, 759, 92, 1682, 799, 897, 1685, 1686, 1582, 2099,
	1939, 1790, 1528, 1119, 1692, 1117, 1693, 1118, 165, 1696,
	1697, 1698, 1699, 1700, 1927, 1948, 1116, 1121, 1120, 1115,
	1952, 1344, 1954, 1710, 1955, 488, 1492, 1108, 1076, 836,
	452, 1977, 1340, 1960, 1614, 458, 1985, 994, 1719, 1766,
	1953, 614, 165, 607, 1934, 1935, 34, 2214, 2183, 2185,
	491, 2133, 2188, 2181, 2274, 2249, 2196, 1525, 491, 166,
	1452, 1064, 2053, 1923, 165, 1308, 1688, 1023, 1425, 1092,
	1754, 1755, 1982, 1983, 165, 1981, 1091, 1980, 513, 1969,
	1970, 2000, 1447, 1995, 1363, 1998, 528, 492, 165, 1917,
	166, 165, 166, 166, 1997, 492, 1559, 525, 526, 1463,
	2022, 492, 1731, 2003, 2002, 968, 511, 505, 1083, 1484,
	1482, 1481, 1638, 1095, 1946, 1994, 1942, 1938, 1089, 1467,
	1526, 1368, 2017, 2016, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1855,
	2005, 947, 588, 1359, 1360, 1361, 1362, 2030, 500, 771,
	1422, 2170, 1655, 2019, 2020, 2042, 587, 61, 38, 2027,
	2028, 495, 2029, 2269, 938, 2031, 597, 2033, 32, 31,
	30, 29, 2025, 28, 23, 22, 21, 20, 19, 25,
	2057, 18, 17, 1430, 16, 98, 48, 45, 43, 2066,
	105, 1739, 104, 2065, 46, 42, 873, 2046, 1413, 1414,
	27, 26, 15, 14, 13, 12, 2071, 165, 11, 2073,
	165, 165, 165, 491, 491, 10, 2072, 9, 2041, 5,
	4, 941, 24, 1012, 2, 2047, 2048, 2049, 0, 0,
	0, 0, 2108, 491, 491, 491, 504, 0, 0, 0,
	2093, 0, 0, 0, 0, 1884, 1885, 166, 0, 2114,
	975, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 0, 0, 986, 0, 0, 0, 491, 491,
	491, 165, 2112, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 491, 0, 491, 0, 0, 0, 1514, 2052,
	491, 0, 2140, 0, 2130, 491, 492, 492, 2136, 492,
	2142, 492, 492, 2138, 492, 492, 492, 492, 492, 492,
	0, 1936, 2128, 2129, 1933, 0, 0, 2145, 1933, 492,
	0, 0, 2147, 166, 491, 0, 2120, 491, 0, 0,
	2153, 0, 1951, 0, 0, 2163, 0, 2156, 2155, 166,
	0, 2076, 0, 2078, 0, 0, 0, 1555, 0, 2144,
	492, 2160, 166, 0, 0, 2146, 0, 0, 0, 0,
	0, 0, 0, 2149, 0, 2150, 0, 166, 0, 1934,
	2180, 34, 0, 1934, 0, 0, 0, 2192, 0, 0,
	0, 0, 0, 166, 0, 491, 165, 0, 0, 0,
	166, 2199, 0, 0, 0, 1933, 0, 491, 2113, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 492, 492,
	492, 0, 2203, 0, 491, 0, 0, 2211, 0, 0,
	2218, 2131, 491, 491, 0, 2222, 2227, 0, 0, 2235,
	2163, 2242, 2240, 2232, 0, 166, 0, 0, 0, 0,
	2254, 2253, 1739, 0, 0, 0, 0, 0, 0, 0,
	1934, 2260, 0, 0, 0, 0, 0, 0, 0, 0,
	2266, 0, 2024, 0, 0, 2198, 2026, 0, 0, 2272,
	34, 0, 0, 0, 0, 0, 0, 2035, 2036, 0,
	0, 0, 0, 0, 0, 2286, 0, 0, 0, 0,
	0, 0, 0, 2050, 540, 2288, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 34, 0,
	2059, 2060, 0, 0, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 1662, 1663,
	492, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 163, 0, 0, 448, 2039, 0, 486,
	0, 0, 0, 0, 0, 492, 448, 2045, 0, 161,
	0, 0, 166, 0, 448, 492, 0, 0, 0, 166,
	0, 166, 0, 0, 0, 2097, 0, 0, 0, 166,
	166, 601, 601, 103, 0, 125, 492, 0, 0, 492,
	448, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	975, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 0, 2125, 986, 0, 0, 135, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 1715, 1716, 1066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 143, 0, 0, 492, 0, 112, 113, 134,
	133, 160, 0, 975, 974, 984, 985, 977, 978, 979,
	980, 981, 982, 983, 976, 0, 0, 986, 0, 492,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 2166, 2167, 2168, 2169, 0, 2173, 0, 2174, 2175,
	2177, 0, 0, 0, 2178, 2179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 110, 136, 117, 109,
	0, 130, 131, 0, 0, 0, 146, 0, 0, 492,
	0, 0, 0, 0, 0, 151, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2205, 0, 0, 0,
	121, 119, 114, 115, 116, 120, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 161, 166, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 166, 166, 0, 0, 166, 0,
	166, 539, 0, 0, 0, 103, 166, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 145, 0,
	0, 0, 2267, 2268, 0, 0, 0, 0, 1882, 1883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 492, 0, 1903, 1904, 0, 1905, 1906, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 1912, 1913, 1772,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 143, 0, 0, 0, 0, 0,
	0, 1910, 0, 160, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 615, 0, 0, 763, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1925, 0, 126, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1136, 0, 0, 166, 0, 0, 0, 0,
	0, 1962, 0, 166, 0, 0, 0, 0, 146, 448,
	0, 448, 0, 0, 448, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 166, 166,
	166, 166, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 166, 0, 0, 166, 166, 0, 0,
	166, 166, 166, 975, 974, 984, 985, 977, 978, 979,
	980, 981, 982, 983, 976, 0, 0, 986, 0, 0,
	0, 0, 139, 144, 141, 147, 148, 149, 150, 152,
	153, 154, 155, 0, 0, 0, 0, 0, 156, 157,
	158, 159, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 138, 0, 166, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 448, 492, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 492, 0, 1137, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 448, 0,
	448, 1098, 0, 0, 0, 0, 0, 166, 166, 166,
	166, 166, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 2075, 2067, 166, 166, 2068, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 1153, 1154,
	1155, 1156, 1157, 1158, 0, 1159, 1160, 1161, 1162, 1163,
	1138, 1139, 1140, 1141, 1122, 1123, 1151, 0, 1125, 492,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 2116, 2117, 2118, 2119, 492, 0, 0, 2122, 2123,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 1054,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 492, 492, 139, 144, 141, 147, 148, 149,
	150, 152, 153, 154, 155, 2135, 504, 0, 0, 0,
	156, 157, 158, 159, 1152, 166, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 615, 615, 615,
	0, 494, 0, 0, 166, 0, 0, 0, 0, 574,
	0, 0, 0, 0, 0, 937, 939, 975, 974, 984,
	985, 977, 978, 979, 980, 981, 982, 983, 976, 0,
	1209, 986, 0, 0, 0, 767, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 492, 1209, 1209, 0, 0, 0,
	166, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 1260, 0, 0,
	0, 2236, 0, 0, 166, 0, 0, 166, 0, 1881,
	448, 0, 975, 974, 984, 985, 977, 978, 979, 980,
	981, 982, 983, 976, 0, 1305, 986, 0, 0, 975,
	974, 984, 985, 977, 978, 979, 980, 981, 982, 983,
	976, 448, 1079, 986, 0, 0, 1666, 0, 448, 0,
	615, 0, 0, 0, 0, 0, 1109, 1328, 1329, 448,
	448, 448, 448, 448, 448, 448, 975, 974, 984, 985,
	977, 978, 979, 980, 981, 982, 983, 976, 0, 0,
	986, 974, 984, 985, 977, 978, 979, 980, 981, 982,
	983, 976, 0, 448, 986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 166, 166, 166, 492,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	492, 492, 0, 0, 0, 601, 1305, 0, 0, 0,
	601, 601, 0, 0, 601, 601, 601, 0, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 492, 492, 166, 0, 0,
	601, 601, 601, 601, 601, 0, 0, 0, 492, 1260,
	492, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 1305, 448, 0, 448,
	0, 0, 0, 0, 763, 0, 0, 448, 448, 0,
	492, 0, 0, 492, 0, 0, 0, 1208, 0, 0,
	0, 1214, 1214, 0, 1214, 0, 1214, 1214, 0, 1223,
	1214, 1214, 1214, 1214, 1214, 0, 0, 0, 0, 0,
	0, 0, 1208, 1208, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 166, 0, 874, 1284, 879, 0, 0, 881,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 492, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 615, 615, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 145, 0, 0, 161, 448, 0, 0,
	0, 0, 448, 448, 0, 0, 448, 1185, 1641, 0,
	0, 1399, 0, 615, 448, 0, 0, 0, 0, 0,
	103, 448, 125, 1085, 135, 0, 1096, 1208, 0, 124,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 1432, 142, 448, 143,
	0, 0, 0, 0, 1189, 1190, 134, 133, 160, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 124,
	1464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1079, 0, 0, 615, 0, 0, 0, 142, 0, 143,
	0, 0, 0, 0, 1189, 1190, 134, 133, 160, 0,
	0, 615, 0, 0, 615, 0, 601, 601, 0, 0,
	0, 0, 129, 1191, 136, 763, 1188, 0, 130, 131,
	0, 0, 0, 146, 0, 0, 0, 601, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 1260, 129, 1191, 136, 0, 1188, 0, 130, 131,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	770, 0, 151, 601, 448, 0, 0, 0, 0, 0,
	1114, 0, 0, 0, 1209, 448, 448, 448, 448, 448,
	0, 0, 0, 0, 763, 0, 0, 1753, 0, 0,
	770, 448, 0, 0, 448, 448, 0, 0, 448, 1763,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 0, 138, 0,
	1825, 0, 0, 0, 0, 1286, 0, 0, 0, 0,
	1209, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	1305, 0, 0, 0, 0, 126, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 1319, 0, 448, 448, 448, 448, 448,
	0, 0, 0, 132, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 448, 448, 0, 0, 126, 1650, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	0, 0, 0, 0, 448, 156, 157, 158, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	0, 0, 0, 448, 0, 156, 157, 158, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 1471, 0, 0, 0, 0,
	0, 0, 1475, 0, 1478, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 1208, 0, 1835,
	35, 36, 37, 72, 39, 40, 0, 615, 0, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 41, 67, 68, 0, 65, 69,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 448, 0, 0, 448, 448, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	1214, 0, 1625, 0, 0, 0, 0, 1634, 1635, 0,
	0, 1639, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 615, 0, 0, 1208, 0, 1645, 1937, 1214, 0,
	0, 0, 0, 0, 44, 47, 50, 49, 52, 0,
	64, 0, 0, 70, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 75, 74, 0, 0,
	62, 63, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 57, 58, 59, 60, 0, 0,
	0, 763, 0, 0, 1208, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 1828, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2109, 2110, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 1860, 1861, 1862, 1863, 0, 0, 0, 0, 2126,
	2126, 2126, 0, 0, 0, 0, 1096, 1869, 0, 0,
	0, 0, 0, 2141, 0, 2143, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 2223, 0, 0, 0, 0,
	0, 0, 0, 615, 615, 0, 0, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 0,
	2018, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 0, 0, 2090,
	2091, 2092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 727, 393, 0, 676, 744, 647, 664, 754,
	667, 670, 710, 626, 689, 317, 661, 0, 651, 622,
	657, 623, 649, 678, 224, 646, 729, 692, 743, 275,
	221, 628, 652, 331, 666, 176, 712, 369, 209, 284,
	282, 398, 235, 227, 223, 208, 259, 290, 329, 387,
	323, 750, 279, 699, 0, 378, 302, 0, 0, 0,
	680, 733, 687, 723, 675, 711, 636, 698, 745, 662,
	707, 746, 265, 207, 175, 314, 379, 239, 0, 0,
	0, 167, 168, 169, 0, 2243, 2244, 0, 0, 0,
	0, 0, 198, 0, 205, 704, 740, 659, 706, 219,
	263, 226, 218, 395, 751, 732, 0, 191, 742, 682,
	709, 757, 621, 701, 0, 624, 627, 753, 736, 655,
	229, 0, 0, 0, 0, 0, 0, 0, 679, 688,
	720, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 697, 0, 0, 0, 632, 625, 0, 0,
	0, 0, 677, 0, 0, 0, 635, 0, 654, 721,
	0, 619, 247, 629, 303, 2204, 725, 735, 674, 427,
	739, 672, 671, 716, 633, 731, 665, 274, 631, 271,
	171, 187, 0, 663, 313, 352, 358, 730, 650, 658,
	210, 656, 356, 327, 412, 194, 237, 349, 332, 354,
	696, 714, 355, 280, 400, 344, 410, 428, 429, 217,
	307, 418, 391, 424, 439, 188, 214, 321, 384, 415,
	375, 300, 396, 397, 270, 374, 245, 174, 278, 436,
	186, 364, 202, 179, 386, 408, 199, 367, 0, 0,
	441, 181, 406, 383, 297, 267, 268, 180, 0, 348,
	222, 243, 212, 316, 403, 404, 211, 442, 190, 423,
	183, 932, 422, 309, 399, 407, 298, 289, 182, 405,
	296, 288, 273, 233, 254, 342, 283, 343, 255, 305,
	304, 306, 0, 177, 0, 380, 416, 443, 195, 196,
	197, 645, 232, 236, 242, 244, 250, 251, 258, 276,
	320, 341, 339, 345, 726, 394, 411, 419, 426, 432,
	433, 437, 434, 435, 438, 308, 257, 376, 272, 281,
	718, 756, 326, 357, 200, 414, 377, 640, 644, 638,
	639, 690, 691, 641, 747, 748, 749, 722, 634, 0,
	642, 643, 0, 728, 737, 738, 695, 170, 184, 277,
	752, 346, 240, 440, 421, 417, 620, 637, 216, 648,
	0, 0, 660, 668, 669, 681, 683, 684, 685, 686,
	694, 702, 703, 705, 713, 715, 717, 719, 724, 734,
	755, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 260, 261, 264, 269, 286, 291, 292, 293,
	294, 310, 311, 312, 315, 318, 319, 322, 324, 325,
	328, 334, 335, 336, 337, 338, 340, 347, 351, 359,
	360, 361, 362, 363, 365, 366, 370, 371, 372, 373,
	381, 385, 401, 402, 413, 425, 430, 249, 409, 431,
	0, 285, 693, 700, 287, 234, 252, 262, 708, 420,
	382, 189, 353, 241, 178, 206, 192, 213, 228, 231,
	266, 295, 301, 330, 333, 246, 225, 204, 350, 201,
	368, 388, 389, 390, 392, 299, 220, 741, 727, 393,
	0, 676, 744, 647, 664, 754, 667, 670, 710, 626,
	689, 317, 661, 0, 651, 622, 657, 623, 649, 678,
	224, 646, 729, 692, 743, 275, 221, 628, 652, 331,
	666, 176, 712, 369, 209, 284, 282, 398, 235, 227,
	223, 208, 259, 290, 329, 387, 323, 750, 279, 699,
	0, 378, 302, 0, 0, 0, 680, 733, 687, 723,
	675, 711, 636, 698, 745, 662, 707, 746, 265, 207,
	175, 314, 379, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 704, 740, 659, 706, 219, 263, 226, 218, 395,
	751, 732, 0, 191, 742, 682, 709, 757, 621, 701,
	0, 624, 627, 753, 736, 655, 229, 0, 0, 0,
	0, 0, 0, 0, 679, 688, 720, 673, 0, 0,
	0, 0, 0, 0, 1926, 0, 653, 0, 697, 0,
	0, 0, 632, 625, 0, 0, 0, 0, 677, 0,
	0, 0, 635, 0, 654, 721, 0, 619, 247, 629,
	303, 0, 725, 735, 674, 427, 739, 672, 671, 716,
	633, 731, 665, 274, 631, 271, 171, 187, 0, 663,
	313, 352, 358, 730, 650, 658, 210, 656, 356, 327,
	412, 194, 237, 349, 332, 354, 696, 714, 355, 280,
	400, 344, 410, 428, 429, 217, 307, 418, 391, 424,
	439, 188, 214, 321, 384, 415, 375, 300, 396, 397,
	270, 374, 245, 174, 278, 436, 186, 364, 202, 179,
	386, 408, 199, 367, 0, 0, 441, 181, 406, 383,
	297, 267, 268, 180, 0, 348, 222, 243, 212, 316,
	403, 404, 211, 442, 190, 423, 183, 932, 422, 309,
	399, 407, 298, 289, 182, 405, 296, 288, 273, 233,
	254, 342, 283, 343, 255, 305, 304, 306, 0, 177,
	0, 380, 416, 443, 195, 196, 197, 645, 232, 236,
	242, 244, 250, 251, 258, 276, 320, 341, 339, 345,
	726, 394, 411, 419, 426, 432, 433, 437, 434, 435,
	438, 308, 257, 376, 272, 281, 718, 756, 326, 357,
	200, 414, 377, 640, 644, 638, 639, 690, 691, 641,
	747, 748, 749, 722, 634, 0, 642, 643, 0, 728,
	737, 738, 695, 170, 184, 277, 752, 346, 240, 440,
	421, 417, 620, 637, 216, 648, 0, 0, 660, 668,
	669, 681, 683, 684, 685, 686, 694, 702, 703, 705,
	713, 715, 717, 719, 724, 734, 755, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 260, 261,
	264, 269, 286, 291, 292, 293, 294, 310, 311, 312,
	315, 318, 319, 322, 324, 325, 328, 334, 335, 336,
	337, 338, 340, 347, 351, 359, 360, 361, 362, 363,
	365, 366, 370, 371, 372, 373, 381, 385, 401, 402,
	413, 425, 430, 249, 409, 431, 0, 285, 693, 700,
	287, 234, 252, 262, 708, 420, 382, 189, 353, 241,
	178, 206, 192, 213, 228, 231, 266, 295, 301, 330,
	333, 246, 225, 204, 350, 201, 368, 388, 389, 390,
	392, 299, 220, 741, 727, 393, 0, 676, 744, 647,
	664, 754, 667, 670, 710, 626, 689, 317, 661, 0,
	651, 622, 657, 623, 649, 678, 224, 646, 729, 692,
	743, 275, 221, 628, 652, 331, 666, 176, 712, 369,
	209, 284, 282, 398, 235, 227, 223, 208, 259, 290,
	329, 387, 323, 750, 279, 699, 0, 378, 302, 0,
	0, 0, 680, 733, 687, 723, 675, 711, 636, 698,
	745, 662, 707, 746, 265, 207, 175, 314, 379, 239,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 704, 740, 659,
	706, 219, 263, 226, 218, 395, 751, 732, 0, 191,
	742, 682, 709, 757, 621, 701, 0, 624, 627, 753,
	736, 655, 229, 0, 0, 0, 0, 0, 0, 0,
	679, 688, 720, 673, 0, 0, 0, 0, 0, 0,
	1764, 0, 653, 0, 697, 0, 0, 0, 632, 625,
	0, 0, 0, 0, 677, 0, 0, 0, 635, 0,
	654, 721, 0, 619, 247, 629, 303, 0, 725, 735,
	674, 427, 739, 672, 671, 716, 633, 731, 665, 274,
	631, 271, 171, 187, 0, 663, 313, 352, 358, 730,
	650, 658, 210, 656, 356, 327, 412, 194, 237, 349,
	332, 354, 696, 714, 355, 280, 400, 344, 410, 428,
	429, 217, 307, 418, 391, 424, 439, 188, 214, 321,
	384, 415, 375, 300, 396, 397, 270, 374, 245, 174,
	278, 436, 186, 364, 202, 179, 386, 408, 199, 367,
	0, 0, 441, 181, 406, 383, 297, 267, 268, 180,
	0, 348, 222, 243, 212, 316, 403, 404, 211, 442,
	190, 423, 183, 932, 422, 309, 399, 407, 298, 289,
	182, 405, 296, 288, 273, 233, 254, 342, 283, 343,
	255, 305, 304, 306, 0, 177, 0, 380, 416, 443,
	195, 196, 197, 645, 232, 236, 242, 244, 250, 251,
	258, 276, 320, 341, 339, 345, 726, 394, 411, 419,
	426, 432, 433, 437, 434, 435, 438, 308, 257, 376,
	272, 281, 718, 756, 326, 357, 200, 414, 377, 640,
	644, 638, 639, 690, 691, 641, 747, 748, 749, 722,
	634, 0, 642, 643, 0, 728, 737, 738, 695, 170,
	184, 277, 752, 346, 240, 440, 421, 417, 620, 637,
	216, 648, 0, 0, 660, 668, 669, 681, 683, 684,
	685, 686, 694, 702, 703, 705, 713, 715, 717, 719,
	724, 734, 755, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 260, 261, 264, 269, 286, 291,
	292, 293, 294, 310, 311, 312, 315, 318, 319, 322,
	324, 325, 328, 334, 335, 336, 337, 338, 340, 347,
	351, 359, 360, 361, 362, 363, 365, 366, 370, 371,
	372, 373, 381, 385, 401, 402, 413, 425, 430, 249,
	409, 431, 0, 285, 693, 700, 287, 234, 252, 262,
	708, 420, 382, 189, 353, 241, 178, 206, 192, 213,
	228, 231, 266, 295, 301, 330, 333, 246, 225, 204,
	350, 201, 368, 388, 389, 390, 392, 299, 220, 741,
	727, 393, 0, 676, 744, 647, 664, 754, 667, 670,
	710, 626, 689, 317, 661, 0, 651, 622, 657, 623,
	649, 678, 224, 646, 729, 692, 743, 275, 221, 628,
	652, 331, 666, 176, 712, 369, 209, 284, 282, 398,
	235, 227, 223, 208, 259, 290, 329, 387, 323, 750,
	279, 699, 0, 378, 302, 0, 0, 0, 680, 733,
	687, 723, 675, 711, 636, 698, 745, 662, 707, 746,
	265, 207, 175, 314, 379, 239, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 704, 740, 659, 706, 219, 263, 226,
	218, 395, 751, 732, 0, 191, 742, 682, 709, 757,
	621, 701, 0, 624, 627, 753, 736, 655, 229, 0,
	0, 0, 0, 0, 0, 0, 679, 688, 720, 673,
	0, 0, 0, 0, 0, 0, 1473, 0, 653, 0,
	697, 0, 0, 0, 632, 625, 0, 0, 0, 0,
	677, 0, 0, 0, 635, 0, 654, 721, 0, 619,
	247, 629, 303, 0, 725, 735, 674, 427, 739, 672,
	671, 716, 633, 731, 665, 274, 631, 271, 171, 187,
	0, 663, 313, 352, 358, 730, 650, 658, 210, 656,
	356, 327, 412, 194, 237, 349, 332, 354, 696, 714,
	355, 280, 400, 344, 410, 428, 429, 217, 307, 418,
	391, 424, 439, 188, 214, 321, 384, 415, 375, 300,
	396, 397, 270, 374, 245, 174, 278, 436, 186, 364,
	202, 179, 386, 408, 199, 367, 0, 0, 441, 181,
	406, 383, 297, 267, 268, 180, 0, 348, 222, 243,
	212, 316, 403, 404, 211, 442, 190, 423, 183, 932,
	422, 309, 399, 407, 298, 289, 182, 405, 296, 288,
	273, 233, 254, 342, 283, 343, 255, 305, 304, 306,
	0, 177, 0, 380, 416, 443, 195, 196, 197, 645,
	232, 236, 242, 244, 250, 251, 258, 276, 320, 341,
	339, 345, 726, 394, 411, 419, 426, 432, 433, 437,
	434, 435, 438, 308, 257, 376, 272, 281, 718, 756,
	326, 357, 200, 414, 377, 640, 644, 638, 639, 690,
	691, 641, 747, 748, 749, 722, 634, 0, 642, 643,
	0, 728, 737, 738, 695, 170, 184, 277, 752, 346,
	240, 440, 421, 417, 620, 637, 216, 648, 0, 0,
	660, 668, 669, 681, 683, 684, 685, 686, 694, 702,
	703, 705, 713, 715, 717, 719, 724, 734, 755, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	260, 261, 264, 269, 286, 291, 292, 293, 294, 310,
	311, 312, 315, 318, 319, 322, 324, 325, 328, 334,
	335, 336, 337, 338, 340, 347, 351, 359, 360, 361,
	362, 363, 365, 366, 370, 371, 372, 373, 381, 385,
	401, 402, 413, 425, 430, 249, 409, 431, 0, 285,
	693, 700, 287, 234, 252, 262, 708, 420, 382, 189,
	353, 241, 178, 206, 192, 213, 228, 231, 266, 295,
	301, 330, 333, 246, 225, 204, 350, 201, 368, 388,
	389, 390, 392, 299, 220, 741, 727, 393, 0, 676,
	744, 647, 664, 754, 667, 670, 710, 626, 689, 317,
	661, 0, 651, 622, 657, 623, 649, 678, 224, 646,
	729, 692, 743, 275, 221, 628, 652, 331, 666, 176,
	712, 369, 209, 284, 282, 398, 235, 227, 223, 208,
	259, 290, 329, 387, 323, 750, 279, 699, 0, 378,
	302, 0, 0, 0, 680, 733, 687, 723, 675, 711,
	636, 698, 745, 662, 707, 746, 265, 207, 175, 314,
	379, 239, 71, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 704,
	740, 659, 706, 219, 263, 226, 218, 395, 751, 732,
	0, 191, 742, 682, 709, 757, 621, 701, 0, 624,
	627, 753, 736, 655, 229, 0, 0, 0, 0, 0,
	0, 0, 679, 688, 720, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 653, 0, 697, 0, 0, 0,
	632, 625, 0, 0, 0, 0, 677, 0, 0, 0,
	635, 0, 654, 721, 0, 619, 247, 629, 303, 0,
	725, 735, 674, 427, 739, 672, 671, 716, 633, 731,
	665, 274, 631, 271, 171, 187, 0, 663, 313, 352,
	358, 730, 650, 658, 210, 656, 356, 327, 412, 194,
	237, 349, 332, 354, 696, 714, 355, 280, 400, 344,
	410, 428, 429, 217, 307, 418, 391, 424, 439, 188,
	214, 321, 384, 415, 375, 300, 396, 397, 270, 374,
	245, 174, 278, 436, 186, 364, 202, 179, 386, 408,
	199, 367, 0, 0, 441, 181, 406, 383, 297, 267,
	268, 180, 0, 348, 222, 243, 212, 316, 403, 404,
	211, 442, 190, 423, 183, 932, 422, 309, 399, 407,
	298, 289, 182, 405, 296, 288, 273, 233, 254, 342,
	283, 343, 255, 305, 304, 306, 0, 177, 0, 380,
	416, 443, 195, 196, 197, 645, 232, 236, 242, 244,
	250, 251, 258, 276, 320, 341, 339, 345, 726, 394,
	411, 419, 426, 432, 433, 437, 434, 435, 438, 308,
	257, 376, 272, 281, 718, 756, 326, 357, 200, 414,
	377, 640, 644, 638, 639, 690, 691, 641, 747, 748,
	749, 722, 634, 0, 642, 643, 0, 728, 737, 738,
	695, 170, 184, 277, 752, 346, 240, 440, 421, 417,
	620, 637, 216, 648, 0, 0, 660, 668, 669, 681,
	683, 684, 685, 686, 694, 702, 703, 705, 713, 715,
	717, 719, 724, 734, 755, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 260, 261, 264, 269,
	286, 291, 292, 293, 294, 310, 311, 312, 315, 318,
	319, 322, 324, 325, 328, 334, 335, 336, 337, 338,
	340, 347, 351, 359, 360, 361, 362, 363, 365, 366,
	370, 371, 372, 373, 381, 385, 401, 402, 413, 425,
	430, 249, 409, 431, 0, 285, 693, 700, 287, 234,
	252, 262, 708, 420, 382, 189, 353, 241, 178, 206,
	192, 213, 228, 231, 266, 295, 301, 330, 333, 246,
	225, 204, 350, 201, 368, 388, 389, 390, 392, 299,
	220, 741, 727, 393, 0, 676, 744, 647, 664, 754,
	667, 670, 710, 626, 689, 317, 661, 0, 651, 622,
	657, 623, 649, 678, 224, 646, 729, 692, 743, 275,
	221, 628, 652, 331, 666, 176, 712, 369, 209, 284,
	282, 398, 235, 227, 223, 208, 259, 290, 329, 387,
	323, 750, 279, 699, 0, 378, 302, 0, 0, 0,
	680, 733, 687, 723, 675, 711, 636, 698, 745, 662,
	707, 746, 265, 207, 175, 314, 379, 239, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 704, 740, 659, 706, 219,
	263, 226, 218, 395, 751, 732, 0, 191, 742, 682,
	709, 757, 621, 701, 0, 624, 627, 753, 736, 655,
	229, 0, 0, 0, 0, 0, 0, 0, 679, 688,
	720, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 0, 697, 0, 0, 0, 632, 625, 0, 0,
	0, 0, 677, 0, 0, 0, 635, 0, 654, 721,
	0, 619, 247, 629, 303, 0, 725, 735, 674, 427,
	739, 672, 671, 716, 633, 731, 665, 274, 631, 271,
	171, 187, 0, 663, 313, 352, 358, 730, 650, 658,
	210, 656, 356, 327, 412, 194, 237, 349, 332, 354,
	696, 714, 355, 280, 400, 344, 410, 428, 429, 217,
	307, 418, 391, 424, 439, 188, 214, 321, 384, 415,
	375, 300, 396, 397, 270, 374, 245, 174, 278, 436,
	186, 364, 202, 179, 386, 408, 199, 367, 0, 0,
	441, 181, 406, 383, 297, 267, 268, 180, 0, 348,
	222, 243, 212, 316, 403, 404, 211, 442, 190, 423,
	183, 932, 422, 309, 399, 407, 298, 289, 182, 405,
	296, 288, 273, 233, 254, 342, 283, 343, 255, 305,
	304, 306, 0, 177, 0, 380, 416, 443, 195, 196,
	197, 645, 232, 236, 242, 244, 250, 251, 258, 276,
	320, 341, 339, 345, 726, 394, 411, 419, 426, 432,
	433, 437, 434, 435, 438, 308, 257, 376, 272, 281,
	718, 756, 326, 357, 200, 414, 377, 640, 644, 638,
	639, 690, 691, 641, 747, 748, 749, 722, 634, 0,
	642, 643, 0, 728, 737, 738, 695, 170, 184, 277,
	752, 346, 240, 440, 421, 417, 620, 637, 216, 648,
	0, 0, 660, 668, 669, 681, 683, 684, 685, 686,
	694, 702, 703, 705, 713, 715, 717, 719, 724, 734,
	755, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 260, 261, 264, 269, 286, 291, 292, 293,
	294, 310, 311, 312, 315, 318, 319, 322, 324, 325,
	328, 334, 335, 336, 337, 338, 340, 347, 351, 359,
	360, 361, 362, 363, 365, 366, 370, 371, 372, 373,
	381, 385, 401, 402, 413, 425, 430, 249, 409, 431,
	0, 285, 693, 700, 287, 234, 252, 262, 708, 420,
	382, 189, 353, 241, 178, 206, 192, 213, 228, 231,
	266, 295, 301, 330, 333, 246, 225, 204, 350, 201,
	368, 388, 389, 390, 392, 299, 220, 741, 727, 393,
	0, 676, 744, 647, 664, 754, 667, 670, 710, 626,
	689, 317, 661, 0, 651, 622, 657, 623, 649, 678,
	224, 646, 729, 692, 743, 275, 221, 628, 652, 331,
	666, 176, 712, 369, 209, 284, 282, 398, 235, 227,
	223, 208, 259, 290, 329, 387, 323, 750, 279, 699,
	0, 378, 302, 0, 0, 0, 680, 733, 687, 723,
	675, 711, 636, 698, 745, 662, 707, 746, 265, 207,
	175, 314, 379, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 704, 740, 659, 706, 219, 263, 226, 218, 395,
	751, 732, 0, 758, 742, 682, 709, 757, 621, 701,
	0, 624, 627, 753, 736, 655, 229, 0, 0, 0,
	0, 0, 0, 0, 679, 688, 720, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 697, 0,
	0, 0, 632, 625, 0, 0, 0, 0, 677, 0,
	0, 0, 635, 0, 654, 721, 0, 619, 247, 629,
	303, 0, 725, 735, 674, 427, 739, 672, 671, 716,
	633, 731, 665, 274, 631, 271, 171, 187, 0, 663,
	313, 352, 358, 730, 650, 658, 210, 656, 356, 327,
	412, 194, 237, 349, 332, 354, 696, 714, 355, 280,
	400, 344, 410, 428, 429, 217, 307, 418, 391, 424,
	439, 188, 214, 321, 384, 415, 375, 300, 396, 397,
	270, 374, 245, 174, 278, 436, 186, 364, 202, 179,
	386, 408, 199, 367, 0, 0, 441, 181, 406, 383,
	297, 267, 268, 180, 0, 348, 222, 243, 212, 316,
	403, 404, 211, 442, 190, 423, 183, 630, 422, 309,
	399, 407, 298, 289, 182, 405, 296, 288, 273, 233,
	254, 342, 283, 343, 255, 305, 304, 306, 0, 177,
	0, 380, 416, 443, 195, 196, 197, 645, 232, 236,
	242, 244, 250, 251, 258, 276, 320, 341, 339, 345,
	726, 394, 411, 419, 426, 432, 433, 437, 434, 435,
	438, 618, 612, 611, 272, 281, 718, 756, 326, 357,
	200, 414, 377, 640, 644, 638, 639, 690, 691, 641,
	747, 748, 749, 722, 634, 0, 642, 643, 0, 728,
	737, 738, 695, 170, 184, 277, 752, 346, 240, 440,
	421, 417, 620, 637, 216, 648, 0, 0, 660, 668,
	669, 681, 683, 684, 685, 686, 694, 702, 703, 705,
	713, 715, 717, 719, 724, 734, 755, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 260, 261,
	264, 269, 286, 291, 292, 293, 294, 310, 311, 312,
	315, 318, 319, 322, 324, 325, 328, 334, 335, 336,
	337, 338, 340, 347, 351, 359, 360, 361, 362, 363,
	365, 366, 370, 371, 372, 373, 381, 385, 401, 402,
	413, 425, 430, 249, 409, 431, 0, 285, 693, 700,
	287, 234, 252, 262, 708, 420, 382, 189, 353, 241,
	178, 206, 192, 213, 228, 231, 266, 295, 301, 330,
	333, 246, 225, 204, 350, 201, 368, 388, 389, 390,
	392, 299, 220, 741, 727, 393, 0, 676, 744, 647,
	664, 754, 667, 670, 710, 626, 689, 317, 661, 0,
	651, 622, 657, 623, 649, 678, 224, 646, 729, 692,
	743, 275, 221, 628, 652, 331, 666, 176, 712, 369,
	209, 284, 282, 398, 235, 227, 223, 208, 259, 290,
	329, 387, 323, 750, 279, 699, 0, 378, 302, 0,
	0, 0, 680, 733, 687, 723, 675, 711, 636, 698,
	745, 662, 707, 746, 265, 207, 175, 314, 379, 239,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 704, 740, 659,
	706, 219, 263, 226, 218, 395, 751, 732, 0, 758,
	742, 682, 709, 757, 621, 701, 0, 624, 627, 753,
	736, 655, 229, 0, 0, 0, 0, 0, 0, 0,
	679, 688, 720, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 653, 0, 697, 0, 0, 0, 632, 625,
	0, 0, 0, 0, 677, 0, 0, 0, 635, 0,
	654, 721, 0, 619, 247, 629, 303, 0, 725, 735,
	674, 427, 739, 672, 671, 716, 633, 731, 665, 274,
	631, 271, 171, 187, 0, 663, 313, 352, 358, 730,
	650, 658, 210, 656, 356, 327, 412, 194, 237, 349,
	332, 354, 696, 714, 355, 280, 400, 344, 410, 428,
	429, 217, 307, 418, 391, 424, 439, 188, 214, 321,
	384, 415, 375, 300, 396, 397, 270, 374, 245, 174,
	278, 436, 186, 364, 202, 179, 386, 1100, 199, 367,
	0, 0, 441, 181, 406, 383, 297, 267, 268, 180,
	0, 348, 222, 243, 212, 316, 403, 404, 211, 442,
	190, 423, 183, 630, 422, 309, 399, 407, 298, 289,
	182, 405, 296, 288, 273, 233, 254, 342, 283, 343,
	255, 305, 304, 306, 0, 177, 0, 380, 416, 443,
	195, 196, 197, 645, 232, 236, 242, 244, 250, 251,
	258, 276, 320, 341, 339, 345, 726, 394, 411, 419,
	426, 432, 433, 437, 434, 435, 438, 618, 612, 611,
	272, 281, 718, 756, 326, 357, 200, 414, 377, 640,
	644, 638, 639, 690, 691, 641, 747, 748, 749, 722,
	634, 0, 642, 643, 0, 728, 737, 738, 695, 170,
	184, 277, 752, 346, 240, 440, 421, 417, 620, 637,
	216, 648, 0, 0, 660, 668, 669, 681, 683, 684,
	685, 686, 694, 702, 703, 705, 713, 715, 717, 719,
	724, 734, 755, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 260, 261, 264, 269, 286, 291,
	292, 293, 294, 310, 311, 312, 315, 318, 319, 322,
	324, 325, 328, 334, 335, 336, 337, 338, 340, 347,
	351, 359, 360, 361, 362, 363, 365, 366, 370, 371,
	372, 373, 381, 385, 401, 402, 413, 425, 430, 249,
	409, 431, 0, 285, 693, 700, 287, 234, 252, 262,
	708, 420, 382, 189, 353, 241, 178, 206, 192, 213,
	228, 231, 266, 295, 301, 330, 333, 246, 225, 204,
	350, 201, 368, 388, 389, 390, 392, 299, 220, 741,
	727, 393, 0, 676, 744, 647, 664, 754, 667, 670,
	710, 626, 689, 317, 661, 0, 651, 622, 657, 623,
	649, 678, 224, 646, 729, 692, 743, 275, 221, 628,
	652, 331, 666, 176, 712, 369, 209, 284, 282, 398,
	235, 227, 223, 208, 259, 290, 329, 387, 323, 750,
	279, 699, 0, 378, 302, 0, 0, 0, 680, 733,
	687, 723, 675, 711, 636, 698, 745, 662, 707, 746,
	265, 207, 175, 314, 379, 239, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 704, 740, 659, 706, 219, 263, 226,
	218, 395, 751, 732, 0, 758, 742, 682, 709, 757,
	621, 701, 0, 624, 627, 753, 736, 655, 229, 0,
	0, 0, 0, 0, 0, 0, 679, 688, 720, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 653, 0,
	697, 0, 0, 0, 632, 625, 0, 0, 0, 0,
	677, 0, 0, 0, 635, 0, 654, 721, 0, 619,
	247, 629, 303, 0, 725, 735, 674, 427, 739, 672,
	671, 716, 633, 731, 665, 274, 631, 271, 171, 187,
	0, 663, 313, 352, 358, 730, 650, 658, 210, 656,
	356, 327, 412, 194, 237, 349, 332, 354, 696, 714,
	355, 280, 400, 344, 410, 428, 429, 217, 307, 418,
	391, 424, 439, 188, 214, 321, 384, 415, 375, 300,
	396, 397, 270, 374, 245, 174, 278, 436, 186, 364,
	202, 179, 386, 609, 199, 367, 0, 0, 441, 181,
	406, 383, 297, 267, 268, 180, 0, 348, 222, 243,
	212, 316, 403, 404, 211, 442, 190, 423, 183, 630,
	422, 309, 399, 407, 298, 289, 182, 405, 296, 288,
	273, 233, 254, 342, 283, 343, 255, 305, 304, 306,
	0, 177, 0, 380, 416, 443, 195, 196, 197, 645,
	232, 236, 242, 244, 250, 251, 258, 276, 320, 341,
	339, 345, 726, 394, 411, 419, 426, 432, 433, 437,
	434, 435, 438, 618, 612, 611, 272, 281, 718, 756,
	326, 357, 200, 414, 377, 640, 644, 638, 639, 690,
	691, 641, 747, 748, 749, 722, 634, 0, 642, 643,
	0, 728, 737, 738, 695, 170, 184, 277, 752, 346,
	240, 440, 421, 417, 620, 637, 216, 648, 0, 0,
	660, 668, 669, 681, 683, 684, 685, 686, 694, 702,
	703, 705, 713, 715, 717, 719, 724, 734, 755, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	260, 261, 264, 269, 286, 291, 292, 293, 294, 310,
	311, 312, 315, 318, 319, 322, 324, 325, 328, 334,
	335, 336, 337, 338, 340, 347, 351, 359, 360, 361,
	362, 363, 365, 366, 370, 371, 372, 373, 381, 385,
	401, 402, 413, 425, 430, 249, 409, 431, 0, 285,
	693, 700, 287, 234, 252, 262, 708, 420, 382, 189,
	353, 241, 178, 206, 192, 213, 228, 231, 266, 295,
	301, 330, 333, 246, 225, 204, 350, 201, 368, 388,
	389, 390, 392, 299, 220, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	1401, 0, 509, 0, 0, 0, 224, 508, 0, 0,
	0, 275, 221, 0, 1402, 331, 0, 176, 0, 369,
	209, 284, 282, 398, 235, 227, 223, 208, 259, 290,
	329, 387, 323, 552, 279, 0, 0, 378, 302, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 207, 175, 314, 379, 239,
	71, 0, 0, 167, 168, 169, 530, 529, 532, 533,
	534, 535, 0, 0, 198, 531, 205, 536, 537, 538,
	0, 219, 263, 226, 218, 395, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 506, 523, 0, 551, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 521,
	599, 0, 0, 0, 567, 0, 522, 0, 0, 515,
	516, 518, 517, 519, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 303, 0, 566, 0,
	0, 427, 0, 0, 564, 0, 0, 0, 0, 274,
	0, 271, 171, 187, 0, 0, 313, 352, 358, 0,
	0, 0, 210, 0, 356, 327, 412, 194, 237, 349,
	332, 354, 0, 0, 355, 280, 400, 344, 410, 428,
	429, 217, 307, 418, 391, 424, 439, 188, 214, 321,
	384, 415, 375, 300, 396, 397, 270, 374, 245, 174,
	278, 436, 186, 364, 202, 179, 386, 408, 199, 367,
	0, 0, 441, 181, 406, 383, 297, 267, 268, 180,
	0, 348, 222, 243, 212, 316, 403, 404, 211, 442,
	190, 423, 183, 0, 422, 309, 399, 407, 298, 289,
	182, 405, 296, 288, 273, 233, 254, 342, 283, 343,
	255, 305, 304, 306, 0, 177, 0, 380, 416, 443,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 276, 320, 341, 339, 345, 0, 394, 411, 419,
	426, 432, 433, 437, 434, 435, 438, 308, 257, 376,
	272, 281, 0, 0, 326, 357, 200, 414, 377, 554,
	565, 560, 561, 558, 559, 553, 557, 556, 555, 568,
	545, 546, 547, 548, 550, 0, 562, 563, 549, 170,
	184, 277, 0, 346, 240, 440, 421, 417, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 260, 261, 264, 269, 286, 291,
	292, 293, 294, 310, 311, 312, 315, 318, 319, 322,
	324, 325, 328, 334, 335, 336, 337, 338, 340, 347,
	351, 359, 360, 361, 362, 363, 365, 366, 370, 371,
	372, 373, 381, 385, 401, 402, 413, 425, 430, 249,
	409, 431, 0, 285, 0, 0, 287, 234, 252, 262,
	0, 420, 382, 189, 353, 241, 178, 206, 192, 213,
	228, 231, 266, 295, 301, 330, 333, 246, 225, 204,
	350, 201, 368, 388, 389, 390, 392, 299, 220, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 509, 0, 0, 0,
	224, 508, 0, 0, 0, 275, 221, 0, 0, 331,
	0, 176, 0, 369, 209, 284, 282, 398, 235, 227,
	223, 208, 259, 290, 329, 387, 323, 552, 279, 0,
	0, 378, 302, 0, 0, 0, 0, 0, 543, 544,
	0, 0, 0, 0, 0, 0, 1512, 0, 265, 207,
	175, 314, 379, 239, 71, 0, 0, 167, 168, 169,
	530, 529, 532, 533, 534, 535, 0, 0, 198, 531,
	205, 536, 537, 538, 1513, 219, 263, 226, 218, 395,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 506,
	523, 0, 551, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 521, 0, 0, 0, 0, 567, 0,
	522, 0, 0, 515, 516, 518, 517, 519, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	303, 0, 566, 0, 0, 427, 0, 0, 564, 0,
	0, 0, 0, 274, 0, 271, 171, 187, 0, 0,
	313, 352, 358, 0, 0, 0, 210, 0, 356, 327,
	412, 194, 237, 349, 332, 354, 0, 0, 355, 280,
	400, 344, 410, 428, 429, 217, 307, 418, 391, 424,
	439, 188, 214, 321, 384, 415, 375, 300, 396, 397,
	270, 374, 245, 174, 278, 436, 186, 364, 202, 179,
	386, 408, 199, 367, 0, 0, 441, 181, 406, 383,
	297, 267, 268, 180, 0, 348, 222, 243, 212, 316,
	403, 404, 211, 442, 190, 423, 183, 0, 422, 309,
	399, 407, 298, 289, 182, 405, 296, 288, 273, 233,
	254, 342, 283, 343, 255, 305, 304, 306, 0, 177,
	0, 380, 416, 443, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 276, 320, 341, 339, 345,
	0, 394, 411, 419, 426, 432, 433, 437, 434, 435,
	438, 308, 257, 376, 272, 281, 0, 0, 326, 357,
	200, 414, 377, 554, 565, 560, 561, 558, 559, 553,
	557, 556, 555, 568, 545, 546, 547, 548, 550, 0,
	562, 563, 549, 170, 184, 277, 0, 346, 240, 440,
	421, 417, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 260, 261,
	264, 269, 286, 291, 292, 293, 294, 310, 311, 312,
	315, 318, 319, 322, 324, 325, 328, 334, 335, 336,
	337, 338, 340, 347, 351, 359, 360, 361, 362, 363,
	365, 366, 370, 371, 372, 373, 381, 385, 401, 402,
	413, 425, 430, 249, 409, 431, 0, 285, 0, 0,
	287, 234, 252, 262, 0, 420, 382, 189, 353, 241,
	178, 206, 192, 213, 228, 231, 266, 295, 301, 330,
	333, 246, 225, 204, 350, 201, 368, 388, 389, 390,
	392, 299, 220, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	509, 0, 0, 0, 224, 508, 0, 0, 0, 275,
	221, 0, 0, 331, 0, 176, 0, 369, 209, 284,
	282, 398, 235, 227, 223, 208, 259, 290, 329, 387,
	323, 552, 279, 0, 0, 378, 302, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 207, 175, 314, 379, 239, 71, 0,
	586, 167, 168, 169, 530, 529, 532, 533, 534, 535,
	0, 0, 198, 531, 205, 536, 537, 538, 0, 219,
	263, 226, 218, 395, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 506, 523, 0, 551, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 521, 0, 0,
	0, 0, 567, 0, 522, 0, 0, 515, 516, 518,
	517, 519, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 303, 0, 566, 0, 0, 427,
	0, 0, 564, 0, 0, 0, 0, 274, 0, 271,
	171, 187, 0, 0, 313, 352, 358, 0, 0, 0,
	210, 0, 356, 327, 412, 194, 237, 349, 332, 354,
	0, 0, 355, 280, 400, 344, 410, 428, 429, 217,
	307, 418, 391, 424, 439, 188, 214, 321, 384, 415,
	375, 300, 396, 397, 270, 374, 245, 174, 278, 436,
	186, 364, 202, 179, 386, 408, 199, 367, 0, 0,
	441, 181, 406, 383, 297, 267, 268, 180, 0, 348,
	222, 243, 212, 316, 403, 404, 211, 442, 190, 423,
	183, 0, 422, 309, 399, 407, 298, 289, 182, 405,
	296, 288, 273, 233, 254, 342, 283, 343, 255, 305,
	304, 306, 0, 177, 0, 380, 416, 443, 195, 196,
	197, 0, 232, 236, 242, 244, 250, 251, 258, 276,
	320, 341, 339, 345, 0, 394, 411, 419, 426, 432,
	433, 437, 434, 435, 438, 308, 257, 376, 272, 281,
	0, 0, 326, 357, 200, 414, 377, 554, 565, 560,
	561, 558, 559, 553, 557, 556, 555, 568, 545, 546,
	547, 548, 550, 0, 562, 563, 549, 170, 184, 277,
	0, 346, 240, 440, 421, 417, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 260, 261, 264, 269, 286, 291, 292, 293,
	294, 310, 311, 312, 315, 318, 319, 322, 324, 325,
	328, 334, 335, 336, 337, 338, 340, 347, 351, 359,
	360, 361, 362, 363, 365, 366, 370, 371, 372, 373,
	381, 385, 401, 402, 413, 425, 430, 249, 409, 431,
	0, 285, 0, 0, 287, 234, 252, 262, 0, 420,
	382, 189, 353, 241, 178, 206, 192, 213, 228, 231,
	266, 295, 301, 330, 333, 246, 225, 204, 350, 201,
	368, 388, 389, 390, 392, 299, 220, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 509, 0, 0, 0, 224, 508,
	0, 0, 0, 275, 221, 0, 0, 331, 0, 176,
	0, 369, 209, 284, 282, 398, 235, 227, 223, 208,
	259, 290, 329, 387, 323, 552, 279, 0, 0, 378,
	302, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 207, 175, 314,
	379, 239, 71, 0, 0, 167, 168, 169, 530, 529,
	532, 533, 534, 535, 0, 0, 198, 531, 205, 536,
	537, 538, 0, 219, 263, 226, 218, 395, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 506, 523, 0,
	551, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 599, 0, 0, 0, 567, 0, 522, 0,
	0, 515, 516, 518, 517, 519, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 303, 0,
	566, 0, 0, 427, 0, 0, 564, 0, 0, 0,
	0, 274, 0, 271, 171, 187, 0, 0, 313, 352,
	358, 0, 0, 0, 210, 0, 356, 327, 412, 194,
	237, 349, 332, 354, 0, 0, 355, 280, 400, 344,
	410, 428, 429, 217, 307, 418, 391, 424, 439, 188,
	214, 321, 384, 415, 375, 300, 396, 397, 270, 374,
	245, 174, 278, 436, 186, 364, 202, 179, 386, 408,
	199, 367, 0, 0, 441, 181, 406, 383, 297, 267,
	268, 180, 0, 348, 222, 243, 212, 316, 403, 404,
	211, 442, 190, 423, 183, 0, 422, 309, 399, 407,
	298, 289, 182, 405, 296, 288, 273, 233, 254, 342,
	283, 343, 255, 305, 304, 306, 0, 177, 0, 380,
	416, 443, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 276, 320, 341, 339, 345, 0, 394,
	411, 419, 426, 432, 433, 437, 434, 435, 438, 308,
	257, 376, 272, 281, 0, 0, 326, 357, 200, 414,
	377, 554, 565, 560, 561, 558, 559, 553, 557, 556,
	555, 568, 545, 546, 547, 548, 550, 0, 562, 563,
	549, 170, 184, 277, 0, 346, 240, 440, 421, 417,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 260, 261, 264, 269,
	286, 291, 292, 293, 294, 310, 311, 312, 315, 318,
	319, 322, 324, 325, 328, 334, 335, 336, 337, 338,
	340, 347, 351, 359, 360, 361, 362, 363, 365, 366,
	370, 371, 372, 373, 381, 385, 401, 402, 413, 425,
	430, 249, 409, 431, 0, 285, 0, 0, 287, 234,
	252, 262, 0, 420, 382, 189, 353, 241, 178, 206,
	192, 213, 228, 231, 266, 295, 301, 330, 333, 246,
	225, 204, 350, 201, 368, 388, 389, 390, 392, 299,
	220, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 509, 0,
	0, 0, 224, 508, 0, 0, 0, 275, 221, 0,
	0, 331, 0, 176, 0, 369, 209, 284, 282, 398,
	235, 227, 223, 208, 259, 290, 329, 387, 323, 552,
	279, 0, 0, 378, 302, 0, 0, 0, 0, 0,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 207, 175, 314, 379, 239, 71, 0, 0, 167,
	168, 169, 530, 1419, 532, 533, 534, 535, 0, 0,
	198, 531, 205, 536, 537, 538, 0, 219, 263, 226,
	218, 395, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 506, 523, 0, 551, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 521, 599, 0, 0, 0,
	567, 0, 522, 0, 0, 515, 516, 518, 517, 519,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 303, 0, 566, 0, 0, 427, 0, 0,
	564, 0, 0, 0, 0, 274, 0, 271, 171, 187,
	0, 0, 313, 352, 358, 0, 0, 0, 210, 0,
	356, 327, 412, 194, 237, 349, 332, 354, 0, 0,
	355, 280, 400, 344, 410, 428, 429, 217, 307, 418,
	391, 424, 439, 188, 214, 321, 384, 415, 375, 300,
	396, 397, 270, 374, 245, 174, 278, 436, 186, 364,
	202, 179, 386, 408, 199, 367, 0, 0, 441, 181,
	406, 383, 297, 267, 268, 180, 0, 348, 222, 243,
	212, 316, 403, 404, 211, 442, 190, 423, 183, 0,
	422, 309, 399, 407, 298, 289, 182, 405, 296, 288,
	273, 233, 254, 342, 283, 343, 255, 305, 304, 306,
	0, 177, 0, 380, 416, 443, 195, 196, 197, 0,
	232, 236, 242, 244, 250, 251, 258, 276, 320, 341,
	339, 345, 0, 394, 411, 419, 426, 432, 433, 437,
	434, 435, 438, 308, 257, 376, 272, 281, 0, 0,
	326, 357, 200, 414, 377, 554, 565, 560, 561, 558,
	559, 553, 557, 556, 555, 568, 545, 546, 547, 548,
	550, 0, 562, 563, 549, 170, 184, 277, 0, 346,
	240, 440, 421, 417, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	260, 261, 264, 269, 286, 291, 292, 293, 294, 310,
	311, 312, 315, 318, 319, 322, 324, 325, 328, 334,
	335, 336, 337, 338, 340, 347, 351, 359, 360, 361,
	362, 363, 365, 366, 370, 371, 372, 373, 381, 385,
	401, 402, 413, 425, 430, 249, 409, 431, 0, 285,
	0, 0, 287, 234, 252, 262, 0, 420, 382, 189,
	353, 241, 178, 206, 192, 213, 228, 231, 266, 295,
	301, 330, 333, 246, 225, 204, 350, 201, 368, 388,
	389, 390, 392, 299, 220, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 509, 0, 0, 0, 224, 508, 0, 0,
	0, 275, 221, 0, 0, 331, 0, 176, 0, 369,
	209, 284, 282, 398, 235, 227, 223, 208, 259, 290,
	329, 387, 323, 552, 279, 0, 0, 378, 302, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 207, 175, 314, 379, 239,
	71, 0, 0, 167, 168, 169, 530, 1416, 532, 533,
	534, 535, 0, 0, 198, 531, 205, 536, 537, 538,
	0, 219, 263, 226, 218, 395, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 506, 523, 0, 551, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 521,
	599, 0, 0, 0, 567, 0, 522, 0, 0, 515,
	516, 518, 517, 519, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 303, 0, 566, 0,
	0, 427, 0, 0, 564, 0, 0, 0, 0, 274,
	0, 271, 171, 187, 0, 0, 313, 352, 358, 0,
	0, 0, 210, 0, 356, 327, 412, 194, 237, 349,
	332, 354, 0, 0, 355, 280, 400, 344, 410, 428,
	429, 217, 307, 418, 391, 424, 439, 188, 214, 321,
	384, 415, 375, 300, 396, 397, 270, 374, 245, 174,
	278, 436, 186, 364, 202, 179, 386, 408, 199, 367,
	0, 0, 441, 181, 406, 383, 297, 267, 268, 180,
	0, 348, 222, 243, 212, 316, 403, 404, 211, 442,
	190, 423, 183, 0, 422, 309, 399, 407, 298, 289,
	182, 405, 296, 288, 273, 233, 254, 342, 283, 343,
	255, 305, 304, 306, 0, 177, 0, 380, 416, 443,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 276, 320, 341, 339, 345, 0, 394, 411, 419,
	426, 432, 433, 437, 434, 435, 438, 308, 257, 376,
	272, 281, 0, 0, 326, 357, 200, 414, 377, 554,
	565, 560, 561, 558, 559, 553, 557, 556, 555, 568,
	545, 546, 547, 548, 550, 0, 562, 563, 549, 170,
	184, 277, 0, 346, 240, 440, 421, 417, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 260, 261, 264, 269, 286, 291,
	292, 293, 294, 310, 311, 312, 315, 318, 319, 322,
	324, 325, 328, 334, 335, 336, 337, 338, 340, 347,
	351, 359, 360, 361, 362, 363, 365, 366, 370, 371,
	372, 373, 381, 385, 401, 402, 413, 425, 430, 249,
	409, 431, 0, 285, 0, 0, 287, 234, 252, 262,
	0, 420, 382, 189, 353, 241, 178, 206, 192, 213,
	228, 231, 266, 295, 301, 330, 333, 246, 225, 204,
	350, 201, 368, 388, 389, 390, 392, 299, 220, 579,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 509, 0, 0,
	0, 224, 508, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 552, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 71, 0, 0, 167, 168,
	169, 530, 529, 532, 533, 534, 535, 0, 0, 198,
	531, 205, 536, 537, 538, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	506, 523, 0, 551, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 521, 0, 0, 0, 0, 567,
	0, 522, 0, 0, 515, 516, 518, 517, 519, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 566, 0, 0, 427, 0, 0, 564,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 554, 565, 560, 561, 558, 559,
	553, 557, 556, 555, 568, 545, 546, 547, 548, 550,
	0, 562, 563, 549, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 509, 0, 0, 0, 224, 508, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 552, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 71,
	0, 0, 167, 168, 169, 530, 529, 532, 533, 534,
	535, 0, 0, 198, 531, 205, 536, 537, 538, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 506, 523, 0, 551, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 521, 0,
	0, 0, 0, 567, 0, 522, 0, 0, 515, 516,
	518, 517, 519, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 566, 0, 0,
	427, 0, 0, 564, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 554, 565,
	560, 561, 558, 559, 553, 557, 556, 555, 568, 545,
	546, 547, 548, 550, 0, 562, 563, 549, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 552, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 71, 0, 0, 167, 168, 169, 530,
	529, 532, 533, 534, 535, 0, 0, 198, 531, 205,
	536, 537, 538, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 523,
	0, 551, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 521, 0, 0, 0, 0, 567, 0, 522,
	0, 0, 515, 516, 518, 517, 519, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 566, 0, 0, 427, 0, 0, 564, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 2237, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 554, 565, 560, 561, 558, 559, 553, 557,
	556, 555, 568, 545, 546, 547, 548, 550, 0, 562,
	563, 549, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	552, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 71, 0, 586,
	167, 168, 169, 530, 529, 532, 533, 534, 535, 0,
	0, 198, 531, 205, 536, 537, 538, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 523, 0, 551, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 0, 0, 0,
	0, 567, 0, 522, 0, 0, 515, 516, 518, 517,
	519, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 566, 0, 0, 427, 0,
	0, 564, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 554, 565, 560, 561,
	558, 559, 553, 557, 556, 555, 568, 545, 546, 547,
	548, 550, 0, 562, 563, 549, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 552, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 71, 0, 0, 167, 168, 169, 530, 529, 532,
	533, 534, 535, 0, 0, 198, 531, 205, 536, 537,
	538, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 523, 0, 551,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	521, 0, 0, 0, 0, 567, 0, 522, 0, 0,
	515, 516, 518, 517, 519, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 566,
	0, 0, 427, 0, 0, 564, 0, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	554, 565, 560, 561, 558, 559, 553, 557, 556, 555,
	568, 545, 546, 547, 548, 550, 0, 562, 563, 549,
	170, 184, 277, 0, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 975,
	974, 984, 985, 977, 978, 979, 980, 981, 982, 983,
	976, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 803,
	427, 0, 0, 0, 0, 0, 800, 801, 274, 766,
	271, 171, 187, 794, 798, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 1078, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	1080, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 964, 965, 963, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 35, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 275,
	221, 0, 0, 331, 0, 176, 0, 369, 209, 284,
	282, 398, 235, 227, 223, 208, 259, 290, 329, 387,
	323, 0, 279, 0, 0, 378, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 207, 175, 314, 379, 239, 71, 0,
	586, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	263, 226, 218, 395, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 303, 0, 0, 0, 0, 427,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 271,
	171, 187, 0, 0, 313, 352, 358, 0, 0, 0,
	210, 0, 356, 327, 412, 194, 237, 349, 332, 354,
	0, 0, 355, 280, 400, 344, 410, 428, 429, 217,
	307, 418, 391, 424, 439, 188, 214, 321, 384, 415,
	375, 300, 396, 397, 270, 374, 245, 174, 278, 436,
	186, 364, 202, 179, 386, 408, 199, 367, 0, 0,
	441, 181, 406, 383, 297, 267, 268, 180, 0, 348,
	222, 243, 212, 316, 403, 404, 211, 442, 190, 423,
	183, 0, 422, 309, 399, 407, 298, 289, 182, 405,
	296, 288, 273, 233, 254, 342, 283, 343, 255, 305,
	304, 306, 0, 177, 0, 380, 416, 443, 195, 196,
	197, 0, 232, 236, 242, 244, 250, 251, 258, 276,
	320, 341, 339, 345, 0, 394, 411, 419, 426, 432,
	433, 437, 434, 435, 438, 308, 257, 376, 272, 281,
	0, 0, 326, 357, 200, 414, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 277,
	0, 346, 240, 440, 421, 417, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 260, 261, 264, 269, 286, 291, 292, 293,
	294, 310, 311, 312, 315, 318, 319, 322, 324, 325,
	328, 334, 335, 336, 337, 338, 340, 347, 351, 359,
	360, 361, 362, 363, 365, 366, 370, 371, 372, 373,
	381, 385, 401, 402, 413, 425, 430, 249, 409, 431,
	0, 285, 0, 0, 287, 234, 252, 262, 0, 420,
	382, 189, 353, 241, 178, 206, 192, 213, 228, 231,
	266, 295, 301, 330, 333, 246, 225, 204, 350, 201,
	368, 388, 389, 390, 392, 299, 220, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 1446, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 275, 221, 0, 0, 331, 0, 176,
	0, 369, 209, 284, 282, 398, 235, 227, 223, 208,
	259, 290, 329, 387, 323, 0, 279, 0, 0, 378,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 207, 175, 314,
	379, 239, 0, 0, 0, 167, 168, 169, 0, 1261,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 263, 226, 218, 395, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 303, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 271, 171, 187, 0, 0, 313, 352,
	358, 0, 0, 0, 210, 0, 356, 327, 412, 194,
	237, 349, 332, 354, 0, 1444, 355, 280, 400, 344,
	410, 428, 429, 217, 307, 418, 391, 424, 439, 188,
	214, 321, 384, 415, 375, 300, 396, 397, 270, 374,
	245, 174, 278, 436, 186, 364, 202, 179, 386, 408,
	199, 367, 0, 0, 441, 181, 406, 383, 297, 267,
	268, 180, 0, 348, 222, 243, 212, 316, 403, 404,
	211, 442, 190, 423, 183, 0, 422, 309, 399, 407,
	298, 289, 182, 405, 296, 288, 273, 233, 254, 342,
	283, 343, 255, 305, 304, 306, 0, 177, 0, 380,
	416, 443, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 276, 320, 341, 339, 345, 0, 394,
	411, 419, 426, 432, 433, 437, 434, 435, 438, 308,
	257, 376, 272, 281, 0, 0, 326, 357, 200, 414,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 277, 0, 346, 240, 440, 421, 417,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 260, 261, 264, 269,
	286, 291, 292, 293, 294, 310, 311, 312, 315, 318,
	319, 322, 324, 325, 328, 334, 335, 336, 337, 338,
	340, 347, 351, 359, 360, 361, 362, 363, 365, 366,
	370, 371, 372, 373, 381, 385, 401, 402, 413, 425,
	430, 249, 409, 431, 0, 285, 0, 0, 287, 234,
	252, 262, 0, 420, 382, 189, 353, 241, 178, 206,
	192, 213, 228, 231, 266, 295, 301, 330, 333, 246,
	225, 204, 350, 201, 368, 388, 389, 390, 392, 299,
	220, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 275, 221, 0,
	0, 331, 0, 176, 0, 369, 209, 284, 282, 398,
	235, 227, 223, 208, 259, 290, 329, 387, 323, 0,
	279, 0, 0, 378, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 207, 175, 314, 379, 239, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 263, 226,
	218, 395, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 303, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 0, 274, 766, 271, 171, 187,
	764, 0, 313, 352, 358, 0, 0, 0, 210, 0,
	356, 327, 412, 194, 237, 349, 332, 354, 0, 0,
	355, 280, 400, 344, 410, 428, 429, 217, 307, 418,
	391, 424, 439, 188, 214, 321, 384, 415, 375, 300,
	396, 397, 270, 374, 245, 174, 278, 436, 186, 364,
	202, 179, 386, 408, 199, 367, 0, 0, 441, 181,
	406, 383, 297, 267, 268, 180, 0, 348, 222, 243,
	212, 316, 403, 404, 211, 442, 190, 423, 183, 0,
	422, 309, 399, 407, 298, 289, 182, 405, 296, 288,
	273, 233, 254, 342, 283, 343, 255, 305, 304, 306,
	0, 177, 0, 380, 416, 443, 195, 196, 197, 0,
	232, 236, 242, 244, 250, 251, 258, 276, 320, 341,
	339, 345, 0, 394, 411, 419, 426, 432, 433, 437,
	434, 435, 438, 308, 257, 376, 272, 281, 0, 0,
	326, 357, 200, 414, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 277, 0, 346,
	240, 440, 421, 417, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	260, 261, 264, 269, 286, 291, 292, 293, 294, 310,
	311, 312, 315, 318, 319, 322, 324, 325, 328, 334,
	335, 336, 337, 338, 340, 347, 351, 359, 360, 361,
	362, 363, 365, 366, 370, 371, 372, 373, 381, 385,
	401, 402, 413, 425, 430, 249, 409, 431, 0, 285,
	0, 0, 287, 234, 252, 262, 0, 420, 382, 189,
	353, 241, 178, 206, 192, 213, 228, 231, 266, 295,
	301, 330, 333, 246, 225, 204, 350, 201, 368, 388,
	389, 390, 392, 299, 220, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 1446, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 275, 221, 0, 0, 331, 0, 176, 0, 369,
	209, 284, 282, 398, 235, 227, 223, 208, 259, 290,
	329, 387, 323, 0, 279, 0, 0, 378, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 207, 175, 314, 379, 239,
	0, 0, 0, 167, 168, 169, 0, 1261, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 263, 226, 218, 395, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 303, 0, 0, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 271, 171, 187, 0, 0, 313, 352, 358, 0,
	0, 0, 210, 0, 356, 327, 412, 194, 237, 349,
	332, 354, 0, 0, 355, 280, 400, 344, 410, 428,
	429, 217, 307, 418, 391, 424, 439, 188, 214, 321,
	384, 415, 375, 300, 396, 397, 270, 374, 245, 174,
	278, 436, 186, 364, 202, 179, 386, 408, 199, 367,
	0, 0, 441, 181, 406, 383, 297, 267, 268, 180,
	0, 348, 222, 243, 212, 316, 403, 404, 211, 442,
	190, 423, 183, 0, 422, 309, 399, 407, 298, 289,
	182, 405, 296, 288, 273, 233, 254, 342, 283, 343,
	255, 305, 304, 306, 0, 177, 0, 380, 416, 443,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 276, 320, 341, 339, 345, 0, 394, 411, 419,
	426, 432, 433, 437, 434, 435, 438, 308, 257, 376,
	272, 281, 0, 0, 326, 357, 200, 414, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 277, 0, 346, 240, 440, 421, 417, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 260, 261, 264, 269, 286, 291,
	292, 293, 294, 310, 311, 312, 315, 318, 319, 322,
	324, 325, 328, 334, 335, 336, 337, 338, 340, 347,
	351, 359, 360, 361, 362, 363, 365, 366, 370, 371,
	372, 373, 381, 385, 401, 402, 413, 425, 430, 249,
	409, 431, 0, 285, 0, 0, 287, 234, 252, 262,
	0, 420, 382, 189, 353, 241, 178, 206, 192, 213,
	228, 231, 266, 295, 301, 330, 333, 246, 225, 204,
	350, 201, 368, 388, 389, 390, 392, 299, 220, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 275, 221, 0, 0, 331,
	0, 176, 0, 369, 209, 284, 282, 398, 235, 227,
	223, 208, 259, 290, 329, 387, 323, 0, 279, 0,
	0, 378, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 207,
	175, 314, 379, 239, 0, 0, 586, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 263, 226, 218, 395,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	303, 0, 0, 0, 0, 427, 0, 0, 0, 2127,
	0, 0, 0, 274, 0, 271, 171, 187, 0, 0,
	313, 352, 358, 0, 0, 0, 210, 0, 356, 327,
	412, 194, 237, 349, 332, 354, 0, 0, 355, 280,
	400, 344, 410, 428, 429, 217, 307, 418, 391, 424,
	439, 188, 214, 321, 384, 415, 375, 300, 396, 397,
	270, 374, 245, 174, 278, 436, 186, 364, 202, 179,
	386, 408, 199, 367, 0, 0, 441, 181, 406, 383,
	297, 267, 268, 180, 0, 348, 222, 243, 212, 316,
	403, 404, 211, 442, 190, 423, 183, 0, 422, 309,
	399, 407, 298, 289, 182, 405, 296, 288, 273, 233,
	254, 342, 283, 343, 255, 305, 304, 306, 0, 177,
	0, 380, 416, 443, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 276, 320, 341, 339, 345,
	0, 394, 411, 419, 426, 432, 433, 437, 434, 435,
	438, 308, 257, 376, 272, 281, 0, 0, 326, 357,
	200, 414, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 277, 0, 346, 240, 440,
	421, 417, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 260, 261,
	264, 269, 286, 291, 292, 293, 294, 310, 311, 312,
	315, 318, 319, 322, 324, 325, 328, 334, 335, 336,
	337, 338, 340, 347, 351, 359, 360, 361, 362, 363,
	365, 366, 370, 371, 372, 373, 381, 385, 401, 402,
	413, 425, 430, 249, 409, 431, 0, 285, 0, 0,
	287, 234, 252, 262, 0, 420, 382, 189, 353, 241,
	178, 206, 192, 213, 228, 231, 266, 295, 301, 330,
	333, 246, 225, 204, 350, 201, 368, 388, 389, 390,
	392, 299, 220, 35, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 71,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	0, 1465, 0, 0, 1466, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 1111, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	0, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 0, 0, 0,
	167, 168, 169, 0, 1110, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 0, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 0,
	0, 0, 427, 0, 0, 0, 2210, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 277, 0, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	2127, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 71,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	1261, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	0, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 0, 0, 0,
	167, 168, 169, 0, 1080, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 0, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 277, 1351, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 1233, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 1231, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 1229, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 1227, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	0, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	1225, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 0, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 277, 0, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 1221, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 1219, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 1217, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 249, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	0, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 1192, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 0, 0, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 0, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 277, 0, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	1084, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	275, 221, 0, 0, 331, 0, 176, 0, 369, 209,
	284, 282, 398, 235, 227, 223, 208, 259, 290, 329,
	387, 323, 0, 279, 0, 0, 378, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 207, 175, 314, 379, 239, 0,
	0, 0, 167, 168, 169, 0, 940, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 263, 226, 218, 395, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 303, 0, 0, 0, 0,
	427, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	271, 171, 187, 0, 0, 313, 352, 358, 0, 0,
	0, 210, 0, 356, 327, 412, 194, 237, 349, 332,
	354, 0, 0, 355, 280, 400, 344, 410, 428, 429,
	217, 307, 418, 391, 424, 439, 188, 214, 321, 384,
	415, 375, 300, 396, 397, 270, 374, 245, 174, 278,
	436, 186, 364, 202, 179, 386, 408, 199, 367, 0,
	0, 441, 181, 406, 383, 297, 267, 268, 180, 0,
	348, 222, 243, 212, 316, 403, 404, 211, 442, 190,
	423, 183, 0, 422, 309, 399, 407, 298, 289, 182,
	405, 296, 288, 273, 233, 254, 342, 283, 343, 255,
	305, 304, 306, 0, 177, 0, 380, 416, 443, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	276, 320, 341, 339, 345, 0, 394, 411, 419, 426,
	432, 433, 437, 434, 435, 438, 308, 257, 376, 272,
	281, 0, 0, 326, 357, 200, 414, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	277, 0, 346, 240, 440, 421, 417, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 260, 261, 264, 269, 286, 291, 292,
	293, 294, 310, 311, 312, 315, 318, 319, 322, 324,
	325, 328, 334, 335, 336, 337, 338, 340, 347, 351,
	359, 360, 361, 362, 363, 365, 366, 370, 371, 372,
	373, 381, 385, 401, 402, 413, 425, 430, 249, 409,
	431, 0, 285, 0, 0, 287, 234, 252, 262, 0,
	420, 382, 189, 353, 241, 178, 206, 192, 213, 228,
	231, 266, 295, 301, 330, 333, 246, 225, 204, 350,
	201, 368, 388, 389, 390, 392, 299, 220, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 275, 221, 0, 0, 331, 0,
	176, 0, 369, 209, 284, 282, 398, 235, 227, 223,
	208, 259, 290, 329, 387, 323, 0, 279, 0, 0,
	378, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 207, 175,
	314, 379, 239, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 263, 226, 218, 395, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 247, 0, 303,
	0, 0, 0, 0, 427, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 271, 171, 187, 0, 0, 313,
	352, 358, 0, 0, 0, 210, 0, 356, 327, 412,
	194, 237, 349, 332, 354, 0, 0, 355, 280, 400,
	344, 410, 428, 429, 217, 307, 418, 391, 424, 439,
	188, 214, 321, 384, 415, 375, 300, 396, 397, 270,
	374, 245, 174, 278, 436, 186, 364, 202, 179, 386,
	408, 199, 367, 0, 0, 441, 181, 406, 383, 297,
	267, 268, 180, 0, 348, 222, 243, 212, 316, 403,
	404, 211, 442, 190, 423, 183, 0, 422, 309, 399,
	407, 298, 289, 182, 405, 296, 288, 273, 233, 254,
	342, 283, 343, 255, 305, 304, 306, 0, 177, 0,
	380, 416, 443, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 276, 320, 341, 339, 345, 0,
	394, 411, 419, 426, 432, 433, 437, 434, 435, 438,
	308, 257, 376, 272, 281, 0, 0, 326, 357, 200,
	414, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 277, 0, 346, 240, 440, 421,
	417, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 260, 261, 264,
	269, 286, 291, 292, 293, 294, 310, 311, 312, 315,
	318, 319, 322, 324, 325, 328, 334, 335, 336, 337,
	338, 340, 347, 351, 359, 360, 361, 362, 363, 365,
	366, 370, 371, 372, 373, 381, 385, 401, 402, 413,
	425, 430, 496, 409, 431, 0, 285, 0, 0, 287,
	234, 252, 262, 0, 420, 382, 189, 353, 241, 178,
	206, 192, 213, 228, 231, 266, 295, 301, 330, 333,
	246, 225, 204, 350, 201, 368, 388, 389, 390, 392,
	299, 220, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 275, 221,
	0, 0, 331, 0, 176, 0, 369, 209, 284, 282,
	398, 235, 227, 223, 208, 259, 290, 329, 387, 323,
	0, 279, 0, 0, 378, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 207, 175, 314, 379, 239, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 263,
	226, 218, 395, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 303, 0, 0, 446, 0, 427, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 271, 171,
	187, 0, 0, 313, 352, 358, 0, 0, 0, 210,
	0, 356, 327, 412, 194, 237, 349, 332, 354, 0,
	0, 355, 280, 400, 344, 410, 428, 429, 217, 307,
	418, 391, 424, 439, 188, 214, 321, 384, 415, 375,
	300, 396, 397, 270, 374, 245, 174, 278, 436, 186,
	364, 202, 179, 386, 408, 199, 367, 0, 0, 441,
	181, 406, 383, 297, 267, 268, 180, 0, 348, 222,
	243, 212, 316, 403, 404, 211, 442, 190, 423, 183,
	0, 422, 309, 399, 407, 298, 289, 182, 405, 296,
	288, 273, 233, 254, 342, 283, 343, 255, 305, 304,
	306, 0, 177, 0, 380, 416, 443, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 276, 320,
	341, 339, 345, 0, 394, 411, 419, 426, 432, 433,
	437, 434, 435, 438, 308, 257, 376, 272, 281, 0,
	0, 326, 357, 200, 414, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 277, 0,
	346, 240, 440, 421, 417, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 260, 261, 264, 269, 286, 291, 292, 293, 294,
	310, 311, 312, 315, 318, 319, 322, 324, 325, 328,
	334, 335, 336, 337, 338, 340, 347, 351, 359, 360,
	361, 362, 363, 365, 366, 370, 371, 372, 373, 381,
	385, 401, 402, 413, 425, 430, 249, 409, 431, 0,
	285, 0, 0, 287, 234, 252, 262, 0, 420, 382,
	189, 353, 241, 178, 206, 192, 213, 228, 231, 266,
	295, 301, 330, 333, 246, 225, 204, 350, 201, 368,
	388, 389, 390, 392, 299, 220, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 103, 0,
	0, 0, 275, 221, 0, 0, 331, 0, 176, 0,
	369, 209, 284, 282, 398, 235, 227, 223, 208, 259,
	290, 329, 387, 323, 0, 279, 0, 0, 378, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 207, 175, 314, 379,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 263, 226, 218, 395, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 303, 0, 0,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 271, 171, 187, 0, 0, 313, 352, 358,
	0, 0, 0, 210, 0, 356, 327, 412, 194, 237,
	349, 332, 354, 0, 0, 355, 280, 400, 344, 410,
	428, 429, 217, 307, 418, 391, 424, 439, 188, 214,
	321, 384, 415, 375, 300, 396, 397, 270, 374, 245,
	174, 278, 436, 186, 364, 202, 179, 386, 408, 199,
	367, 0, 0, 441, 181, 406, 383, 297, 267, 268,
	180, 0, 348, 222, 243, 212, 316, 403, 404, 211,
	442, 190, 423, 183, 0, 422, 309, 399, 407, 298,
	289, 182, 405, 296, 288, 273, 233, 254, 342, 283,
	343, 255, 305, 304, 306, 0, 177, 0, 380, 416,
	443, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 276, 320, 341, 339, 345, 0, 394, 411,
	419, 426, 432, 433, 437, 434, 435, 438, 308, 257,
	376, 272, 281, 0, 0, 326, 357, 200, 414, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 277, 0, 346, 240, 440, 421, 417, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 260, 261, 264, 269, 286,
	291, 292, 293, 294, 310, 311, 312, 315, 318, 319,
	322, 324, 325, 328, 334, 335, 336, 337, 338, 340,
	347, 351, 359, 360, 361, 362, 363, 365, 366, 370,
	371, 372, 373, 381, 385, 401, 402, 413, 425, 430,
	249, 409, 431, 0, 285, 0, 0, 287, 234, 252,
	262, 0, 420, 382, 189, 353, 241, 178, 206, 192,
	213, 228, 231, 266, 295, 301, 330, 333, 246, 225,
	204, 350, 201, 368, 388, 389, 390, 392, 299, 220,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 275, 221, 0, 0,
	331, 0, 176, 0, 369, 209, 284, 282, 398, 235,
	227, 223, 208, 259, 290, 329, 387, 323, 0, 279,
	0, 0, 378, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	207, 175, 314, 379, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 263, 226, 218,
	395, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 303, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 271, 171, 187, 0,
	0, 313, 352, 358, 0, 0, 0, 210, 0, 356,
	327, 412, 194, 237, 349, 332, 354, 0, 0, 355,
	280, 400, 344, 410, 428, 429, 217, 307, 418, 391,
	424, 439, 188, 214, 321, 384, 415, 375, 300, 396,
	397, 270, 374, 245, 174, 278, 436, 186, 364, 202,
	179, 386, 408, 199, 367, 0, 0, 441, 181, 406,
	383, 297, 267, 268, 180, 0, 348, 222, 243, 212,
	316, 403, 404, 211, 442, 190, 423, 183, 0, 422,
	309, 399, 407, 298, 289, 182, 405, 296, 288, 273,
	233, 254, 342, 283, 343, 255, 305, 304, 306, 0,
	177, 0, 380, 416, 443, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 276, 320, 341, 339,
	345, 0, 394, 411, 419, 426, 432, 433, 437, 434,
	435, 438, 308, 257, 376, 272, 281, 0, 0, 326,
	357, 200, 414, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 277, 0, 346, 240,
	440, 421, 417, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 260,
	261, 264, 269, 286, 291, 292, 293, 294, 310, 311,
	312, 315, 318, 319, 322, 324, 325, 328, 334, 335,
	336, 337, 338, 340, 347, 351, 359, 360, 361, 362,
	363, 365, 366, 370, 371, 372, 373, 381, 385, 401,
	402, 413, 425, 430, 249, 409, 431, 0, 285, 0,
	0, 287, 234, 252, 262, 0, 420, 382, 189, 353,
	241, 178, 206, 192, 213, 228, 231, 266, 295, 301,
	330, 333, 246, 225, 204, 350, 201, 368, 388, 389,
	390, 392, 299, 220,
}

var yyPact = [...]int{
	4154, -1000, -344, 1709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1674, 1325, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 649, 1378, -1000, 1607, 2334, -1000, 29179, 417,
	-1000, 28705, 414, 61, 29653, -1000, 97, -1000, 88, 29653,
	107, 28231, -1000, -1000, -271, 12587, 1528, -5, -10, 29653,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1329,
	1648, 1649, 1671, 1169, 1630, -1000, 10690, 10690, 373, 373,
	373, 8794, -1000, -1000, 16854, 29653, 29653, 223, -1000, 1607,
	-1000, -1000, 286, -1000, 299, 1316, -1000, 1301, -1000, 557,
	357, 296, 355, 353, 294, 293, 287, 279, 278, 270,
	267, 266, 303, -1000, 609, 609, -140, -141, 292, 349,
	349, 349, 380, 1556, 1553, -1000, 507, -1000, 609, 609,
	239, 609, 609, 609, 609, 225, 221, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 213, 403, 1607, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29653, 147, 29653, -1000, 536, 29653,
	727, 727, 7, 727, 727, 727, 727, 102, 508, -11,
	-1000, 99, 193, 94, 212, 699, 129, 70, -1000, -1000,
	181, 699, 91, -1000, 727, 6890, 6890, 6890, -1000, 1585,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 379, -1000,
	-1000, -1000, -1000, 29653, 27757, 319, 652, -1000, -1000, -1000,
	3, -1000, -1000, 1135, 631, -1000, 12587, 1291, 1144, 1144,
	-1000, -1000, 467, -1000, -1000, 14009, 14009, 14009, 14009, 14009,
	14009, 14009, 14009, 14009, 14009, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1144,
	525, -1000, 12113, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 12587, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, -1000,
	-1000, -1000, 29653, -1000, 1144, 100, 1674, -1000, 1325, -1000,
	-1000, -1000, 1581, 12587, 12587, 1674, -1000, 1476, 10690, -1000,
	-1000, 1597, -1000, -1000, -1000, -1000, -1000, 736, 1693, -1000,
	15431, 518, 1692, 27283, -1000, 20647, 26809, 1299, 8318, -46,
	-1000, -1000, -1000, 647, 19225, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1236,
	29653, -1000, -1000, 2672, 995, -1000, 1377, -1000, 1230, -1000,
	1323, 1305, 413, 995, 406, 405, 402, -1000, -74, -1000,
	-1000, -1000, -1000, -1000, 609, 609, 295, 2334, 3561, -1000,
	-1000, -1000, 26335, 1364, 995, -1000, 1363, -1000, 701, 420,
	490, 490, 995, -1000, -1000, 29653, 995, 696, 695, 29653,
	29653, -1000, 25861, -1000, 25387, 24913, 907, 29653, 24439, 23965,
	23491, 23017, 22543, -1000, 1444, -1000, 1300, -1000, -1000, -1000,
	29653, 29653, 29653, 231, -1000, -1000, 29653, 995, -1000, -1000,
	905, 879, 609, 609, 878, 1031, 1030, 1027, 609, 609,
	877, 1026, 21121, 237, 869, 866, 862, 1011, 1024, 122,
	964, 957, 858, 29653, 1362, 29653, -1000, 172, 621, 269,
	617, 1607, 1516, 1295, 378, 410, 995, 352, 352, -1000,
	7366, -1000, -1000, 1021, 12587, -1000, 700, 699, 699, -1000,
	-1000, -1000, -1000, -1000, -1000, 727, 29653, 700, -1000, -1000,
	-1000, 699, 727, 29653, 727, 727, 727, 727, 699, 699,
	699, 727, 29653, 29653, 29653, 29653, 29653, 29653, 29653, 29653,
	29653, 6890, 6890, 6890, 577, 727, -1000, 1413, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 106, -1000, -1000, -1000,
	-1000, -1000, 1709, -1000, -1000, -1000, -97, 1287, 22069, -1000,
	-280, -282, -285, -286, -1000, -1000, -1000, -287, -295, -1000,
	-1000, -1000, 12587, 12587, 12587, 12587, 974, 595, 14009, 868,
	737, 14009, 14009, 14009, 14009, 14009, 14009, 14009, 14009, 14009,
	14009, 14009, 14009, 14009, 14009, 14009, 807, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 995, -1000, 1694, 1143, 1143,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 14483,
	9268, 7366, 1169, 1201, 1674, 10690, 10690, 12587, 12587, 11638,
	11164, 10690, 1578, 663, 631, 29653, -1000, 962, -1000, -1000,
	13535, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29653, 29653, 10690, 10690, 10690, 10690, 10690,
	-1000, 1283, -1000, -166, 16380, 12587, 1018, 1649, 1169, 1597,
	1616, 1702, 564, 1023, 1259, -1000, 909, 1649, 18751, 1315,
	-1000, 1597, -1000, -1000, -1000, 29653, -1000, -1000, 21595, -1000,
	-1000, 6414, 29653, 260, 29653, -1000, 1222, 1564, -1000, -1000,
	-1000, 1641, 18277, 29653, 1284, 1258, -1000, -1000, 516, 7842,
	-46, -1000, 7842, 1207, -1000, -31, -42, 9742, 514, -1000,
	-1000, -1000, 292, 14957, 1094, 1545, 33, -1000, -1000, -1000,
	1323, -1000, 1323, 1323, 1323, 1323, 231, 231, 231, 231,
	-1000, -1000, -1000, -1000, -1000, 1361, 1360, -1000, 1323, 1323,
	1323, 1323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1358,
	1358, 1358, 1330, 1330, 340, -1000, 12587, 163, 29653, 1615,
	856, 172, 370, 1386, 995, 995, 995, 370, -1000, 930,
	922, -1000, 1255, -1000, -1000, 1670, -1000, -1000, 619, 718,
	717, 520, 29653, 130, 258, -1000, 339, -1000, 29653, 995,
	689, 490, 995, -1000, 995, -1000, -1000, -1000, -1000, 511,
	-1000, -1000, 995, 1247, -1000, 1214, 795, 710, 776, 705,
	1247, -1000, -1000, -106, 1247, -1000, 1247, -1000, 1247, -1000,
	1247, -1000, 1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 568, 29653, 130, 807, -1000, 376, -1000, -1000, 807,
	807, -1000, -1000, -1000, -1000, 1016, 1013, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -339, 29653, -1000, 146, 616, 232,
	271, 234, 29653, 117, 1632, 210, 216, 29653, 29653, 352,
	1412, 29653, 1621, 29653, -1000, -1000, -1000, -1000, 631, 29653,
	-1000, -1000, 727, 727, -1000, -1000, 29653, 727, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 727, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1010, -1000, 29653, 29653, -1000, -1000, -1000, -1000, -1000,
	37, -34, 205, -1000, -1000, -1000, -1000, 1645, -1000, 631,
	595, 660, 648, -1000, -1000, 775, -1000, -1000, 2931, -1000,
	-1000, -1000, -1000, 868, 14009, 14009, 14009, 578, 2931, 3060,
	889, 3074, 544, 920, 920, 558, 558, 558, 558, 558,
	797, 797, -1000, -1000, -1000, -1000, 962, -1000, -1000, -1000,
	962, 10690, 10690, 1241, 1144, 485, -1000, 1329, -1000, -1000,
	1649, 1171, 1171, 1034, 1095, 612, 1691, 1171, 590, 1690,
	1171, 1171, 10690, -1000, -1000, 666, -1000, 12587, 962, -1000,
	704, 1239, 1209, 1171, 962, 962, 1171, 1171, 29653, -1000,
	-241, -1000, -40, 503, 1144, -1000, 21121, 962, 1135, -1000,
	1581, -1000, -1000, 1514, -1000, 1470, 12587, 12587, 12587, -1000,
	-1000, -1000, 1581, 1660, -1000, 1486, 1484, 1684, 10690, 20647,
	1597, -1000, -1000, -1000, 470, 1684, 1257, 1144, -1000, 29653,
	20647, 20647, 20647, 20647, 20647, -1000, 1455, 1435, -1000, 1438,
	1427, 1458, 29653, -1000, 1199, 1169, 18277, 260, 1121, 20647,
	29653, -1000, -1000, 20647, 29653, 5938, -1000, 1207, -46, -56,
	-1000, -1000, -1000, -1000, 631, -1000, 903, -1000, 2546, -1000,
	337, -1000, -1000, -1000, -1000, 756, 1638, 1541, 16, -1000,
	-1000, -1000, 231, 231, -1000, -1000, 514, 821, 514, 514,
	514, 1007, 1007, -1000, -1000, -1000, -1000, -1000, 840, -1000,
	-1000, -1000, 796, -1000, -1000, 1008, 1431, 163, -1000, -1000,
	609, 1006, 1548, 29653, -1000, -1000, 1083, 146, 29653, 673,
	1406, -1000, 1386, 1386, 1386, 29653, -1000, -1000, -1000, -1000,
	3521, 29653, 1178, -1000, 110, 29653, 1080, 29653, -1000, 1176,
	1341, 995, 995, -1000, -1000, 7366, -1000, 29653, 1144, -1000,
	-1000, -1000, -1000, 409, 1591, 1566, 130, 110, 514, 995,
	-1000, -1000, -1000, -1000, -1000, -337, 1173, 390, 134, 188,
	29653, 29653, 29653, 29653, 29653, 457, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 190, 375, -1000, 29653, 29653, 426, -1000,
	-1000, -1000, 699, -1000, -1000, 699, -1000, -1000, -1000, -1000,
	-1000, -1000, 1582, -35, -312, -1000, -305, -1000, -1000, -1000,
	-1000, 578, 2931, 3023, -1000, 14009, 14009, -1000, -1000, 1171,
	1171, 10690, 7366, 1674, 1581, -1000, -1000, 280, 807, 280,
	14009, 14009, -1000, 14009, 14009, -1000, -91, 1249, 655, -1000,
	12587, 773, -1000, -1000, 14009, 14009, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 400, 399, 392, 29653, -1000,
	-1000, -1000, 822, 1000, 1468, 631, 631, -1000, -1000, 29653,
	-1000, -1000, -1000, -1000, 1682, 12587, -1000, 1161, -1000, 5462,
	1649, 1405, 29653, 1144, 1709, 15906, 29653, 1193, -1000, 613,
	1564, 1389, 1404, 1683, -1000, -1000, -1000, -1000, 1428, -1000,
	1426, -1000, -1000, -1000, -1000, -1000, 1169, 1684, 20647, 1185,
	-1000, 1185, -1000, 464, -1000, -1000, -1000, -38, -47, -1000,
	-1000, -1000, 292, -1000, -1000, -1000, -1000, 730, 14009, 1700,
	-1000, 999, -1000, -1000, 687, 683, -1000, 29653, 1333, -1000,
	-1000, -1000, 514, 514, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1165, -1000, 1163, 1146, 1155, 90, -1000, 1262, 1565,
	609, 609, -1000, 790, -1000, 995, -1000, -1000, 384, -1000,
	1618, 29653, 1402, 1401, 1397, -1000, 1669, 1141, -1000, 29653,
	-1000, -1000, 29653, -1000, -1000, 1482, 163, 29653, -1000, -1000,
	-1000, -1000, 258, 29653, -1000, 1143, 110, -1000, -1000, -1000,
	-1000, -1000, -1000, 29653, 152, -1000, 1331, 779, -1000, 1290,
	-1000, -1000, -1000, -1000, 120, 230, -1000, 29653, 397, 1431,
	29653, -1000, -1000, -1000, 727, 727, -1000, 1560, -1000, 995,
	-1000, 14009, 2931, 2931, -1000, -1000, 962, -1000, 1649, -1000,
	962, 1323, 1323, -1000, 1323, 1330, -1000, 1323, 77, 1323,
	55, 962, 962, 3006, 2637, 2307, 1210, 1144, -90, -1000,
	631, 12587, 2254, 1894, 1144, 1144, 1144, 1131, 998, 231,
	-1000, -1000, -1000, 1662, 1668, 631, -1000, -1000, -1000, 1598,
	1242, 1111, -1000, -1000, 10216, 1139, 1479, 439, 1131, 1674,
	29653, 12587, -1000, -1000, 12587, 1322, -1000, 12587, -1000, -1000,
	-1000, 1674, 1674, 1185, -1000, -1000, 567, -1000, -1000, -1000,
	-1000, -1000, 2931, -94, -1000, -1000, -1000, 1321, 14009, -1000,
	-1000, 231, 997, 231, 789, -1000, 742, -1000, -1000, -183,
	-1000, -1000, 1294, 1437, -1000, -1000, 29653, -1000, -1000, 29653,
	29653, 29653, 29653, 29653, -1000, -1000, 241, -1000, 1118, 1107,
	-1000, -131, -1000, -1000, 1320, -1000, -1000, -1000, 1074, -1000,
	-107, 995, 29653, 29653, 29653, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2931, -1000, 1581, -1000, -1000, 300, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14009, 14009, 14009,
	14009, 14009, 1649, 988, 631, 14009, 14009, 17802, 20173, 20173,
	17328, 231, 14, -1000, 12587, 12587, 681, -1000, 1144, -1000,
	1282, 29653, 1144, 29653, -1000, 1649, -1000, 631, 631, 29653,
	631, 1649, -1000, -1000, 29653, 1250, 514, -1000, 514, 1028,
	969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1320,
	-1000, -1000, -1000, 1141, -1000, 236, 322, -1000, 258, -1000,
	-142, -147, 1631, 29653, -1000, -1000, 7366, -1000, -1000, 1319,
	1302, -1000, -1000, -1000, -1000, 704, 704, 704, 704, 277,
	962, -1000, 704, 704, 1101, -1000, -1000, -1000, 1101, 1101,
	503, -235, -1000, 1511, 1502, 631, 1135, 1698, -1000, 1144,
	1709, 432, 1111, -1000, -1000, 1062, -1000, 1059, -1000, -1000,
	-1000, -1000, -1000, 1627, 1144, -1000, -1000, -1000, -1000, 1325,
	1044, 1125, -1000, 608, 29653, 29653, -1000, -1000, -1000, -1000,
	962, 185, -120, -1000, -1000, -1000, 19699, -1000, -1000, -1000,
	-1000, 14, 275, -1000, 1504, 1502, -1000, 1667, 1505, 1661,
	-1000, 29653, 1111, 29653, -1000, 1395, 1048, 1325, 13061, 229,
	-1000, 7366, 4986, 1042, -1000, -1000, 1467, -101, -128, -1000,
	-1000, 1499, 1503, 1503, 1504, -1000, 1659, 1657, -1000, 983,
	1654, 972, 1099, -1000, 1391, -1000, 1688, -1000, -1000, -1000,
	729, 971, -1000, -1000, -1000, 229, 704, 962, -1000, -37,
	-1000, -1000, -1000, -1000, -1000, 1290, -1000, 1466, -1000, 1491,
	855, -1000, -1000, -1000, -1000, 963, 960, -1000, 915, -1000,
	-1000, 1696, 486, 486, -1000, -1000, -1000, -1000, -1000, 338,
	-1000, -1000, -107, -111, -1000, 853, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 324, 810, -1000, 149, -1000, -122,
	-1000, -1000, -1000, -1000, -1000, -1000, -129, -1000,
}

var yyPgo = [...]int{
	0, 2004, 2003, 11, 134, 86, 2002, 2001, 2000, 1999,
	136, 133, 132, 1997, 1995, 1988, 1985, 1984, 1983, 1982,
	1981, 1980, 1976, 1975, 1974, 68, 140, 45, 48, 138,
	1972, 1970, 32, 1968, 1967, 1966, 131, 122, 614, 1965,
	129, 1964, 1962, 1961, 1959, 1958, 1957, 1956, 1955, 1954,
	1953, 1951, 1950, 1949, 1948, 224, 1946, 1944, 4, 1943,
	34, 1941, 1938, 1937, 1936, 1935, 107, 1932, 1931, 1930,
	123, 1929, 1928, 53, 113, 50, 77, 1922, 1921, 80,
	127, 1920, 71, 103, 1919, 1900, 960, 1899, 61, 82,
	126, 1898, 51, 1896, 1894, 57, 1893, 1892, 1891, 87,
	1890, 1889, 2989, 1888, 76, 93, 19, 42, 1887, 1886,
	1885, 1882, 38, 932, 1879, 1878, 25, 1877, 1866, 144,
	1864, 94, 22, 1862, 17, 35, 24, 1858, 98, 1856,
	30, 56, 36, 1848, 85, 1847, 1846, 1843, 1842, 33,
	1841, 81, 111, 63, 1840, 1837, 1836, 7, 15, 1835,
	1834, 1833, 1832, 1831, 1829, 14, 1828, 5, 1827, 26,
	1825, 27, 20, 43, 79, 160, 29, 13, 1823, 117,
	1821, 28, 121, 75, 115, 1819, 1818, 1817, 931, 152,
	1815, 1814, 58, 1812, 106, 102, 1811, 215, 1810, 1809,
	72, 1266, 2571, 8, 118, 1808, 1807, 2274, 59, 83,
	23, 89, 1806, 1805, 1801, 141, 135, 44, 882, 46,
	1799, 1798, 1797, 1796, 1787, 1785, 1783, 47, 149, 66,
	110, 31, 1782, 1781, 1779, 74, 65, 1778, 114, 105,
	78, 99, 1775, 120, 101, 64, 1774, 41, 1772, 1771,
	1770, 1766, 40, 1765, 1764, 1762, 1755, 104, 108, 69,
	39, 1745, 37, 73, 112, 109, 1741, 18, 124, 10,
	1740, 2, 0, 1739, 3, 130, 177, 119, 1734, 1733,
	1, 1731, 6, 1729, 1728, 84, 1727, 1725, 1724, 16,
	21, 9, 1719, 1718, 90, 355, 116, 1717, 128,
}

//line sql.y:5326
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 282, 283, 283, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 262, 262, 262, 265, 265,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 286, 286, 97, 97, 95, 95, 96, 96,
	164, 164, 13, 14, 14, 174, 174, 173, 173, 173,
	175, 175, 175, 175, 208, 208, 15, 15, 15, 15,
	15, 71, 71, 264, 264, 263, 261, 261, 260, 260,
	259, 23, 24, 33, 33, 33, 33, 34, 35, 266,
	266, 238, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 240, 240, 227, 227, 239, 239,
	239, 239, 239, 239, 239, 226, 226, 85, 85, 145,
	145, 145, 145, 145, 145, 145, 145, 278, 278, 146,
	146, 146, 146, 146, 146, 279, 279, 279, 279, 210,
	210, 210, 210, 213, 213, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 212, 212, 212, 212, 212, 214,
	214, 214, 214, 214, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 216,
	216, 216, 216, 216, 216, 216, 216, 225, 225, 217,
	217, 220, 220, 221, 221, 221, 222, 222, 222, 223,
	223, 218, 218, 218, 218, 219, 219, 219, 228, 252,
	252, 251, 251, 249, 249, 249, 249, 237, 237, 246,
	246, 246, 246, 246, 236, 236, 232, 232, 232, 233,
	233, 234, 234, 231, 231, 235, 235, 248, 248, 247,
	229, 229, 230, 230, 254, 280, 280, 280, 280, 281,
	281, 255, 271, 272, 270, 270, 270, 270, 270, 60,
	60, 60, 186, 186, 186, 244, 244, 243, 243, 243,
	245, 245, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	181, 181, 181, 269, 269, 269, 269, 269, 269, 268,
	268, 268, 241, 241, 241, 267, 267, 131, 131, 132,
	132, 30, 30, 30, 30, 30, 30, 29, 29, 29,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 31, 31, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 224, 224, 224, 256, 256,
	257, 257, 17, 22, 22, 18, 18, 18, 18, 19,
	19, 41, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 273, 273,
	180, 180, 188, 188, 179, 179, 201, 201, 201, 182,
	182, 182, 183, 183, 277, 277, 277, 43, 43, 45,
	45, 46, 47, 47, 203, 203, 204, 204, 48, 49,
	61, 61, 61, 61, 61, 61, 63, 63, 63, 7,
	7, 7, 7, 57, 57, 57, 6, 6, 44, 44,
	51, 274, 274, 275, 276, 276, 276, 276, 52, 54,
	20, 20, 20, 20, 20, 20, 78, 78, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	72, 72, 72, 67, 67, 287, 55, 56, 56, 70,
	70, 70, 64, 64, 64, 69, 69, 69, 75, 75,
	77, 77, 77, 77, 77, 79, 79, 79, 79, 79,
	79, 79, 74, 74, 76, 76, 76, 76, 195, 195,
	195, 194, 194, 87, 87, 88, 88, 89, 89, 90,
	90, 90, 129, 105, 105, 162, 162, 161, 161, 163,
	163, 163, 163, 165, 165, 91, 91, 91, 91, 92,
	92, 93, 93, 94, 94, 202, 202, 200, 200, 200,
	199, 199, 98, 98, 98, 100, 99, 99, 99, 99,
	101, 101, 103, 103, 102, 102, 104, 106, 106, 106,
	106, 106, 107, 107, 86, 86, 86, 86, 86, 86,
	86, 86, 177, 177, 109, 109, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 120, 120, 120, 120,
	120, 120, 110, 110, 110, 110, 110, 110, 110, 73,
	73, 121, 121, 121, 128, 122, 122, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 117, 117, 117, 117, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 288, 288, 119, 118, 118,
	118, 118, 118, 118, 118, 68, 68, 68, 68, 68,
	207, 207, 207, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 135, 135, 65, 65,
	133, 133, 134, 136, 136, 130, 130, 130, 112, 112,
	112, 112, 112, 112, 112, 112, 114, 114, 114, 137,
	137, 138, 138, 139, 139, 140, 140, 141, 142, 142,
	142, 143, 143, 143, 143, 32, 32, 32, 32, 32,
	27, 27, 27, 27, 28, 28, 28, 80, 80, 80,
	80, 82, 82, 81, 81, 58, 58, 59, 59, 59,
	83, 83, 84, 84, 84, 84, 159, 159, 159, 144,
	144, 144, 144, 151, 151, 151, 147, 147, 149, 149,
	149, 150, 150, 150, 148, 156, 156, 158, 158, 157,
	157, 153, 153, 154, 154, 155, 155, 155, 152, 152,
	111, 111, 111, 111, 111, 160, 160, 160, 160, 166,
	166, 124, 124, 126, 126, 125, 127, 167, 167, 171,
	168, 168, 172, 172, 172, 172, 172, 169, 169, 170,
	170, 196, 196, 196, 176, 176, 187, 187, 184, 184,
	185, 185, 178, 178, 189, 189, 189, 53, 123, 123,
	253, 253, 250, 192, 192, 193, 193, 197, 197, 198,
	198, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 284, 285, 205, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 4, 9, 0, 2, 0,
	2, 3, 3, 4, 2, 3, 2, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 2, 2, 2, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 7, 5, 6, 6, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 6, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 4, 4, 2, 11, 3, 6,
	2, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	8, 8, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -282, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -284, 6, 7, 8, -62, 10,
	11, 30, -23, -33, 160, -34, -24, 161, -35, 163,
	162, 198, 164, 191, 72, 237, 238, 240, 241, 242,
	243, -63, 196, 197, 166, 34, 43, 31, 32, 35,
	169, 82, 9, 341, 193, 192, 26, -283, 481, -70,
	5, -139, 16, -3, -55, -287, -55, -55, -55, -55,
	-55, -55, -238, -240, 82, 133, 82, -55, -39, -38,
	-37, -36, -40, 29, -30, -31, -258, -29, -26, 165,
	162, 206, 103, 104, 198, 199, 200, 164, 182, 197,
	201, 196, 215, -25, 78, 31, 354, 357, -245, 161,
	167, 168, 342, 106, 105, 73, 163, -242, 287, 458,
	-40, 460, 96, 98, 459, 42, 172, 461, 462, 463,
	464, 181, 465, 466, 467, 468, 474, 475, 476, 477,
	107, 5, -55, -197, -38, -262, -191, 85, 86, 87,
	351, 184, 385, 386, 231, 78, 39, 287, 458, 237,
	251, 245, 272, 264, 352, 387, 234, 185, 219, 455,
	262, 111, 460, 388, 199, 292, 293, 294, 96, 240,
	328, 473, 236, 389, 471, 98, 459, 77, 49, 42,
	194, 260, 256, 461, 220, 390, 362, 213, 106, 103,
	480, 34, 254, 48, 28, 470, 105, 47, 462, 124,
	391, 463, 296, 277, 449, 46, 297, 200, 392, 81,
	356, 457, 298, 255, 299, 230, 469, 166, 393, 441,
	300, 301, 450, 394, 278, 282, 395, 320, 302, 50,
	396, 397, 451, 104, 398, 76, 464, 249, 250, 399,
	228, 183, 322, 276, 181, 33, 303, 353, 232, 56,
	207, 323, 44, 280, 43, 445, 400, 448, 275, 271,
	51, 401, 402, 403, 404, 465, 274, 248, 270, 479,
	225, 466, 60, 168, 284, 283, 285, 214, 319, 267,
	405, 406, 407, 188, 79, 408, 257, 19, 409, 410,
	304, 221, 411, 54, 412, 413, 326, 197, 414, 52,
	467, 37, 202, 468, 415, 416, 417, 418, 419, 306,
	420, 305, 279, 281, 209, 307, 355, 421, 253, 201,
	472, 422, 189, 456, 203, 206, 196, 327, 190, 423,
	424, 425, 426, 427, 235, 428, 429, 241, 474, 41,
	430, 431, 432, 433, 229, 224, 321, 330, 59, 80,
	289, 434, 454, 247, 222, 435, 238, 53, 475, 476,
	477, 216, 478, 7, 309, 107, 226, 227, 45, 268,
	208, 436, 437, 258, 259, 273, 246, 269, 239, 442,
	210, 310, 198, 438, 329, 223, 290, 359, 215, 311,
	453, 358, 266, 263, 217, 439, 312, 173, 211, 212,
	440, 443, 313, 314, 316, 317, 233, 315, 318, 218,
	357, 244, 261, 291, 171, -55, 171, -102, -197, 171,
	-169, 293, -188, 295, 308, 303, 313, 301, -180, 304,
	306, 209, -277, 320, 171, 310, 160, 151, 296, 305,
	314, 315, 318, 218, -273, -262, 463, 478, 111, 265,
	300, 298, 321, 445, 317, 316, -197, 239, -203, 244,
	-192, -262, -191, 242, -102, -61, 441, 164, -205, -205,
	-72, 445, 447, -122, -86, -108, 117, -113, 29, 24,
	-112, -109, -130, -127, -128, 151, 152, 154, 153, 155,
	140, 141, 148, 118, 156, -117, -115, -116, -118, 89,
	88, 97, 90, 91, 92, 93, 99, 100, 101, -192,
	-197, -125, -284, 66, 67, 342, 343, 344, 345, 350,
	346, 120, 55, 337, 331, 340, 339, 338, 335, 336,
	333, 334, 348, 349, 176, 332, 170, 146, 341, -262,
	-191, 42, 309, 309, -102, -55, -5, -4, -284, 6,
	21, 22, -143, 18, 17, -285, 84, -64, -77, 61,
	62, -79, 22, 36, 65, 63, 21, -56, -76, 142,
	-86, -197, -76, -178, 175, -178, -178, -168, -208, 239,
	-172, 321, 320, -193, -170, -192, -190, -169, 319, 165,
	360, 116, 23, 25, 119, 151, 17, 120, 35, 167,
	265, 182, 150, 178, 342, 160, 70, 361, 333, 334,
	331, 337, 344, 345, 332, 295, 29, 11, 363, 26,
	192, 22, 36, 144, 162, 123, 195, 24, 193, 101,
	366, 20, 73, 187, 12, 180, 38, 14, 367, 368,
	15, 176, 175, 135, 172, 68, 9, 156, 27, 132,
	64, 369, 113, 370, 371, 372, 373, 66, 133, 18,
	335, 336, 31, 446, 374, 350, 204, 146, 71, 57,
	447, 117, 375, 376, 99, 377, 102, 74, 452, 114,
	16, 69, 40, 378, 205, 379, 177, 380, 324, 381,
	134, 163, 341, 67, 382, 170, 308, 6, 347, 30,
	191, 179, 109, 65, 383, 171, 122, 348, 349, 174,
	100, 5, 112, 32, 10, 72, 75, 338, 339, 340,
	55, 108, 354, 121, 13, 384, 325, 115, 111, -239,
	133, -226, -230, -192, 186, -255, 182, -102, -248, -247,
	-192, -71, -187, 172, 180, 179, 112, -266, 114, 226,
	332, 170, -36, -37, -169, 150, 203, 83, 83, -230,
	-229, -228, -267, 205, 186, -254, -246, 178, 187, -236,
	179, 180, -231, 172, 113, -267, -231, 177, 187, 205,
	205, 107, 205, 107, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 202, -237, 125, -237, 358, 358, -242,
	-267, -267, -267, 174, 33, 33, -189, -231, 174, 23,
	-237, -237, -169, 150, -237, -237, -237, -237, 213, 213,
	-237, -237, -237, -237, -237, -237, -237, -237, -237, -237,
	-237, -237, -237, -237, -237, 171, -266, -80, 318, 233,
	78, -38, 215, -22, -102, -187, 172, 173, -266, -102,
	157, -102, -182, 133, 13, -182, -179, 309, 307, 294,
	299, -182, -182, -182, -182, 216, 292, -232, 172, 33,
	183, 309, 216, 292, 216, 217, 216, 217, 302, 312,
	216, -201, 12, 135, 332, 297, 301, 209, 171, 210,
	173, 311, -262, 448, 217, -201, 309, 212, -182, -206,
	-284, -193, 265, -206, -206, 30, 174, -192, -57, -192,
	89, -7, -3, -11, -10, -12, 125, -78, 309, -66,
	151, 463, 449, 450, 451, 448, 306, 456, 454, 452,
	216, 453, 83, 116, 114, 115, 132, -86, -110, 135,
	117, 133, 134, 119, 137, 136, 147, 140, 141, 142,
	143, 144, 145, 146, 138, 139, 150, 125, 126, 127,
	128, 129, 130, 131, -177, -284, -128, -284, 158, 159,
	-113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
	-284, 157, -2, -122, -4, -284, -284, -284, -284, -284,
	-284, -284, -284, -135, -86, -284, -288, -284, -288, -119,
	-284, -288, -119, -288, -119, -288, -288, -119, -288, -119,
	-288, -288, -119, -284, -284, -284, -284, -284, -284, -284,
	-205, -274, -275, -105, -102, -284, 233, -139, -3, -55,
	-159, 20, 31, -86, -140, -141, -86, -139, 57, -74,
	-76, -79, 61, 62, 95, 12, -195, -194, 23, -192,
	89, 157, 12, -103, 27, -102, -88, -89, -90, -91,
	-105, -129, -284, 12, -95, -96, -102, -104, -197, 83,
	239, -172, -208, -174, -173, 322, 324, 125, -196, -192,
	89, 29, 84, 83, -102, -210, -213, -215, -214, -216,
	-211, -212, 262, 263, 151, 266, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 30, 194, 258, 259,
	260, 261, 278, 279, 280, 281, 282, 283, 284, 285,
	245, 264, 352, 246, 247, 248, 249, 250, 251, 253,
	254, 255, 256, 257, -265, -262, 82, 84, 83, -217,
	82, -80, 171, -262, 172, 172, 172, -55, 341, -237,
	-237, 202, -29, -26, -258, 16, -25, -26, 165, 103,
	104, 162, 82, -226, 82, -235, -265, -262, 82, 113,
	177, 112, -234, -231, -234, -235, -262, -130, -192, -197,
	-262, 113, 113, -165, -192, -165, -165, 21, -165, 21,
	-165, 21, 90, -192, -165, 21, -165, 21, -165, 21,
	-165, 21, -165, 21, 29, 76, 77, 29, 79, 80,
	81, -130, -130, -226, -169, -102, -262, 90, 90, -237,
	-237, 90, 89, 89, 89, -237, -237, 90, 89, -199,
	-197, 89, -268, 188, 230, 232, 90, 90, 90, 90,
	29, 89, -269, 29, 470, 469, 471, 472, 473, 90,
	29, 90, 29, 90, -192, 82, -102, -83, 220, 160,
	162, 165, 74, 89, 234, 125, 42, 83, 174, 171,
	-262, -184, 176, -184, -198, -197, -190, 89, -86, -233,
	12, 135, -201, -201, -182, -102, -233, -201, -182, -102,
	-182, -182, -182, -182, -201, -201, -201, -182, -197, -197,
	-102, -102, -102, -102, -102, -102, -102, -206, -206, -206,
	-183, 133, -182, 74, -204, 242, 276, 442, 443, 444,
	83, 354, -95, 448, 448, 448, 448, 448, 448, -86,
	-86, -86, -86, -120, 99, 117, 100, 101, -113, -121,
	-125, -128, 94, 135, 133, 134, 119, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -207, -262, 89, 151, -262, -112, -112, -192,
	-75, 22, 36, -74, -193, -198, -190, -70, -285, -285,
	-139, -74, -74, -86, -86, -130, 89, -74, -130, 89,
	-74, -74, -69, 22, 36, -133, -134, 121, -130, -285,
	-113, -192, -192, -74, -75, -75, -74, -74, 83, -276,
	324, 325, 446, -200, 205, -199, 23, -123, -122, 89,
	-143, -285, -144, 27, 10, 135, 83, 19, 83, -142,
	25, 26, -143, -114, -192, 90, 93, -87, 83, 12,
	-79, -102, -194, 142, -198, -102, -164, 205, -102, 30,
	83, -98, -100, -99, -101, 64, 68, 70, 65, 66,
	67, 71, -202, 23, -88, -3, -284, -102, -95, -286,
	83, 12, 75, -286, 83, 157, -172, -174, 83, 323,
	325, 326, 74, 102, -86, -219, 150, -244, -243, -242,
	-226, -228, -229, -230, 84, -145, -85, 38, -222, 290,
	289, -217, -217, -217, -217, -217, -218, -169, -218, -218,
	-218, 82, 82, -217, -217, -217, -217, -220, 82, -220,
	-220, -221, 82, -221, -255, -86, -252, -251, -249, -250,
	181, 96, 354, 75, -247, -142, 90, -83, -185, 176,
	-253, -250, -262, -262, -262, -185, -262, 89, -262, 89,
	83, 17, -227, -226, -131, 230, -257, 205, -254, -248,
	-235, 113, -234, -235, -235, 157, -262, 83, 27, 107,
	107, 107, 107, 354, 162, 30, -226, -131, -207, 174,
	-207, -207, 89, 89, -181, 478, -95, -82, 222, 125,
	211, 211, 171, 171, 224, -102, 235, 236, 234, 21,
	223, 225, 227, 213, -102, -102, -184, 74, -97, -102,
	24, -197, -102, -182, -182, -102, -182, -182, 89, -102,
	-192, -66, 324, 354, 20, -67, 20, 99, 100, 101,
	-121, -113, -113, -113, -73, 195, 116, -285, -285, -74,
	-74, -284, 157, -5, -143, -285, -285, 83, 75, 23,
	12, 12, -285, 12, 12, -285, -285, -74, -136, -134,
	123, -86, -285, -285, 83, 83, -285, -285, -285, -285,
	-285, -275, 445, 325, -106, 72, 175, 73, -284, -199,
	-285, -159, 40, 48, 59, -86, -86, -141, -159, -176,
	20, 12, 55, 55, -107, 13, -76, -88, -79, 157,
	-107, -111, 30, 55, -3, -284, -284, -167, -171, -130,
	-89, -90, -90, -89, -90, 64, 64, 64, 69, 64,
	69, 64, -99, -197, -285, -285, -3, -164, 75, -88,
	-102, -88, -104, -197, 142, -173, -175, 327, 324, 330,
	-262, 89, 83, -242, -230, -281, 99, 117, 29, 74,
	287, 96, -279, -280, 177, 112, 113, 189, 23, 39,
	-223, 291, -218, -218, -219, -262, 89, 151, -219, -219,
	-219, -225, 89, -225, 90, 90, 84, -32, -27, -28,
	31, 78, -249, -237, 89, 37, -192, 84, -82, -102,
	117, 74, -253, -253, -253, -197, 16, -161, -192, 83,
	84, -132, 231, -130, 84, -192, 84, 82, -235, -235,
	-193, -192, -284, 171, 29, 29, -131, -132, -219, -262,
	480, 479, 84, 173, 229, -84, 337, 89, 85, -102,
	-102, -102, -102, -102, 165, 162, 214, 174, -95, -102,
	83, -60, 190, 185, -201, -201, 31, 324, 457, 455,
	-73, 116, -113, -113, -285, -285, -75, -193, -139, -159,
	-209, 151, 262, 194, 260, 256, 276, 267, 289, 258,
	290, -207, -209, -113, -113, -113, -113, 351, -139, 124,
	-86, 122, -113, -113, 172, 172, 172, -165, 41, 89,
	89, 60, -102, -137, 14, -86, 142, -143, -166, 74,
	-167, -124, -126, -125, -284, -160, -285, -192, -165, -107,
	83, 125, -93, -92, 74, 75, -94, 74, -92, 64,
	64, -285, -107, -88, -107, -107, 157, 324, 328, 329,
	-242, 99, -113, 10, 89, 113, 113, -102, 82, -219,
	-219, 84, 83, 84, 83, 84, 83, -186, 391, 117,
	-28, -27, -237, -237, 90, -262, 173, 24, -102, 74,
	74, 74, 17, 83, -226, -130, 55, -252, -161, -256,
	-257, -102, -112, -132, -102, -81, 220, 228, 82, 86,
	-264, 75, 211, 287, 211, -102, -60, -32, -102, -182,
	-182, 31, -262, -113, -285, -143, -285, -217, -217, -217,
	-221, -217, 250, -217, 250, -285, -285, 20, 20, 20,
	20, -284, -65, 347, -86, 83, 83, -284, -284, -284,
	-285, 89, -218, -138, 15, 17, 28, -166, 83, -285,
	-285, 83, 55, 157, -285, -139, -171, -86, -86, 82,
	-86, -139, -107, -116, 82, -113, -218, 89, -218, 90,
	90, 391, 29, 79, 80, 81, 29, 76, 77, -102,
	-102, -102, -102, -161, -192, 207, 84, -285, 83, -224,
	354, 357, -162, 82, 84, -261, 354, -263, -262, -192,
	-192, -192, -159, -218, -262, -113, -113, -113, -113, -113,
	-143, 89, -113, -113, -163, -285, -192, 177, -163, -163,
	-200, -218, -148, -153, -179, -86, -122, 113, -126, 55,
	-3, -192, -124, -192, -143, -161, -143, -161, 84, -219,
	-219, 84, 84, -162, 208, -280, -257, 358, 358, 23,
	-161, -260, -259, -193, 82, 75, -285, -285, -285, -285,
	-68, 135, 354, -285, -285, -285, 83, -285, -285, -285,
	-106, -151, 441, -156, 44, -154, -155, 45, -152, 46,
	54, 10, -124, 157, 84, 84, -146, 23, -284, -3,
	84, 83, 125, -161, -102, -285, 352, 71, 355, -192,
	177, -148, 49, 268, -158, -157, 53, 45, -155, 17,
	47, 17, -167, -192, -271, -272, 74, -281, -278, 99,
	117, 96, -279, 108, 109, -3, -113, 204, -58, 354,
	-259, -241, -193, 89, 90, 84, 60, 353, 356, -149,
	51, -147, 50, -147, -157, 17, 17, 89, 17, 89,
	-272, 74, 11, 10, 99, 89, -58, -285, -285, -59,
	219, 445, -264, 60, -150, 52, 74, 102, 89, 89,
	89, -270, 190, 185, 188, 30, -270, 182, -261, 354,
	74, 102, 184, 29, 99, 221, 355, 356,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 843, 0, 575, 575, 575, 575, 575,
	575, 575, 0, 0, 575, -2, -2, 575, 118, 0,
	575, 0, 0, -2, 508, 509, 0, 511, -2, 0,
	0, 520, 1396, 1396, 570, 0, 0, 0, 0, 0,
	575, 1394, 55, 56, 526, 527, 528, 1, 3, 0,
	579, 851, 0, 0, -2, 577, 0, 0, 962, 962,
	962, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 383, 344, 386, 342, 372, -2,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 237, 237, 0, 0, -2, 335,
	335, 335, 0, 0, 0, 369, 964, 290, 237, 237,
	0, 237, 237, 237, 237, 0, 0, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 867, 118, -2, 977, 978, 35, 36, 37,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 0, 956, 0, 440, 664, 0,
	499, 499, 0, 499, 499, 499, 499, 0, 0, 0,
	452, 0, 0, 0, 0, 496, 0, 0, 471, 473,
	0, 496, 0, 483, 499, 1397, 1397, 1397, 947, 0,
	493, 491, 505, 506, 488, 489, 507, 510, 0, 515,
	518, 973, 974, 0, 533, 0, 1199, 525, 538, 539,
	0, 571, 572, 40, 715, 674, 0, 680, 682, 0,
	717, 718, 719, 720, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 748, 749, 750, 828,
	829, 830, 831, 832, 833, 834, 835, 684, 685, 825,
	0, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 785, 785, 785, 785, 785, 785, 785,
	785, 785, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1396, 0, 548, 0, 0, 843, 51, 0, 575,
	580, 581, 886, 0, 0, 843, 1395, 0, 0, -2,
	-2, 591, 597, 598, 599, 600, 601, 576, 0, 604,
	608, 0, 0, 0, 963, 0, 0, 72, 0, 1358,
	940, -2, -2, 0, 0, 975, 976, 949, -2, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, -2, 0,
	0, 128, 129, 0, 38, 263, 0, 124, 0, 257,
	209, 867, 0, 0, 0, 0, 0, 575, 0, 957,
	109, 110, 116, 117, 237, 237, 0, 118, 118, 351,
	352, 353, 0, 0, -2, 261, 0, 336, 0, 0,
	251, 251, 255, 253, 254, 0, 0, 0, 0, 0,
	0, 363, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 238, 0, 381, 382, 291,
	0, 0, 0, 0, 361, 362, 0, 0, 965, 966,
	0, 0, 237, 237, 0, 0, 0, 0, 237, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 880, 0, 0,
	0, -2, 0, 432, 0, 0, 0, 958, 958, 439,
	0, 441, 442, 0, 0, 443, 0, 496, 496, 494,
	495, 445, 446, 447, 448, 499, 0, 0, 246, 247,
	248, 496, 499, 0, 499, 499, 499, 499, 496, 496,
	496, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1397, 1397, 1397, 502, 499, 480, 481, 484, 485,
	1398, 1399, 992, 486, 487, 948, 516, 519, 536, 534,
	535, 537, 529, 530, 531, 532, 0, 550, 551, 556,
	0, 0, 0, 0, 562, 563, 564, 0, 0, 567,
	568, 569, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 703, 704,
	705, 706, 707, 708, 681, 0, 695, 0, 0, 0,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 0,
	588, 0, 0, 0, 843, 0, 0, 0, 0, 0,
	0, 0, 585, 0, 817, 0, 768, 0, 769, 777,
	0, 770, 778, 771, 779, 772, 773, 780, 774, 781,
	775, 776, 782, 0, 0, 0, 588, 588, 0, 0,
	41, 540, 541, 0, 647, 968, 0, 851, 0, 590,
	889, 0, 0, 852, 844, 845, 848, 851, 0, 613,
	602, 592, 595, 596, 578, 0, 605, 609, 0, 611,
	612, 0, 0, 70, 0, 663, 0, 615, 617, 618,
	619, 645, 0, 0, 0, 0, 66, 68, 664, 0,
	1358, 946, 0, 74, 75, 0, 0, 0, 225, 951,
	952, 953, -2, 244, 0, -2, 216, 160, 161, 162,
	209, 164, 209, 209, 209, 209, 221, 221, 221, 221,
	192, 193, 194, 195, 196, 0, 0, 179, 209, 209,
	209, 209, 199, 200, 201, 202, 203, 204, 205, 206,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 211,
	211, 211, 213, 213, 0, 39, 0, 229, 0, 848,
	0, 880, 960, 970, 0, 0, 0, 960, 92, 0,
	0, 384, 345, 373, 385, 0, 348, 349, -2, 0,
	0, 335, 0, 337, 0, 245, 0, -2, 0, 255,
	0, 251, 255, 252, 255, 243, 256, 365, 825, 0,
	366, 367, 0, 404, 633, 0, 0, 0, 0, 0,
	410, 411, 412, 0, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 374, 375, 376, 377, 378, 379,
	380, 0, 0, 337, 0, 370, 0, 292, 293, 0,
	0, 296, 297, 298, 299, 0, 0, 302, 303, 304,
	650, 651, 305, 329, 330, 331, 306, 307, 308, 309,
	310, 311, 312, 323, 324, 325, 326, 327, 328, 313,
	314, 315, 316, 317, 320, 0, 102, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 958,
	0, 0, 0, 0, 665, 979, 980, 500, 501, 0,
	249, 250, 499, 499, 449, 472, 0, 499, 453, 474,
	454, 456, 455, 457, 476, 477, 499, 460, 497, 498,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	478, 0, 479, 0, 0, 517, 521, 522, 523, 524,
	0, 0, 553, 558, 559, 560, 561, 573, 566, 716,
	675, 676, 677, 679, 696, 0, 698, 700, 686, 687,
	711, 712, 713, 0, 0, 0, 0, 709, 691, 0,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 736, 800, 801, 802, 0, 734, 735, 746,
	0, 0, 0, 589, 826, 0, -2, 0, 714, 935,
	851, 0, 0, 0, 0, 719, 828, 0, 719, 828,
	0, 0, 0, 586, 587, 823, 820, 0, 0, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 546, 0, 667, 0, 648, 0, 0, 969, 549,
	886, 52, 42, 0, 887, 0, 0, 0, 0, 847,
	849, 850, 886, 0, 836, 0, 0, 672, 0, 0,
	593, 48, 610, 606, 0, 672, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 652, 0, 0, 655, 0,
	0, 0, 0, 646, 0, 0, 0, -2, 0, 0,
	0, 62, 63, 0, 0, 0, 941, 73, 0, 0,
	78, 79, 942, 943, 944, 945, 0, 111, -2, 287,
	130, 132, 133, 134, 125, 269, 0, 0, 219, 217,
	218, 163, 221, 221, 186, 187, 225, 0, 225, 225,
	225, 0, 0, 180, 181, 182, 183, 174, 0, 175,
	176, 177, 0, 178, 262, 0, 855, 230, 231, 233,
	237, 0, 0, 0, 258, 259, 0, 871, 0, 0,
	0, 971, 970, 970, 970, 0, 120, 121, 122, 123,
	118, 0, 0, 126, 339, 0, 0, 0, 260, 0,
	0, 255, 255, 240, 241, 0, 368, 0, 0, 406,
	407, 408, 409, 0, 0, 0, 337, 339, 225, 0,
	294, 295, 300, 301, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 401, 402,
	868, 869, 870, 0, 0, 433, 0, 0, 279, 64,
	959, 438, 496, 459, 475, 496, 451, 458, 503, 482,
	513, 557, 0, 0, 0, 565, 0, 697, 699, 701,
	688, 709, 692, 0, 689, 0, 0, 683, 751, 0,
	0, 588, 0, 843, 886, 755, 756, 0, 0, 0,
	0, 0, 793, 0, 0, 794, 0, 843, 0, 821,
	0, 0, 767, 787, 0, 0, 788, 789, 790, 791,
	792, 542, 545, 547, 623, 0, 0, 0, 0, 649,
	967, 44, 0, 0, 0, 853, 854, 846, 43, 0,
	954, 955, 837, 838, 839, 0, 603, 614, 594, 0,
	851, 929, 0, 0, 921, 0, 0, 672, 937, 0,
	616, 641, 643, 0, 638, 653, 654, 656, 0, 658,
	0, 660, 661, 620, 621, 622, 0, 672, 0, 672,
	67, 672, 69, 0, 666, 76, 77, 0, 0, 83,
	226, 227, 118, 289, 131, 135, 140, 0, 0, 0,
	144, 0, 146, 270, 0, 156, 158, 0, 0, 138,
	159, 220, 225, 225, 188, 222, 223, 224, 189, 190,
	191, 0, 207, 0, 0, 0, 282, 88, 859, 858,
	237, 237, 232, 0, 235, 0, 972, 210, 0, 101,
	0, 0, 0, 0, 0, 107, 0, 343, 627, 0,
	354, 355, 0, 338, 403, 0, 229, 0, 239, 242,
	826, 634, 0, 0, 356, 0, 339, 359, 360, 371,
	321, 322, 319, 0, 0, 881, 882, 0, 885, 93,
	392, 394, 393, 397, 0, 0, 389, 0, 279, 855,
	0, 437, 280, 281, 499, 499, 552, 0, 555, 0,
	690, 0, 710, 693, 752, 753, 0, 827, 851, 46,
	0, 209, 209, 806, 209, 213, 809, 209, 811, 209,
	814, 0, 0, 0, 0, 0, 0, 0, 818, 766,
	824, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	891, 888, 45, 841, 0, 673, 607, 49, 53, 0,
	929, 920, 931, 933, 0, 0, 0, 925, 0, 843,
	0, 0, 635, 642, 0, 0, 636, 0, 637, 657,
	659, -2, 843, 672, 60, 61, 0, 80, 81, 82,
	288, 141, 142, 0, 145, 155, 157, 0, 0, 184,
	185, 221, 0, 221, 0, 214, 0, 271, 283, 0,
	856, 857, 0, 0, 234, 236, 0, 961, 103, 0,
	0, 0, 0, 0, 127, 340, 0, 228, 0, 0,
	428, 425, 357, 358, 625, 872, 873, 874, 0, 884,
	96, 0, 0, 0, 0, 434, 435, 436, 65, 444,
	450, 554, 574, 694, 754, 886, 757, 803, 221, 807,
	808, 810, 812, 813, 815, 759, 758, 0, 0, 0,
	0, 0, 851, 0, 822, 0, 0, 0, 0, 0,
	647, 221, 911, 50, 0, 0, 0, 54, 0, 934,
	0, 0, 0, 0, 71, 851, 938, 939, 639, 0,
	644, 851, 59, 143, 0, 0, 225, 208, 225, 0,
	0, 284, 860, 861, 862, 863, 864, 865, 866, 625,
	104, 105, 106, 346, 628, 0, 0, 405, 0, 413,
	0, 0, 0, 0, 883, 391, 0, 94, 95, 0,
	0, 396, 47, 804, 805, 0, 0, 0, 0, 795,
	0, 819, 0, 0, 0, 669, 629, 630, 0, 0,
	667, 893, 892, 905, 918, 842, 840, 0, 932, 0,
	924, 927, 923, 926, 57, 0, 58, 0, 149, 197,
	198, 212, 215, 0, 0, 264, 429, 426, 427, 0,
	0, 97, 98, 0, 0, 0, 760, 762, 761, 763,
	0, 0, 0, 765, 783, 784, 0, 668, 670, 671,
	624, 911, 0, 904, 0, -2, 913, 0, 0, 0,
	919, 0, 922, 0, 640, 265, 269, 0, 0, 875,
	626, 0, 0, 0, 398, 764, 0, 0, 0, 631,
	632, 898, 896, 896, 906, 907, 0, 0, 914, 0,
	0, 0, 930, 928, 266, 267, 0, 136, 150, 151,
	0, 0, 154, 147, 148, 875, 0, 0, 387, 877,
	99, 100, 332, 333, 334, 93, 796, 0, 799, 901,
	0, 894, 897, 895, 908, 0, 0, 915, 0, 917,
	268, 0, 0, 0, 152, 153, 89, 430, 431, 0,
	878, 879, 96, 797, 890, 0, 899, 900, 909, 910,
	916, 272, 274, 275, 0, 0, 273, 0, 395, 0,
	902, 903, 276, 277, 278, 876, 0, 798,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 118, 3, 3, 3, 145, 137, 3,
	82, 84, 142, 140, 83, 141, 157, 143, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 481,
	126, 125, 127, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 147, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 148,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 119, 120, 121, 122, 123, 124, 128,
	129, 130, 131, 132, 133, 134, 135, 138, 139, 144,
	146, 149, 150, 151, 152, 153, 154, 155, 156, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:438
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:443
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:448
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:481
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:487
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:500
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:510
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:516
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:531
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:535
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:539
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:562
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:576
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:582
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:590
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:600
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:607
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:619
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:631
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:635
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:641
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:647
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:655
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:659
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:669
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:679
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:689
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:702
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:708
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:714
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:718
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:724
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:734
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:738
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:742
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:748
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:752
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:756
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:760
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:766
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:770
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:809
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:813
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:818
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:833
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:838
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:844
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:861
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:868
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:875
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:880
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:885
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:890
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:897
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:904
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:915
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:925
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:931
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:935
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:939
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:949
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:953
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:963
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:969
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:973
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:980
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:984
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:990
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1000
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1005
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1014
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1033
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1039
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1047
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1060
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1064
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1070
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1076
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1081
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1086
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1091
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1096
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1103
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1107
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1112
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1116
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1121
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1127
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1133
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1138
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1145
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1149
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1153
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1157
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1388
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1393
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1397
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1405
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1415
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = ""
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1477
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1486
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1492
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1496
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1502
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1506
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1511
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1515
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1531
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1535
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1539
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1543
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1547
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = yyDollar[2].str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = "key"
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = yyDollar[1].str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1615
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1625
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1631
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1635
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1641
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1645
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1651
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1657
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1661
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1665
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1669
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1684
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1690
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1696
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1702
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1706
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1710
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1714
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1718
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = ""
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1753
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1759
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1773
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1791
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1815
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1819
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1835
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1839
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1843
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1855
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1859
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1863
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1867
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1871
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1875
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1879
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1883
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1887
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1891
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = ""
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1946
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1955
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1964
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1968
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1972
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 346:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1980
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1986
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2000
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2004
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2008
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2012
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2016
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2020
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2028
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2032
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2036
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2040
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2044
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2048
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2052
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2056
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2060
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2064
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2068
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2072
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2076
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2080
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2084
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2090
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2100
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2104
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2108
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2112
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2116
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2120
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2124
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2128
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2132
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2138
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2144
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2151
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2158
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2164
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2168
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2175
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2182
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = NewTableIdent("")
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2189
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2201
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2211
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2215
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2219
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2232
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2242
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2246
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2257
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2264
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2271
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2278
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2286
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2290
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2294
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2298
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2302
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2306
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2310
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2314
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2318
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2322
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2326
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2330
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2334
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2338
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2342
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2346
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2350
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2354
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2358
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2362
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2366
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2370
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2379
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2383
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2390
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2400
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2404
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2410
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2416
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2420
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2426
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2430
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2439
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2443
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2449
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2453
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2458
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2464
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2468
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2472
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2476
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2480
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2484
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2488
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2492
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2496
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2512
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2516
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2520
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2524
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2528
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2532
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2536
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2540
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2544
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2548
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2552
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2556
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2560
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2564
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2568
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2576
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2580
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2584
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2588
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2592
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2596
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2600
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2604
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2608
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2613
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2617
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2621
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2625
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2629
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2634
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2648
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2652
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2656
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = "extended "
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2702
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2720
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2724
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2734
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2740
		{
			yyVAL.empty = struct{}{}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.empty = struct{}{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.empty = struct{}{}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2758
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.empty = struct{}{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.empty = struct{}{}
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.empty = struct{}{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.empty = struct{}{}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2807
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2812
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2816
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2820
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2824
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2828
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2832
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = yyDollar[1].str
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = yyDollar[1].str
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = yyDollar[1].str
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2883
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2893
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2903
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2909
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2919
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2925
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2929
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2933
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2937
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2959
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2985
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3040
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = ""
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3062
		{
			setAllowComments(yylex, true)
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
			yyVAL.strs = nil
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = ""
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.str = SQLCacheStr
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3125
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3130
		{
			yyVAL.strs = nil
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.str = SQLCacheStr
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = DistinctStr
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = DistinctStr
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = StraightJoinHint
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3182
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3192
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3196
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3200
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3204
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3209
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3217
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3229
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3233
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3239
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3253
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3257
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3261
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3267
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3273
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3277
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3286
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3292
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3302
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3306
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3320
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3337
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3341
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3345
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3349
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3357
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3361
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3367
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3377
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3398
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3402
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3406
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3412
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3418
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3422
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3426
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3430
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3436
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3440
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3479
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3483
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3487
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3491
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3500
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3506
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3510
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3514
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3518
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3522
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3526
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3534
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3550
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3554
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3560
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3564
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3568
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3572
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3576
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3580
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3584
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3588
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3592
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3596
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3602
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3606
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3610
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3614
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3618
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3622
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3628
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3632
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3636
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3640
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3644
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3648
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3652
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3667
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3671
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3675
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3682
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3688
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3698
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3746
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3750
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3754
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3758
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3762
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3774
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3778
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3782
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3786
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3790
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3794
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3798
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3802
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3806
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3810
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3832
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3836
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3840
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3844
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3854
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3870
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3874
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3878
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3882
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3886
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3898
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3902
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3916
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3920
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3939
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3950
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3955
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3959
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3963
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3968
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3973
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3978
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3996
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4006
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4014
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4018
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4022
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4026
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4030
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4036
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4040
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4044
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4048
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4052
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4072
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4076
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4080
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4084
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4088
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4092
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4098
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4102
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4106
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4110
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4114
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4118
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4122
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4131
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.str = string("")
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4146
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4156
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4165
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4171
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4175
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4179
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4201
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4214
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4243
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4252
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4261
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4267
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4277
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4282
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4286
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4290
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4299
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4303
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4307
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4316
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4320
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4324
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4328
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4335
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4339
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4343
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4347
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4353
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4357
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4361
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = yyDollar[2].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = "cascaded"
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = yyDollar[3].str
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4451
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4455
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4459
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4468
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4472
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4476
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = " header"
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = " manifest on"
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = " manifest off"
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = " overwrite on"
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = " overwrite off"
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4535
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4539
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = yyDollar[1].str
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4584
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = " optionally"
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4614
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4618
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4622
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4626
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4630
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4636
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4640
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4648
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4657
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4663
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4673
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4677
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4683
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4699
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4709
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4715
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4725
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4729
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4733
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4737
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4741
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = "charset"
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4776
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4781
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4783
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4788
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4791
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4796
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4804
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4813
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4820
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4824
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			decNesting(yylex)
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5310
		{
			skipToEnd(yylex)
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5315
		{
			skipToEnd(yylex)
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			skipToEnd(yylex)
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
