// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const COMPRESSION = 57435
const NULL = 57436
const TRUE = 57437
const FALSE = 57438
const OFF = 57439
const DISCARD = 57440
const IMPORT = 57441
const ENABLE = 57442
const DISABLE = 57443
const TABLESPACE = 57444
const OR = 57445
const XOR = 57446
const AND = 57447
const NOT = 57448
const BETWEEN = 57449
const CASE = 57450
const WHEN = 57451
const THEN = 57452
const ELSE = 57453
const END = 57454
const LE = 57455
const GE = 57456
const NE = 57457
const NULL_SAFE_EQUAL = 57458
const IS = 57459
const LIKE = 57460
const REGEXP = 57461
const IN = 57462
const SHIFT_LEFT = 57463
const SHIFT_RIGHT = 57464
const DIV = 57465
const MOD = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_BINARY = 57470
const UNDERSCORE_UTF8MB4 = 57471
const UNDERSCORE_UTF8 = 57472
const UNDERSCORE_LATIN1 = 57473
const INTERVAL = 57474
const JSON_EXTRACT_OP = 57475
const JSON_UNQUOTE_EXTRACT_OP = 57476
const CREATE = 57477
const ALTER = 57478
const DROP = 57479
const RENAME = 57480
const ANALYZE = 57481
const ADD = 57482
const FLUSH = 57483
const CHANGE = 57484
const MODIFY = 57485
const SCHEMA = 57486
const TABLE = 57487
const INDEX = 57488
const VIEW = 57489
const TO = 57490
const IGNORE = 57491
const IF = 57492
const UNIQUE = 57493
const PRIMARY = 57494
const COLUMN = 57495
const SPATIAL = 57496
const FULLTEXT = 57497
const KEY_BLOCK_SIZE = 57498
const CHECK = 57499
const INDEXES = 57500
const ACTION = 57501
const CASCADE = 57502
const CONSTRAINT = 57503
const FOREIGN = 57504
const NO = 57505
const REFERENCES = 57506
const RESTRICT = 57507
const SHOW = 57508
const DESCRIBE = 57509
const EXPLAIN = 57510
const DATE = 57511
const ESCAPE = 57512
const REPAIR = 57513
const OPTIMIZE = 57514
const TRUNCATE = 57515
const COALESCE = 57516
const EXCHANGE = 57517
const REBUILD = 57518
const PARTITIONING = 57519
const REMOVE = 57520
const MAXVALUE = 57521
const PARTITION = 57522
const REORGANIZE = 57523
const LESS = 57524
const THAN = 57525
const PROCEDURE = 57526
const TRIGGER = 57527
const VINDEX = 57528
const VINDEXES = 57529
const DIRECTORY = 57530
const NAME = 57531
const UPGRADE = 57532
const STATUS = 57533
const VARIABLES = 57534
const WARNINGS = 57535
const CASCADED = 57536
const DEFINER = 57537
const OPTION = 57538
const SQL = 57539
const UNDEFINED = 57540
const SEQUENCE = 57541
const MERGE = 57542
const TEMPTABLE = 57543
const INVOKER = 57544
const SECURITY = 57545
const FIRST = 57546
const AFTER = 57547
const LAST = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const SAVEPOINT = 57554
const RELEASE = 57555
const WORK = 57556
const BIT = 57557
const TINYINT = 57558
const SMALLINT = 57559
const MEDIUMINT = 57560
const INT = 57561
const INTEGER = 57562
const BIGINT = 57563
const INTNUM = 57564
const REAL = 57565
const DOUBLE = 57566
const FLOAT_TYPE = 57567
const DECIMAL = 57568
const NUMERIC = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const TEXT = 57580
const TINYTEXT = 57581
const MEDIUMTEXT = 57582
const LONGTEXT = 57583
const BLOB = 57584
const TINYBLOB = 57585
const MEDIUMBLOB = 57586
const LONGBLOB = 57587
const JSON = 57588
const ENUM = 57589
const GEOMETRY = 57590
const POINT = 57591
const LINESTRING = 57592
const POLYGON = 57593
const GEOMETRYCOLLECTION = 57594
const MULTIPOINT = 57595
const MULTILINESTRING = 57596
const MULTIPOLYGON = 57597
const NULLX = 57598
const AUTO_INCREMENT = 57599
const APPROXNUM = 57600
const SIGNED = 57601
const UNSIGNED = 57602
const ZEROFILL = 57603
const COLLATION = 57604
const DATABASES = 57605
const SCHEMAS = 57606
const TABLES = 57607
const VITESS_METADATA = 57608
const VSCHEMA = 57609
const FULL = 57610
const PROCESSLIST = 57611
const COLUMNS = 57612
const FIELDS = 57613
const ENGINES = 57614
const PLUGINS = 57615
const EXTENDED = 57616
const KEYSPACES = 57617
const VITESS_KEYSPACES = 57618
const VITESS_SHARDS = 57619
const VITESS_TABLETS = 57620
const CODE = 57621
const PRIVILEGES = 57622
const FUNCTION = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const CURRENT_USER = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const MATCH = 57656
const AGAINST = 57657
const BOOLEAN = 57658
const LANGUAGE = 57659
const WITH = 57660
const QUERY = 57661
const EXPANSION = 57662
const WITHOUT = 57663
const VALIDATION = 57664
const UNUSED = 57665
const ARRAY = 57666
const CUME_DIST = 57667
const DESCRIPTION = 57668
const DENSE_RANK = 57669
const EMPTY = 57670
const EXCEPT = 57671
const FIRST_VALUE = 57672
const GROUPING = 57673
const GROUPS = 57674
const JSON_TABLE = 57675
const LAG = 57676
const LAST_VALUE = 57677
const LATERAL = 57678
const LEAD = 57679
const MEMBER = 57680
const NTH_VALUE = 57681
const NTILE = 57682
const OF = 57683
const OVER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const RECURSIVE = 57687
const ROW_NUMBER = 57688
const SYSTEM = 57689
const WINDOW = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const FORMAT = 57747
const TREE = 57748
const VITESS = 57749
const TRADITIONAL = 57750
const LOCAL = 57751
const LOW_PRIORITY = 57752
const AVG_ROW_LENGTH = 57753
const CONNECTION = 57754
const CHECKSUM = 57755
const DELAY_KEY_WRITE = 57756
const ENCRYPTION = 57757
const ENGINE = 57758
const INSERT_METHOD = 57759
const MAX_ROWS = 57760
const MIN_ROWS = 57761
const PACK_KEYS = 57762
const PASSWORD = 57763
const FIXED = 57764
const DYNAMIC = 57765
const COMPRESSED = 57766
const REDUNDANT = 57767
const COMPACT = 57768
const ROW_FORMAT = 57769
const STATS_AUTO_RECALC = 57770
const STATS_PERSISTENT = 57771
const STATS_SAMPLE_PAGES = 57772
const STORAGE = 57773
const MEMORY = 57774
const DISK = 57775

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	163, 907,
	-2, 89,
	-1, 43,
	1, 107,
	451, 107,
	-2, 113,
	-1, 44,
	142, 113,
	252, 113,
	300, 113,
	-2, 325,
	-1, 51,
	34, 463,
	163, 463,
	175, 463,
	208, 477,
	209, 477,
	-2, 465,
	-1, 56,
	165, 487,
	-2, 485,
	-1, 80,
	55, 530,
	-2, 538,
	-1, 104,
	1, 108,
	451, 108,
	-2, 113,
	-1, 114,
	168, 230,
	169, 230,
	-2, 319,
	-1, 133,
	142, 113,
	252, 113,
	300, 113,
	-2, 334,
	-1, 550,
	149, 918,
	-2, 914,
	-1, 551,
	149, 919,
	-2, 915,
	-1, 568,
	55, 531,
	-2, 543,
	-1, 569,
	55, 532,
	-2, 544,
	-1, 589,
	117, 1245,
	-2, 82,
	-1, 590,
	117, 1132,
	-2, 83,
	-1, 596,
	117, 1180,
	-2, 892,
	-1, 730,
	117, 1074,
	-2, 889,
	-1, 762,
	174, 36,
	179, 36,
	-2, 241,
	-1, 841,
	1, 372,
	451, 372,
	-2, 113,
	-1, 1057,
	1, 268,
	451, 268,
	-2, 113,
	-1, 1130,
	168, 230,
	169, 230,
	-2, 319,
	-1, 1139,
	174, 37,
	179, 37,
	-2, 242,
	-1, 1333,
	149, 921,
	-2, 917,
	-1, 1423,
	73, 64,
	81, 64,
	-2, 68,
	-1, 1444,
	1, 269,
	451, 269,
	-2, 113,
	-1, 1831,
	5, 786,
	18, 786,
	20, 786,
	32, 786,
	82, 786,
	-2, 569,
	-1, 2043,
	45, 860,
	-2, 858,
}

const yyPrivate = 57344

const yyLast = 26340

var yyAct = [...]int{
	550, 2129, 2116, 1878, 2043, 1749, 2093, 2056, 493, 1647,
	1989, 1718, 1967, 894, 79, 3, 1811, 1506, 1812, 522,
	1441, 1615, 1370, 1875, 561, 1648, 508, 1808, 1356, 1005,
	1476, 960, 1722, 1012, 1461, 1706, 734, 1634, 491, 1481,
	1705, 853, 142, 1823, 1770, 1420, 1575, 173, 1327, 1261,
	185, 1319, 458, 185, 1504, 1137, 792, 1248, 474, 594,
	185, 128, 757, 1698, 892, 77, 1049, 1483, 1042, 1033,
	1402, 570, 1409, 1010, 1015, 1353, 1035, 1372, 999, 495,
	1296, 1553, 741, 763, 1144, 555, 1330, 738, 474, 31,
	1032, 474, 185, 474, 1039, 484, 1484, 1385, 1227, 742,
	1472, 591, 758, 759, 1048, 1425, 1046, 1022, 564, 75,
	1129, 1155, 760, 1264, 111, 112, 770, 834, 8, 481,
	973, 105, 145, 74, 106, 7, 172, 976, 6, 1741,
	1740, 1535, 1991, 1214, 80, 1613, 1462, 1367, 1368, 2085,
	1282, 2040, 1946, 1854, 2018, 2017, 1962, 796, 795, 1963,
	2135, 2090, 2128, 735, 1488, 113, 76, 576, 580, 2067,
	2119, 578, 1879, 1523, 2089, 556, 107, 2066, 185, 82,
	83, 84, 85, 86, 87, 1486, 797, 1787, 185, 1908,
	847, 482, 483, 185, 749, 1614, 33, 794, 436, 68,
	37, 38, 1838, 1839, 588, 174, 175, 176, 1542, 1837,
	808, 809, 1541, 812, 813, 814, 815, 171, 1435, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 595, 485, 751, 107, 773, 750,
	1436, 1437, 774, 1050, 535, 1051, 541, 542, 539, 540,
	462, 538, 537, 536, 752, 554, 1114, 798, 799, 800,
	166, 543, 544, 553, 1485, 811, 863, 861, 805, 1369,
	67, 1717, 102, 178, 179, 180, 1455, 1678, 872, 873,
	1677, 753, 166, 1679, 881, 108, 883, 130, 890, 174,
	175, 176, 810, 1127, 1689, 150, 1751, 1939, 461, 2069,
	1899, 1897, 102, 167, 472, 107, 1281, 108, 476, 130,
	1283, 1284, 1285, 470, 874, 1538, 1723, 150, 875, 872,
	873, 97, 1204, 880, 882, 1505, 140, 1236, 1228, 1237,
	1238, 129, 2030, 922, 921, 931, 932, 924, 925, 926,
	927, 928, 929, 930, 923, 1771, 1233, 933, 140, 147,
	2118, 148, 835, 129, 864, 862, 1131, 1132, 139, 138,
	165, 1745, 888, 1205, 2086, 1206, 889, 1752, 1746, 1754,
	869, 147, 842, 148, 1550, 462, 102, 94, 1131, 1132,
	139, 138, 165, 98, 867, 868, 99, 100, 1773, 865,
	866, 462, 817, 816, 1753, 1230, 2014, 1232, 772, 1957,
	1234, 1507, 781, 779, 1403, 790, 789, 788, 134, 1133,
	141, 787, 1130, 786, 135, 136, 1853, 785, 151, 784,
	878, 783, 778, 461, 101, 170, 1487, 754, 156, 1557,
	134, 1133, 141, 1123, 1130, 877, 135, 136, 1231, 461,
	151, 2065, 791, 1540, 1958, 1775, 185, 1779, 1426, 1774,
	156, 1772, 845, 2105, 101, 2133, 1777, 739, 462, 739,
	876, 879, 766, 737, 2136, 1776, 739, 886, 104, 474,
	474, 474, 1143, 1142, 846, 765, 746, 772, 1778, 1780,
	1616, 1618, 582, 1755, 1529, 2006, 1241, 474, 474, 856,
	857, 858, 859, 860, 782, 780, 2057, 772, 898, 801,
	1715, 772, 1537, 904, 1796, 1795, 461, 2070, 1794, 891,
	747, 1733, 69, 922, 921, 931, 932, 924, 925, 926,
	927, 928, 929, 930, 923, 1555, 772, 933, 101, 143,
	1554, 1525, 771, 435, 895, 896, 177, 1442, 775, 765,
	2031, 2047, 1549, 1928, 1555, 1548, 945, 946, 776, 1554,
	1836, 143, 1216, 1215, 1217, 1218, 1219, 1639, 1594, 933,
	1583, 1515, 1431, 1026, 185, 958, 777, 851, 174, 175,
	176, 923, 1576, 839, 933, 1674, 1617, 807, 137, 1262,
	943, 1381, 1003, 772, 911, 912, 910, 1591, 1278, 474,
	131, 870, 185, 132, 185, 185, 885, 474, 913, 1002,
	137, 2131, 913, 474, 2132, 1265, 2130, 907, 887, 2022,
	591, 771, 131, 910, 905, 132, 90, 906, 765, 768,
	769, 793, 739, 961, 2007, 2005, 762, 766, 1694, 913,
	1821, 771, 1229, 848, 849, 771, 1052, 775, 765, 1031,
	1000, 841, 765, 768, 769, 761, 739, 776, 912, 910,
	762, 766, 1016, 836, 1524, 837, 908, 840, 838, 914,
	771, 91, 855, 1789, 1014, 913, 975, 978, 980, 982,
	983, 985, 987, 988, 979, 981, 1354, 984, 986, 1354,
	989, 1601, 997, 144, 149, 146, 152, 153, 154, 155,
	157, 158, 159, 160, 1263, 485, 945, 946, 1118, 161,
	162, 163, 164, 1004, 971, 144, 149, 146, 152, 153,
	154, 155, 157, 158, 159, 160, 1522, 771, 1452, 806,
	1266, 161, 162, 163, 164, 945, 946, 174, 175, 176,
	1453, 1321, 1520, 595, 1008, 1011, 924, 925, 926, 927,
	928, 929, 930, 923, 185, 781, 933, 779, 1110, 926,
	927, 928, 929, 930, 923, 1517, 185, 933, 1119, 1120,
	931, 932, 924, 925, 926, 927, 928, 929, 930, 923,
	2137, 474, 933, 1139, 854, 1589, 2050, 1687, 1517, 1521,
	1019, 1148, 1223, 1588, 2120, 1152, 2110, 1322, 474, 474,
	1303, 474, 1149, 474, 474, 1945, 474, 474, 474, 474,
	474, 474, 1519, 169, 1301, 1302, 1300, 1135, 911, 912,
	910, 474, 2121, 1944, 2111, 185, 1188, 1183, 1184, 1121,
	1122, 911, 912, 910, 1221, 745, 913, 1703, 1128, 1791,
	1859, 1201, 1568, 1569, 1570, 1702, 1147, 2138, 1798, 913,
	1222, 1701, 474, 67, 1386, 1387, 1491, 1185, 1211, 1224,
	185, 911, 912, 910, 1209, 1299, 185, 1208, 1207, 185,
	1247, 1199, 185, 1193, 1146, 1190, 174, 175, 176, 913,
	1681, 2123, 1116, 185, 1109, 185, 1125, 1191, 1192, 1590,
	1126, 1124, 1220, 1197, 1198, 1189, 1799, 474, 474, 185,
	474, 474, 185, 474, 474, 1145, 1145, 744, 1164, 1138,
	1157, 1047, 1158, 2122, 1160, 1162, 1210, 2112, 1166, 1168,
	1170, 1172, 1174, 1253, 2101, 1255, 2079, 1257, 1258, 1259,
	1260, 1250, 748, 1980, 1942, 911, 912, 910, 1383, 1916,
	1800, 1267, 921, 931, 932, 924, 925, 926, 927, 928,
	929, 930, 923, 913, 1320, 933, 1297, 1711, 1186, 581,
	1242, 1268, 1269, 1323, 1271, 1272, 1699, 1274, 1275, 1291,
	1293, 1294, 911, 912, 910, 1565, 1533, 474, 174, 175,
	176, 1292, 1499, 751, 107, 1532, 750, 174, 175, 176,
	913, 1497, 1331, 1251, 1212, 1342, 1345, 1200, 1196, 586,
	1382, 1355, 1195, 1194, 1324, 1325, 1748, 565, 1335, 1336,
	2012, 474, 474, 1864, 2104, 1337, 1298, 2011, 1276, 174,
	175, 176, 185, 1202, 1877, 911, 912, 910, 174, 175,
	176, 1864, 2063, 76, 474, 1725, 1332, 1252, 1333, 1864,
	2048, 185, 1714, 913, 474, 583, 584, 1376, 185, 1450,
	185, 1635, 1377, 1668, 961, 1864, 565, 1388, 185, 185,
	1331, 1426, 1361, 1362, 1820, 474, 1864, 2020, 474, 1338,
	1339, 1809, 1421, 1344, 1347, 1348, 1960, 565, 591, 474,
	1820, 591, 1517, 565, 1926, 565, 1864, 1869, 1923, 1334,
	1635, 1286, 1287, 1288, 1289, 1851, 1850, 1847, 1848, 1360,
	1847, 1846, 1363, 1364, 1400, 33, 1333, 1427, 1396, 1395,
	565, 1394, 565, 1426, 1742, 1446, 1427, 1113, 1727, 1406,
	1445, 511, 510, 513, 514, 515, 516, 1463, 1464, 1465,
	512, 909, 517, 78, 474, 1720, 1721, 551, 1406, 565,
	1518, 1449, 1496, 1498, 909, 565, 1340, 1341, 2021, 33,
	1405, 1398, 1996, 1424, 1864, 474, 1113, 1112, 1820, 1478,
	1849, 474, 1058, 1057, 33, 1148, 1429, 1148, 1428, 1406,
	1433, 1432, 1434, 1606, 1642, 1516, 1430, 1428, 1394, 67,
	2055, 1448, 1447, 1605, 1394, 1426, 1517, 186, 1500, 1384,
	186, 1503, 1365, 558, 1517, 475, 1643, 186, 1394, 1240,
	1406, 595, 1044, 756, 595, 474, 755, 1320, 67, 1969,
	1876, 1934, 1320, 1320, 1115, 1477, 1747, 1479, 1510, 1473,
	1513, 1467, 1514, 67, 1947, 475, 1474, 1475, 475, 186,
	475, 1466, 1490, 1489, 1440, 1492, 1495, 1226, 67, 1179,
	1140, 1526, 1508, 1509, 1136, 1111, 1479, 185, 1512, 92,
	1951, 185, 185, 185, 185, 185, 1708, 171, 1528, 1707,
	1527, 185, 185, 1530, 1531, 185, 773, 67, 1176, 1750,
	774, 1948, 1949, 1950, 1970, 1411, 1414, 1415, 1416, 1412,
	1145, 1413, 1417, 185, 185, 185, 1180, 1181, 1182, 1824,
	1825, 1488, 2107, 1480, 1952, 1953, 2125, 185, 1830, 2088,
	185, 474, 2117, 1708, 1842, 186, 488, 1827, 565, 1809,
	1829, 1716, 1177, 1178, 1279, 186, 1244, 1659, 1656, 1657,
	186, 1655, 1660, 1559, 1658, 1661, 1801, 1415, 1416, 1563,
	1624, 1013, 1456, 1927, 1457, 1458, 1459, 1460, 1867, 1633,
	1297, 1536, 1632, 2075, 2072, 2109, 2092, 1558, 2094, 2100,
	1468, 1469, 1470, 1471, 922, 921, 931, 932, 924, 925,
	926, 927, 928, 929, 930, 923, 1622, 2099, 933, 2044,
	1239, 2042, 1578, 552, 1623, 96, 1579, 1712, 1350, 803,
	802, 571, 1585, 1707, 897, 1735, 185, 1586, 1587, 2052,
	1006, 1734, 1351, 1593, 185, 572, 1596, 1597, 1686, 108,
	1298, 1571, 1007, 2051, 1603, 1994, 1604, 1511, 1154, 1607,
	1608, 1609, 1610, 1611, 1153, 1141, 185, 1921, 1017, 1018,
	574, 168, 573, 1379, 181, 1493, 1621, 185, 185, 185,
	185, 185, 1386, 1387, 1649, 1580, 1581, 1644, 1628, 185,
	1584, 1243, 2013, 185, 556, 1964, 185, 185, 1600, 1419,
	185, 185, 185, 559, 560, 562, 1598, 1666, 1631, 1640,
	2114, 1637, 1000, 1680, 1612, 2113, 1630, 2097, 2076, 1664,
	1665, 1620, 1920, 1863, 1501, 563, 78, 1919, 1627, 1804,
	1635, 2127, 2126, 1693, 1595, 1592, 1027, 1020, 1638, 1636,
	2127, 1669, 2045, 1940, 1380, 1671, 558, 1651, 1652, 81,
	1654, 76, 1692, 73, 1695, 1696, 1697, 1683, 1, 474,
	1662, 1250, 1690, 1691, 1667, 445, 571, 1650, 1366, 1672,
	1653, 1675, 474, 998, 457, 2115, 1213, 1203, 474, 1684,
	572, 474, 1880, 1148, 1724, 1966, 1602, 1870, 474, 1494,
	1704, 1482, 1728, 764, 133, 1443, 1444, 2059, 89, 1730,
	1739, 1700, 732, 568, 569, 574, 88, 573, 185, 767,
	884, 1502, 1710, 2004, 1625, 1626, 1011, 1961, 1688, 1738,
	1709, 1454, 1938, 186, 1841, 1685, 2049, 474, 185, 1064,
	1737, 1062, 1128, 1063, 1061, 1066, 1065, 1060, 1729, 1280,
	471, 1418, 1053, 1332, 1021, 1333, 475, 475, 475, 804,
	1852, 1736, 1451, 1277, 474, 1534, 452, 871, 448, 941,
	1320, 1629, 1676, 592, 475, 475, 585, 1767, 1815, 95,
	2098, 2073, 2071, 2041, 1990, 2074, 2039, 2108, 2091, 1764,
	1765, 1378, 1758, 1009, 1759, 1769, 1918, 1803, 1768, 1760,
	474, 1756, 1599, 970, 1352, 1036, 494, 1290, 509, 506,
	185, 1766, 1788, 507, 1389, 1782, 1641, 915, 492, 486,
	474, 1781, 1028, 1410, 1408, 1407, 474, 474, 1245, 1040,
	1826, 1649, 1810, 1767, 1822, 1034, 1393, 1539, 1744, 567,
	93, 1349, 2029, 1813, 1907, 1807, 566, 59, 36, 185,
	478, 186, 2084, 900, 1816, 575, 1411, 1414, 1415, 1416,
	1412, 30, 1413, 1417, 29, 1819, 1824, 1825, 28, 521,
	23, 22, 21, 20, 19, 1831, 475, 1828, 25, 186,
	18, 186, 186, 17, 475, 1832, 16, 1834, 103, 1835,
	475, 1844, 1845, 1860, 1833, 46, 185, 185, 43, 41,
	110, 474, 109, 44, 40, 1840, 843, 27, 26, 15,
	14, 1797, 1866, 13, 185, 12, 11, 10, 9, 184,
	5, 1855, 469, 4, 903, 24, 959, 1856, 2, 184,
	1871, 1881, 474, 474, 474, 0, 185, 1865, 1818, 0,
	0, 0, 0, 1790, 1857, 1858, 1911, 1868, 0, 1874,
	0, 0, 579, 579, 1873, 0, 0, 0, 0, 0,
	0, 184, 0, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 1890, 0, 1889, 0, 1805, 0, 1891,
	1886, 1887, 0, 0, 0, 0, 1895, 0, 0, 0,
	1900, 1901, 0, 922, 921, 931, 932, 924, 925, 926,
	927, 928, 929, 930, 923, 0, 1915, 933, 0, 1649,
	0, 0, 0, 0, 1917, 0, 0, 0, 1922, 0,
	0, 0, 0, 1924, 1925, 0, 1931, 1929, 0, 0,
	0, 186, 0, 1930, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 186, 474, 474, 1936, 184, 0, 0,
	0, 1937, 184, 0, 0, 1955, 0, 474, 475, 0,
	474, 1941, 0, 1943, 0, 1954, 0, 0, 1965, 0,
	0, 0, 0, 1968, 1973, 475, 475, 0, 475, 1959,
	475, 475, 0, 475, 475, 475, 475, 475, 475, 0,
	0, 0, 0, 474, 474, 474, 185, 0, 475, 0,
	1971, 0, 186, 0, 1983, 1985, 1986, 474, 1972, 474,
	0, 0, 1979, 0, 0, 474, 0, 0, 1987, 0,
	1997, 1984, 1995, 1813, 1999, 0, 2002, 1813, 0, 475,
	0, 1988, 1993, 1909, 0, 2001, 0, 186, 0, 185,
	0, 2003, 2009, 186, 2010, 0, 186, 2008, 0, 186,
	474, 185, 0, 0, 0, 0, 485, 0, 2016, 2019,
	186, 2023, 186, 1932, 0, 0, 1933, 0, 0, 1935,
	0, 0, 0, 0, 475, 475, 186, 475, 475, 186,
	475, 475, 0, 2025, 2026, 2027, 2028, 0, 2032, 2038,
	2033, 2034, 2035, 2046, 2036, 2037, 1813, 0, 1892, 1893,
	0, 1894, 474, 474, 1896, 0, 1898, 0, 2053, 0,
	0, 0, 0, 0, 2058, 1968, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	2068, 0, 0, 0, 1649, 2077, 474, 0, 2064, 0,
	0, 2080, 0, 0, 0, 0, 0, 2083, 0, 2087,
	0, 0, 0, 0, 475, 0, 2096, 2095, 0, 0,
	0, 1992, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 175, 176, 0, 0, 475, 475,
	2102, 2103, 0, 0, 0, 0, 0, 0, 2124, 186,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 2134,
	0, 475, 0, 0, 0, 0, 1910, 0, 186, 0,
	0, 475, 0, 0, 0, 186, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 186, 186, 0, 0, 0,
	0, 0, 475, 449, 0, 475, 0, 1905, 0, 0,
	0, 0, 450, 0, 0, 0, 475, 0, 0, 0,
	0, 0, 447, 922, 921, 931, 932, 924, 925, 926,
	927, 928, 929, 930, 923, 0, 0, 933, 0, 0,
	0, 0, 1295, 0, 0, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	0, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 475, 0, 0, 0, 0, 579, 475, 0,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 0,
	0, 184, 462, 184, 1043, 922, 921, 931, 932, 924,
	925, 926, 927, 928, 929, 930, 923, 0, 0, 933,
	0, 0, 0, 1904, 0, 0, 0, 0, 0, 437,
	438, 439, 475, 454, 455, 465, 1761, 0, 0, 451,
	453, 466, 440, 441, 468, 467, 0, 443, 442, 0,
	461, 446, 463, 0, 0, 0, 922, 921, 931, 932,
	924, 925, 926, 927, 928, 929, 930, 923, 0, 0,
	933, 0, 166, 0, 186, 0, 0, 0, 186, 186,
	186, 186, 186, 0, 0, 0, 0, 0, 186, 186,
	0, 0, 186, 0, 0, 166, 0, 108, 0, 0,
	0, 520, 0, 0, 0, 0, 0, 150, 0, 0,
	186, 186, 186, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 186, 0, 0, 186, 475, 0,
	150, 922, 921, 931, 932, 924, 925, 926, 927, 928,
	929, 930, 923, 0, 0, 933, 0, 0, 1682, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 473,
	1001, 147, 0, 148, 0, 184, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 464, 1903, 0, 0,
	0, 0, 0, 459, 147, 0, 148, 0, 0, 593,
	0, 0, 736, 1151, 743, 165, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 186, 0, 0, 0, 0, 1151, 1151,
	477, 186, 0, 0, 184, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 740, 151, 186, 186, 186, 186, 186, 184,
	0, 0, 0, 156, 0, 184, 186, 0, 184, 0,
	186, 1249, 0, 186, 186, 0, 0, 186, 186, 186,
	0, 0, 184, 1577, 184, 922, 921, 931, 932, 924,
	925, 926, 927, 928, 929, 930, 923, 0, 184, 933,
	0, 184, 0, 922, 921, 931, 932, 924, 925, 926,
	927, 928, 929, 930, 923, 0, 0, 933, 1572, 1573,
	1574, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 844, 0,
	0, 143, 0, 850, 0, 0, 0, 0, 0, 475,
	0, 0, 0, 0, 0, 475, 0, 0, 475, 0,
	0, 0, 0, 0, 143, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 1249, 0,
	0, 0, 579, 579, 0, 186, 579, 579, 579, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 186, 0, 0, 0, 0,
	0, 0, 579, 579, 579, 579, 579, 0, 0, 0,
	0, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	1902, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 1249, 184, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 184, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 0,
	0, 0, 0, 475, 475, 144, 149, 146, 152, 153,
	154, 155, 157, 158, 159, 160, 0, 0, 0, 0,
	0, 161, 162, 163, 164, 0, 186, 0, 144, 149,
	146, 152, 153, 154, 155, 157, 158, 159, 160, 0,
	0, 0, 0, 0, 161, 162, 163, 164, 922, 921,
	931, 932, 924, 925, 926, 927, 928, 929, 930, 923,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 0,
	593, 593, 593, 186, 186, 0, 0, 0, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 901,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1763, 0, 852, 0, 0, 475,
	475, 475, 0, 186, 0, 0, 0, 0, 1783, 1784,
	0, 1785, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1792, 1793, 922, 921, 931, 932, 924, 925,
	926, 927, 928, 929, 930, 923, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	184, 184, 184, 184, 184, 0, 0, 0, 0, 0,
	184, 184, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 0, 1560, 1561, 184, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 1054, 0, 184, 0, 0, 184,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 475, 475, 0, 0, 0, 0, 0, 523, 32,
	0, 0, 0, 0, 475, 0, 0, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1030, 0, 0, 1041, 0, 0, 579, 579,
	0, 32, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 475, 475, 186, 0, 0, 0, 0, 0, 579,
	0, 0, 0, 0, 475, 0, 475, 0, 1888, 0,
	0, 0, 475, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 1374, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 579, 184, 0, 475, 186, 0,
	0, 0, 0, 0, 0, 1151, 184, 184, 184, 184,
	184, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 184, 0, 0, 184, 184, 0, 0, 184,
	1673, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 475,
	475, 0, 0, 0, 0, 1150, 0, 0, 0, 1156,
	1156, 0, 1156, 0, 1156, 1156, 0, 1165, 1156, 1156,
	1156, 1156, 1156, 0, 1059, 475, 0, 0, 0, 0,
	1150, 1150, 736, 475, 0, 0, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	1975, 1976, 1977, 1978, 0, 1151, 0, 1981, 1982, 0,
	0, 0, 0, 1225, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 593, 593,
	0, 593, 593, 0, 593, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 579, 0, 0, 0, 1041, 0, 0, 1246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1270,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	593, 0, 1151, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 0, 0, 1150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 1358, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1024, 0, 0, 593, 166,
	0, 0, 0, 0, 0, 184, 184, 0, 0, 0,
	0, 0, 0, 1151, 0, 0, 593, 0, 0, 593,
	0, 0, 0, 184, 108, 0, 130, 0, 0, 0,
	736, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 893, 893, 893,
	0, 1397, 0, 0, 0, 0, 0, 0, 1401, 0,
	1404, 0, 0, 0, 0, 140, 0, 32, 0, 1423,
	129, 0, 0, 0, 0, 0, 0, 0, 942, 944,
	0, 0, 0, 0, 0, 743, 0, 0, 147, 0,
	148, 0, 0, 0, 0, 117, 118, 139, 138, 165,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 957,
	1151, 0, 743, 962, 963, 964, 965, 966, 967, 968,
	969, 0, 972, 974, 977, 977, 977, 974, 977, 977,
	974, 977, 990, 991, 992, 993, 994, 995, 996, 0,
	0, 0, 0, 0, 0, 0, 32, 134, 115, 141,
	122, 114, 0, 135, 136, 0, 736, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 123, 0,
	0, 0, 1037, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 126, 124, 119, 120, 121, 125, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 917, 0,
	920, 127, 0, 0, 0, 1374, 934, 935, 936, 937,
	938, 939, 940, 0, 918, 919, 916, 922, 921, 931,
	932, 924, 925, 926, 927, 928, 929, 930, 923, 0,
	0, 933, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 1567, 0, 0, 0, 0, 1041, 0, 0,
	184, 1543, 1544, 1545, 1546, 1547, 0, 0, 143, 0,
	0, 1551, 1552, 0, 0, 1556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1069, 0, 0, 0, 0, 1562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 132, 1082, 0, 1151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1150, 0, 1095,
	1098, 1099, 1100, 1101, 1102, 1103, 0, 1104, 1105, 1106,
	1107, 1108, 1083, 1084, 1085, 1086, 1067, 1068, 1096, 0,
	1070, 0, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	0, 0, 144, 149, 146, 152, 153, 154, 155, 157,
	158, 159, 160, 0, 0, 0, 0, 0, 161, 162,
	163, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	1713, 0, 0, 0, 0, 893, 893, 0, 893, 893,
	0, 893, 893, 1719, 0, 0, 0, 1150, 0, 1726,
	1097, 0, 1719, 0, 0, 0, 0, 593, 0, 1731,
	33, 34, 35, 68, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 39, 65, 66, 0, 63,
	0, 0, 0, 0, 0, 64, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 1156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 1150, 0, 0, 1817, 1156, 0,
	0, 0, 0, 0, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 45, 48, 47,
	50, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 51, 71, 70,
	0, 0, 60, 61, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 54,
	0, 55, 56, 57, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 1883, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1861, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1719, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	2000, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1037, 0, 0, 0, 0, 2015,
	0, 1645, 1646, 593, 593, 1037, 1037, 1037, 1037, 1037,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1422, 0, 0, 1037, 0, 0, 1150, 1037, 2078,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1906, 0, 0, 0,
	0, 0, 0, 1912, 1913, 1914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 32, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 32, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 701, 32, 2054, 652, 717, 623, 641, 726, 643,
	646, 684, 604, 665, 321, 638, 0, 627, 600, 634,
	601, 625, 654, 237, 658, 622, 703, 668, 716, 280,
	0, 628, 334, 686, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 723, 284,
	675, 0, 379, 306, 0, 0, 0, 656, 706, 663,
	697, 651, 685, 612, 674, 718, 639, 682, 719, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 2061, 2062, 0, 0, 0, 0, 0, 213,
	0, 219, 679, 713, 636, 681, 233, 268, 239, 232,
	394, 683, 729, 599, 676, 0, 602, 605, 725, 709,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 655,
	664, 694, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 0, 673, 0, 0, 0, 608, 603, 0,
	0, 0, 0, 653, 0, 0, 0, 611, 0, 630,
	695, 0, 597, 256, 606, 307, 699, 708, 650, 421,
	712, 648, 647, 715, 690, 609, 705, 642, 279, 607,
	276, 188, 202, 0, 640, 317, 355, 360, 704, 626,
	635, 224, 633, 358, 330, 409, 209, 247, 352, 335,
	356, 672, 688, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 621, 700, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	692, 728, 329, 359, 215, 411, 378, 616, 620, 614,
	615, 666, 667, 617, 720, 721, 722, 696, 610, 0,
	618, 619, 0, 702, 710, 711, 671, 187, 200, 282,
	724, 349, 250, 432, 416, 414, 598, 613, 230, 624,
	0, 0, 637, 644, 645, 657, 659, 660, 661, 662,
	670, 677, 678, 680, 687, 689, 691, 693, 698, 707,
	727, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 669, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 714, 701, 0, 0,
	652, 717, 623, 641, 726, 643, 646, 684, 604, 665,
	321, 638, 0, 627, 600, 634, 601, 625, 654, 237,
	658, 622, 703, 668, 716, 280, 0, 628, 334, 686,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 723, 284, 675, 0, 379, 306,
	0, 0, 0, 656, 706, 663, 697, 651, 685, 612,
	674, 718, 639, 682, 719, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 679, 713,
	636, 681, 233, 268, 239, 232, 394, 683, 729, 599,
	676, 0, 602, 605, 725, 709, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 655, 664, 694, 649, 0,
	0, 0, 0, 0, 0, 1806, 0, 629, 0, 673,
	0, 0, 0, 608, 603, 0, 0, 0, 0, 653,
	0, 0, 0, 611, 0, 630, 695, 0, 597, 256,
	606, 307, 699, 708, 650, 421, 712, 648, 647, 715,
	690, 609, 705, 642, 279, 607, 276, 188, 202, 0,
	640, 317, 355, 360, 704, 626, 635, 224, 633, 358,
	330, 409, 209, 247, 352, 335, 356, 672, 688, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 621, 700, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 692, 728, 329, 359,
	215, 411, 378, 616, 620, 614, 615, 666, 667, 617,
	720, 721, 722, 696, 610, 0, 618, 619, 0, 702,
	710, 711, 671, 187, 200, 282, 724, 349, 250, 432,
	416, 414, 598, 613, 230, 624, 0, 0, 637, 644,
	645, 657, 659, 660, 661, 662, 670, 677, 678, 680,
	687, 689, 691, 693, 698, 707, 727, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 669, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 714, 701, 0, 0, 652, 717, 623, 641,
	726, 643, 646, 684, 604, 665, 321, 638, 0, 627,
	600, 634, 601, 625, 654, 237, 658, 622, 703, 668,
	716, 280, 0, 628, 334, 686, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	723, 284, 675, 0, 379, 306, 0, 0, 0, 656,
	706, 663, 697, 651, 685, 612, 674, 718, 639, 682,
	719, 270, 221, 192, 318, 380, 249, 67, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 679, 713, 636, 681, 233, 268,
	239, 232, 394, 683, 729, 599, 676, 0, 602, 605,
	725, 709, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 655, 664, 694, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 673, 0, 0, 0, 608,
	603, 0, 0, 0, 0, 653, 0, 0, 0, 611,
	0, 630, 695, 0, 597, 256, 606, 307, 699, 708,
	650, 421, 712, 648, 647, 715, 690, 609, 705, 642,
	279, 607, 276, 188, 202, 0, 640, 317, 355, 360,
	704, 626, 635, 224, 633, 358, 330, 409, 209, 247,
	352, 335, 356, 672, 688, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 621, 700, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 692, 728, 329, 359, 215, 411, 378, 616,
	620, 614, 615, 666, 667, 617, 720, 721, 722, 696,
	610, 0, 618, 619, 0, 702, 710, 711, 671, 187,
	200, 282, 724, 349, 250, 432, 416, 414, 598, 613,
	230, 624, 0, 0, 637, 644, 645, 657, 659, 660,
	661, 662, 670, 677, 678, 680, 687, 689, 691, 693,
	698, 707, 727, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 669, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 714, 701,
	0, 0, 652, 717, 623, 641, 726, 643, 646, 684,
	604, 665, 321, 638, 0, 627, 600, 634, 601, 625,
	654, 237, 658, 622, 703, 668, 716, 280, 0, 628,
	334, 686, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 723, 284, 675, 0,
	379, 306, 0, 0, 0, 656, 706, 663, 697, 651,
	685, 612, 674, 718, 639, 682, 719, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	679, 713, 636, 681, 233, 268, 239, 232, 394, 683,
	729, 599, 676, 0, 602, 605, 725, 709, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 655, 664, 694,
	649, 0, 0, 0, 0, 0, 0, 1674, 0, 629,
	0, 673, 0, 0, 0, 608, 603, 0, 0, 0,
	0, 653, 0, 0, 0, 611, 0, 630, 695, 0,
	597, 256, 606, 307, 699, 708, 650, 421, 712, 648,
	647, 715, 690, 609, 705, 642, 279, 607, 276, 188,
	202, 0, 640, 317, 355, 360, 704, 626, 635, 224,
	633, 358, 330, 409, 209, 247, 352, 335, 356, 672,
	688, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 621, 700, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 692, 728,
	329, 359, 215, 411, 378, 616, 620, 614, 615, 666,
	667, 617, 720, 721, 722, 696, 610, 0, 618, 619,
	0, 702, 710, 711, 671, 187, 200, 282, 724, 349,
	250, 432, 416, 414, 598, 613, 230, 624, 0, 0,
	637, 644, 645, 657, 659, 660, 661, 662, 670, 677,
	678, 680, 687, 689, 691, 693, 698, 707, 727, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	669, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 714, 701, 0, 0, 652, 717,
	623, 641, 726, 643, 646, 684, 604, 665, 321, 638,
	0, 627, 600, 634, 601, 625, 654, 237, 658, 622,
	703, 668, 716, 280, 0, 628, 334, 686, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 723, 284, 675, 0, 379, 306, 0, 0,
	0, 656, 706, 663, 697, 651, 685, 612, 674, 718,
	639, 682, 719, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 679, 713, 636, 681,
	233, 268, 239, 232, 394, 683, 729, 599, 676, 0,
	602, 605, 725, 709, 631, 632, 0, 0, 0, 0,
	0, 0, 0, 655, 664, 694, 649, 0, 0, 0,
	0, 0, 0, 1399, 0, 629, 0, 673, 0, 0,
	0, 608, 603, 0, 0, 0, 0, 653, 0, 0,
	0, 611, 0, 630, 695, 0, 597, 256, 606, 307,
	699, 708, 650, 421, 712, 648, 647, 715, 690, 609,
	705, 642, 279, 607, 276, 188, 202, 0, 640, 317,
	355, 360, 704, 626, 635, 224, 633, 358, 330, 409,
	209, 247, 352, 335, 356, 672, 688, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 621,
	700, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 692, 728, 329, 359, 215, 411,
	378, 616, 620, 614, 615, 666, 667, 617, 720, 721,
	722, 696, 610, 0, 618, 619, 0, 702, 710, 711,
	671, 187, 200, 282, 724, 349, 250, 432, 416, 414,
	598, 613, 230, 624, 0, 0, 637, 644, 645, 657,
	659, 660, 661, 662, 670, 677, 678, 680, 687, 689,
	691, 693, 698, 707, 727, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 669, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	714, 701, 0, 0, 652, 717, 623, 641, 726, 643,
	646, 684, 604, 665, 321, 638, 0, 627, 600, 634,
	601, 625, 654, 237, 658, 622, 703, 668, 716, 280,
	0, 628, 334, 686, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 723, 284,
	675, 0, 379, 306, 0, 0, 0, 656, 706, 663,
	697, 651, 685, 612, 674, 718, 639, 682, 719, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 679, 713, 636, 681, 233, 268, 239, 232,
	394, 683, 729, 599, 676, 0, 602, 605, 725, 709,
	631, 632, 0, 0, 0, 0, 0, 0, 0, 655,
	664, 694, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 0, 673, 0, 0, 0, 608, 603, 0,
	0, 0, 0, 653, 0, 0, 0, 611, 0, 630,
	695, 0, 597, 256, 606, 307, 699, 708, 650, 421,
	712, 648, 647, 715, 690, 609, 705, 642, 279, 607,
	276, 188, 202, 0, 640, 317, 355, 360, 704, 626,
	635, 224, 633, 358, 330, 409, 209, 247, 352, 335,
	356, 672, 688, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 621, 700, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	692, 728, 329, 359, 215, 411, 378, 616, 620, 614,
	615, 666, 667, 617, 720, 721, 722, 696, 610, 0,
	618, 619, 0, 702, 710, 711, 671, 187, 200, 282,
	724, 349, 250, 432, 416, 414, 598, 613, 230, 624,
	0, 0, 637, 644, 645, 657, 659, 660, 661, 662,
	670, 677, 678, 680, 687, 689, 691, 693, 698, 707,
	727, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 669, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 714, 701, 0, 0,
	652, 717, 623, 641, 726, 643, 646, 684, 604, 665,
	321, 638, 0, 627, 600, 634, 601, 625, 654, 237,
	658, 622, 703, 668, 716, 280, 0, 628, 334, 686,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 723, 284, 675, 0, 379, 306,
	0, 0, 0, 656, 706, 663, 697, 651, 685, 612,
	674, 718, 639, 682, 719, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 679, 713,
	636, 681, 233, 268, 239, 232, 394, 683, 729, 599,
	676, 0, 602, 605, 725, 709, 631, 632, 0, 0,
	0, 0, 0, 0, 0, 655, 664, 694, 649, 0,
	0, 0, 0, 0, 0, 0, 0, 629, 0, 673,
	0, 0, 0, 608, 603, 0, 0, 0, 0, 653,
	0, 0, 0, 611, 0, 630, 695, 0, 597, 256,
	606, 307, 699, 708, 650, 421, 712, 648, 647, 715,
	690, 609, 705, 642, 279, 607, 276, 188, 202, 0,
	640, 317, 355, 360, 704, 626, 635, 224, 633, 358,
	330, 409, 209, 247, 352, 335, 356, 672, 688, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 731, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 621, 700, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	596, 730, 590, 589, 277, 286, 692, 728, 329, 359,
	215, 411, 378, 616, 620, 614, 615, 666, 667, 617,
	720, 721, 722, 696, 610, 0, 618, 619, 0, 702,
	710, 711, 671, 187, 200, 282, 724, 349, 250, 432,
	416, 414, 598, 613, 230, 624, 0, 0, 637, 644,
	645, 657, 659, 660, 661, 662, 670, 677, 678, 680,
	687, 689, 691, 693, 698, 707, 727, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 669, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 714, 701, 0, 0, 652, 717, 623, 641,
	726, 643, 646, 684, 604, 665, 321, 638, 0, 627,
	600, 634, 601, 625, 654, 237, 658, 622, 703, 668,
	716, 280, 0, 628, 334, 686, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	723, 284, 675, 0, 379, 306, 0, 0, 0, 656,
	706, 663, 697, 651, 685, 612, 674, 718, 639, 682,
	719, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 679, 713, 636, 681, 233, 268,
	239, 232, 394, 683, 729, 599, 676, 0, 602, 605,
	725, 709, 631, 632, 0, 0, 0, 0, 0, 0,
	0, 655, 664, 694, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 673, 0, 0, 0, 608,
	603, 0, 0, 0, 0, 653, 0, 0, 0, 611,
	0, 630, 695, 0, 597, 256, 606, 307, 699, 708,
	650, 421, 712, 648, 647, 715, 690, 609, 705, 642,
	279, 607, 276, 188, 202, 0, 640, 317, 355, 360,
	704, 626, 635, 224, 633, 358, 330, 409, 209, 247,
	352, 335, 356, 672, 688, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 1045, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 731,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 621, 700, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 596, 730, 590, 589,
	277, 286, 692, 728, 329, 359, 215, 411, 378, 616,
	620, 614, 615, 666, 667, 617, 720, 721, 722, 696,
	610, 0, 618, 619, 0, 702, 710, 711, 671, 187,
	200, 282, 724, 349, 250, 432, 416, 414, 598, 613,
	230, 624, 0, 0, 637, 644, 645, 657, 659, 660,
	661, 662, 670, 677, 678, 680, 687, 689, 691, 693,
	698, 707, 727, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 669, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 714, 701,
	0, 0, 652, 717, 623, 641, 726, 643, 646, 684,
	604, 665, 321, 638, 0, 627, 600, 634, 601, 625,
	654, 237, 658, 622, 703, 668, 716, 280, 0, 628,
	334, 686, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 723, 284, 675, 0,
	379, 306, 0, 0, 0, 656, 706, 663, 697, 651,
	685, 612, 674, 718, 639, 682, 719, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	679, 713, 636, 681, 233, 268, 239, 232, 394, 683,
	729, 599, 676, 0, 602, 605, 725, 709, 631, 632,
	0, 0, 0, 0, 0, 0, 0, 655, 664, 694,
	649, 0, 0, 0, 0, 0, 0, 0, 0, 629,
	0, 673, 0, 0, 0, 608, 603, 0, 0, 0,
	0, 653, 0, 0, 0, 611, 0, 630, 695, 0,
	597, 256, 606, 307, 699, 708, 650, 421, 712, 648,
	647, 715, 690, 609, 705, 642, 279, 607, 276, 188,
	202, 0, 640, 317, 355, 360, 704, 626, 635, 224,
	633, 358, 330, 409, 209, 247, 352, 335, 356, 672,
	688, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 587,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 731, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 621, 700, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 596, 730, 590, 589, 277, 286, 692, 728,
	329, 359, 215, 411, 378, 616, 620, 614, 615, 666,
	667, 617, 720, 721, 722, 696, 610, 0, 618, 619,
	0, 702, 710, 711, 671, 187, 200, 282, 724, 349,
	250, 432, 416, 414, 598, 613, 230, 624, 0, 0,
	637, 644, 645, 657, 659, 660, 661, 662, 670, 677,
	678, 680, 687, 689, 691, 693, 698, 707, 727, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	669, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 1328, 0, 490,
	0, 0, 0, 237, 0, 489, 0, 0, 0, 280,
	0, 1329, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 533, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 524,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 67, 0, 0, 174, 175,
	176, 511, 510, 513, 514, 515, 516, 0, 0, 213,
	512, 219, 517, 518, 519, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 487, 504, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 502, 577,
	0, 0, 0, 548, 0, 503, 0, 0, 496, 497,
	499, 498, 500, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 547, 0, 0, 421,
	0, 0, 545, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 535, 546, 541,
	542, 539, 540, 534, 538, 537, 536, 549, 526, 527,
	528, 529, 531, 0, 543, 544, 530, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 321, 0, 0, 0,
	0, 490, 0, 0, 0, 237, 0, 489, 0, 0,
	0, 280, 0, 0, 334, 0, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	533, 284, 0, 0, 379, 306, 0, 0, 0, 0,
	0, 524, 525, 0, 0, 0, 0, 0, 0, 1438,
	0, 270, 221, 192, 318, 380, 249, 67, 0, 0,
	174, 175, 176, 511, 510, 513, 514, 515, 516, 0,
	0, 213, 512, 219, 517, 518, 519, 1439, 233, 268,
	239, 232, 394, 0, 0, 0, 487, 504, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	502, 0, 0, 0, 0, 548, 0, 503, 0, 0,
	496, 497, 499, 498, 500, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 307, 547, 0,
	0, 421, 0, 0, 545, 0, 0, 0, 0, 0,
	279, 0, 276, 188, 202, 0, 0, 317, 355, 360,
	0, 0, 0, 224, 0, 358, 330, 409, 209, 247,
	352, 335, 356, 0, 0, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 0, 0, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 0, 0, 329, 359, 215, 411, 378, 535,
	546, 541, 542, 539, 540, 534, 538, 537, 536, 549,
	526, 527, 528, 529, 531, 0, 543, 544, 530, 187,
	200, 282, 0, 349, 250, 432, 416, 414, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 0, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 0, 0, 490, 0, 0, 0, 237, 0, 489,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 533, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 524, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 67,
	0, 565, 174, 175, 176, 511, 510, 513, 514, 515,
	516, 0, 0, 213, 512, 219, 517, 518, 519, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 487, 504,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 502, 0, 0, 0, 0, 548, 0, 503,
	0, 0, 496, 497, 499, 498, 500, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	547, 0, 0, 421, 0, 0, 545, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 535, 546, 541, 542, 539, 540, 534, 538, 537,
	536, 549, 526, 527, 528, 529, 531, 0, 543, 544,
	530, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	321, 0, 0, 0, 0, 490, 0, 0, 0, 237,
	0, 489, 0, 0, 0, 280, 0, 0, 334, 0,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 533, 284, 0, 0, 379, 306,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 221, 192, 318, 380,
	249, 67, 0, 0, 174, 175, 176, 511, 510, 513,
	514, 515, 516, 0, 0, 213, 512, 219, 517, 518,
	519, 0, 233, 268, 239, 232, 394, 0, 0, 0,
	487, 504, 0, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 502, 577, 0, 0, 0, 548,
	0, 503, 0, 0, 496, 497, 499, 498, 500, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 307, 547, 0, 0, 421, 0, 0, 545, 0,
	0, 0, 0, 0, 279, 0, 276, 188, 202, 0,
	0, 317, 355, 360, 0, 0, 0, 224, 0, 358,
	330, 409, 209, 247, 352, 335, 356, 0, 0, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 0, 0, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 0, 0, 329, 359,
	215, 411, 378, 535, 546, 541, 542, 539, 540, 534,
	538, 537, 536, 549, 526, 527, 528, 529, 531, 0,
	543, 544, 530, 187, 200, 282, 0, 349, 250, 432,
	416, 414, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 0, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 321, 0, 0, 0, 0, 490, 0, 0,
	0, 237, 0, 489, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 533, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 67, 0, 0, 174, 175, 176, 511,
	1346, 513, 514, 515, 516, 0, 0, 213, 512, 219,
	517, 518, 519, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 487, 504, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 502, 577, 0, 0,
	0, 548, 0, 503, 0, 0, 496, 497, 499, 498,
	500, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 547, 0, 0, 421, 0, 0,
	545, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 535, 546, 541, 542, 539,
	540, 534, 538, 537, 536, 549, 526, 527, 528, 529,
	531, 0, 543, 544, 530, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 0, 490,
	0, 0, 0, 237, 0, 489, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 533, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 524,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 67, 0, 0, 174, 175,
	176, 511, 1343, 513, 514, 515, 516, 0, 0, 213,
	512, 219, 517, 518, 519, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 487, 504, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 502, 577,
	0, 0, 0, 548, 0, 503, 0, 0, 496, 497,
	499, 498, 500, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 547, 0, 0, 421,
	0, 0, 545, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 535, 546, 541,
	542, 539, 540, 534, 538, 537, 536, 549, 526, 527,
	528, 529, 531, 0, 543, 544, 530, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 490, 0, 0, 0, 237, 0,
	489, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 533, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 524, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	67, 0, 0, 174, 175, 176, 511, 510, 513, 514,
	515, 516, 0, 0, 213, 512, 219, 517, 518, 519,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 487,
	504, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 548, 0,
	503, 0, 0, 496, 497, 499, 498, 500, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 547, 0, 0, 421, 0, 0, 545, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 535, 546, 541, 542, 539, 540, 534, 538,
	537, 536, 549, 526, 527, 528, 529, 531, 0, 543,
	544, 530, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 490, 0, 0, 0,
	237, 0, 489, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 533, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 67, 0, 0, 174, 175, 176, 511, 510,
	513, 514, 515, 516, 0, 0, 213, 512, 219, 517,
	518, 519, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 487, 504, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 502, 0, 0, 0, 0,
	548, 0, 503, 0, 0, 496, 497, 499, 498, 500,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 547, 0, 0, 421, 0, 0, 545,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 535, 546, 541, 542, 539, 540,
	534, 538, 537, 536, 549, 526, 527, 528, 529, 531,
	0, 543, 544, 530, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 533, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 67, 0, 0, 174, 175, 176,
	511, 510, 513, 514, 515, 516, 0, 0, 213, 512,
	219, 517, 518, 519, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 504, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 502, 0, 0,
	0, 0, 548, 0, 503, 0, 0, 496, 497, 499,
	498, 500, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 547, 0, 0, 421, 0,
	0, 545, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	2082, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 535, 546, 541, 542,
	539, 540, 534, 538, 537, 536, 549, 526, 527, 528,
	529, 531, 0, 543, 544, 530, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 533,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 67, 0, 565, 174,
	175, 176, 511, 510, 513, 514, 515, 516, 0, 0,
	213, 512, 219, 517, 518, 519, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 504, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 502,
	0, 0, 0, 0, 548, 0, 503, 0, 0, 496,
	497, 499, 498, 500, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 547, 0, 0,
	421, 0, 0, 545, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 535, 546,
	541, 542, 539, 540, 534, 538, 537, 536, 549, 526,
	527, 528, 529, 531, 0, 543, 544, 530, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 533, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 67, 0,
	0, 174, 175, 176, 511, 510, 513, 514, 515, 516,
	0, 0, 213, 512, 219, 517, 518, 519, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 504, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 548, 0, 503, 0,
	0, 496, 497, 499, 498, 500, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 547,
	0, 0, 421, 0, 0, 545, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	535, 546, 541, 542, 539, 540, 534, 538, 537, 536,
	549, 526, 527, 528, 529, 531, 0, 543, 544, 530,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 922, 921,
	931, 932, 924, 925, 926, 927, 928, 929, 930, 923,
	0, 0, 933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 772, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 771, 421, 0, 0, 0,
	0, 0, 0, 768, 769, 279, 739, 276, 188, 202,
	762, 766, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 1023, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 1025, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	911, 912, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 913, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 33, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 0, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 67,
	0, 565, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 0, 0, 0, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	321, 0, 0, 0, 1373, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 280, 0, 0, 334, 0,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 0, 284, 0, 0, 379, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 1375, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 0, 0,
	0, 0, 233, 268, 239, 232, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 307, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 276, 188, 202, 0,
	0, 317, 355, 360, 0, 0, 0, 224, 0, 358,
	330, 409, 209, 247, 352, 335, 356, 0, 1371, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 0, 0, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 0, 0, 329, 359,
	215, 411, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 200, 282, 0, 349, 250, 432,
	416, 414, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 0, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 0, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	0, 0, 0, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 739, 276, 188,
	202, 737, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 1373, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 0, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 1375, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 0, 0, 0, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 33, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	67, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 0,
	1391, 0, 0, 1392, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 1056, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 1055, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 565, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 67, 0,
	0, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 0, 174, 175, 176, 0, 1375, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 1025,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 1175, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 1173, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 1171,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 1169, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 1167, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 1163, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 1161, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 1159,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	1134, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 1038, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 0, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 0, 0, 0, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	321, 0, 0, 0, 0, 0, 0, 0, 1029, 237,
	0, 0, 0, 0, 0, 280, 0, 0, 334, 0,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 0, 284, 0, 0, 379, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 0, 0,
	0, 0, 233, 268, 239, 232, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 307, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 276, 188, 202, 0,
	0, 317, 355, 360, 0, 0, 0, 224, 0, 358,
	330, 409, 209, 247, 352, 335, 356, 0, 0, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 0, 0, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 0, 0, 329, 359,
	215, 411, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 200, 282, 0, 349, 250, 432,
	416, 414, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 0, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 0, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	902, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	0, 0, 0, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 0, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 0, 0, 0, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 256, 0, 307, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 479, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 280, 0, 0, 334, 0, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	0, 284, 0, 0, 379, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 0, 0, 0, 0, 233, 268,
	239, 232, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 307, 0, 182,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 276, 188, 202, 0, 0, 317, 355, 360,
	0, 0, 0, 224, 0, 358, 330, 409, 209, 247,
	352, 335, 356, 0, 0, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 0, 0, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 0, 0, 329, 359, 215, 411, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	200, 282, 0, 349, 250, 432, 416, 414, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 0, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 0, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 0, 0, 0, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
}

var yyPact = [...]int{
	3884, -1000, -328, 1476, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1440, 1138, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	526, 1149, 205, 1349, 3394, 131, 925, 364, 101, 25457,
	361, 2020, 25889, -1000, 77, -1000, 63, 25889, 69, 25025,
	-1000, -1000, -1000, 12032, 1313, -29, -37, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1167, 1412, 1417, 1438, 1008,
	1474, -1000, 10291, 10291, 306, 306, 306, 8563, -1000, -1000,
	15933, 25889, 25889, 1161, 299, 337, 299, -138, -1000, -1000,
	-1000, -1000, -1000, -1000, 1349, -1000, -1000, 129, -1000, 222,
	1105, -1000, 1102, -1000, 438, 359, 215, 288, 287, 214,
	212, 210, 206, 204, 200, 199, 198, 238, -1000, 494,
	494, -191, -192, 2360, 295, 295, 295, 324, 1326, 1325,
	-1000, 544, -1000, 494, 494, 113, 494, 494, 494, 494,
	178, 177, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 25889, -1000, 130,
	491, 530, 1349, 155, -1000, -1000, -1000, 25889, 297, 925,
	297, 297, 25889, -1000, 408, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 25889, 639, 639, 639, 639,
	639, 639, 49, -1000, 48, 171, 166, 152, 22, 925,
	112, -1000, 423, -1000, 143, 74, -1000, 639, 5887, 5887,
	5887, -1000, 1333, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 323, -1000, -1000, -1000, -1000, 25889, 24593, 180, 529,
	-1000, -1000, -1000, -1000, 1030, 468, -1000, 12032, 3489, 1108,
	1108, -1000, -1000, 386, -1000, -1000, 13328, 13328, 13328, 13328,
	13328, 13328, 13328, 13328, 13328, 13328, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1108, 406, -1000, 11600, 1108, 1108, 1108, 1108, 1108, 1108,
	1108, 1108, 12032, 1108, 1108, 1108, 1108, 1108, 1108, 1108,
	1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108,
	-1000, -1000, -1000, 25889, -1000, 1440, -1000, 1138, -1000, -1000,
	-1000, 1350, 12032, 12032, 1440, -1000, 1256, 10291, -1000, -1000,
	1339, -1000, -1000, -1000, -1000, 677, 1455, -1000, 14624, 404,
	1454, 24161, -1000, 18538, 23729, 1101, 8117, -70, -1000, -1000,
	-1000, 509, 17674, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1333, 1061, 25889, -1000, -1000, 3547, 925, -1000, 1145,
	-1000, 1055, -1000, 1114, 130, 25889, 579, 925, 925, -1000,
	-1000, -1000, 494, 494, 229, 3394, 267, -1000, -1000, -1000,
	23290, 1144, 925, -1000, 1140, -1000, 1366, 294, 487, 487,
	925, -1000, -1000, 25889, 925, 1365, 1359, 25889, 25889, -1000,
	22858, -1000, 22426, 21994, 800, 25889, 21562, 21130, 20698, 20266,
	19834, -1000, 1218, -1000, 1189, -1000, -1000, -1000, 25889, 25889,
	25889, -12, -1000, -1000, 25889, 925, -1000, -1000, 787, 767,
	494, 494, 765, 896, 895, 891, 494, 494, 763, 890,
	916, 132, 760, 759, 756, 808, 887, 103, 784, 742,
	751, 25889, 1137, -1000, 104, 505, 182, 225, 174, 25889,
	102, 1349, 1310, 1098, 311, 25889, 1397, 1224, 25889, 925,
	-1000, 7225, -1000, -1000, 886, 12032, -1000, -1000, -1000, -1000,
	-1000, 639, 25889, 639, 25889, 639, 639, 639, 639, 557,
	583, 557, -1000, -1000, -1000, -1000, 5887, 5887, 25889, 5887,
	5887, 25889, 5887, 5887, 583, -1000, -1000, -1000, 453, -1000,
	1222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 67, -1000,
	-1000, -1000, -1000, -1000, 1476, -1000, -1000, -1000, -123, 12032,
	12032, 12032, 12032, 852, 464, 13328, 753, 669, 13328, 13328,
	13328, 13328, 13328, 13328, 13328, 13328, 13328, 13328, 13328, 13328,
	13328, 13328, 13328, 634, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 925, -1000, 1470, 1015, 1015, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 13760, 8995, 7225, 1008,
	1043, 1440, 10291, 10291, 12032, 12032, 11155, 10723, 10291, 1336,
	553, 468, 25889, -1000, 905, -1000, -1000, 12896, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	25889, 25889, 10291, 10291, 10291, 10291, 10291, -1000, 1091, -1000,
	-168, 15501, 1417, 1008, 1339, 1376, 1464, 444, 899, 1088,
	-1000, 809, 1417, 17242, 1077, -1000, 1339, -1000, -1000, -1000,
	25889, -1000, -1000, 19402, -1000, -1000, 6779, 25889, 197, 25889,
	-1000, 1099, 1193, -1000, -1000, -1000, 1406, 16810, 25889, 1084,
	1075, -1000, -1000, 403, 7671, -70, -1000, 7671, 1071, -1000,
	-96, -76, 9427, 385, -1000, -1000, -1000, 2360, 14192, 947,
	611, -11, -1000, -1000, -1000, 1114, -1000, 1114, 1114, 1114,
	1114, -12, -12, -12, -12, -1000, -1000, -1000, -1000, -1000,
	1131, 1121, -1000, 1114, 1114, 1114, 1114, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1119, 1119, 1119, 1115, 1115, 282,
	-1000, 12032, 81, 25889, 1387, 748, 104, -1000, 1381, 1198,
	-1000, 884, 875, -1000, 1087, -1000, -1000, 1437, -1000, -1000,
	462, 632, 630, 458, 25889, 94, 194, -1000, 273, -1000,
	25889, 1118, 1358, 487, 925, -1000, 925, -1000, -1000, -1000,
	-1000, 402, -1000, -1000, 925, 1085, -1000, 1093, 687, 617,
	664, 601, 1085, -1000, -1000, -172, 1085, -1000, 1085, -1000,
	1085, -1000, 1085, -1000, 1085, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 490, 25889, 94, 634, -1000, 309, -1000,
	-1000, 634, 634, -1000, -1000, -1000, -1000, 878, 869, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -317, 25889, 328, 85, 115,
	25889, 25889, 25889, 25889, 25889, 378, -1000, -1000, -1000, 159,
	25889, 25889, 357, -1000, 25889, 338, -1000, -1000, -1000, -1000,
	-1000, -1000, 468, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 639, 25889, 25889, 25889, -1000, -1000, 639, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 25889, -1000, 868, 25889,
	25889, -1000, -1000, -1000, -1000, -1000, 468, 464, 531, 495,
	-1000, -1000, 725, -1000, -1000, 2766, -1000, -1000, -1000, -1000,
	753, 13328, 13328, 13328, 375, 2766, 2445, 620, 793, 407,
	605, 605, 422, 422, 422, 422, 422, 594, 594, -1000,
	-1000, -1000, -1000, 905, -1000, -1000, -1000, 905, 10291, 10291,
	1083, 1108, 401, -1000, 1167, -1000, -1000, 1417, 1010, 1010,
	692, 846, 565, 1453, 1010, 536, 1452, 1010, 1010, 10291,
	-1000, -1000, 556, -1000, 12032, 905, -1000, 1206, 1082, 1072,
	1010, 905, 905, 1010, 1010, 25889, -1000, -291, -1000, -121,
	400, 1108, -1000, 18970, -1000, -1000, 1350, -1000, -1000, 1308,
	-1000, 1253, 12032, 12032, 12032, -1000, -1000, -1000, 1350, 1426,
	-1000, 1269, 1266, 1447, 10291, 18538, 1339, -1000, -1000, -1000,
	398, 1447, 1123, 1108, -1000, 25889, 18538, 18538, 18538, 18538,
	18538, -1000, 1239, 1236, -1000, 1237, 1235, 1243, 25889, -1000,
	1037, 1008, 16810, 197, 960, 18538, 25889, -1000, -1000, 18538,
	25889, 6333, -1000, 1071, -70, -38, -1000, -1000, -1000, -1000,
	468, -1000, 773, -1000, 2337, -1000, 275, -1000, -1000, -1000,
	-1000, 1348, -1000, 670, 6, -1000, -1000, -12, -12, -1000,
	-1000, 385, 475, 385, 385, 385, 859, 859, -1000, -1000,
	-1000, -1000, -1000, 743, -1000, -1000, -1000, 737, -1000, -1000,
	735, 1207, 81, -1000, -1000, 494, 850, 1320, 25889, -1000,
	-1000, 940, 326, -1000, 1219, -1000, -1000, -1000, -1000, -1000,
	245, 25889, 1034, -1000, 84, 25889, 933, 25889, -1000, 1016,
	25889, -1000, 925, -1000, -1000, 7225, -1000, 25889, 1108, -1000,
	-1000, -1000, -1000, 339, 1341, 1335, 94, 84, 385, 925,
	-1000, -1000, -1000, -1000, -1000, -320, 1012, 25889, 139, -1000,
	1116, 902, -1000, 1176, -1000, -1000, -1000, -1000, 83, 181,
	153, 308, -1000, -1000, -1000, -1000, 5887, 25889, -1000, -1000,
	-1000, -1000, 557, -1000, 557, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 375, 2766, 2198, -1000, 13328, 13328, -1000, -1000,
	1010, 1010, 10291, 7225, 1440, 1350, -1000, -1000, 192, 634,
	192, 13328, 13328, -1000, 13328, 13328, -1000, -155, 1097, 537,
	-1000, 12032, 705, -1000, -1000, 13328, 13328, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 335, 332, 331, 25889,
	-1000, -1000, 789, 833, 1248, 468, 468, -1000, -1000, 25889,
	-1000, -1000, -1000, -1000, 1445, 12032, -1000, 1068, -1000, 5441,
	1417, 1217, 25889, 1108, 1476, 15069, 25889, 1057, -1000, 503,
	1193, 1197, 1215, 1614, -1000, -1000, -1000, -1000, 1228, -1000,
	1216, -1000, -1000, -1000, -1000, -1000, 1008, 1447, 18538, 1018,
	-1000, 1018, -1000, 391, -1000, -1000, -1000, -106, -117, -1000,
	-1000, -1000, 2360, -1000, -1000, 1212, 13328, -1000, -1000, -1000,
	385, 385, -1000, -1000, -1000, -1000, -1000, -1000, 999, -1000,
	996, 1059, 994, 34, -1000, 1160, 1331, 494, 494, -1000,
	732, -1000, 925, -1000, -1000, 25889, 25889, 1436, 1053, -1000,
	25889, -1000, -1000, 25889, -1000, -1000, 1265, 81, 985, -1000,
	-1000, -1000, 194, 25889, -1000, 1015, 84, -1000, -1000, -1000,
	-1000, -1000, -1000, 1110, -1000, -1000, -1000, 922, -1000, -173,
	925, 25889, 25889, 25889, -1000, 25889, -1000, -1000, 639, 639,
	-1000, 13328, 2766, 2766, -1000, -1000, 905, -1000, 1417, -1000,
	905, 1114, 1114, -1000, 1114, 1115, -1000, 1114, 54, 1114,
	53, 905, 905, 2680, 2427, 2273, 2147, 1108, -149, -1000,
	468, 12032, 2055, 1685, 1108, 1108, 1108, 981, 832, -12,
	-1000, -1000, -1000, 1442, 1435, 468, -1000, -1000, -1000, 1369,
	979, 987, -1000, -1000, 9859, 983, 1260, 384, 981, 1440,
	25889, 12032, -1000, -1000, 12032, 1111, -1000, 12032, -1000, -1000,
	-1000, 1440, 1440, 1018, -1000, -1000, 431, -1000, -1000, -1000,
	-1000, 13, 1463, 2766, -1000, -1000, -12, 827, -12, 715,
	-1000, 697, -1000, -1000, -230, -1000, -1000, 1174, 1200, -1000,
	-1000, 1110, -1000, 25889, 25889, -1000, -1000, 190, -1000, 253,
	975, -1000, -189, -1000, -1000, 1402, 25889, -1000, -1000, 7225,
	-1000, -1000, 1109, 1181, -1000, -1000, -1000, -1000, 2766, -1000,
	1350, -1000, -1000, 196, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13328, 13328, 13328, 13328, 13328, 1417, 826, 468,
	13328, 13328, 18106, 25889, 25889, 16365, -12, -19, -1000, 12032,
	12032, 1356, -1000, 1108, -1000, 1079, 25889, 1108, 25889, -1000,
	1417, -1000, 468, 468, 25889, 468, 1417, -1000, 446, -1000,
	-78, 385, -1000, 385, 915, 908, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1399, 1053, -1000, 186, 25889, -1000,
	194, -1000, -194, -195, 1138, 965, 1047, -1000, 482, 25889,
	25889, -1000, -1000, -1000, 1206, 1206, 1206, 1206, 195, 905,
	-1000, 1206, 1206, 954, -1000, 954, 954, 400, -281, -1000,
	1309, 1306, 468, 1030, 1462, -1000, 1108, 1476, 382, 987,
	-1000, -1000, 938, -1000, 672, 1354, -1000, 1340, -1000, -1000,
	-1000, -1000, -1000, 1138, 1108, 1080, -1000, -1000, -1000, 151,
	-1000, 7225, 4995, 930, -1000, -1000, -1000, -1000, -1000, 905,
	98, -177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -19,
	242, -1000, 1273, 1271, 1431, 25889, 987, 25889, -1000, -1000,
	819, -1000, -1000, 151, 12464, 25889, -1000, -72, -1000, -1000,
	-1000, -1000, -1000, 1176, -1000, 1221, -170, -186, 1277, 1280,
	1280, 1306, 1430, 1303, 1284, -1000, 817, 963, -1000, -1000,
	-1000, 1206, 905, 912, 269, -1000, -1000, -173, -1000, 1214,
	-1000, 1275, 704, -1000, -1000, -1000, -1000, 810, -1000, 1428,
	1423, -1000, -1000, -1000, 1210, 127, -1000, -175, -1000, 702,
	-1000, -1000, -1000, 806, 774, 1204, -1000, 1451, -1000, -184,
	-1000, -1000, -1000, -1000, -1000, 1460, 414, 414, -187, -1000,
	-1000, -1000, 278, 730, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1748, 1746, 14, 89, 85, 1745, 1744, 1743, 1740,
	128, 125, 118, 1738, 1737, 1736, 1735, 1733, 1730, 1729,
	1728, 1727, 1726, 1724, 1723, 61, 110, 115, 1722, 1720,
	1719, 1718, 1715, 124, 121, 458, 1708, 122, 1706, 1703,
	1700, 1698, 1694, 1693, 1692, 1691, 1690, 1688, 1684, 1681,
	134, 1675, 1673, 7, 1672, 81, 1670, 1668, 1667, 1666,
	1664, 1662, 1661, 109, 1660, 46, 86, 48, 74, 1659,
	71, 793, 1658, 98, 117, 1657, 161, 1656, 45, 90,
	69, 1655, 43, 1654, 1650, 94, 1649, 1648, 1645, 72,
	1644, 1643, 2430, 1642, 68, 76, 21, 37, 1639, 1638,
	1637, 1636, 38, 1286, 1634, 1633, 26, 1629, 1628, 127,
	1627, 80, 31, 16, 19, 18, 1626, 79, 1625, 8,
	54, 32, 1624, 75, 1623, 1622, 1617, 1616, 33, 1613,
	73, 97, 24, 1611, 6, 10, 1608, 1607, 1606, 1605,
	1604, 1603, 4, 1602, 1601, 1600, 1599, 29, 1598, 11,
	23, 70, 111, 27, 9, 1596, 136, 1593, 25, 106,
	66, 104, 1592, 1591, 1589, 939, 1588, 49, 1587, 132,
	1586, 1585, 41, 1583, 442, 815, 1582, 1580, 1579, 59,
	1117, 2371, 13, 107, 1574, 1572, 1689, 57, 77, 22,
	1571, 1570, 1569, 119, 64, 51, 891, 44, 1567, 1566,
	1565, 1564, 1563, 1561, 1559, 246, 1556, 1555, 1554, 34,
	20, 100, 30, 1552, 1551, 1548, 1547, 1543, 63, 36,
	1541, 103, 102, 62, 116, 1540, 113, 84, 55, 1539,
	56, 1536, 1532, 1528, 1527, 42, 1526, 1525, 1524, 1523,
	99, 82, 67, 40, 35, 96, 1521, 39, 1520, 1519,
	83, 87, 1517, 17, 114, 12, 1515, 3, 0, 1512,
	5, 126, 1355, 112, 1507, 1506, 1, 1505, 2, 1504,
	1503, 78, 1498, 1495, 1488, 1483, 2988, 28, 105, 1479,
	120,
}

var yyR1 = [...]int{
	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 258, 258, 258, 261, 261, 21, 47,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 57, 57, 11, 12, 12, 12, 12,
	278, 278, 87, 87, 85, 85, 86, 86, 151, 151,
	13, 14, 14, 161, 161, 160, 160, 160, 162, 162,
	162, 162, 196, 196, 15, 15, 15, 15, 15, 64,
	64, 260, 260, 259, 257, 257, 256, 256, 255, 23,
	24, 30, 31, 32, 262, 262, 231, 36, 36, 35,
	35, 35, 35, 37, 37, 34, 34, 33, 33, 233,
	233, 220, 220, 232, 232, 232, 232, 232, 232, 232,
	219, 198, 198, 198, 198, 201, 201, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 200, 200, 200, 200,
	200, 202, 202, 202, 202, 202, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 204, 204, 204, 204, 204, 204, 204, 204, 218,
	218, 205, 205, 211, 211, 212, 212, 212, 214, 214,
	215, 215, 176, 176, 176, 207, 207, 208, 208, 213,
	213, 209, 209, 209, 210, 210, 210, 217, 217, 217,
	217, 217, 206, 206, 221, 247, 247, 246, 246, 242,
	242, 242, 242, 230, 230, 239, 239, 239, 239, 239,
	229, 229, 225, 225, 225, 226, 226, 227, 227, 224,
	224, 228, 228, 241, 241, 240, 222, 222, 223, 223,
	250, 250, 250, 250, 251, 267, 268, 266, 266, 266,
	266, 266, 55, 55, 55, 177, 177, 177, 237, 237,
	236, 236, 236, 238, 238, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 171, 171, 171, 265, 265, 265,
	265, 265, 265, 264, 264, 264, 234, 234, 234, 263,
	263, 120, 120, 121, 121, 28, 28, 28, 28, 28,
	28, 27, 27, 27, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 29, 29, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 216, 216, 216, 252, 252, 253,
	253, 17, 22, 22, 18, 18, 18, 18, 19, 19,
	38, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 168,
	168, 269, 269, 170, 170, 166, 166, 169, 169, 167,
	167, 167, 172, 172, 172, 173, 173, 273, 273, 273,
	40, 40, 42, 42, 43, 44, 44, 191, 191, 192,
	192, 45, 46, 56, 56, 56, 56, 56, 56, 58,
	58, 58, 7, 7, 7, 7, 52, 52, 52, 6,
	6, 41, 41, 48, 270, 270, 271, 272, 272, 272,
	272, 49, 20, 279, 50, 51, 51, 63, 63, 63,
	59, 59, 59, 62, 62, 62, 67, 67, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 66,
	66, 68, 68, 68, 68, 184, 184, 184, 183, 183,
	77, 77, 78, 78, 79, 79, 80, 80, 80, 118,
	95, 95, 150, 150, 149, 149, 152, 152, 81, 81,
	81, 81, 82, 82, 83, 83, 84, 84, 190, 190,
	189, 189, 189, 188, 188, 88, 88, 88, 90, 89,
	89, 89, 89, 91, 91, 93, 93, 92, 92, 94,
	96, 96, 96, 96, 96, 97, 97, 76, 76, 76,
	76, 76, 76, 76, 76, 164, 164, 99, 99, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 110,
	110, 110, 110, 110, 110, 100, 100, 100, 100, 100,
	100, 100, 65, 65, 111, 111, 111, 117, 112, 112,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 107, 107, 107, 107, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 280, 280,
	109, 108, 108, 108, 108, 108, 108, 108, 61, 61,
	61, 61, 61, 195, 195, 195, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 124,
	124, 60, 60, 122, 122, 123, 125, 125, 119, 119,
	119, 102, 102, 102, 102, 102, 102, 102, 102, 104,
	104, 104, 126, 126, 127, 127, 128, 128, 129, 129,
	130, 131, 131, 131, 132, 132, 132, 132, 248, 248,
	248, 248, 248, 243, 243, 243, 243, 244, 244, 244,
	71, 71, 71, 71, 73, 73, 72, 72, 53, 53,
	54, 54, 54, 74, 74, 75, 75, 75, 75, 147,
	147, 147, 133, 133, 133, 133, 138, 138, 138, 134,
	134, 136, 136, 136, 137, 137, 137, 135, 141, 141,
	143, 143, 142, 142, 140, 140, 145, 145, 144, 144,
	139, 139, 101, 101, 101, 101, 101, 148, 148, 148,
	148, 153, 153, 113, 113, 115, 115, 114, 116, 154,
	154, 158, 155, 155, 159, 159, 159, 159, 159, 156,
	156, 157, 157, 185, 185, 185, 163, 163, 174, 174,
	175, 175, 165, 165, 178, 178, 178, 146, 146, 146,
	146, 249, 249, 245, 181, 181, 182, 182, 186, 186,
	187, 187, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 276, 277, 193, 194, 194, 194,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 11, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 4,
	3, 7, 4, 2, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	8, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 4, 4, 2, 2,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 0, 1, 2, 0, 2, 0, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 1,
	2, 1, 0, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 3, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 10, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 5, 6, 5, 4, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 4, 2, 4,
	4, 4, 4, 4, 5, 7, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 7, 2, 4, 5,
	4, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 3, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 5, 6, 4, 4,
	6, 6, 6, 8, 8, 8, 8, 9, 8, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 4,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -274, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -38, -39, -40, -42,
	-43, -44, -45, -46, -6, -41, -20, -21, -47, -48,
	-49, -4, -276, 6, 7, 8, -57, 10, 11, 31,
	-23, -30, 152, -31, -24, 153, -32, 155, 154, 190,
	156, 183, 70, 224, 225, 227, 228, 229, 230, -58,
	188, 189, 158, 35, 41, 32, 33, 80, 9, 322,
	185, 184, 26, -275, 451, -63, 5, -128, 16, -3,
	-50, -279, -50, -50, -50, -50, -50, -50, -231, -233,
	80, 125, 80, -64, 162, -146, -262, 106, 168, 171,
	172, 313, 161, -36, -35, -34, -33, -37, 30, -28,
	-29, -254, -27, -26, 157, 154, 198, 101, 102, 190,
	191, 192, 156, 174, 189, 193, 188, 207, -25, 76,
	32, 335, 338, -238, 153, 159, 160, 323, 104, 103,
	71, 155, -235, 274, 428, -37, 430, 94, 96, 429,
	40, 163, 431, 432, 433, 434, 173, 435, 436, 437,
	438, 444, 445, 446, 447, 105, 5, 162, -262, -71,
	284, 76, -261, -258, 83, 84, 85, 162, 162, 163,
	164, -262, 162, -92, -186, -258, -180, 332, 176, 366,
	367, 222, 76, 274, 428, 224, 238, 232, 259, 251,
	333, 368, 177, 211, 249, 252, 300, 430, 369, 191,
	296, 279, 287, 94, 227, 309, 443, 370, 441, 96,
	429, 75, 47, 40, 186, 247, 243, 431, 212, 371,
	343, 205, 104, 101, 450, 241, 46, 28, 440, 103,
	45, 432, 372, 433, 289, 264, 44, 192, 373, 79,
	337, 291, 242, 288, 221, 439, 158, 374, 422, 298,
	375, 265, 269, 376, 301, 48, 377, 378, 102, 379,
	74, 434, 236, 237, 380, 219, 175, 303, 263, 173,
	34, 292, 334, 223, 54, 199, 304, 42, 267, 41,
	426, 381, 262, 258, 49, 382, 383, 384, 385, 435,
	261, 235, 257, 449, 217, 436, 58, 160, 271, 270,
	272, 206, 299, 254, 386, 387, 388, 180, 77, 389,
	244, 19, 390, 391, 213, 392, 52, 393, 394, 307,
	189, 395, 50, 437, 37, 194, 438, 396, 397, 398,
	399, 400, 297, 401, 290, 266, 268, 201, 286, 336,
	402, 240, 193, 442, 403, 181, 195, 198, 188, 308,
	182, 404, 405, 406, 407, 408, 409, 410, 228, 444,
	39, 411, 412, 413, 414, 220, 216, 302, 311, 57,
	78, 276, 415, 234, 214, 416, 225, 51, 445, 446,
	447, 208, 448, 282, 105, 218, 43, 255, 200, 417,
	418, 245, 246, 260, 233, 256, 226, 423, 202, 190,
	419, 310, 215, 277, 340, 207, 339, 253, 250, 209,
	420, 164, 203, 204, 421, 424, 293, 283, 294, 295,
	284, 210, 338, 248, 278, 162, -156, 279, 280, 281,
	292, 293, 298, 297, 201, -273, 301, 162, -166, 143,
	152, 289, -170, 290, 283, 284, 210, -269, -258, 433,
	448, 300, 252, 302, 426, 285, 291, 295, 294, -186,
	226, -191, 231, -181, -258, -180, 229, -92, -56, 422,
	156, -193, -193, -193, -112, -76, -98, 109, -103, 30,
	24, -102, -99, -119, -116, -117, 143, 144, 146, 145,
	147, 132, 133, 140, 110, 148, -107, -105, -106, -108,
	87, 86, 95, 88, 89, 90, 91, 97, 98, 99,
	-181, -186, -114, -276, 64, 65, 323, 324, 325, 326,
	331, 327, 112, 53, 318, 312, 321, 320, 319, 316,
	317, 314, 315, 329, 330, 167, 313, 161, 138, 322,
	-258, -180, 40, 282, 282, -5, -4, -276, 6, 21,
	22, -132, 18, 17, -277, 82, -59, -69, 59, 60,
	-70, 22, 36, 63, 61, -51, -68, 134, -76, -186,
	-68, -165, 166, -165, -165, -155, -196, 226, -159, 302,
	301, -182, -157, -181, -179, -156, 299, 157, 341, 108,
	23, 25, 111, 143, 17, 112, 159, 174, 142, 170,
	323, 152, 68, 342, 314, 315, 312, 318, 325, 326,
	313, 280, 30, 11, 344, 26, 184, 22, 36, 136,
	154, 115, 116, 187, 24, 185, 99, 347, 20, 71,
	179, 12, 172, 14, 348, 349, 15, 167, 166, 127,
	163, 66, 9, 148, 27, 124, 62, 350, 29, 351,
	352, 353, 354, 64, 125, 18, 316, 317, 32, 427,
	355, 331, 196, 138, 69, 55, 109, 356, 357, 97,
	358, 100, 72, 106, 16, 67, 38, 359, 197, 360,
	169, 361, 305, 362, 126, 155, 322, 65, 363, 161,
	281, 6, 328, 31, 183, 171, 63, 364, 162, 114,
	329, 330, 165, 98, 5, 168, 33, 10, 70, 73,
	319, 320, 321, 53, 335, 113, 13, 365, 306, 107,
	300, 252, -232, 125, -219, -223, -181, 178, -251, 174,
	-92, -241, -240, -181, -71, -175, 167, 163, -175, 322,
	-33, -34, -156, 142, 195, 81, 81, -223, -222, -221,
	-263, 197, 178, -250, -239, 170, 179, -229, 171, 172,
	-224, 163, 29, -263, -224, 169, 179, 197, 197, 105,
	197, 105, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 194, -230, 117, -230, 339, 339, -235, -263, -263,
	-263, 165, 34, 34, -178, -224, 165, 23, -230, -230,
	-156, 142, -230, -230, -230, -230, 205, 205, -230, -230,
	-230, -230, -230, -230, -230, -230, -230, -230, -230, -230,
	-230, -230, -230, -92, -74, 212, 152, 154, 157, 72,
	117, -35, 207, -22, -92, -174, 167, -258, -174, -174,
	-92, 149, -92, -172, 125, 13, -172, -172, -172, -172,
	-172, 208, 296, 208, 296, 208, 209, 208, 209, 208,
	-169, -168, 287, 288, 282, 286, -258, 313, 298, -258,
	201, 162, 202, 164, -225, 163, 34, 175, 209, 282,
	204, -172, -194, -276, -182, -194, -194, 31, 165, -181,
	-52, -181, 87, -7, -3, -11, -10, -12, 117, 81,
	108, 106, 107, 124, -76, -100, 127, 109, 125, 126,
	111, 129, 128, 139, 132, 133, 134, 135, 136, 137,
	138, 130, 131, 142, 117, 118, 119, 120, 121, 122,
	123, -164, -276, -117, -276, 150, 151, -103, -103, -103,
	-103, -103, -103, -103, -103, -103, -103, -276, 149, -2,
	-112, -4, -276, -276, -276, -276, -276, -276, -276, -276,
	-124, -76, -276, -280, -276, -280, -109, -276, -280, -109,
	-280, -109, -280, -280, -109, -280, -109, -280, -280, -109,
	-276, -276, -276, -276, -276, -276, -276, -193, -270, -271,
	-95, -92, -128, -3, -50, -147, 20, 32, -76, -129,
	-130, -76, -128, 55, -66, -68, -70, 59, 60, 93,
	12, -184, -183, 23, -181, 87, 149, 12, -93, 27,
	-92, -78, -79, -80, -81, -95, -118, -276, 12, -85,
	-86, -92, -94, -186, 81, 226, -159, -196, -161, -160,
	303, 305, 117, -185, -181, 87, 30, 82, 81, -92,
	-198, -201, -203, -202, -204, -199, -200, 249, 250, 143,
	253, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 31, 186, 245, 246, 247, 248, 265, 266, 267,
	268, 269, 270, 271, 272, 232, 251, 333, 233, 234,
	235, 236, 237, 238, 240, 241, 242, 243, 244, -261,
	-258, 80, 82, 81, -205, 80, -74, -92, 109, -258,
	-258, -230, -230, 194, -27, -26, -254, 16, -25, -26,
	157, 101, 102, 154, 80, -219, 80, -228, -261, -258,
	80, 29, 169, 168, -227, -224, -227, -228, -258, -119,
	-181, -186, -258, 29, 29, -152, -181, -152, -152, 21,
	-152, 21, -152, 21, 88, -181, -152, 21, -152, 21,
	-152, 21, -152, 21, -152, 21, 30, 74, 75, 30,
	77, 78, 79, -119, -119, -219, -156, -92, -258, 88,
	88, -230, -230, 88, 87, 87, 87, -230, -230, 88,
	87, -258, 87, -264, 180, 221, 223, 88, 88, 88,
	88, 30, 87, -265, 30, 440, 439, 441, 442, 443,
	88, 30, 88, 30, 88, -181, 80, -73, 214, 117,
	203, 203, 162, 162, 216, -92, 215, 217, 218, 40,
	81, 165, -85, 24, 72, -87, -92, -258, -187, -186,
	-179, 87, -76, -172, -92, -172, -92, -172, -172, -172,
	-172, -167, 12, 127, -226, 12, 127, -167, -194, -194,
	-92, -194, -194, -92, -194, -194, -226, -173, 125, 72,
	-192, 229, 263, 423, 424, 425, -76, -76, -76, -76,
	-110, 97, 109, 98, 99, -103, -111, -114, -117, 92,
	127, 125, 126, 111, -103, -103, -103, -103, -103, -103,
	-103, -103, -103, -103, -103, -103, -103, -103, -103, -195,
	-258, 87, 143, -258, -102, -102, -181, -67, 22, 36,
	-66, -182, -187, -179, -63, -277, -277, -128, -66, -66,
	-76, -76, -119, 87, -66, -119, 87, -66, -66, -62,
	22, 36, -122, -123, 113, -119, -277, -103, -181, -181,
	-66, -67, -67, -66, -66, 81, -272, 305, 306, 427,
	-189, 197, -188, 23, -186, 87, -132, -277, -133, 27,
	10, 127, 81, 19, 81, -131, 25, 26, -132, -104,
	-181, 88, 91, -77, 81, 12, -70, -92, -183, 134,
	-187, -92, -151, 197, -92, 31, 81, -88, -90, -89,
	-91, 62, 66, 68, 63, 64, 65, 69, -190, 23,
	-78, -3, -276, -92, -85, -278, 81, 12, 73, -278,
	81, 149, -159, -161, 81, 304, 306, 307, 72, 100,
	-76, -210, 142, -237, -236, -235, -219, -221, -222, -223,
	82, -176, 97, 109, -214, 277, -205, -205, -205, -205,
	-205, -209, -156, -209, -209, -209, 80, 80, -205, -205,
	-205, -205, -211, 80, -211, -211, -212, 80, -212, -251,
	-76, -247, -246, -242, -245, 173, 94, 335, 73, -240,
	-131, 88, -73, 24, -249, -245, -258, 87, -258, 87,
	81, 17, -220, -219, -120, 221, -253, 197, -250, -241,
	80, 29, -227, -228, -228, 149, -258, 81, 27, 105,
	105, 105, 105, 335, 154, 31, -219, -120, -195, 165,
	-195, -195, 87, 87, -171, 448, -85, 164, 220, -75,
	318, 87, 83, -92, -92, -92, -92, -92, 157, 154,
	205, -92, -92, -55, 182, 177, -92, 81, -55, -172,
	-186, -186, -92, -172, -92, 87, -92, -181, 97, 98,
	99, -111, -103, -103, -103, -65, 187, 108, -277, -277,
	-66, -66, -276, 149, -5, -132, -277, -277, 81, 73,
	23, 12, 12, -277, 12, 12, -277, -277, -66, -125,
	-123, 115, -76, -277, -277, 81, 81, -277, -277, -277,
	-277, -277, -271, 426, 306, -96, 70, 166, 71, -276,
	-188, -147, 38, 46, 57, -76, -76, -130, -147, -163,
	20, 12, 53, 53, -97, 13, -68, -78, -70, 149,
	-97, -101, 31, 53, -3, -276, -276, -154, -158, -119,
	-79, -80, -80, -79, -80, 62, 62, 62, 67, 62,
	67, 62, -89, -186, -277, -277, -3, -151, 73, -78,
	-92, -78, -94, -186, 134, -160, -162, 308, 305, 311,
	-258, 87, 81, -235, -223, -207, 30, 97, -215, 278,
	-209, -209, -210, -258, 143, -210, -210, -210, -218, 87,
	-218, 88, 88, 82, -248, -243, -244, 32, 76, -242,
	-230, 87, 37, -181, 82, 164, 72, 16, -149, -181,
	81, 82, -121, 222, -119, 82, -181, 82, -149, -228,
	-182, -181, -276, 162, 30, 30, -120, -121, -210, -258,
	450, 449, 82, -92, -72, 212, 219, 80, 84, -260,
	73, 203, 274, 203, 206, 165, -194, -92, -167, -167,
	-65, 108, -103, -103, -277, -277, -67, -182, -128, -147,
	-197, 143, 249, 186, 247, 243, 263, 254, 276, 245,
	277, -195, -197, -103, -103, -103, -103, 332, -128, 116,
	-76, 114, -103, -103, 163, 163, 163, -152, 39, 87,
	87, 58, -92, -126, 14, -76, 134, -132, -153, 72,
	-154, -113, -115, -114, -276, -148, -277, -181, -152, -97,
	81, 117, -83, -82, 72, 73, -84, 72, -82, 62,
	62, -277, -97, -78, -97, -97, 149, 305, 309, 310,
	-235, -208, 72, -103, -210, -210, 82, 81, 82, 81,
	82, 81, -177, 372, 109, -244, -243, -230, -230, 88,
	-258, -92, -92, 17, 81, -219, -119, 53, -247, 82,
	-252, -253, -92, -102, -121, -150, 80, 82, -257, 335,
	-259, -258, -181, -181, -181, -92, -172, -172, -103, -277,
	-132, -277, -205, -205, -205, -212, -205, 237, -205, 237,
	-277, -277, 20, 20, 20, 20, -276, -60, 328, -76,
	81, 81, -276, -276, -276, -277, 87, -209, -127, 15,
	17, 28, -153, 81, -277, -277, 81, 53, 149, -277,
	-128, -158, -76, -76, 80, -76, -128, -97, -213, 274,
	10, -209, 87, -209, 88, 88, 372, 30, 77, 78,
	79, 30, 74, 75, -150, -149, -181, 199, 181, -277,
	81, -216, 335, 338, 23, -149, -256, -255, -182, 80,
	73, -147, -209, -258, -103, -103, -103, -103, -103, -132,
	87, -103, -103, -149, -277, -149, -149, -189, -209, -135,
	-140, -169, -76, -112, 29, -115, 53, -3, -181, -113,
	-181, -132, -149, -132, -217, 169, 29, 168, -106, -210,
	-210, 82, 82, 23, 200, -92, -253, 339, 339, -3,
	82, 81, 117, -149, -92, -277, -277, -277, -277, -61,
	127, 335, -277, -277, -277, -277, -277, -277, -96, -138,
	422, -141, 42, -142, 43, 10, -113, 149, 82, -206,
	94, 29, 29, -3, -276, 80, -53, 335, -255, -234,
	-182, 87, 88, 82, -277, 333, 69, 336, -135, 47,
	255, -143, 51, -144, -139, 52, 17, -154, -181, 87,
	-53, -103, 196, -149, -54, 211, 426, -260, 58, 334,
	337, -136, 49, -134, 48, -134, -142, 17, -145, 44,
	45, 87, -277, -277, 82, 174, -257, 58, -137, 50,
	72, 100, 87, 17, 17, -267, -268, 72, 213, 335,
	72, 100, 87, 87, -268, 72, 11, 10, 336, -266,
	182, 177, 180, 31, -266, 337, 176, 30, 97,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 786, 0, 523, 523, 523, 523, 523, 523, 523,
	0, 0, -2, -2, -2, 810, 36, 0, 0, 0,
	0, -2, 481, 482, 0, 484, -2, 0, 0, 493,
	1305, 1305, 1305, 0, 0, 0, 0, 1303, 53, 54,
	499, 500, 501, 1, 3, 0, 527, 794, 0, 0,
	-2, 525, 0, 0, 902, 902, 902, 0, 84, 85,
	0, 0, 0, 810, 900, 0, 900, 0, 908, 909,
	910, 104, 105, 88, -2, 109, 110, 0, 114, 367,
	328, 370, 326, 356, -2, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 223,
	223, 0, 0, -2, 319, 319, 319, 0, 0, 0,
	353, 904, 273, 223, 223, 0, 223, 223, 223, 223,
	0, 0, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 0, 103, 823,
	0, 0, 113, 37, 33, 34, 35, 0, 898, 0,
	898, 898, 0, 419, 607, 918, 919, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 0, 472, 472, 472, 472,
	472, 472, 0, 428, 0, 0, 0, 0, 0, 0,
	0, 444, 0, 447, 0, 0, 454, 472, 1306, 1306,
	1306, 889, 0, 478, 479, 466, 464, 461, 462, 480,
	483, 0, 488, 491, 914, 915, 0, 506, 0, 1126,
	498, 511, 512, 522, 38, 658, 617, 0, 623, 625,
	0, 660, 661, 662, 663, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 691, 692, 693,
	771, 772, 773, 774, 775, 776, 777, 778, 627, 628,
	768, 0, 878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 1305, 0, 521, 786, 49, 0, 523, 528,
	529, 829, 0, 0, 786, 1304, 0, 0, -2, -2,
	539, 545, 546, 547, 548, 524, 0, 551, 555, 0,
	0, 0, 903, 0, 0, 70, 0, 1274, 882, -2,
	-2, 0, 0, 916, 917, 891, -2, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	-2, 1073, 0, 0, 123, 124, 0, 36, 249, 0,
	119, 0, 243, 181, 823, 0, 0, 0, 0, 90,
	111, 112, 223, 223, 0, 113, 113, 335, 336, 337,
	0, 0, -2, 247, 0, 320, 0, 0, 237, 237,
	241, 239, 240, 0, 0, 0, 0, 0, 0, 347,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 403, 0, 224, 0, 365, 366, 274, 0, 0,
	0, 0, 345, 346, 0, 0, 905, 906, 0, 0,
	223, 223, 0, 0, 0, 0, 223, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 814, 0, 0, 0, 0, 0,
	0, -2, 0, 411, 0, 0, 0, 0, 0, 0,
	418, 0, 420, 421, 0, 0, 422, 423, 424, 425,
	426, 472, 0, 472, 0, 472, 472, 472, 472, 469,
	0, 469, 467, 468, 459, 460, 1306, 1306, 0, 1306,
	1306, 0, 1306, 1306, 0, 232, 233, 234, 475, 451,
	452, 455, 456, 1307, 1308, 457, 458, 890, 489, 492,
	509, 507, 508, 510, 502, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 646, 647, 648, 649, 650,
	651, 624, 0, 638, 0, 0, 0, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 0, 536, 0, 0,
	0, 786, 0, 0, 0, 0, 0, 0, 0, 533,
	0, 760, 0, 711, 0, 712, 720, 0, 713, 721,
	714, 722, 715, 716, 723, 717, 724, 718, 719, 725,
	0, 0, 0, 536, 536, 0, 0, 39, 513, 514,
	0, 590, 794, 0, 538, 832, 0, 0, 795, 787,
	788, 791, 794, 0, 560, 549, 540, 543, 544, 526,
	0, 552, 556, 0, 558, 559, 0, 0, 68, 0,
	606, 0, 562, 564, 565, 566, 588, 0, 0, 0,
	0, 64, 66, 607, 0, 1274, 888, 0, 72, 73,
	0, 0, 0, 204, 893, 894, 895, -2, 230, 0,
	192, 188, 132, 133, 134, 181, 136, 181, 181, 181,
	181, 201, 201, 201, 201, 164, 165, 166, 167, 168,
	0, 0, 151, 181, 181, 181, 181, 171, 172, 173,
	174, 175, 176, 177, 178, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 183, 183, 183, 185, 185, 0,
	37, 0, 215, 0, 791, 0, 814, 99, 0, 911,
	102, 0, 0, 368, 329, 357, 369, 0, 332, 333,
	-2, 0, 0, 319, 0, 321, 0, 231, 0, -2,
	0, 0, 0, 237, 241, 238, 241, 229, 242, 349,
	768, 0, 350, 351, 0, 383, 576, 0, 0, 0,
	0, 0, 389, 390, 391, 0, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 321, 0, 354, 0, 275,
	276, 0, 0, 279, 280, 281, 282, 0, 0, 285,
	286, 287, 288, 289, 313, 314, 315, 290, 291, 292,
	293, 294, 295, 296, 307, 308, 309, 310, 311, 312,
	297, 298, 299, 300, 301, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 812, 813, 0,
	0, 0, 262, 899, 0, 262, 62, 417, 608, 920,
	921, 473, 474, 427, 445, 429, 448, 430, 432, 431,
	433, 472, 0, 0, 0, 235, 236, 472, 436, 437,
	438, 439, 440, 441, 442, 443, 0, 450, 0, 0,
	0, 490, 494, 495, 496, 497, 659, 618, 619, 620,
	622, 639, 0, 641, 643, 629, 630, 654, 655, 656,
	0, 0, 0, 0, 652, 634, 0, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 679,
	743, 744, 745, 0, 677, 678, 689, 0, 0, 0,
	537, 769, 0, -2, 0, 657, 877, 794, 0, 0,
	0, 0, 662, 771, 0, 662, 771, 0, 0, 0,
	534, 535, 766, 763, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 517, 519, 0,
	610, 0, 591, 0, 593, 594, 829, 50, 40, 0,
	830, 0, 0, 0, 0, 790, 792, 793, 829, 0,
	779, 0, 0, 615, 0, 0, 541, 46, 557, 553,
	0, 615, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 595, 0, 0, 598, 0, 0, 0, 0, 589,
	0, 0, 0, -2, 0, 0, 0, 60, 61, 0,
	0, 0, 883, 71, 0, 0, 76, 77, 884, 885,
	886, 887, 0, 106, -2, 270, 125, 127, 128, 129,
	120, 195, 193, 0, 190, 189, 135, 201, 201, 158,
	159, 204, 0, 204, 204, 204, 0, 0, 152, 153,
	154, 155, 146, 0, 147, 148, 149, 0, 150, 248,
	0, 798, 216, 217, 219, 223, 0, 0, 0, 244,
	245, 0, 0, 901, 0, 912, 115, 116, 117, 118,
	113, 0, 0, 121, 323, 0, 0, 0, 246, 0,
	0, 225, 241, 226, 227, 0, 352, 0, 0, 385,
	386, 387, 388, 0, 0, 0, 321, 323, 204, 0,
	277, 278, 283, 284, 302, 0, 0, 0, 0, 824,
	825, 0, 828, 91, 375, 377, 376, 380, 0, 0,
	0, 0, 412, 414, 263, 264, 1306, 0, 416, 434,
	470, 471, 469, 449, 469, 476, 453, 486, 640, 642,
	644, 631, 652, 635, 0, 632, 0, 0, 626, 694,
	0, 0, 536, 0, 786, 829, 698, 699, 0, 0,
	0, 0, 0, 736, 0, 0, 737, 0, 786, 0,
	764, 0, 0, 710, 730, 0, 0, 731, 732, 733,
	734, 735, 515, 518, 520, 570, 0, 0, 0, 0,
	592, 42, 0, 0, 0, 796, 797, 789, 41, 0,
	896, 897, 780, 781, 782, 0, 550, 561, 542, 0,
	794, 871, 0, 0, 863, 0, 0, 615, 879, 0,
	563, 584, 586, 0, 581, 596, 597, 599, 0, 601,
	0, 603, 604, 567, 568, 569, 0, 615, 0, 615,
	65, 615, 67, 0, 609, 74, 75, 0, 0, 81,
	205, 206, 113, 272, 126, 197, 0, 194, 131, 191,
	204, 204, 160, 202, 203, 161, 162, 163, 0, 179,
	0, 0, 0, 265, 86, 802, 801, 223, 223, 218,
	0, 221, 0, 913, 182, 0, 0, 0, 327, 574,
	0, 338, 339, 0, 322, 382, 0, 215, 0, 228,
	769, 577, 0, 0, 340, 0, 323, 343, 344, 355,
	305, 306, 303, 572, 815, 816, 817, 0, 827, 94,
	0, 0, 0, 0, 373, 0, 415, 63, 472, 472,
	633, 0, 653, 636, 695, 696, 0, 770, 794, 44,
	0, 181, 181, 749, 181, 185, 752, 181, 754, 181,
	757, 0, 0, 0, 0, 0, 0, 0, 761, 709,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	834, 831, 43, 784, 0, 616, 554, 47, 51, 0,
	871, 862, 873, 875, 0, 0, 0, 867, 0, 786,
	0, 0, 578, 585, 0, 0, 579, 0, 580, 600,
	602, -2, 786, 615, 58, 59, 0, 78, 79, 80,
	271, 199, 0, 196, 156, 157, 201, 0, 201, 0,
	186, 0, 254, 266, 0, 799, 800, 0, 0, 220,
	222, 572, 101, 0, 0, 122, 324, 0, 214, 0,
	0, 407, 404, 341, 342, 0, 0, 826, 374, 0,
	92, 93, 0, 0, 379, 413, 435, 446, 637, 697,
	829, 700, 746, 201, 750, 751, 753, 755, 756, 758,
	702, 701, 0, 0, 0, 0, 0, 794, 0, 765,
	0, 0, 0, 0, 0, 590, 201, 854, 48, 0,
	0, 0, 52, 0, 876, 0, 0, 0, 0, 69,
	794, 880, 881, 582, 0, 587, 794, 57, 207, 200,
	0, 204, 180, 204, 0, 0, 267, 803, 804, 805,
	806, 807, 808, 809, 0, 330, 575, 0, 0, 384,
	0, 392, 0, 0, 0, 0, 95, 96, 0, 0,
	0, 45, 747, 748, 0, 0, 0, 0, 738, 0,
	762, 0, 0, 0, 612, 0, 0, 610, 836, 835,
	848, 852, 785, 783, 0, 874, 0, 866, 869, 865,
	868, 55, 0, 56, 212, 0, 209, 211, 198, 169,
	170, 184, 187, 0, 0, 0, 408, 405, 406, 818,
	573, 0, 0, 0, 381, 703, 705, 704, 706, 0,
	0, 0, 708, 726, 727, 611, 613, 614, 571, 854,
	0, 847, 850, -2, 0, 0, 864, 0, 583, 130,
	0, 208, 210, 818, 0, 0, 371, 820, 97, 98,
	316, 317, 318, 91, 707, 0, 0, 0, 841, 839,
	839, 852, 0, 856, 0, 861, 0, 872, 870, 213,
	87, 0, 0, 0, 0, 821, 822, 94, 739, 0,
	742, 844, 0, 837, 840, 838, 849, 0, 855, 0,
	0, 853, 409, 410, 250, 0, 378, 740, 833, 0,
	842, 843, 851, 0, 0, 251, 252, 0, 819, 0,
	845, 846, 857, 859, 253, 0, 0, 0, 0, 255,
	257, 258, 0, 0, 256, 741, 259, 260, 261,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 137, 129, 3,
	80, 82, 134, 132, 81, 133, 149, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 451,
	118, 117, 119, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 111, 112, 113, 114, 115,
	116, 120, 121, 122, 123, 124, 125, 126, 127, 130,
	131, 136, 138, 141, 142, 143, 144, 145, 146, 147,
	148, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:407
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:412
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:454
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:471
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:489
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:498
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:506
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:529
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:543
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:574
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:586
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:618
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:656
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:660
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:669
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:681
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:695
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:705
		{
			yyVAL.characteristic = ReadWrite
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyVAL.characteristic = ReadOnly
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:715
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.isolationLevel = Serializable
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.scope = SessionScope
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			yyVAL.scope = GlobalScope
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:743
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:756
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:764
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:775
		{
			yyVAL.boolean = false
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = true
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:784
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:827
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 101:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:841
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:848
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:866
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharsets = nil
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:899
		{
			yyVAL.boolean = false
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.boolean = true
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:919
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:923
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:934
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:944
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:964
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:973
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:983
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 170:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.literal = nil
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.boolean = true
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1273
		{
			yyVAL.boolean = false
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.boolean = false
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.boolean = true
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1286
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1295
		{
			yyVAL.optVal = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.boolean = false
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.boolean = true
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1313
		{
			yyVAL.str = ""
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1339
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.colKeyOpt = colKey
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1355
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1360
		{
			yyVAL.literal = nil
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1370
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOptions = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = ""
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1436
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1440
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = yyDollar[2].str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = "key"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = yyDollar[1].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1544
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1548
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1562
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.boolean = true
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.boolean = false
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1627
		{
			yyVAL.tableOptions = nil
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1641
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1655
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1669
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1818
		{
			yyVAL.bytes = []byte("")
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1824
		{
			yyVAL.colName = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1833
		{
			yyVAL.colName = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1842
		{
			yyVAL.alterOptions = nil
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1850
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &Force{}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &RenameTable{Table: yyDollar[3].tableName}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2033
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 371:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2057
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2064
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 378:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2107
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2117
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2134
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2142
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2146
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2150
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2154
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2158
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2174
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2218
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = false
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.boolean = true
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2248
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2252
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2268
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2276
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2280
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2285
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2289
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &OtherRead{}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2330
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2334
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2342
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2346
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2350
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2354
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2358
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2362
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2366
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2370
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2374
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2378
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2383
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2411
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2424
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2434
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2443
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2447
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = "extended "
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = "full "
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2548
		{
			yyVAL.showFilter = nil
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2562
		{
			yyVAL.showFilter = nil
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.empty = struct{}{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.empty = struct{}{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.empty = struct{}{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.statement = &Begin{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.statement = &Begin{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.statement = &Commit{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.statement = &Rollback{}
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2616
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2626
		{
			yyVAL.empty = struct{}{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.explainType = EmptyType
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.explainType = JSONType
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.explainType = TreeType
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.explainType = VitessType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.explainType = TraditionalType
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.explainType = AnalyzeType
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.statement = &OtherRead{}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2735
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2745
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.lockType = Read
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.lockType = ReadLocal
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.lockType = Write
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			setAllowComments(yylex, true)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.bytes2 = nil
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.boolean = true
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.boolean = false
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.boolean = true
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = SQLCacheStr
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2831
		{
			yyVAL.boolean = false
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.boolean = true
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.selectExprs = nil
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.strs = nil
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2869
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = SQLCacheStr
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = DistinctStr
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = DistinctStr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = StraightJoinHint
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2923
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2928
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2936
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2948
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2958
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2992
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2996
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3001
		{
			yyVAL.columns = nil
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3038
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3042
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3046
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3056
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3058
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3062
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3068
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3070
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3073
		{
			yyVAL.empty = struct{}{}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.empty = struct{}{}
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3078
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3086
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.joinType = NormalJoinType
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.joinType = NormalJoinType
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3107
		{
			yyVAL.joinType = NormalJoinType
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.joinType = StraightJoinType
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.joinType = LeftJoinType
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.joinType = LeftJoinType
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.joinType = RightJoinType
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.joinType = RightJoinType
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.indexHints = nil
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3180
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3188
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3197
		{
			yyVAL.expr = nil
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3201
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = ""
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = nil
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3478
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3482
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3580
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 704:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 705:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 707:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 708:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 726:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			yyVAL.matchExprOption = NoOption
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 741:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3762
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3802
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.expr = nil
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = string("")
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.expr = nil
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3889
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.expr = &NullVal{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3951
		{
			yyVAL.exprs = nil
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = nil
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3969
		{
			yyVAL.orderBy = nil
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3983
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.orderDirection = AscOrder
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.orderDirection = AscOrder
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.orderDirection = DescOrder
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4007
		{
			yyVAL.limit = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4019
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4024
		{
			yyVAL.indexOptions = nil
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4047
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4051
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4055
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4073
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = yyDollar[3].str
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4114
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4118
		{
			yyVAL.str = yyDollar[2].str
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = "cascaded"
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = yyDollar[3].str
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4163
		{
			yyVAL.lock = NoLock
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.lock = ForUpdateLock
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4171
		{
			yyVAL.lock = ShareModeLock
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.selectInto = nil
		}
	case 833:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4180
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4184
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4188
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = " header"
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = " manifest on"
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = " manifest off"
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = " overwrite on"
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = " overwrite off"
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = " optionally"
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4326
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4330
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4334
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4352
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.updateExprs = nil
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4361
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4445
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4453
		{
			yyVAL.bytes = []byte("charset")
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.expr = &Default{}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4480
		{
			yyVAL.boolean = false
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.boolean = true
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4485
		{
			yyVAL.boolean = false
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.boolean = true
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.ignore = false
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.ignore = true
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.empty = struct{}{}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.empty = struct{}{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = ""
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4511
		{
			yyVAL.indexOptions = nil
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4517
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4966
		{
			decNesting(yylex)
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4971
		{
			skipToEnd(yylex)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4976
		{
			skipToEnd(yylex)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			skipToEnd(yylex)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
