# Add your test case here for debugging and run go test -run=One.
"select 1 from user where id in (select u.id, e.id from user u join user_extra e where e.id = u.col limit 10)"
{
  "QueryType": "SELECT",
  "Original": "select 1 from user where id in (select u.id, e.id from user u join user_extra e where e.id = u.col limit 10)",
  "Instructions": {
    "OperatorType": "Subquery",
    "Variant": "PulloutIn",
    "Inputs": [
      {
        "OperatorType": "Limit",
        "Count": 10,
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "-1,1",
            "JoinVars": {
              "u_col": 1
            },
            "TableName": "`user`_user_extra",
            "Inputs": [
              {
                "OperatorType": "Route",
                "Variant": "SelectScatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select u.id, u.col from `user` as u where 1 != 1",
                "Query": "select u.id, u.col from `user` as u",
                "Table": "`user`"
              },
              {
                "OperatorType": "Route",
                "Variant": "SelectScatter",
                "Keyspace": {
                  "Name": "user",
                  "Sharded": true
                },
                "FieldQuery": "select e.id from user_extra as e where 1 != 1",
                "Query": "select e.id from user_extra as e where e.id = :u_col",
                "Table": "user_extra"
              }
            ]
          }
        ]
      },
      {
        "OperatorType": "Route",
        "Variant": "SelectIN",
        "Keyspace": {
          "Name": "user",
          "Sharded": true
        },
        "FieldQuery": "select 1 from `user` where 1 != 1",
        "Query": "select 1 from `user` where :__sq_has_values1 = 1 and id in ::__vals",
        "Table": "`user`",
        "Values": [
          "::__sq1"
        ],
        "Vindex": "user_index"
      }
    ]
  }
}
Gen4 plan same as above
