create table t3
(
    id5 bigint,
    id6 bigint,
    id7 bigint,
    primary key (id5)
) Engine = InnoDB;

create table t9
(
    id1 bigint,
    id2 varchar(10),
    id3 varchar(10),
    primary key (id1)
) ENGINE = InnoDB
  DEFAULT charset = utf8mb4
  COLLATE = utf8mb4_general_ci;

create table aggr_test
(
    id   bigint,
    val1 varchar(16),
    val2 bigint,
    primary key (id)
) Engine = InnoDB;

create table aggr_test_dates
(
    id   bigint,
    val1 datetime default current_timestamp,
    val2 datetime default current_timestamp,
    primary key (id)
) Engine = InnoDB;


CREATE TABLE t1
(
    t1_id    bigint unsigned NOT NULL,
    `name`   varchar(20) NOT NULL,
    `value`  varchar(50),
    shardKey bigint,
    PRIMARY KEY (t1_id),
    UNIQUE KEY `t1id_name` (t1_id, `name`),
    KEY      `IDX_TA_ValueName` (`value`(20), `name`(10))
) ENGINE InnoDB;

CREATE TABLE t2
(
    id       bigint NOT NULL,
    shardKey bigint,
    PRIMARY KEY (id)
) ENGINE InnoDB;

CREATE TABLE t10
(
    k BIGINT PRIMARY KEY,
    a INT,
    b INT
);

CREATE TABLE emp
(
    empno    bigint NOT NULL,
    ename    VARCHAR(10),
    job      VARCHAR(9),
    mgr      bigint,
    hiredate DATE,
    sal      bigint,
    comm     bigint,
    deptno   bigint,
    PRIMARY KEY (empno)
) Engine = InnoDB
  COLLATE = utf8mb4_general_ci;

CREATE TABLE dept
(
    deptno bigint,
    dname  VARCHAR(14),
    loc    VARCHAR(13),
    PRIMARY KEY (deptno)
) Engine = InnoDB
  COLLATE = utf8mb4_general_ci;

CREATE TABLE bet_logs
(
    id               bigint unsigned NOT NULL,
    merchant_game_id bigint unsigned NOT NULL,
    bet_amount       DECIMAL(20, 8),
    game_id          bigint,
    PRIMARY KEY (id)
) ENGINE InnoDB;


# TestAggregateTypes

insert into aggr_test(id, val1, val2)
values (1, 'a', 1),
       (2, 'A', 1),
       (3, 'b', 1),
       (4, 'c', 3),
       (5, 'c', 4);

insert into aggr_test(id, val1, val2)
values (6, 'd', null),
       (7, 'e', null),
       (8, 'E', 1);

select val1, count(distinct val2), count(*)
from aggr_test
group by val1;

select val1, sum(distinct val2), sum(val2)
from aggr_test
group by val1;

select val1, count(distinct val2) k, count(*)
from aggr_test
group by val1
order by k desc, val1;

select val1, count(distinct val2) k, count(*)
from aggr_test
group by val1
order by k desc, val1 limit 4;


select ascii(val1) as a, count(*)
from aggr_test
group by a;

select ascii(val1) as a, count(*)
from aggr_test
group by a
order by a;

select ascii(val1) as a, count(*)
from aggr_test
group by a
order by 2, a;


select val1 as a, count(*)
from aggr_test
group by a;

select val1 as a, count(*)
from aggr_test
group by a
order by a;

select val1 as a, count(*)
from aggr_test
group by a
order by 2, a;

select sum(val1)
from aggr_test;

-- skip_if_below_version vtgate 19
select avg(val1)
from aggr_test;

-- skip_if_below_version vtgate 20
select avg(val2)
from aggr_test
group by val1
order by val1;


# TestGroupBy

insert into t3(id5, id6, id7) values(1,1,2), (2,2,4), (3,2,4), (4,1,2), (5,1,2), (6,3,6);

# test ordering and group by int column

select id6, id7, count(*) k
from t3
group by id6, id7
order by k;

select id6 + id7, count(*) k
from t3
group by id6 + id7
order by k;


# TestEqualFilterOnScatter

