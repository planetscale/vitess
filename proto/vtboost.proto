syntax = "proto3";
option go_package = "vitess.io/vitess/go/vt/proto/vtboost";

import "query.proto";
import "vttime.proto";

package vtboost;

message Recipe {
  repeated CachedQuery queries = 1;
  int64 version = 2;
};

message CachedQuery {
  string public_id = 1;
  string name = 2;
  string sql = 3;
  string keyspace = 4;
  int64 max_memory_usage = 5;
};

message Materialization {
  CachedQuery query = 1;
  string normalized_sql = 2;
  repeated Bound bounds = 3;
  ViewDescriptor view = 4;
  bool fully_materialized = 5;

  message Bound {
    string name = 1;
    int64 type = 2;
    bytes bound_value = 3;
    int64 pos = 4;
  };

  message ViewDescriptor {
    string name = 1;
    uint32 node = 2;
    repeated query.Field schema = 3;
    repeated query.Field key_schema = 4;
    repeated string shards = 5;
  };
};

message GraphvizRequest {
  enum Clustering {
    NONE = 0;
    DOMAIN = 1;
    QUERY = 2;
  };
  Clustering clustering = 1;
  bool memory_stats = 2;
  map<string, int64> force_memory_limits = 3;
};

message GraphvizResponse {
  string dot = 1;
};

message ReadyRequest {}
message ReadyResponse {
  bool ready = 1;
}

message MaterializationsRequest {}
message MaterializationsResponse {
  repeated Materialization materializations = 1;
}

message PutRecipeRequest {
  Recipe recipe = 1;
};
message PutRecipeResponse {
  int64 recipe_version = 1;
};

message GetRecipeRequest {};
message GetRecipeResponse {
  Recipe recipe = 1;
};

message DescribeRecipeRequest {
  string uuid = 1;
  oneof request {
    GraphvizRequest graphviz = 2;
  }
};
message DescribeRecipeResponse {
  oneof response {
    GraphvizResponse graphviz = 1;
  }
};

message ClusterState {
  enum State {
    DISABLED = 0;
    PRIMARY = 1;
    DRAINING = 2;
    WARMING = 3;
  }
  string uuid = 1;
  State state = 2;
  vttime.Time drained_at = 3;
  map<string, bool> vtgates = 4;
  vttime.Time created_at = 5;
  uint32 expected_worker_count = 6;
};

message ClusterStates {
  repeated ClusterState clusters = 1;
};

message GetClusterRequest {
  string uuid = 1;
}

message GetClusterResponse {
  ClusterState cluster = 1;
  ControllerState controller = 2;
}

message ListClustersRequest {}

message ListClustersResponse {
  message State {
    ClusterState cluster = 1;
    ControllerState controller = 2;
  };
  repeated State clusters = 1;
}

message AddClusterRequest {
  string uuid = 1;
  vttime.Time created_at = 2;
  uint32 expected_worker_count = 3;
};

message RemoveClusterRequest {
  reserved 1;
  repeated string uuids = 2;
};

message ClusterChangeResponse {}

message PrimaryClusterRequest {
  string uuid = 1;
}

message PrimaryClusterResponse {}

message DrainClusterRequest {
  string uuid = 1;
  vttime.Time drained_at = 2;
}

message DrainClusterResponse {}

message PurgeRequest{}

message PurgeResponse{}

message ControllerState {
  string leader = 1;
  int64 epoch = 2;
  int64 recipe_version = 3;

  message RecipeStatus {
    enum Progress {
      UNKNOWN = 0;
      APPLYING = 1;
      FAILED = 2;
      READY = 3;
      REMOVING = 4;
    };

    int64 version = 1;
    Progress progress = 2;

    reserved 3; // deprecated; was Error, use Query now

    message Query {
      string query_public_id = 1;
      Progress progress = 2;
      string error = 3;
    }

    repeated Query queries = 4;
    repeated string system_errors = 5;
  };

  map<int64, RecipeStatus> recipe_version_status = 4;
};

message TopoWorkerEntry {
  string uuid = 1;
  string admin_addr = 2;
  string reader_addr = 3;
};

service ControllerService {
  rpc GetRecipe(GetRecipeRequest) returns(GetRecipeResponse);
  rpc ReadyCheck(ReadyRequest) returns (ReadyResponse);
  rpc Graphviz(GraphvizRequest) returns (GraphvizResponse);
  rpc GetMaterializations(MaterializationsRequest) returns (MaterializationsResponse);
};
