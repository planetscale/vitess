1. create a cluster (named demo) in GKE project vitess-kubecon
2. requires at least 8 medium nodes for vitess + 5 for prom/grafana, start with 14 and set it up to auto-scale up to 20
2a. gcloud container clusters get-credentials demo (to setup kubectl access)
3. deploy cluster using operator example (101_initial_cluster.yaml)
4. create schema with single table - columns user_id, user_data
5. create vschema (unsharded)
6. load 10k rows into table
7. deploy prometheus and grafana
- https://computingforgeeks.com/setup-prometheus-and-grafana-on-kubernetes/
- needs 5 new nodes
- increase auto-scale to 20
- create servicemonitor (example-vitess) using prom_service_monitor.yaml
8. run 20 threads selecting concurrently from the table (with different randomly generated ids)
  -- write go program with 20 goroutines
  -- Dockerfile
  -- build and upload docker image
  -- create secret called database with url=vtgate service url (Cluster IP of the cell-specific service)
$ cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: database
type: Opaque
data:
  url: $(echo -n "user@tcp(10.48.8.88:3306)/commerce" | base64 -w0)
EOF
  -- deploy docker image using load_deploy.yaml
9. graph query load etc. on vtgate
10a. stop query load
10. reshard using hash on user_id
  - vtctlclient ApplySchema -sql="$(cat create_user_sharded.sql)" commerce
  - vtctlclient ApplyVSchema -vschema="$(cat vschema_user_sharded.json)" commerce
  - kubectl apply -f 302_new_shards.yaml
  - vtctlclient Reshard -source_shards '-' -target_shards '-80,80-' Create commerce.one2two
  - vtctlclient Reshard -tablet_types=rdonly,replica SwitchTraffic commerce.one2two
  - vtctlclient Reshard -tablet_types=primary SwitchTraffic commerce.one2two

11. run 40 threads (edit load_deploy.yaml and set replicas to 2)
12 graphs

Still TODO:
vtctlclient Reshard -source_shards '-' -target_shards '-80,80-' Create commerce.one2two
vtctlclient Reshard -tablet_types=rdonly,replica SwitchTraffic commerce.one2two
vtctlclient Reshard -tablet_types=primary SwitchTraffic commerce.one2two


